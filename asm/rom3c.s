	.INCLUDE "macro.inc"

	THUMB_FUNC_START sub_080CF9A4
sub_080CF9A4: @ 0x080CF9A4
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080CFA18  @ =gRam
	ldr r1, _080CFA1C  @ =0x00001172
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080CFA20  @ =0x00000F52
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CF9E6
	ldr r1, _080CFA24  @ =0x000009B2
	add r0, r2, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bne _080CF9DA
	ldr r1, _080CFA28  @ =0x00000D94
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #48
	strb r1, [r0]
_080CF9DA:
	add r0, r4, #0
	bl sub_080C6208
	lsl r0, r0, #24
	cmp r0, #0
	bne _080CFA10
_080CF9E6:
	add r0, r4, #0
	bl sub_080CFE3C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080CFA10
	ldr r1, _080CFA2C  @ =gUnknown_08174A08
	ldr r0, _080CFA18  @ =gRam
	ldr r2, _080CFA20  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080CFA10:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080CFA18:
	.4byte gRam
_080CFA1C:
	.4byte 0x00001172
_080CFA20:
	.4byte 0x00000F52
_080CFA24:
	.4byte 0x000009B2
_080CFA28:
	.4byte 0x00000D94
_080CFA2C:
	.4byte gUnknown_08174A08
	THUMB_FUNC_END sub_080CF9A4

	THUMB_FUNC_START sub_080CFA30
sub_080CFA30: @ 0x080CFA30
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080CFA7C  @ =gRam
	ldr r1, _080CFA80  @ =0x000010E2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080CFA8E
	add r0, r4, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	bne _080CFA88
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	mov r0, sp
	ldrb r0, [r0]
	cmp r0, #0
	beq _080CFA8E
	ldr r1, _080CFA84  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r2, sp
	add r2, r2, #1
	add r0, r4, #0
	mov r1, #204
	bl sub_080C9564
	b _080CFAA0
_080CFA7C:
	.4byte gRam
_080CFA80:
	.4byte 0x000010E2
_080CFA84:
	.4byte 0x00000F52
_080CFA88:
	add r0, r4, #0
	bl sub_080CF418
_080CFA8E:
	add r0, r4, #0
	bl sub_080D0820
	lsl r0, r0, #24
	cmp r0, #0
	bne _080CFAA0
	add r0, r4, #0
	bl sub_080CFAA8
_080CFAA0:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080CFA30

	THUMB_FUNC_START sub_080CFAA8
sub_080CFAA8: @ 0x080CFAA8
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r3, _080CFB68  @ =gRam
	ldr r0, _080CFB6C  @ =0x00000F92
	add r2, r3, r0
	add r2, r5, r2
	ldr r1, _080CFB70  @ =0x00000996
	add r0, r3, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldr r2, _080CFB74  @ =0x000009B2
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	add r6, r3, #0
	cmp r0, #0
	beq _080CFB44
	ldr r3, _080CFB78  @ =0x00000FD2
	add r0, r6, r3
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080CFB44
	add r0, r5, #0
	bl sub_080C7A20
	mov r1, #3
	and r1, r1, r0
	cmp r1, #0
	beq _080CFB18
	ldr r0, _080CFB7C  @ =0x00000F22
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	ldr r2, _080CFB80  @ =0x00000FB2
	add r1, r6, r2
	add r1, r5, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #32
	strb r0, [r4]
_080CFB18:
	ldr r3, _080CFB84  @ =0x00001042
	add r0, r6, r3
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #12
	beq _080CFB44
	ldr r0, _080CFB88  @ =0x00000F12
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	ldr r2, _080CFB8C  @ =0x00000F62
	add r1, r6, r2
	add r1, r5, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #32
	strb r0, [r4]
_080CFB44:
	ldr r3, _080CFB7C  @ =0x00000F22
	add r0, r6, r3
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080CFBA8
	lsl r0, r0, #24
	cmp r0, #0
	blt _080CFB94
	ldr r1, _080CFB90  @ =0x00001122
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	mov r0, #64
	add r2, r0, #0
	orr r2, r2, r1
	b _080CFBA0
	.byte 0x00
	.byte 0x00
_080CFB68:
	.4byte gRam
_080CFB6C:
	.4byte 0x00000F92
_080CFB70:
	.4byte 0x00000996
_080CFB74:
	.4byte 0x000009B2
_080CFB78:
	.4byte 0x00000FD2
_080CFB7C:
	.4byte 0x00000F22
_080CFB80:
	.4byte 0x00000FB2
_080CFB84:
	.4byte 0x00001042
_080CFB88:
	.4byte 0x00000F12
_080CFB8C:
	.4byte 0x00000F62
_080CFB90:
	.4byte 0x00001122
_080CFB94:
	ldr r2, _080CFCFC  @ =0x00001122
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	mov r2, #191
	and r2, r2, r0
_080CFBA0:
	ldr r3, _080CFCFC  @ =0x00001122
	add r0, r6, r3
	add r0, r5, r0
	strb r2, [r0]
_080CFBA8:
	add r0, r5, #0
	bl Sprite3_Move
	ldr r4, _080CFD00  @ =gRam
	ldr r0, _080CFD04  @ =0x00000996
	add r6, r4, r0
	ldrb r1, [r6]
	mov r0, #63
	and r0, r0, r1
	cmp r0, #0
	bne _080CFC10
	bl GetRandomInt
	ldr r2, _080CFD08  @ =0x00000968
	add r1, r4, r2
	strb r0, [r1]
	ldr r3, _080CFD0C  @ =0x000016C5
	add r0, r4, r3
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r4, r2
	strb r1, [r0]
	bl GetRandomInt
	ldr r3, _080CFD10  @ =0x0000096C
	add r1, r4, r3
	strb r0, [r1]
	ldr r1, _080CFD14  @ =0x000016C1
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r2, _080CFD18  @ =0x0000096D
	add r0, r4, r2
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #16
	bl sub_080C2DCC
	ldr r3, _080CFD1C  @ =0x00000F62
	add r0, r4, r3
	add r0, r5, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r4, r2
	ldrb r1, [r1]
	strb r1, [r0]
	add r3, r3, #80
	add r0, r4, r3
	add r0, r5, r0
	add r2, r2, #1
	add r1, r4, r2
	ldrb r1, [r1]
	strb r1, [r0]
_080CFC10:
	ldrb r0, [r6]
	mov r3, #15
	and r3, r3, r0
	cmp r3, #0
	bne _080CFCC0
	ldr r0, _080CFD20  @ =0x00000961
	add r7, r4, r0
	mov r0, #255
	strb r0, [r7]
	ldr r1, _080CFD24  @ =0x00000965
	add r1, r1, r4
	mov r12, r1
	mov r2, #1
	neg r2, r2
	mov r9, r2
	add r0, r2, #0
	strb r0, [r1]
	ldr r1, _080CFD1C  @ =0x00000F62
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r4
	mov r8, r2
	strb r0, [r2]
	lsl r0, r0, #24
	cmp r0, #0
	blt _080CFC4C
	strb r3, [r7]
_080CFC4C:
	ldr r1, _080CFD28  @ =0x00000F12
	add r0, r4, r1
	add r2, r5, r0
	ldrb r0, [r2]
	ldr r1, _080CFD2C  @ =0x00000964
	add r6, r4, r1
	strb r0, [r6]
	lsl r0, r0, #24
	cmp r0, #0
	blt _080CFC64
	mov r0, r12
	strb r3, [r0]
_080CFC64:
	mov r1, r8
	mov r0, #0
	ldrsh r1, [r1, r0]
	mov r10, r1
	mov r0, #0
	ldrsh r1, [r6, r0]
	add r0, r1, #0
	add r0, r0, r10
	asr r0, r0, #1
	strb r0, [r2]
	ldrb r0, [r7]
	mov r1, r9
	orr r0, r0, r1
	strb r0, [r7]
	mov r2, r12
	ldrb r0, [r2]
	orr r0, r0, r1
	strb r0, [r2]
	ldr r1, _080CFD30  @ =0x00000FB2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	mov r2, r8
	strb r0, [r2]
	lsl r0, r0, #24
	cmp r0, #0
	blt _080CFC9C
	strb r3, [r7]
_080CFC9C:
	ldr r1, _080CFD34  @ =0x00000F22
	add r0, r4, r1
	add r2, r5, r0
	ldrb r0, [r2]
	strb r0, [r6]
	lsl r0, r0, #24
	cmp r0, #0
	blt _080CFCB0
	mov r0, r12
	strb r3, [r0]
_080CFCB0:
	mov r1, r8
	mov r3, #0
	ldrsh r0, [r1, r3]
	mov r3, #0
	ldrsh r1, [r6, r3]
	add r0, r0, r1
	asr r0, r0, #1
	strb r0, [r2]
_080CFCC0:
	add r0, r5, #0
	bl sub_080C2C4C
	bl GetRandomInt
	ldr r2, _080CFD00  @ =gRam
	ldr r3, _080CFD38  @ =0x00001152
	add r1, r2, r3
	add r4, r5, r1
	ldr r3, _080CFD3C  @ =gUnknown_08174A10
	mov r1, #1
	and r1, r1, r0
	add r1, r1, r3
	ldrb r0, [r1]
	ldrb r1, [r4]
	add r0, r0, r1
	strb r0, [r4]
	ldrb r1, [r3]
	add r0, r0, r1
	strb r0, [r4]
	ldr r3, _080CFD40  @ =0x00001142
	add r2, r2, r3
	add r1, r5, r2
	ldrb r0, [r1]
	cmp r0, #7
	bhi _080CFD44
	mov r0, #8
	strb r0, [r1]
	mov r0, #5
	b _080CFD4E
_080CFCFC:
	.4byte 0x00001122
_080CFD00:
	.4byte gRam
_080CFD04:
	.4byte 0x00000996
_080CFD08:
	.4byte 0x00000968
_080CFD0C:
	.4byte 0x000016C5
_080CFD10:
	.4byte 0x0000096C
_080CFD14:
	.4byte 0x000016C1
_080CFD18:
	.4byte 0x0000096D
_080CFD1C:
	.4byte 0x00000F62
_080CFD20:
	.4byte 0x00000961
_080CFD24:
	.4byte 0x00000965
_080CFD28:
	.4byte 0x00000F12
_080CFD2C:
	.4byte 0x00000964
_080CFD30:
	.4byte 0x00000FB2
_080CFD34:
	.4byte 0x00000F22
_080CFD38:
	.4byte 0x00001152
_080CFD3C:
	.4byte gUnknown_08174A10
_080CFD40:
	.4byte 0x00001142
_080CFD44:
	cmp r0, #24
	bls _080CFD50
	mov r0, #24
	strb r0, [r1]
	mov r0, #251
_080CFD4E:
	strb r0, [r4]
_080CFD50:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080CFAA8

	THUMB_FUNC_START sub_080CFD60
sub_080CFD60: @ 0x080CFD60
	push {r4,r5,lr}
	mov r0, #227
	mov r1, #0
	bl sub_080CA538
	lsl r0, r0, #24
	lsr r2, r0, #24
	asr r1, r0, #24
	mov r0, #1
	neg r0, r0
	cmp r1, r0
	beq _080CFDF4
	ldr r3, _080CFDDC  @ =gRam
	lsl r0, r2, #24
	asr r0, r0, #24
	ldr r1, _080CFDE0  @ =0x000010F2
	add r2, r3, r1
	add r2, r0, r2
	mov r4, #161
	lsl r4, r4, #4
	add r1, r3, r4
	ldrb r1, [r1]
	mov r4, #0
	strb r1, [r2]
	ldr r5, _080CFDE4  @ =0x000016C4
	add r1, r3, r5
	ldrh r2, [r1]
	add r2, r2, #8
	ldr r5, _080CFDE8  @ =0x00000EE2
	add r1, r3, r5
	add r1, r0, r1
	strb r2, [r1]
	add r5, r5, #32
	add r1, r3, r5
	add r1, r0, r1
	lsr r2, r2, #8
	strb r2, [r1]
	mov r2, #182
	lsl r2, r2, #5
	add r1, r3, r2
	ldrh r2, [r1]
	add r2, r2, #16
	sub r5, r5, #48
	add r1, r3, r5
	add r1, r0, r1
	strb r2, [r1]
	add r5, r5, #32
	add r1, r3, r5
	add r1, r0, r1
	lsr r2, r2, #8
	strb r2, [r1]
	ldr r2, _080CFDEC  @ =0x00000FB2
	add r1, r3, r2
	add r1, r0, r1
	strb r4, [r1]
	ldr r4, _080CFDF0  @ =0x000010E2
	add r3, r3, r4
	add r3, r0, r3
	mov r1, #96
	strb r1, [r3]
	b _080CFDF6
	.byte 0x00
	.byte 0x00
_080CFDDC:
	.4byte gRam
_080CFDE0:
	.4byte 0x000010F2
_080CFDE4:
	.4byte 0x000016C4
_080CFDE8:
	.4byte 0x00000EE2
_080CFDEC:
	.4byte 0x00000FB2
_080CFDF0:
	.4byte 0x000010E2
_080CFDF4:
	add r0, r1, #0
_080CFDF6:
	pop {r4,r5}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080CFD60

	THUMB_FUNC_START sub_080CFDFC
sub_080CFDFC: @ 0x080CFDFC
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	bl GetRandomInt
	mov r3, #1
	mov r2, #1
	and r2, r2, r0
	ldr r1, _080CFE30  @ =gRam
	ldr r5, _080CFE34  @ =0x00000F62
	add r0, r1, r5
	add r0, r4, r0
	strb r2, [r0]
	eor r2, r2, r3
	ldr r0, _080CFE38  @ =0x00000FB2
	add r1, r1, r0
	add r1, r4, r1
	strb r2, [r1]
	add r0, r4, #0
	bl sub_080D09F4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080CFE30:
	.4byte gRam
_080CFE34:
	.4byte 0x00000F62
_080CFE38:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080CFDFC

	THUMB_FUNC_START sub_080CFE3C
sub_080CFE3C: @ 0x080CFE3C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080CFE78  @ =gRam
	ldr r1, _080CFE7C  @ =0x000009AD
	add r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #2
	bne _080CFE72
	ldr r4, _080CFE80  @ =0x00001AE8
	add r0, r2, r4
	ldrb r1, [r0]
	add r4, r4, #1
	add r0, r2, r4
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	sub r1, r1, #204
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #1
	bhi _080CFE72
	ldr r1, _080CFE84  @ =0x000010E2
	add r0, r2, r1
	add r0, r3, r0
	mov r1, #40
	strb r1, [r0]
_080CFE72:
	pop {r4}
	pop {r0}
	bx r0
_080CFE78:
	.4byte gRam
_080CFE7C:
	.4byte 0x000009AD
_080CFE80:
	.4byte 0x00001AE8
_080CFE84:
	.4byte 0x000010E2
	THUMB_FUNC_END sub_080CFE3C

	THUMB_FUNC_START sub_080CFE88
sub_080CFE88: @ 0x080CFE88
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080CFEC4  @ =gRam
	ldr r1, _080CFEC8  @ =0x00001AE2
	add r0, r6, r1
	ldrb r5, [r0]
	cmp r5, #0
	bne _080CFEDE
	bl sub_080C99F8
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	blt _080CFED4
	ldr r1, _080CFECC  @ =gUnknown_0817276C
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	mov r0, #6
	strb r0, [r1]
	bl sub_080AA724
	ldr r1, _080CFED0  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	b _080CFEF4
	.byte 0x00
	.byte 0x00
_080CFEC4:
	.4byte gRam
_080CFEC8:
	.4byte 0x00001AE2
_080CFECC:
	.4byte gUnknown_0817276C
_080CFED0:
	.4byte 0x00000FA2
_080CFED4:
	add r0, r4, #0
	mov r1, #205
	mov r2, sp
	bl sub_080C9564
_080CFEDE:
	ldr r2, _080CFEFC  @ =gRam
	ldr r1, _080CFF00  @ =0x000010E2
	add r0, r2, r1
	add r0, r4, r0
	mov r3, #0
	mov r1, #48
	strb r1, [r0]
	ldr r0, _080CFF04  @ =0x00000F52
	add r2, r2, r0
	add r2, r4, r2
	strb r3, [r2]
_080CFEF4:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080CFEFC:
	.4byte gRam
_080CFF00:
	.4byte 0x000010E2
_080CFF04:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080CFE88

	THUMB_FUNC_START sub_080CFF08
sub_080CFF08: @ 0x080CFF08
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080C9704
	ldr r6, _080CFF94  @ =gRam
	ldr r1, _080CFF98  @ =0x00000FF2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #230
	bne _080CFF54
	ldr r0, _080CFF9C  @ =0x00000F92
	add r2, r6, r0
	add r2, r5, r2
	add r1, r1, #16
	add r4, r6, r1
	add r4, r5, r4
	ldrb r0, [r4]
	sub r0, r0, #1
	strb r0, [r2]
	ldr r0, _080CFFA0  @ =0x00001122
	add r1, r6, r0
	add r1, r5, r1
	ldr r3, _080CFFA4  @ =gUnknown_08174A14
	ldrb r0, [r2]
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	ldrb r0, [r4]
	cmp r0, #1
	bne _080CFF54
	ldr r1, _080CFFA8  @ =0x00001032
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #240
	strb r1, [r0]
_080CFF54:
	add r0, r5, #0
	bl sub_080C6208
	lsl r0, r0, #24
	cmp r0, #0
	bne _080CFF8E
	ldr r1, _080CFF94  @ =gRam
	ldr r2, _080CFF98  @ =0x00000FF2
	add r0, r1, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #230
	bne _080CFF88
	add r2, r2, #16
	add r0, r1, r2
	add r0, r5, r0
	ldrb r0, [r0]
	mov r2, #1
	cmp r0, #1
	bne _080CFF7E
	mov r2, #2
_080CFF7E:
	mov r1, #128
	lsl r1, r1, #2
	add r0, r2, #0
	bl sub_080C6174
_080CFF88:
	add r0, r5, #0
	bl sub_080D0664
_080CFF8E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080CFF94:
	.4byte gRam
_080CFF98:
	.4byte 0x00000FF2
_080CFF9C:
	.4byte 0x00000F92
_080CFFA0:
	.4byte 0x00001122
_080CFFA4:
	.4byte gUnknown_08174A14
_080CFFA8:
	.4byte 0x00001032
	THUMB_FUNC_END sub_080CFF08

	THUMB_FUNC_START sub_080CFFAC
sub_080CFFAC: @ 0x080CFFAC
	bx lr
	THUMB_FUNC_END sub_080CFFAC

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080CFFB0
sub_080CFFB0: @ 0x080CFFB0
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080C35A4
	ldr r0, _080CFFD8  @ =gRam
	ldr r1, _080CFFDC  @ =0x00001002
	add r0, r0, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080CFFE0
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080CFFD8:
	.4byte gRam
_080CFFDC:
	.4byte 0x00001002
	THUMB_FUNC_END sub_080CFFB0

	THUMB_FUNC_START sub_080CFFE0
sub_080CFFE0: @ 0x080CFFE0
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r0, #34
	bl sub_0812FBC4
	add r0, r4, #0
	bl sub_080D0020
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080CFFE0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080CFFFC
sub_080CFFFC: @ 0x080CFFFC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D0018  @ =gRam
	ldr r2, _080D001C  @ =0x00001002
	add r1, r1, r2
	add r1, r0, r1
	mov r2, #255
	strb r2, [r1]
	bl sub_080D0020
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D0018:
	.4byte gRam
_080D001C:
	.4byte 0x00001002
	THUMB_FUNC_END sub_080CFFFC

	THUMB_FUNC_START sub_080D0020
sub_080D0020: @ 0x080D0020
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D003C  @ =gRam
	ldr r3, _080D0040  @ =0x00000E85
	add r1, r2, r3
	add r0, r0, r1
	ldr r1, _080D0044  @ =0x00000DB7
	add r2, r2, r1
	ldrb r1, [r2]
	strb r1, [r0]
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	bx lr
_080D003C:
	.4byte gRam
_080D0040:
	.4byte 0x00000E85
_080D0044:
	.4byte 0x00000DB7
	THUMB_FUNC_END sub_080D0020

	THUMB_FUNC_START sub_080D0048
sub_080D0048: @ 0x080D0048
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r1, _080D007C  @ =gUnknown_08174A18
	ldr r3, _080D0080  @ =gRam
	ldr r5, _080D0084  @ =0x00000E85
	add r0, r3, r5
	add r0, r2, r0
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r1, [r0]
	ldr r5, _080D0088  @ =0x00000AA8
	add r0, r3, r5
	ldrh r0, [r0]
	lsr r0, r0, #8
	and r1, r1, r0
	cmp r1, #0
	beq _080D0090
	ldr r1, _080D008C  @ =0x00000FA2
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #0
	strb r1, [r0]
	b _080D00A8
	.byte 0x00
	.byte 0x00
_080D007C:
	.4byte gUnknown_08174A18
_080D0080:
	.4byte gRam
_080D0084:
	.4byte 0x00000E85
_080D0088:
	.4byte 0x00000AA8
_080D008C:
	.4byte 0x00000FA2
_080D0090:
	add r0, r4, #0
	bl sub_080C9704
	add r0, r4, #0
	bl sub_080C5614
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D00A8
	add r0, r4, #0
	bl sub_080D0664
_080D00A8:
	pop {r4,r5}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D0048

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D00B0
sub_080D00B0: @ 0x080D00B0
	push {r4-r6,lr}
	mov r6, r8
	push {r6}
	add r5, r0, #0
	lsl r5, r5, #24
	lsr r5, r5, #24
	mov r2, #3
	and r2, r2, r5
	ldr r6, _080D0124  @ =gRam
	ldr r1, _080D0128  @ =0x00000F52
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #1
	strb r1, [r0]
	ldr r0, _080D012C  @ =0x00000FC2
	add r1, r6, r0
	add r1, r5, r1
	ldr r0, _080D0130  @ =gUnknown_08174A38
	add r2, r2, r0
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r1, _080D0134  @ =0x00000F62
	add r0, r6, r1
	add r0, r5, r0
	strb r2, [r0]
	ldr r1, _080D0138  @ =0x000010E2
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #96
	strb r1, [r0]
	bl GetRandomInt
	ldr r1, _080D013C  @ =0x00000F22
	add r2, r6, r1
	add r2, r5, r2
	ldr r1, _080D0140  @ =gUnknown_08174A28
	mov r8, r1
	mov r4, #7
	add r1, r4, #0
	and r1, r1, r0
	add r1, r1, r8
	ldrb r0, [r1]
	strb r0, [r2]
	bl GetRandomInt
	ldr r1, _080D0144  @ =0x00000F12
	add r6, r6, r1
	add r5, r5, r6
	and r4, r4, r0
	add r4, r4, r8
	ldrb r0, [r4]
	strb r0, [r5]
	pop {r3}
	mov r8, r3
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D0124:
	.4byte gRam
_080D0128:
	.4byte 0x00000F52
_080D012C:
	.4byte 0x00000FC2
_080D0130:
	.4byte gUnknown_08174A38
_080D0134:
	.4byte 0x00000F62
_080D0138:
	.4byte 0x000010E2
_080D013C:
	.4byte 0x00000F22
_080D0140:
	.4byte gUnknown_08174A28
_080D0144:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080D00B0

	THUMB_FUNC_START sub_080D0148
sub_080D0148: @ 0x080D0148
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #20
	lsl r0, r0, #24
	lsr r7, r0, #24
	mov r0, #1
	str r0, [sp, #4]
	add r0, r7, #0
	bl sub_080D0FF8
	add r0, r7, #0
	bl sub_080C58F0
	add r0, r7, #0
	bl sub_080D05AC
	add r0, r7, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D017C
	b _080D045E
_080D017C:
	add r0, r7, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D018A
	b _080D045E
_080D018A:
	ldr r2, _080D0290  @ =gRam
	ldr r1, _080D0294  @ =0x00001082
	add r0, r2, r1
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D01A2
	add r0, r7, #0
	str r2, [sp, #8]
	bl sub_080C9400
	ldr r2, [sp, #8]
_080D01A2:
	add r0, r7, #0
	str r2, [sp, #8]
	bl sub_080D057C
	mov r1, #0
	ldr r2, [sp, #8]
	ldr r3, _080D0298  @ =0x000009DA
	add r0, r2, r3
	ldrh r0, [r0]
	cmp r0, #173
	bne _080D01BA
	mov r1, #1
_080D01BA:
	cmp r1, #0
	bne _080D01C0
	b _080D02D4
_080D01C0:
	ldr r4, _080D029C  @ =0x00000FD2
	add r0, r2, r4
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D01CE
	b _080D02D4
_080D01CE:
	ldr r0, _080D02A0  @ =0x00000EE2
	add r5, r2, r0
	ldrb r0, [r5]
	ldr r1, _080D02A4  @ =0x00000968
	add r6, r2, r1
	strb r0, [r6]
	ldr r3, _080D02A8  @ =0x00000F02
	add r4, r2, r3
	ldrb r1, [r4]
	ldr r3, _080D02AC  @ =0x00000969
	add r0, r2, r3
	strb r1, [r0]
	ldr r0, _080D02B0  @ =0x00000ED2
	add r0, r0, r2
	mov r9, r0
	ldrb r0, [r0]
	ldr r1, _080D02B4  @ =0x0000096C
	add r3, r2, r1
	strb r0, [r3]
	ldr r0, _080D02B8  @ =0x00000EF2
	add r0, r0, r2
	mov r8, r0
	ldrb r1, [r0]
	mov r10, r1
	ldr r1, _080D02BC  @ =0x0000096D
	add r0, r2, r1
	mov r1, r10
	strb r1, [r0]
	ldr r1, _080D02C0  @ =0x00001142
	add r0, r2, r1
	ldrb r1, [r0]
	ldrh r0, [r3]
	sub r0, r0, r1
	mov r1, #0
	mov r10, r1
	strh r0, [r3]
	add r0, r7, #0
	mov r1, #24
	str r2, [sp, #8]
	str r3, [sp, #12]
	bl sub_080C2DCC
	ldr r2, [sp, #8]
	ldr r1, _080D02C4  @ =0x00000F12
	add r0, r2, r1
	add r0, r7, r0
	str r0, [sp, #16]
	mov r0, #150
	lsl r0, r0, #4
	ldrb r1, [r0, r2]
	ldr r0, [sp, #16]
	strb r1, [r0]
	ldr r1, _080D02C8  @ =0x00000F22
	add r0, r2, r1
	add r0, r7, r0
	str r0, [sp, #16]
	ldr r0, _080D02CC  @ =0x00000961
	ldrb r1, [r0, r2]
	ldr r0, [sp, #16]
	strb r1, [r0]
	add r5, r7, r5
	ldrb r1, [r5]
	add r4, r7, r4
	ldrb r0, [r4]
	lsl r0, r0, #8
	orr r1, r1, r0
	ldrh r0, [r6]
	lsl r1, r1, #16
	asr r1, r1, #16
	sub r1, r1, r0
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, [sp, #12]
	cmp r1, #23
	bhi _080D02D4
	mov r1, r9
	add r0, r7, r1
	ldrb r1, [r0]
	mov r4, r8
	add r0, r7, r4
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	ldrh r0, [r3]
	lsl r1, r1, #16
	asr r1, r1, #16
	sub r1, r1, r0
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #23
	bhi _080D02D4
	ldr r1, _080D02D0  @ =0x00000FA2
	add r0, r2, r1
	add r0, r7, r0
	mov r2, r10
	strb r2, [r0]
	b _080D045E
_080D0290:
	.4byte gRam
_080D0294:
	.4byte 0x00001082
_080D0298:
	.4byte 0x000009DA
_080D029C:
	.4byte 0x00000FD2
_080D02A0:
	.4byte 0x00000EE2
_080D02A4:
	.4byte 0x00000968
_080D02A8:
	.4byte 0x00000F02
_080D02AC:
	.4byte 0x00000969
_080D02B0:
	.4byte 0x00000ED2
_080D02B4:
	.4byte 0x0000096C
_080D02B8:
	.4byte 0x00000EF2
_080D02BC:
	.4byte 0x0000096D
_080D02C0:
	.4byte 0x00001142
_080D02C4:
	.4byte 0x00000F12
_080D02C8:
	.4byte 0x00000F22
_080D02CC:
	.4byte 0x00000961
_080D02D0:
	.4byte 0x00000FA2
_080D02D4:
	add r0, r7, #0
	bl Sprite3_Move
	ldr r4, _080D03F8  @ =gRam
	ldr r3, _080D03FC  @ =0x00000F92
	add r2, r4, r3
	add r2, r7, r2
	ldr r1, _080D0400  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	add r0, r7, #0
	eor r0, r0, r1
	lsr r0, r0, #1
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldr r2, _080D0404  @ =0x000010E2
	add r0, r4, r2
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D0332
	add r0, r7, #0
	bl sub_080C4F98
	mov r0, sp
	add r1, r7, #0
	bl sub_080C4948
	mov r0, sp
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D0332
	mov r2, sp
	add r2, r2, #1
	add r0, r7, #0
	mov r1, #203
	bl sub_080C9564
	ldr r3, _080D0408  @ =0x00000F52
	add r1, r4, r3
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r4, #0
	str r4, [sp, #4]
_080D0332:
	ldr r0, [sp, #4]
	cmp r0, #0
	bne _080D033A
	b _080D045E
_080D033A:
	ldr r0, _080D03F8  @ =gRam
	ldr r2, _080D0400  @ =0x00000996
	add r1, r0, r2
	ldrb r1, [r1]
	mov r8, r0
	cmp r1, #0
	bne _080D0358
	ldr r0, _080D040C  @ =0x00000F62
	add r0, r0, r8
	add r1, r7, r0
	ldrb r0, [r1]
	cmp r0, #16
	beq _080D0358
	sub r0, r0, #8
	strb r0, [r1]
_080D0358:
	mov r6, r8
	ldr r3, _080D0410  @ =0x00000FC2
	add r0, r6, r3
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D045E
	bl GetRandomInt
	mov r4, #3
	add r2, r4, #0
	and r2, r2, r0
	ldr r1, _080D0414  @ =0x000016C4
	add r0, r6, r1
	ldrb r1, [r0]
	ldr r3, _080D0418  @ =0x000016C5
	add r0, r6, r3
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	ldr r5, _080D041C  @ =gUnknown_08174A3C
	add r2, r2, r5
	orr r1, r1, r0
	ldrb r2, [r2]
	add r1, r1, r2
	ldr r2, _080D0420  @ =0x00000968
	add r0, r6, r2
	strh r1, [r0]
	bl GetRandomInt
	and r4, r4, r0
	mov r3, #182
	lsl r3, r3, #5
	add r0, r6, r3
	ldrb r1, [r0]
	ldr r2, _080D0424  @ =0x000016C1
	add r0, r6, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r4, r4, r5
	orr r1, r1, r0
	ldrb r4, [r4]
	add r1, r1, r4
	ldr r3, _080D0428  @ =0x0000096C
	add r0, r6, r3
	strh r1, [r0]
	add r0, r7, #0
	mov r1, #20
	bl sub_080C2DCC
	ldr r4, _080D042C  @ =0x00000F12
	add r0, r6, r4
	add r0, r7, r0
	mov r1, #150
	lsl r1, r1, #4
	add r2, r6, r1
	ldrb r1, [r2]
	strb r1, [r0]
	ldr r3, _080D0430  @ =0x00000F22
	add r0, r6, r3
	add r0, r7, r0
	ldr r4, _080D0434  @ =0x00000961
	add r1, r6, r4
	ldrb r1, [r1]
	strb r1, [r0]
	mov r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	blt _080D043C
	ldr r1, _080D0438  @ =0x00001122
	add r0, r6, r1
	add r0, r7, r0
	ldrb r1, [r0]
	mov r2, #64
	orr r1, r1, r2
	b _080D0448
	.byte 0x00
	.byte 0x00
_080D03F8:
	.4byte gRam
_080D03FC:
	.4byte 0x00000F92
_080D0400:
	.4byte 0x00000996
_080D0404:
	.4byte 0x000010E2
_080D0408:
	.4byte 0x00000F52
_080D040C:
	.4byte 0x00000F62
_080D0410:
	.4byte 0x00000FC2
_080D0414:
	.4byte 0x000016C4
_080D0418:
	.4byte 0x000016C5
_080D041C:
	.4byte gUnknown_08174A3C
_080D0420:
	.4byte 0x00000968
_080D0424:
	.4byte 0x000016C1
_080D0428:
	.4byte 0x0000096C
_080D042C:
	.4byte 0x00000F12
_080D0430:
	.4byte 0x00000F22
_080D0434:
	.4byte 0x00000961
_080D0438:
	.4byte 0x00001122
_080D043C:
	ldr r0, _080D0470  @ =0x00001122
	add r0, r0, r8
	add r0, r7, r0
	ldrb r2, [r0]
	mov r1, #191
	and r1, r1, r2
_080D0448:
	strb r1, [r0]
	ldr r0, _080D0474  @ =gRam
	ldr r2, _080D0478  @ =0x00000FC2
	add r1, r0, r2
	add r1, r7, r1
	ldr r3, _080D047C  @ =0x00000F62
	add r0, r0, r3
	add r0, r7, r0
	ldrb r0, [r0]
	add r0, r7, r0
	strb r0, [r1]
_080D045E:
	add sp, sp, #20
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D0470:
	.4byte 0x00001122
_080D0474:
	.4byte gRam
_080D0478:
	.4byte 0x00000FC2
_080D047C:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080D0148

	THUMB_FUNC_START sub_080D0480
sub_080D0480: @ 0x080D0480
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r7, #1
	add r0, r4, #0
	bl sub_080D05AC
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D0504
	ldr r5, _080D04C0  @ =gRam
	ldr r1, _080D04C4  @ =0x00001AE2
	add r0, r5, r1
	ldrb r6, [r0]
	cmp r6, #0
	bne _080D04EA
	bl sub_080C99F8
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bge _080D04C8
	add r0, r4, #0
	mov r1, #205
	mov r2, sp
	bl sub_080C9564
	b _080D04EA
_080D04C0:
	.4byte gRam
_080D04C4:
	.4byte 0x00001AE2
_080D04C8:
	ldr r1, _080D050C  @ =gUnknown_0817276C
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	ldr r2, _080D0510  @ =0x00001082
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, #7
	strb r0, [r1]
	bl sub_080AA724
	ldr r1, _080D0514  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
	mov r7, #0
_080D04EA:
	cmp r7, #0
	beq _080D0504
	ldr r2, _080D0518  @ =gRam
	ldr r1, _080D051C  @ =0x000010E2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
	ldr r0, _080D0520  @ =0x00000F52
	add r2, r2, r0
	add r2, r4, r2
	mov r0, #1
	strb r0, [r2]
_080D0504:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080D050C:
	.4byte gUnknown_0817276C
_080D0510:
	.4byte 0x00001082
_080D0514:
	.4byte 0x00000FA2
_080D0518:
	.4byte gRam
_080D051C:
	.4byte 0x000010E2
_080D0520:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D0480

	THUMB_FUNC_START sub_080D0524
sub_080D0524: @ 0x080D0524
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D0544  @ =gRam
	ldr r1, _080D0548  @ =0x00001062
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	ldr r1, _080D054C  @ =0x00001172
	add r3, r3, r1
	add r0, r0, r3
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	bx lr
_080D0544:
	.4byte gRam
_080D0548:
	.4byte 0x00001062
_080D054C:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080D0524

	THUMB_FUNC_START sub_080D0550
sub_080D0550: @ 0x080D0550
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D0570  @ =gUnknown_08174A1C
	ldr r1, _080D0574  @ =gRam
	ldr r3, _080D0578  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080D0570:
	.4byte gUnknown_08174A1C
_080D0574:
	.4byte gRam
_080D0578:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D0550

	THUMB_FUNC_START sub_080D057C
sub_080D057C: @ 0x080D057C
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r0, _080D05A4  @ =gRam
	ldr r1, _080D05A8  @ =0x00000996
	add r0, r0, r1
	ldrb r1, [r0]
	add r0, r2, #0
	eor r0, r0, r1
	mov r1, #31
	and r0, r0, r1
	cmp r0, #0
	bne _080D059E
	add r0, r2, #0
	mov r1, #97
	bl sub_080CF140
_080D059E:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D05A4:
	.4byte gRam
_080D05A8:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080D057C

	THUMB_FUNC_START sub_080D05AC
sub_080D05AC: @ 0x080D05AC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080D05E8  @ =gRam
	ldr r1, _080D05EC  @ =0x000009AD
	add r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #2
	bne _080D05E0
	ldr r4, _080D05F0  @ =0x00001AE8
	add r0, r2, r4
	ldrb r1, [r0]
	add r4, r4, #1
	add r0, r2, r4
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	cmp r1, #203
	beq _080D05D6
	cmp r1, #205
	bne _080D05E0
_080D05D6:
	ldr r1, _080D05F4  @ =0x000010E2
	add r0, r2, r1
	add r0, r3, r0
	mov r1, #40
	strb r1, [r0]
_080D05E0:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D05E8:
	.4byte gRam
_080D05EC:
	.4byte 0x000009AD
_080D05F0:
	.4byte 0x00001AE8
_080D05F4:
	.4byte 0x000010E2
	THUMB_FUNC_END sub_080D05AC

	THUMB_FUNC_START sub_080D05F8
sub_080D05F8: @ 0x080D05F8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r2, _080D0630  @ =gRam
	ldr r1, _080D0634  @ =0x00001062
	add r0, r2, r1
	add r0, r5, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080D062A
	ldr r3, _080D0638  @ =0x00000FA2
	add r0, r2, r3
	add r0, r5, r0
	strb r1, [r0]
	mov r4, #11
_080D0616:
	add r0, r5, #0
	bl sub_080D063C
	lsl r0, r4, #24
	mov r1, #255
	lsl r1, r1, #24
	add r0, r0, r1
	lsr r4, r0, #24
	cmp r0, #0
	bge _080D0616
_080D062A:
	pop {r4,r5}
	pop {r0}
	bx r0
_080D0630:
	.4byte gRam
_080D0634:
	.4byte 0x00001062
_080D0638:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080D05F8

	THUMB_FUNC_START sub_080D063C
sub_080D063C: @ 0x080D063C
	push {r4,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #121
	bl sub_080CA538
	cmp r0, #0
	blt _080D065E
	lsl r4, r0, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080CAE50
	add r0, r4, #0
	bl sub_080D00B0
_080D065E:
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D063C

	THUMB_FUNC_START sub_080D0664
sub_080D0664: @ 0x080D0664
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	cmp r0, #0
	beq _080D0684
	b _080D0810
_080D0684:
	ldr r0, _080D079C  @ =gRam
	mov r8, r0
	ldr r0, _080D07A0  @ =0x00000FF2
	add r0, r0, r8
	add r0, r0, r7
	mov r10, r0
	ldrb r0, [r0]
	cmp r0, #219
	bne _080D06A2
	add r0, r7, #0
	bl sub_080C841C
	cmp r0, #0
	beq _080D06A2
	b _080D0810
_080D06A2:
	add r0, r7, #0
	bl sub_080C2C4C
	add r0, r7, #0
	bl Sprite3_Move
	ldr r0, _080D07A4  @ =0x000010B2
	add r0, r0, r8
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D06C6
	add r0, r7, #0
	bl sub_080C6F48
	add r0, r7, #0
	bl Sprite_WallInducedSpeedInversion
_080D06C6:
	ldr r0, _080D07A8  @ =0x00001152
	add r0, r0, r8
	add r0, r0, r7
	mov r12, r0
	ldrb r0, [r0]
	sub r0, r0, #2
	mov r1, r12
	strb r0, [r1]
	ldr r0, _080D07AC  @ =0x00001142
	add r0, r0, r8
	add r6, r7, r0
	mov r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #0
	blt _080D06E6
	b _080D07FE
_080D06E6:
	ldr r4, _080D07B0  @ =0x00000F22
	add r4, r4, r8
	add r4, r7, r4
	ldrb r2, [r4]
	ldr r5, _080D07B4  @ =0x00000F12
	add r5, r5, r8
	add r5, r7, r5
	ldrb r3, [r5]
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	neg r1, r1
	lsr r0, r1, #31
	add r1, r1, r0
	asr r1, r1, #1
	lsl r1, r1, #24
	mov r0, r9
	strb r0, [r6]
	mov r6, #128
	add r0, r2, #0
	and r0, r0, r6
	lsr r2, r2, #1
	orr r0, r0, r2
	strb r0, [r4]
	add r0, r3, #0
	and r0, r0, r6
	lsr r3, r3, #1
	orr r0, r0, r3
	strb r0, [r5]
	lsr r2, r1, #24
	asr r1, r1, #24
	cmp r1, #8
	ble _080D07F8
	ldr r0, _080D07B8  @ =0x000013B2
	add r0, r0, r8
	add r0, r7, r0
	ldrb r0, [r0]
	mov r1, r12
	strb r2, [r1]
	sub r0, r0, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #1
	bhi _080D07D4
	mov r0, r9
	strb r0, [r1]
	add r0, r7, #0
	bl sub_080C969C
	mov r12, r0
	cmp r0, #0
	blt _080D07FE
	ldr r0, _080D07BC  @ =0x00001032
	add r0, r0, r8
	add r0, r7, r0
	ldrb r1, [r0]
	mov r0, #32
	and r0, r0, r1
	cmp r0, #0
	beq _080D07FE
	ldr r6, _080D07C0  @ =0x00000EE2
	add r6, r6, r8
	add r6, r6, r12
	ldrb r2, [r6]
	ldr r5, _080D07C4  @ =0x00000F02
	add r5, r5, r8
	add r5, r5, r12
	ldrb r0, [r5]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r1, _080D07C8  @ =0x0000FFFC
	add r2, r2, r1
	ldr r4, _080D07CC  @ =0x00000ED2
	add r4, r4, r8
	add r4, r4, r12
	ldrb r1, [r4]
	ldr r3, _080D07D0  @ =0x00000EF2
	add r3, r3, r8
	add r3, r3, r12
	ldrb r0, [r3]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r0, _080D07C8  @ =0x0000FFFC
	add r1, r1, r0
	strb r2, [r6]
	lsr r2, r2, #8
	strb r2, [r5]
	strb r1, [r4]
	lsr r1, r1, #8
	strb r1, [r3]
	b _080D07FE
_080D079C:
	.4byte gRam
_080D07A0:
	.4byte 0x00000FF2
_080D07A4:
	.4byte 0x000010B2
_080D07A8:
	.4byte 0x00001152
_080D07AC:
	.4byte 0x00001142
_080D07B0:
	.4byte 0x00000F22
_080D07B4:
	.4byte 0x00000F12
_080D07B8:
	.4byte 0x000013B2
_080D07BC:
	.4byte 0x00001032
_080D07C0:
	.4byte 0x00000EE2
_080D07C4:
	.4byte 0x00000F02
_080D07C8:
	.4byte 0x0000FFFC
_080D07CC:
	.4byte 0x00000ED2
_080D07D0:
	.4byte 0x00000EF2
_080D07D4:
	mov r1, r10
	ldrb r0, [r1]
	cmp r0, #227
	bls _080D07FE
	ldr r0, _080D07F4  @ =0x000009B2
	add r0, r0, r8
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	beq _080D07FE
	add r0, r7, #0
	mov r1, #113
	bl sub_080CF0AC
	b _080D07FE
_080D07F4:
	.4byte 0x000009B2
_080D07F8:
	add r0, r7, #0
	bl sub_080C351C
_080D07FE:
	add r0, r7, #0
	bl sub_080D0820
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D0810
	add r0, r7, #0
	bl sub_080C4C10
_080D0810:
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D0664

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D0820
sub_080D0820: @ 0x080D0820
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r4, r1, #0
	ldr r3, _080D0854  @ =gRam
	ldr r2, _080D0858  @ =0x00000F72
	add r0, r3, r2
	add r0, r1, r0
	ldrb r2, [r0]
	mov r5, #0
	cmp r2, #0
	beq _080D08AA
	sub r0, r2, #1
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r6, _080D085C  @ =0x00000E15
	add r0, r3, r6
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D0860
	add r0, r1, #0
	bl sub_080CF418
	b _080D08A8
	.byte 0x00
	.byte 0x00
_080D0854:
	.4byte gRam
_080D0858:
	.4byte 0x00000F72
_080D085C:
	.4byte 0x00000E15
_080D0860:
	ldr r0, _080D08B4  @ =0x00000EE2
	add r1, r3, r0
	add r1, r4, r1
	ldr r6, _080D08B8  @ =0x00000DCF
	add r0, r3, r6
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D08BC  @ =0x00000F02
	add r1, r3, r0
	add r1, r4, r1
	add r6, r6, #20
	add r0, r3, r6
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D08C0  @ =0x00000ED2
	add r1, r3, r0
	add r1, r4, r1
	sub r6, r6, #30
	add r0, r3, r6
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D08C4  @ =0x00000EF2
	add r1, r3, r0
	add r1, r4, r1
	add r6, r6, #20
	add r0, r3, r6
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080D08C8  @ =0x00001142
	add r0, r3, r1
	add r0, r4, r0
	strb r5, [r0]
_080D08A8:
	mov r5, #1
_080D08AA:
	add r0, r5, #0
	pop {r4-r6}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080D08B4:
	.4byte 0x00000EE2
_080D08B8:
	.4byte 0x00000DCF
_080D08BC:
	.4byte 0x00000F02
_080D08C0:
	.4byte 0x00000ED2
_080D08C4:
	.4byte 0x00000EF2
_080D08C8:
	.4byte 0x00001142
	THUMB_FUNC_END sub_080D0820

	THUMB_FUNC_START sub_080D08CC
sub_080D08CC: @ 0x080D08CC
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	ldr r4, [sp, #40]
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r8, r0
	lsl r1, r1, #16
	lsr r7, r1, #16
	lsl r2, r2, #24
	lsr r2, r2, #24
	mov r9, r2
	lsl r3, r3, #24
	lsr r3, r3, #24
	str r3, [sp]
	lsl r4, r4, #24
	lsr r4, r4, #24
	cmp r4, #0
	beq _080D09AE
	ldr r5, _080D09C0  @ =gRam
	mov r0, #31
	mov r10, r0
	add r6, r4, #0
	ldr r0, _080D09C4  @ =gUnknown_08174A40
	add r0, r0, r9
	str r0, [sp, #4]
_080D0906:
	ldr r0, [sp]
	mov r1, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080D09A8
	ldr r1, _080D09C8  @ =0x00000EE2
	add r0, r5, r1
	add r0, r4, r0
	mov r2, r8
	strb r2, [r0]
	ldr r3, _080D09CC  @ =0x00000F02
	add r0, r5, r3
	add r0, r4, r0
	mov r2, r8
	lsr r1, r2, #8
	strb r1, [r0]
	sub r3, r3, #48
	add r0, r5, r3
	add r0, r4, r0
	strb r7, [r0]
	ldr r1, _080D09D0  @ =0x00000EF2
	add r0, r5, r1
	add r0, r4, r0
	lsr r1, r7, #8
	strb r1, [r0]
	bl GetRandomInt
	ldr r3, _080D09D4  @ =0x00000F22
	add r2, r5, r3
	add r2, r4, r2
	mov r1, r10
	and r1, r1, r0
	ldr r0, [sp, #4]
	ldrb r0, [r0]
	add r1, r1, r0
	sub r1, r1, #15
	strb r1, [r2]
	bl GetRandomInt
	ldr r1, _080D09D8  @ =0x00000F12
	add r3, r5, r1
	add r3, r4, r3
	ldr r2, _080D09DC  @ =gUnknown_08174A44
	add r2, r2, r9
	mov r1, r10
	and r1, r1, r0
	ldrb r2, [r2]
	add r1, r1, r2
	sub r1, r1, #15
	strb r1, [r3]
	bl GetRandomInt
	ldr r3, _080D09E0  @ =0x00001152
	add r2, r5, r3
	add r2, r4, r2
	mov r1, #7
	and r1, r1, r0
	add r1, r1, #24
	strb r1, [r2]
	ldr r1, _080D09E4  @ =0x00000D74
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r2, _080D09E8  @ =0x000010E2
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	sub r3, r3, #160
	add r0, r5, r3
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080D09EC  @ =0x000010F2
	add r0, r5, r1
	add r0, r4, r0
	ldr r2, _080D09F0  @ =gUnknown_03002C40
	ldrb r1, [r2]
	strb r1, [r0]
_080D09A8:
	sub r6, r6, #1
	cmp r6, #0
	bne _080D0906
_080D09AE:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D09C0:
	.4byte gRam
_080D09C4:
	.4byte gUnknown_08174A40
_080D09C8:
	.4byte 0x00000EE2
_080D09CC:
	.4byte 0x00000F02
_080D09D0:
	.4byte 0x00000EF2
_080D09D4:
	.4byte 0x00000F22
_080D09D8:
	.4byte 0x00000F12
_080D09DC:
	.4byte gUnknown_08174A44
_080D09E0:
	.4byte 0x00001152
_080D09E4:
	.4byte 0x00000D74
_080D09E8:
	.4byte 0x000010E2
_080D09EC:
	.4byte 0x000010F2
_080D09F0:
	.4byte gUnknown_03002C40
	THUMB_FUNC_END sub_080D08CC

	THUMB_FUNC_START sub_080D09F4
sub_080D09F4: @ 0x080D09F4
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r0, _080D0A14  @ =gRam
	ldr r2, _080D0A18  @ =0x000009B2
	add r0, r0, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bne _080D0A10
	add r0, r1, #0
	bl sub_080D0524
_080D0A10:
	pop {r0}
	bx r0
_080D0A14:
	.4byte gRam
_080D0A18:
	.4byte 0x000009B2
	THUMB_FUNC_END sub_080D09F4

	THUMB_FUNC_START sub_080D0A1C
sub_080D0A1C: @ 0x080D0A1C
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	lsl r2, r4, #2
	mov r0, #15
	and r2, r2, r0
	mov r5, #15
	ldr r3, _080D0A90  @ =gRam
	mov r8, r3
	ldr r0, _080D0A94  @ =0x00001172
	add r0, r0, r3
	mov r12, r0
	ldr r1, _080D0A98  @ =0x000010F2
	add r6, r3, r1
	add r7, r4, r6
_080D0A3E:
	ldr r1, _080D0A9C  @ =0x000015DC
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r2, r0
	beq _080D0AE4
	ldr r0, _080D0AA0  @ =0x00000FA2
	add r0, r0, r8
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #8
	bls _080D0AE4
	ldr r1, _080D0AA4  @ =0x000010D2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D0AE4
	sub r1, r1, #192
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D0AB0
	ldr r1, _080D0AA8  @ =0x00001082
	add r0, r3, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D0AE4
	ldr r1, _080D0AAC  @ =0x00000EA5
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	beq _080D0AE4
	b _080D0AD4
	.byte 0x00
	.byte 0x00
_080D0A90:
	.4byte gRam
_080D0A94:
	.4byte 0x00001172
_080D0A98:
	.4byte 0x000010F2
_080D0A9C:
	.4byte 0x000015DC
_080D0AA0:
	.4byte 0x00000FA2
_080D0AA4:
	.4byte 0x000010D2
_080D0AA8:
	.4byte 0x00001082
_080D0AAC:
	.4byte 0x00000EA5
_080D0AB0:
	add r0, r2, r6
	ldrb r0, [r0]
	ldrb r1, [r7]
	cmp r0, r1
	bne _080D0AE4
	ldr r1, _080D0AE0  @ =0x00001132
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	bne _080D0AE4
	mov r1, r12
	add r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D0AE4
_080D0AD4:
	add r0, r4, #0
	add r1, r2, #0
	bl sub_080D0AFC
	mov r0, #1
	b _080D0AF2
_080D0AE0:
	.4byte 0x00001132
_080D0AE4:
	sub r5, r5, #1
	sub r2, r2, #1
	mov r0, #15
	and r2, r2, r0
	cmp r5, #0
	bge _080D0A3E
	mov r0, #0
_080D0AF2:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080D0A1C

	THUMB_FUNC_START sub_080D0AFC
sub_080D0AFC: @ 0x080D0AFC
	push {r4-r6,lr}
	mov r6, r9
	mov r5, r8
	push {r5,r6}
	add r5, r1, #0
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r5, r5, #24
	lsr r5, r5, #24
	add r1, r5, #0
	bl sub_080CEE30
	ldr r6, _080D0B84  @ =gRam
	ldr r1, _080D0B88  @ =0x00000EE2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	mov r8, r0
	ldr r2, _080D0B8C  @ =0x00000F02
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	mov r1, r8
	orr r1, r1, r0
	mov r8, r1
	bl GetRandomInt
	ldr r2, _080D0B90  @ =gUnknown_08174A3C
	mov r9, r2
	mov r4, #3
	add r1, r4, #0
	and r1, r1, r0
	add r1, r1, r9
	ldrb r0, [r1]
	add r0, r0, r8
	ldr r2, _080D0B94  @ =0x00000968
	add r1, r6, r2
	strh r0, [r1]
	ldr r1, _080D0B98  @ =0x00000ED2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	mov r8, r0
	ldr r2, _080D0B9C  @ =0x00000EF2
	add r0, r6, r2
	add r5, r5, r0
	ldrb r0, [r5]
	lsl r0, r0, #8
	mov r1, r8
	orr r1, r1, r0
	mov r8, r1
	bl GetRandomInt
	and r4, r4, r0
	add r4, r4, r9
	ldrb r0, [r4]
	add r0, r0, r8
	ldr r2, _080D0BA0  @ =0x0000096C
	add r6, r6, r2
	strh r0, [r6]
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D0B84:
	.4byte gRam
_080D0B88:
	.4byte 0x00000EE2
_080D0B8C:
	.4byte 0x00000F02
_080D0B90:
	.4byte gUnknown_08174A3C
_080D0B94:
	.4byte 0x00000968
_080D0B98:
	.4byte 0x00000ED2
_080D0B9C:
	.4byte 0x00000EF2
_080D0BA0:
	.4byte 0x0000096C
	THUMB_FUNC_END sub_080D0AFC

	THUMB_FUNC_START sub_080D0BA4
sub_080D0BA4: @ 0x080D0BA4
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	add r4, r3, #0
	ldr r0, _080D0BF4  @ =gUnknown_02002325
	ldr r1, _080D0BF8  @ =gUnknown_0200232B
	ldrb r0, [r0]
	ldrb r1, [r1]
	orr r0, r0, r1
	ldr r1, _080D0BFC  @ =gUnknown_02002331
	ldrb r1, [r1]
	orr r0, r0, r1
	ldr r1, _080D0C00  @ =gUnknown_02002337
	ldrb r1, [r1]
	orr r0, r0, r1
	lsr r0, r0, #3
	mov r1, #1
	bic r1, r1, r0
	ldr r2, _080D0C04  @ =gRam
	cmp r1, #0
	bne _080D0BD6
	ldr r5, _080D0C08  @ =0x00000FA2
	add r0, r2, r5
	add r0, r3, r0
	strb r1, [r0]
_080D0BD6:
	ldr r0, _080D0C0C  @ =0x00001062
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r5, _080D0C10  @ =0x00001172
	add r1, r2, r5
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	pop {r4,r5}
	pop {r0}
	bx r0
_080D0BF4:
	.4byte gUnknown_02002325
_080D0BF8:
	.4byte gUnknown_0200232B
_080D0BFC:
	.4byte gUnknown_02002331
_080D0C00:
	.4byte gUnknown_02002337
_080D0C04:
	.4byte gRam
_080D0C08:
	.4byte 0x00000FA2
_080D0C0C:
	.4byte 0x00001062
_080D0C10:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080D0BA4

	THUMB_FUNC_START sub_080D0C14
sub_080D0C14: @ 0x080D0C14
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r9, r6
	ldr r7, _080D0CD0  @ =gRam
	ldr r1, _080D0CD4  @ =0x00001172
	add r0, r7, r1
	add r0, r6, r0
	mov r1, #1
	strb r1, [r0]
	ldr r2, _080D0CD8  @ =0x00001142
	add r0, r7, r2
	add r0, r6, r0
	mov r1, #16
	strb r1, [r0]
	ldr r1, _080D0CDC  @ =0x00001082
	add r0, r7, r1
	add r4, r6, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080D0C66
	sub r2, r2, #32
	add r3, r7, r2
	add r3, r6, r3
	ldr r1, _080D0CE0  @ =0x00000996
	add r0, r7, r1
	ldrb r1, [r0]
	lsr r1, r1, #4
	mov r0, #3
	and r1, r1, r0
	add r1, r1, #1
	lsl r1, r1, #1
	ldrb r2, [r3]
	mov r0, #241
	and r0, r0, r2
	orr r1, r1, r0
	strb r1, [r3]
_080D0C66:
	add r0, r6, #0
	bl sub_080C58F0
	add r0, r6, #0
	bl sub_080D05AC
	add r0, r6, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D0C80
	b _080D0E12
_080D0C80:
	add r0, r6, #0
	bl sub_080D057C
	add r0, r6, #0
	bl Sprite3_Move
	ldr r0, _080D0CE4  @ =0x00000F92
	add r2, r7, r0
	add r2, r6, r2
	ldr r1, _080D0CE0  @ =0x00000996
	add r1, r1, r7
	mov r8, r1
	ldrb r1, [r1]
	add r0, r6, #0
	eor r0, r0, r1
	lsr r0, r0, #1
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldrb r0, [r4]
	cmp r0, #0
	beq _080D0CB2
	add r0, r6, #0
	bl sub_080C9400
_080D0CB2:
	ldr r2, _080D0CE8  @ =0x00000F72
	add r1, r7, r2
	add r1, r6, r1
	ldr r2, _080D0CEC  @ =gUnknown_08174A54
	ldrb r0, [r4]
	add r0, r0, r2
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bcc _080D0CF4
	ldr r1, _080D0CF0  @ =0x00000E75
	add r0, r7, r1
	add r0, r6, r0
	mov r1, #64
	b _080D0E10
_080D0CD0:
	.4byte gRam
_080D0CD4:
	.4byte 0x00001172
_080D0CD8:
	.4byte 0x00001142
_080D0CDC:
	.4byte 0x00001082
_080D0CE0:
	.4byte 0x00000996
_080D0CE4:
	.4byte 0x00000F92
_080D0CE8:
	.4byte 0x00000F72
_080D0CEC:
	.4byte gUnknown_08174A54
_080D0CF0:
	.4byte 0x00000E75
_080D0CF4:
	ldr r2, _080D0D2C  @ =0x000010E2
	add r0, r7, r2
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D0D02
	b _080D0E12
_080D0D02:
	mov r0, sp
	add r1, r6, #0
	bl sub_080C4948
	mov r0, sp
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D0D34
	add r0, r6, #0
	mov r1, #203
	mov r2, #0
	bl sub_080C9564
	ldr r0, _080D0D30  @ =0x00000F52
	add r1, r7, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080D0E12
	.byte 0x00
	.byte 0x00
_080D0D2C:
	.4byte 0x000010E2
_080D0D30:
	.4byte 0x00000F52
_080D0D34:
	mov r2, r8
	ldrb r1, [r2]
	add r0, r6, #0
	eor r0, r0, r1
	mov r4, #3
	and r0, r0, r4
	cmp r0, #0
	bne _080D0E12
	add r0, r6, #0
	bl sub_080D0A1C
	cmp r0, #0
	bne _080D0D94
	mov r0, r8
	ldrb r1, [r0]
	add r0, r6, #0
	eor r0, r0, r1
	and r0, r0, r4
	cmp r0, #0
	bne _080D0E12
	bl GetRandomInt
	ldr r1, _080D0DE4  @ =0x000016C4
	add r2, r7, r1
	ldr r5, _080D0DE8  @ =gUnknown_08174A3C
	mov r4, #3
	add r1, r4, #0
	and r1, r1, r0
	add r1, r1, r5
	ldrh r0, [r2]
	ldrb r1, [r1]
	add r0, r0, r1
	ldr r2, _080D0DEC  @ =0x00000968
	add r1, r7, r2
	strh r0, [r1]
	bl GetRandomInt
	mov r2, #182
	lsl r2, r2, #5
	add r1, r7, r2
	and r4, r4, r0
	add r4, r4, r5
	ldrh r0, [r1]
	ldrb r4, [r4]
	add r0, r0, r4
	ldr r2, _080D0DF0  @ =0x0000096C
	add r1, r7, r2
	strh r0, [r1]
_080D0D94:
	mov r1, r8
	ldrb r0, [r1]
	add r1, r6, #0
	eor r1, r1, r0
	mov r0, #7
	and r1, r1, r0
	cmp r1, #0
	bne _080D0E12
	add r0, r6, #0
	mov r1, #32
	bl sub_080C2DCC
	ldr r2, _080D0DF4  @ =0x00000F12
	add r0, r7, r2
	add r0, r6, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r7, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D0DF8  @ =0x00000F22
	add r0, r7, r1
	add r0, r6, r0
	ldr r1, _080D0DFC  @ =0x00000961
	add r2, r7, r1
	ldrb r1, [r2]
	strb r1, [r0]
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080D0E04
	ldr r2, _080D0E00  @ =0x00001122
	add r0, r7, r2
	add r0, r6, r0
	ldrb r1, [r0]
	mov r2, #64
	orr r1, r1, r2
	b _080D0E10
	.byte 0x00
	.byte 0x00
_080D0DE4:
	.4byte 0x000016C4
_080D0DE8:
	.4byte gUnknown_08174A3C
_080D0DEC:
	.4byte 0x00000968
_080D0DF0:
	.4byte 0x0000096C
_080D0DF4:
	.4byte 0x00000F12
_080D0DF8:
	.4byte 0x00000F22
_080D0DFC:
	.4byte 0x00000961
_080D0E00:
	.4byte 0x00001122
_080D0E04:
	ldr r1, _080D0E20  @ =0x00001122
	add r0, r7, r1
	add r0, r0, r9
	ldrb r2, [r0]
	mov r1, #191
	and r1, r1, r2
_080D0E10:
	strb r1, [r0]
_080D0E12:
	add sp, sp, #4
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080D0E20:
	.4byte 0x00001122
	THUMB_FUNC_END sub_080D0C14

	THUMB_FUNC_START sub_080D0E24
sub_080D0E24: @ 0x080D0E24
	push {r4,r5,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #121
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	bge _080D0E3E
	mov r0, #1
	neg r0, r0
	b _080D0EB2
_080D0E3E:
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r5, _080D0EB8  @ =gRam
	ldr r1, _080D0EBC  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r2, #1
	strb r2, [r0]
	ldr r3, _080D0EC0  @ =0x00000FC2
	add r0, r5, r3
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
	sub r3, r3, #96
	add r0, r5, r3
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080D0EC4  @ =0x000010E2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #96
	strb r1, [r0]
	ldr r3, _080D0EC8  @ =0x00001082
	add r0, r5, r3
	add r0, r4, r0
	strb r2, [r0]
	bl GetRandomInt
	mov r1, #7
	and r1, r1, r0
	ldr r0, _080D0ECC  @ =0x00000F22
	add r2, r5, r0
	add r2, r4, r2
	ldr r0, _080D0ED0  @ =gUnknown_08174A28
	add r1, r1, r0
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r2, _080D0ED4  @ =0x00000F12
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	mov r1, #0
	ldr r3, _080D0ED8  @ =0x000009DA
	add r0, r5, r3
	ldrh r0, [r0]
	cmp r0, #173
	bne _080D0EA2
	mov r1, #1
_080D0EA2:
	cmp r1, #0
	beq _080D0EB0
	ldr r1, _080D0EDC  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #216
	strb r1, [r0]
_080D0EB0:
	add r0, r4, #0
_080D0EB2:
	pop {r4,r5}
	pop {r1}
	bx r1
_080D0EB8:
	.4byte gRam
_080D0EBC:
	.4byte 0x00000F52
_080D0EC0:
	.4byte 0x00000FC2
_080D0EC4:
	.4byte 0x000010E2
_080D0EC8:
	.4byte 0x00001082
_080D0ECC:
	.4byte 0x00000F22
_080D0ED0:
	.4byte gUnknown_08174A28
_080D0ED4:
	.4byte 0x00000F12
_080D0ED8:
	.4byte 0x000009DA
_080D0EDC:
	.4byte 0x00000FD2
	THUMB_FUNC_END sub_080D0E24

	THUMB_FUNC_START sub_080D0EE0
sub_080D0EE0: @ 0x080D0EE0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r0, #178
	mov r1, #0
	bl sub_080CA538
	add r6, r0, #0
	cmp r6, #0
	bge _080D0EFA
	mov r0, #1
	neg r0, r0
	b _080D0F9E
_080D0EFA:
	ldr r7, _080D0FA4  @ =gRam
	ldr r1, _080D0FA8  @ =0x000010F2
	add r0, r7, r1
	add r0, r6, r0
	mov r2, #161
	lsl r2, r2, #4
	add r1, r7, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r3, _080D0FAC  @ =0x000016C4
	add r0, r7, r3
	ldrh r1, [r0]
	add r1, r1, #8
	lsl r1, r1, #16
	lsr r1, r1, #16
	mov r2, #182
	lsl r2, r2, #5
	add r0, r7, r2
	ldrh r2, [r0]
	add r2, r2, #16
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080D0FB0  @ =0x00000EE2
	add r0, r7, r3
	add r0, r6, r0
	strb r1, [r0]
	add r3, r3, #32
	add r0, r7, r3
	add r0, r6, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080D0FB4  @ =0x00000ED2
	add r0, r7, r1
	add r0, r6, r0
	strb r2, [r0]
	sub r3, r3, #16
	add r0, r7, r3
	add r0, r6, r0
	lsr r2, r2, #8
	strb r2, [r0]
	cmp r4, #8
	bne _080D0F58
	ldr r1, _080D0FB8  @ =0x00001082
	add r0, r7, r1
	add r0, r6, r0
	mov r1, #1
	strb r1, [r0]
_080D0F58:
	lsl r0, r6, #24
	lsr r0, r0, #24
	bl sub_080D00B0
	bl GetRandomInt
	ldr r3, _080D0FBC  @ =0x00000F22
	add r2, r7, r3
	add r2, r6, r2
	ldr r5, _080D0FC0  @ =gUnknown_08174A30
	mov r4, #7
	add r1, r4, #0
	and r1, r1, r0
	add r1, r1, r5
	ldrb r0, [r1]
	strb r0, [r2]
	bl GetRandomInt
	ldr r2, _080D0FC4  @ =0x00000F12
	add r1, r7, r2
	add r1, r6, r1
	and r4, r4, r0
	add r4, r4, r5
	ldrb r0, [r4]
	strb r0, [r1]
	ldr r3, _080D0FC8  @ =0x00000FC2
	add r0, r7, r3
	add r0, r6, r0
	mov r1, #64
	strb r1, [r0]
	add r2, r2, #80
	add r0, r7, r2
	add r0, r6, r0
	strb r1, [r0]
	mov r0, #0
_080D0F9E:
	pop {r4-r7}
	pop {r1}
	bx r1
_080D0FA4:
	.4byte gRam
_080D0FA8:
	.4byte 0x000010F2
_080D0FAC:
	.4byte 0x000016C4
_080D0FB0:
	.4byte 0x00000EE2
_080D0FB4:
	.4byte 0x00000ED2
_080D0FB8:
	.4byte 0x00001082
_080D0FBC:
	.4byte 0x00000F22
_080D0FC0:
	.4byte gUnknown_08174A30
_080D0FC4:
	.4byte 0x00000F12
_080D0FC8:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080D0EE0

	THUMB_FUNC_START sub_080D0FCC
sub_080D0FCC: @ 0x080D0FCC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D0FEC  @ =gUnknown_08174A48
	ldr r1, _080D0FF0  @ =gRam
	ldr r3, _080D0FF4  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080D0FEC:
	.4byte gUnknown_08174A48
_080D0FF0:
	.4byte gRam
_080D0FF4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D0FCC

	THUMB_FUNC_START sub_080D0FF8
sub_080D0FF8: @ 0x080D0FF8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r4, _080D103C  @ =gRam
	ldr r1, _080D1040  @ =0x00001142
	add r0, r4, r1
	add r0, r2, r0
	mov r1, #16
	strb r1, [r0]
	ldr r1, _080D1044  @ =0x00001082
	add r0, r4, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D1036
	ldr r0, _080D1048  @ =0x00001122
	add r3, r4, r0
	add r3, r2, r3
	ldr r1, _080D104C  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	lsr r1, r1, #4
	mov r0, #3
	and r1, r1, r0
	add r1, r1, #1
	lsl r1, r1, #1
	ldrb r2, [r3]
	mov r0, #241
	and r0, r0, r2
	orr r1, r1, r0
	strb r1, [r3]
_080D1036:
	pop {r4}
	pop {r0}
	bx r0
_080D103C:
	.4byte gRam
_080D1040:
	.4byte 0x00001142
_080D1044:
	.4byte 0x00001082
_080D1048:
	.4byte 0x00001122
_080D104C:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080D0FF8

	THUMB_FUNC_START sub_080D1050
sub_080D1050: @ 0x080D1050
	ldr r0, _080D1070  @ =gUnknown_02002325
	ldr r2, _080D1074  @ =gUnknown_0200232B
	ldrb r1, [r0]
	ldrb r0, [r2]
	orr r1, r1, r0
	ldr r0, _080D1078  @ =gUnknown_02002331
	ldrb r0, [r0]
	orr r1, r1, r0
	ldr r0, _080D107C  @ =gUnknown_02002337
	ldrb r0, [r0]
	orr r1, r1, r0
	lsr r1, r1, #3
	mov r0, #1
	bic r0, r0, r1
	bx lr
	.byte 0x00
	.byte 0x00
_080D1070:
	.4byte gUnknown_02002325
_080D1074:
	.4byte gUnknown_0200232B
_080D1078:
	.4byte gUnknown_02002331
_080D107C:
	.4byte gUnknown_02002337
	THUMB_FUNC_END sub_080D1050

	THUMB_FUNC_START sub_080D1080
sub_080D1080: @ 0x080D1080
	push {r4,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080D10C8  @ =gRam
	ldr r1, _080D10CC  @ =0x00001062
	add r0, r2, r1
	add r0, r3, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080D10C2
	ldr r4, _080D10D0  @ =0x00000FA2
	add r0, r2, r4
	add r0, r3, r0
	strb r1, [r0]
	ldr r0, _080D10D4  @ =gUnknown_02002325
	ldr r2, _080D10D8  @ =gUnknown_0200232B
	ldrb r1, [r0]
	ldrb r0, [r2]
	orr r1, r1, r0
	ldr r0, _080D10DC  @ =gUnknown_02002331
	ldrb r0, [r0]
	orr r1, r1, r0
	ldr r0, _080D10E0  @ =gUnknown_02002337
	ldrb r0, [r0]
	orr r1, r1, r0
	lsr r1, r1, #3
	mov r0, #1
	bic r0, r0, r1
	cmp r0, #0
	beq _080D10C2
	add r0, r3, #0
	bl sub_080D0E24
_080D10C2:
	pop {r4}
	pop {r0}
	bx r0
_080D10C8:
	.4byte gRam
_080D10CC:
	.4byte 0x00001062
_080D10D0:
	.4byte 0x00000FA2
_080D10D4:
	.4byte gUnknown_02002325
_080D10D8:
	.4byte gUnknown_0200232B
_080D10DC:
	.4byte gUnknown_02002331
_080D10E0:
	.4byte gUnknown_02002337
	THUMB_FUNC_END sub_080D1080

	THUMB_FUNC_START sub_080D10E4
sub_080D10E4: @ 0x080D10E4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080D161C
	ldr r5, _080D1178  @ =gRam
	ldr r0, _080D117C  @ =0x00000F62
	add r2, r5, r0
	add r2, r4, r2
	ldr r1, _080D1180  @ =0x00000965
	add r0, r5, r1
	ldr r3, _080D1184  @ =0x00000961
	add r1, r5, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	orr r0, r0, r1
	strb r0, [r2]
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D1172
	add r0, r4, #0
	bl sub_080D1404
	add r0, r4, #0
	bl sub_080C5080
	bl sub_0809E3CC
	cmp r0, #0
	bne _080D1172
	bl GetRandomInt
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D1148
	ldr r1, _080D1188  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r2, _080D118C  @ =0x00000FC2
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #20
	strb r1, [r0]
_080D1148:
	ldr r3, _080D118C  @ =0x00000FC2
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080D115C
	ldr r2, _080D1188  @ =0x00000F92
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
_080D115C:
	ldr r1, _080D1190  @ =gUnknown_08174A58
	ldr r3, _080D1194  @ =0x00000F52
	add r0, r5, r3
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r6, #0
	bl _call_via_r1
_080D1172:
	pop {r4-r6}
	pop {r0}
	bx r0
_080D1178:
	.4byte gRam
_080D117C:
	.4byte 0x00000F62
_080D1180:
	.4byte 0x00000965
_080D1184:
	.4byte 0x00000961
_080D1188:
	.4byte 0x00000F92
_080D118C:
	.4byte 0x00000FC2
_080D1190:
	.4byte gUnknown_08174A58
_080D1194:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D10E4

	THUMB_FUNC_START sub_080D1198
sub_080D1198: @ 0x080D1198
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080D11D4  @ =gRam
	ldr r1, _080D11D8  @ =0x00000F62
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D11BA
	ldr r1, _080D11DC  @ =0x00001062
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D1208
_080D11BA:
	ldr r1, _080D11E0  @ =0x00001662
	add r0, r5, r1
	ldrb r1, [r0]
	mov r0, #2
	and r0, r0, r1
	cmp r0, #0
	beq _080D11E4
	add r0, r4, #0
	mov r1, #215
	mov r2, sp
	bl sub_080C9164
	b _080D1212
_080D11D4:
	.4byte gRam
_080D11D8:
	.4byte 0x00000F62
_080D11DC:
	.4byte 0x00001062
_080D11E0:
	.4byte 0x00001662
_080D11E4:
	add r0, r4, #0
	mov r1, #212
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D1212
	ldr r0, _080D1204  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080D1212
	.byte 0x00
	.byte 0x00
_080D1204:
	.4byte 0x00000F52
_080D1208:
	ldr r1, _080D121C  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
_080D1212:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D121C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D1198

	THUMB_FUNC_START sub_080D1220
sub_080D1220: @ 0x080D1220
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r6, _080D124C  @ =gRam
	ldr r1, _080D1250  @ =0x00001AE2
	add r0, r6, r1
	ldrb r5, [r0]
	cmp r5, #0
	beq _080D1258
	add r0, r4, #0
	mov r1, #214
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080D1254  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080D128E
_080D124C:
	.4byte gRam
_080D1250:
	.4byte 0x00001AE2
_080D1254:
	.4byte 0x00000F52
_080D1258:
	bl sub_080AA868
	cmp r0, #99
	bgt _080D1278
	add r0, r4, #0
	mov r1, #214
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080D1274  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	b _080D128E
_080D1274:
	.4byte 0x00000F52
_080D1278:
	add r0, r7, #0
	mov r1, #213
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080D1298  @ =0x00000F52
	add r1, r6, r0
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D128E:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D1298:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D1220

	THUMB_FUNC_START sub_080D129C
sub_080D129C: @ 0x080D129C
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080D12BC  @ =gRam
	ldr r1, _080D12C0  @ =0x00001062
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bge _080D12C4
	add r0, r4, #0
	mov r1, #217
	b _080D12C8
_080D12BC:
	.4byte gRam
_080D12C0:
	.4byte 0x00001062
_080D12C4:
	add r0, r4, #0
	mov r1, #216
_080D12C8:
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080D12E4  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D12E4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D129C

	THUMB_FUNC_START sub_080D12E8
sub_080D12E8: @ 0x080D12E8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r7, _080D1318  @ =gRam
	ldr r1, _080D131C  @ =0x00001062
	add r0, r7, r1
	add r5, r6, r0
	ldrb r1, [r5]
	mov r0, #0
	ldrsb r0, [r5, r0]
	cmp r0, #0
	bge _080D1324
	mov r0, #15
	and r1, r1, r0
	ldr r2, _080D1320  @ =0x00000FA2
	add r0, r7, r2
	add r0, r1, r0
	mov r4, #0
	strb r4, [r0]
	add r0, r6, #0
	bl sub_080D14F0
	b _080D1334
	.byte 0x00
	.byte 0x00
_080D1318:
	.4byte gRam
_080D131C:
	.4byte 0x00001062
_080D1320:
	.4byte 0x00000FA2
_080D1324:
	add r0, r7, r1
	ldr r2, _080D1344  @ =0x00000FA1
	add r0, r0, r2
	mov r4, #0
	strb r4, [r0]
	add r0, r6, #0
	bl sub_080D134C
_080D1334:
	strb r4, [r5]
	ldr r1, _080D1348  @ =0x00000F52
	add r0, r7, r1
	add r0, r6, r0
	strb r4, [r0]
	pop {r4-r7}
	pop {r0}
	bx r0
_080D1344:
	.4byte 0x00000FA1
_080D1348:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D12E8

	THUMB_FUNC_START sub_080D134C
sub_080D134C: @ 0x080D134C
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	mov r1, #11
	bl sub_080CF140
	mov r6, #4
	ldr r5, _080D13E0  @ =gRam
	ldr r0, _080D13E4  @ =0x000010E2
	add r0, r0, r5
	mov r8, r0
_080D1368:
	mov r0, #219
	add r1, r7, #0
	bl sub_080CA538
	lsl r0, r0, #24
	lsr r4, r0, #24
	lsl r6, r6, #24
	cmp r0, #0
	blt _080D13CA
	add r0, r4, #0
	bl sub_080CAE50
	ldr r2, _080D13E8  @ =0x00000EE2
	add r1, r5, r2
	add r1, r4, r1
	mov r2, #150
	lsl r2, r2, #4
	add r0, r5, r2
	ldrb r0, [r0]
	add r0, r0, #4
	strb r0, [r1]
	ldr r1, _080D13EC  @ =0x00000D74
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r2, _080D13F0  @ =0x00000F22
	add r1, r5, r2
	add r1, r4, r1
	ldr r0, _080D13F4  @ =gUnknown_08174A8C
	asr r2, r6, #24
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D13F8  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080D13FC  @ =gUnknown_08174A91
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r1, _080D1400  @ =0x00001152
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	mov r2, r8
	add r0, r4, r2
	strb r1, [r0]
_080D13CA:
	mov r1, #255
	lsl r1, r1, #24
	add r0, r6, r1
	lsr r6, r0, #24
	cmp r0, #0
	bge _080D1368
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080D13E0:
	.4byte gRam
_080D13E4:
	.4byte 0x000010E2
_080D13E8:
	.4byte 0x00000EE2
_080D13EC:
	.4byte 0x00000D74
_080D13F0:
	.4byte 0x00000F22
_080D13F4:
	.4byte gUnknown_08174A8C
_080D13F8:
	.4byte 0x00000F12
_080D13FC:
	.4byte gUnknown_08174A91
_080D1400:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080D134C

	THUMB_FUNC_START sub_080D1404
sub_080D1404: @ 0x080D1404
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r3, r0, #24
	mov r1, #15
	ldr r2, _080D14AC  @ =gRam
	add r6, r2, #0
	mov r7, #16
	ldr r4, _080D14B0  @ =0x00001062
	add r0, r2, r4
	add r0, r0, r3
	mov r8, r0
_080D1420:
	lsl r0, r1, #24
	asr r4, r0, #24
	ldr r5, _080D14B4  @ =0x00000FA2
	add r1, r2, r5
	add r1, r4, r1
	ldrb r1, [r1]
	add r5, r0, #0
	cmp r1, #0
	beq _080D14D8
	ldr r1, _080D14B8  @ =0x00000FF2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #210
	bne _080D14D8
	ldr r6, _080D14BC  @ =0x00000EE2
	add r0, r2, r6
	add r0, r3, r0
	ldrb r1, [r0]
	mov r6, #150
	lsl r6, r6, #4
	add r0, r2, r6
	mov r6, #0
	mov r9, r6
	strb r1, [r0]
	ldr r1, _080D14C0  @ =0x00000F02
	add r0, r2, r1
	add r0, r3, r0
	ldrb r1, [r0]
	mov r6, #151
	lsl r6, r6, #4
	add r0, r2, r6
	strb r1, [r0]
	ldr r1, _080D14C4  @ =0x00000964
	add r0, r2, r1
	strb r7, [r0]
	ldr r6, _080D14C8  @ =0x00000ED2
	add r0, r2, r6
	add r0, r3, r0
	ldrb r1, [r0]
	ldr r6, _080D14CC  @ =0x00000961
	add r0, r2, r6
	strb r1, [r0]
	ldr r1, _080D14D0  @ =0x00000EF2
	add r0, r2, r1
	add r0, r3, r0
	ldrb r1, [r0]
	ldr r3, _080D14D4  @ =0x00000971
	add r0, r2, r3
	strb r1, [r0]
	add r6, r6, #4
	add r0, r2, r6
	strb r7, [r0]
	lsr r0, r5, #24
	bl sub_080C4574
	bl sub_080C466C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D14E4
	mov r0, #128
	neg r0, r0
	add r1, r0, #0
	add r0, r4, #0
	orr r0, r0, r1
	mov r1, r8
	strb r0, [r1]
	b _080D14E4
	.byte 0x00
	.byte 0x00
_080D14AC:
	.4byte gRam
_080D14B0:
	.4byte 0x00001062
_080D14B4:
	.4byte 0x00000FA2
_080D14B8:
	.4byte 0x00000FF2
_080D14BC:
	.4byte 0x00000EE2
_080D14C0:
	.4byte 0x00000F02
_080D14C4:
	.4byte 0x00000964
_080D14C8:
	.4byte 0x00000ED2
_080D14CC:
	.4byte 0x00000961
_080D14D0:
	.4byte 0x00000EF2
_080D14D4:
	.4byte 0x00000971
_080D14D8:
	mov r4, #255
	lsl r4, r4, #24
	add r0, r5, r4
	lsr r1, r0, #24
	cmp r0, #0
	bge _080D1420
_080D14E4:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D1404

	THUMB_FUNC_START sub_080D14F0
sub_080D14F0: @ 0x080D14F0
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	mov r1, #11
	bl sub_080CF140
	mov r2, #4
	ldr r6, _080D1588  @ =gRam
	ldr r0, _080D158C  @ =0x000010E2
	add r0, r0, r6
	mov r8, r0
_080D150C:
	ldr r1, _080D1590  @ =gUnknown_08174A96
	lsl r0, r2, #24
	asr r5, r0, #24
	add r1, r5, r1
	ldrb r0, [r1]
	add r1, r7, #0
	bl sub_080CA538
	lsl r0, r0, #24
	lsr r4, r0, #24
	cmp r0, #0
	blt _080D1572
	add r0, r4, #0
	bl sub_080CAE50
	ldr r2, _080D1594  @ =0x00000EE2
	add r1, r6, r2
	add r1, r4, r1
	mov r2, #150
	lsl r2, r2, #4
	add r0, r6, r2
	ldrb r0, [r0]
	add r0, r0, #4
	strb r0, [r1]
	ldr r1, _080D1598  @ =0x00000D74
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r2, _080D159C  @ =0x00000F22
	add r1, r6, r2
	add r1, r4, r1
	ldr r0, _080D15A0  @ =gUnknown_08174A8C
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D15A4  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldr r0, _080D15A8  @ =gUnknown_08174A91
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080D15AC  @ =0x00001152
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	mov r2, r8
	add r0, r4, r2
	strb r1, [r0]
_080D1572:
	sub r0, r5, #1
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r0, #0
	bge _080D150C
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D1588:
	.4byte gRam
_080D158C:
	.4byte 0x000010E2
_080D1590:
	.4byte gUnknown_08174A96
_080D1594:
	.4byte 0x00000EE2
_080D1598:
	.4byte 0x00000D74
_080D159C:
	.4byte 0x00000F22
_080D15A0:
	.4byte gUnknown_08174A8C
_080D15A4:
	.4byte 0x00000F12
_080D15A8:
	.4byte gUnknown_08174A91
_080D15AC:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080D14F0

	THUMB_FUNC_START sub_080D15B0
sub_080D15B0: @ 0x080D15B0
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080D10E4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D15B0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D15C0
sub_080D15C0: @ 0x080D15C0
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080D10E4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D15C0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D15D0
sub_080D15D0: @ 0x080D15D0
	push {r4-r6,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080D160C  @ =gRam
	ldr r1, _080D1610  @ =0x00001776
	add r0, r5, r1
	mov r6, #0
	strb r6, [r0]
	mov r0, #22
	bl sub_080A1588
	ldr r0, _080D1614  @ =0x00001662
	add r2, r5, r0
	ldrb r1, [r2]
	mov r0, #2
	orr r0, r0, r1
	strb r0, [r2]
	mov r0, #100
	neg r0, r0
	bl sub_080AA83C
	ldr r1, _080D1618  @ =0x00000F52
	add r5, r5, r1
	add r4, r4, r5
	strb r6, [r4]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D160C:
	.4byte gRam
_080D1610:
	.4byte 0x00001776
_080D1614:
	.4byte 0x00001662
_080D1618:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D15D0

	THUMB_FUNC_START sub_080D161C
sub_080D161C: @ 0x080D161C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080D1658  @ =gRam
	ldr r1, _080D165C  @ =0x0000096C
	add r2, r0, r1
	mov r3, #0
	mov r1, #2
	strb r1, [r2]
	ldr r2, _080D1660  @ =0x0000096D
	add r1, r0, r2
	strb r3, [r1]
	ldr r1, _080D1664  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080D1668  @ =gUnknown_08174A6C
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D1658:
	.4byte gRam
_080D165C:
	.4byte 0x0000096C
_080D1660:
	.4byte 0x0000096D
_080D1664:
	.4byte 0x00000F92
_080D1668:
	.4byte gUnknown_08174A6C
	THUMB_FUNC_END sub_080D161C

	THUMB_FUNC_START sub_080D166C
sub_080D166C: @ 0x080D166C
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080D17F4
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r7, r0, #24
	cmp r7, #0
	bne _080D1728
	ldr r6, _080D1734  @ =gRam
	ldr r1, _080D1738  @ =0x00001132
	add r0, r6, r1
	add r4, r5, r0
	ldrb r2, [r4]
	mov r8, r2
	mov r0, #2
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D16B4
	bl sub_080AF16C
	ldr r1, _080D173C  @ =0x00001719
	add r0, r6, r1
	strb r7, [r0]
	bl sub_08093078
_080D16B4:
	mov r2, r8
	strb r2, [r4]
	ldr r0, _080D1740  @ =0x00000996
	add r4, r6, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D16D4
	bl GetRandomInt
	ldr r1, _080D1744  @ =0x00000F62
	add r2, r6, r1
	add r2, r5, r2
	mov r1, #1
	and r1, r1, r0
	add r1, r1, #2
	strb r1, [r2]
_080D16D4:
	ldr r2, _080D1744  @ =0x00000F62
	add r0, r6, r2
	add r0, r5, r0
	ldrb r1, [r0]
	mov r0, #150
	lsl r0, r0, #4
	add r3, r6, r0
	strb r1, [r3]
	ldrb r2, [r4]
	lsl r0, r1, #24
	cmp r0, #0
	blt _080D16FE
	add r4, r3, #0
	add r3, r1, #0
_080D16F0:
	lsr r2, r2, #1
	sub r1, r3, #1
	add r3, r1, #0
	lsl r0, r1, #24
	cmp r0, #0
	bge _080D16F0
	strb r1, [r4]
_080D16FE:
	ldr r1, _080D1748  @ =0x00000F92
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #7
	and r2, r2, r1
	strb r2, [r0]
	bl sub_0809E3CC
	cmp r0, #0
	bne _080D1728
	ldr r1, _080D174C  @ =gUnknown_08174A9C
	ldr r2, _080D1750  @ =0x00000F52
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
_080D1728:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D1734:
	.4byte gRam
_080D1738:
	.4byte 0x00001132
_080D173C:
	.4byte 0x00001719
_080D1740:
	.4byte 0x00000996
_080D1744:
	.4byte 0x00000F62
_080D1748:
	.4byte 0x00000F92
_080D174C:
	.4byte gUnknown_08174A9C
_080D1750:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D166C

	THUMB_FUNC_START sub_080D1754
sub_080D1754: @ 0x080D1754
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r7, _080D178C  @ =gRam
	ldr r1, _080D1790  @ =0x00000545
	add r0, r7, r1
	ldrb r1, [r0]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	beq _080D1780
	ldr r0, _080D1794  @ =0x00000A4E
	add r6, r7, r0
	mov r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #5
	bne _080D1780
	ldr r5, _080D1798  @ =gUnknown_02002324
	ldrb r0, [r5]
	cmp r0, #1
	beq _080D179C
_080D1780:
	add r0, r4, #0
	mov r1, #79
	mov r2, sp
	bl sub_080C9164
	b _080D17E2
_080D178C:
	.4byte gRam
_080D1790:
	.4byte 0x00000545
_080D1794:
	.4byte 0x00000A4E
_080D1798:
	.4byte gUnknown_02002324
_080D179C:
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D17E2
	mov r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #5
	bne _080D17E2
	ldrb r0, [r5]
	cmp r0, #1
	bne _080D17E2
	mov r0, #0
	strb r0, [r5]
	ldr r2, _080D17EC  @ =gUnknown_02002212
	ldrb r0, [r2]
	mov r1, #128
	orr r0, r0, r1
	strb r0, [r2]
	bl sub_080AA724
	add r0, r4, #0
	mov r1, #78
	mov r2, sp
	bl sub_080C9564
	add r0, r4, #0
	mov r1, #63
	bl sub_080CF018
	ldr r0, _080D17F0  @ =0x00000CB4
	add r1, r7, r0
	mov r0, #0
	strb r0, [r1]
_080D17E2:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D17EC:
	.4byte gUnknown_02002212
_080D17F0:
	.4byte 0x00000CB4
	THUMB_FUNC_END sub_080D1754

	THUMB_FUNC_START sub_080D17F4
sub_080D17F4: @ 0x080D17F4
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #20
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #8]
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	ldr r2, [sp, #8]
	bl sub_080C5ACC
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r10, r0
	cmp r0, #0
	beq _080D181E
	b _080D19E0
_080D181E:
	ldr r0, [sp, #8]
	bl sub_080C6340
	ldr r6, _080D19F0  @ =gRam
	ldr r1, _080D19F4  @ =0x00000F92
	add r0, r6, r1
	ldr r2, [sp, #8]
	add r0, r2, r0
	ldrb r0, [r0]
	str r0, [sp, #12]
	ldr r3, _080D19F8  @ =0x00000968
	add r0, r6, r3
	mov r1, #0
	ldrsb r1, [r0, r1]
	ldr r4, _080D19FC  @ =0x00000969
	add r0, r6, r4
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	lsl r1, r1, #16
	lsr r1, r1, #16
	str r1, [sp, #16]
	add r0, sp, #4
	ldrb r1, [r0]
	ldr r5, _080D1A00  @ =gUnknown_03003E74
	ldrh r0, [r5]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r7, _080D1A04  @ =gUnknown_08174AAC
	ldr r1, [sp, #12]
	lsl r5, r1, #4
	add r2, r5, r7
	sub r3, r3, #8
	add r3, r3, r6
	mov r9, r3
	ldrh r1, [r3]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	add r3, r7, #2
	add r3, r5, r3
	sub r4, r4, #5
	add r4, r4, r6
	mov r8, r4
	ldrh r2, [r4]
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	add r4, r7, #4
	add r4, r5, r4
	add r3, r7, #6
	add r3, r5, r3
	ldrh r3, [r3]
	lsl r3, r3, #8
	ldrh r4, [r4]
	add r3, r3, r4
	ldr r4, [sp, #16]
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, r10
	str r4, [sp]
	bl sub_080C6004
	add r0, sp, #4
	ldrb r1, [r0]
	ldr r2, _080D1A00  @ =gUnknown_03003E74
	ldrh r0, [r2]
	add r0, r0, r1
	add r0, r0, #1
	lsl r0, r0, #16
	lsr r0, r0, #16
	add r2, r7, #0
	add r2, r2, #8
	add r2, r5, r2
	mov r3, r9
	ldrh r1, [r3]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	add r3, r7, #0
	add r3, r3, #10
	add r3, r5, r3
	mov r4, r8
	ldrh r2, [r4]
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	add r4, r7, #0
	add r4, r4, #12
	add r4, r5, r4
	add r3, r7, #0
	add r3, r3, #14
	add r5, r5, r3
	ldrh r3, [r5]
	lsl r3, r3, #8
	ldrh r4, [r4]
	add r3, r3, r4
	ldr r5, [sp, #16]
	orr r3, r3, r5
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, r10
	str r4, [sp]
	bl sub_080C6004
	mov r4, #0
	ldr r7, _080D1A08  @ =gUnknown_08174B2C
_080D1904:
	ldr r5, _080D1A00  @ =gUnknown_03003E74
	mov r10, r5
	add r0, sp, #4
	ldrb r1, [r0]
	ldrh r0, [r5]
	add r0, r0, r1
	add r0, r0, #2
	lsl r5, r4, #24
	asr r5, r5, #24
	add r0, r5, r0
	lsl r0, r0, #16
	lsr r0, r0, #16
	lsl r6, r5, #3
	add r2, r6, r7
	ldr r1, _080D19F0  @ =gRam
	mov r3, #150
	lsl r3, r3, #4
	add r1, r1, r3
	mov r8, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	add r3, r7, #2
	add r3, r6, r3
	ldr r4, _080D1A0C  @ =gUnknown_03002B94
	ldrh r2, [r4]
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	add r4, r7, #4
	add r4, r6, r4
	ldr r3, _080D1A10  @ =gUnknown_08174B32
	add r6, r6, r3
	ldrh r3, [r6]
	lsl r3, r3, #8
	ldrh r4, [r4]
	add r3, r3, r4
	ldr r4, [sp, #16]
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #2
	mov r9, r4
	str r4, [sp]
	bl sub_080C6004
	add r5, r5, #1
	lsl r5, r5, #24
	lsr r4, r5, #24
	asr r5, r5, #24
	cmp r5, #2
	ble _080D1904
	ldr r0, [sp, #12]
	sub r0, r0, #3
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r4, #0
	cmp r0, #2
	bhi _080D1982
	mov r4, #1
_080D1982:
	add r0, sp, #4
	ldrb r1, [r0]
	mov r5, r10
	ldrh r0, [r5]
	add r0, r0, r1
	add r0, r0, #5
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r6, _080D1A14  @ =gUnknown_08174B44
	lsl r4, r4, #24
	asr r4, r4, #21
	add r2, r4, r6
	mov r3, r8
	ldrh r1, [r3]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	add r3, r6, #2
	add r3, r4, r3
	mov r5, r8
	ldrh r2, [r5, #4]
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	add r5, r6, #4
	add r5, r4, r5
	add r6, r6, #6
	add r4, r4, r6
	ldrh r3, [r4]
	lsl r3, r3, #8
	ldrh r5, [r5]
	add r3, r3, r5
	ldr r4, [sp, #16]
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r5, r9
	str r5, [sp]
	bl sub_080C6004
	ldr r0, [sp, #8]
	mov r1, #255
	mov r2, #5
	bl sub_080C6350
_080D19E0:
	add sp, sp, #20
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080D19F0:
	.4byte gRam
_080D19F4:
	.4byte 0x00000F92
_080D19F8:
	.4byte 0x00000968
_080D19FC:
	.4byte 0x00000969
_080D1A00:
	.4byte gUnknown_03003E74
_080D1A04:
	.4byte gUnknown_08174AAC
_080D1A08:
	.4byte gUnknown_08174B2C
_080D1A0C:
	.4byte gUnknown_03002B94
_080D1A10:
	.4byte gUnknown_08174B32
_080D1A14:
	.4byte gUnknown_08174B44
	THUMB_FUNC_END sub_080D17F4

	THUMB_FUNC_START sub_080D1A18
sub_080D1A18: @ 0x080D1A18
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080D166C
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D1A18

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D1A28
sub_080D1A28: @ 0x080D1A28
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	mov r1, #0
	ldr r0, _080D1A4C  @ =gUnknown_02002324
	ldrb r0, [r0]
	cmp r0, #1
	bne _080D1A3A
	mov r1, #1
_080D1A3A:
	ldr r0, _080D1A50  @ =gUnknown_08174AA4
	lsl r1, r1, #2
	add r1, r1, r0
	ldr r1, [r1]
	add r0, r2, #0
	bl _call_via_r1
	pop {r0}
	bx r0
_080D1A4C:
	.4byte gUnknown_02002324
_080D1A50:
	.4byte gUnknown_08174AA4
	THUMB_FUNC_END sub_080D1A28

	THUMB_FUNC_START sub_080D1A54
sub_080D1A54: @ 0x080D1A54
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r0, _080D1A78  @ =gUnknown_02002324
	ldrb r0, [r0]
	cmp r0, #2
	beq _080D1A8C
	ldr r0, _080D1A7C  @ =gUnknown_02002212
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	blt _080D1A80
	add r0, r1, #0
	mov r1, #77
	b _080D1A84
	.byte 0x00
	.byte 0x00
_080D1A78:
	.4byte gUnknown_02002324
_080D1A7C:
	.4byte gUnknown_02002212
_080D1A80:
	add r0, r1, #0
	mov r1, #78
_080D1A84:
	mov r2, sp
	bl sub_080C9164
	b _080D1A96
_080D1A8C:
	add r0, r1, #0
	mov r1, #77
	mov r2, sp
	bl sub_080C9164
_080D1A96:
	add sp, sp, #4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D1A54

	THUMB_FUNC_START sub_080D1A9C
sub_080D1A9C: @ 0x080D1A9C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D1AC0  @ =gRam
	ldr r3, _080D1AC4  @ =0x00000F52
	add r1, r2, r3
	add r0, r0, r1
	mov r1, #0
	strb r1, [r0]
	ldr r0, _080D1AC8  @ =0x00001776
	add r2, r2, r0
	strb r1, [r2]
	mov r0, #24
	bl sub_080A1588
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D1AC0:
	.4byte gRam
_080D1AC4:
	.4byte 0x00000F52
_080D1AC8:
	.4byte 0x00001776
	THUMB_FUNC_END sub_080D1A9C

	THUMB_FUNC_START sub_080D1ACC
sub_080D1ACC: @ 0x080D1ACC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080D1B24  @ =gRam
	ldr r1, _080D1B28  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	ldr r1, _080D1B2C  @ =0x00001627
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D1B1C
	ldr r0, _080D1B30  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D1B34  @ =0x00000FB2
	add r2, r5, r1
	add r2, r4, r2
	ldrb r0, [r2]
	mov r1, #1
	eor r0, r0, r1
	strb r0, [r2]
	ldr r0, _080D1B38  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r3, _080D1B3C  @ =gUnknown_08174B60
	ldrb r0, [r2]
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080D1B40  @ =0x00000F12
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #248
	strb r1, [r0]
_080D1B1C:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D1B24:
	.4byte gRam
_080D1B28:
	.4byte 0x00000F92
_080D1B2C:
	.4byte 0x00001627
_080D1B30:
	.4byte 0x00000F52
_080D1B34:
	.4byte 0x00000FB2
_080D1B38:
	.4byte 0x00000F22
_080D1B3C:
	.4byte gUnknown_08174B60
_080D1B40:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080D1ACC

	THUMB_FUNC_START sub_080D1B44
sub_080D1B44: @ 0x080D1B44
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C99DC
	ldr r5, _080D1BC8  @ =gRam
	ldr r1, _080D1BCC  @ =0x00001152
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	sub r0, r0, #3
	mov r3, #0
	strb r0, [r1]
	ldr r2, _080D1BD0  @ =0x00001142
	add r0, r5, r2
	add r2, r4, r0
	mov r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	bge _080D1B84
	mov r0, #24
	strb r0, [r1]
	strb r3, [r2]
	ldr r1, _080D1BD4  @ =0x00001052
	add r0, r5, r1
	add r0, r4, r0
	strb r3, [r0]
	ldr r2, _080D1BD8  @ =0x00000F62
	add r0, r5, r2
	add r0, r4, r0
	strb r3, [r0]
_080D1B84:
	ldr r3, _080D1BD4  @ =0x00001052
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #3
	and r1, r1, r0
	cmp r1, #0
	bne _080D1BA8
	ldr r1, _080D1BD8  @ =0x00000F62
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #2
	beq _080D1BA8
	add r0, r0, #1
	strb r0, [r1]
_080D1BA8:
	ldr r0, _080D1BC8  @ =gRam
	ldr r2, _080D1BDC  @ =0x00000F92
	add r1, r0, r2
	add r1, r4, r1
	ldr r2, _080D1BE0  @ =gUnknown_08174B64
	ldr r3, _080D1BD8  @ =0x00000F62
	add r0, r0, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D1BC8:
	.4byte gRam
_080D1BCC:
	.4byte 0x00001152
_080D1BD0:
	.4byte 0x00001142
_080D1BD4:
	.4byte 0x00001052
_080D1BD8:
	.4byte 0x00000F62
_080D1BDC:
	.4byte 0x00000F92
_080D1BE0:
	.4byte gUnknown_08174B64
	THUMB_FUNC_END sub_080D1B44

	THUMB_FUNC_START sub_080D1BE4
sub_080D1BE4: @ 0x080D1BE4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080D1EE4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D1BE4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D1BF4
sub_080D1BF4: @ 0x080D1BF4
	push {r4-r6,lr}
	add r5, r0, #0
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r4, _080D1C40  @ =gRam
	ldr r0, _080D1C44  @ =0x00001122
	add r2, r4, r0
	add r2, r5, r2
	ldrb r0, [r2]
	mov r1, #191
	and r1, r1, r0
	ldr r3, _080D1C48  @ =gUnknown_08174B54
	ldr r6, _080D1C4C  @ =0x00000FB2
	add r0, r4, r6
	add r0, r5, r0
	ldrb r0, [r0]
	add r0, r0, r3
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
	add r0, r5, #0
	bl sub_080C6240
	ldr r1, _080D1C50  @ =gUnknown_08174B58
	ldr r0, _080D1C54  @ =0x00000F52
	add r4, r4, r0
	add r4, r5, r4
	ldrb r0, [r4]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D1C40:
	.4byte gRam
_080D1C44:
	.4byte 0x00001122
_080D1C48:
	.4byte gUnknown_08174B54
_080D1C4C:
	.4byte 0x00000FB2
_080D1C50:
	.4byte gUnknown_08174B58
_080D1C54:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D1BF4

	THUMB_FUNC_START sub_080D1C58
sub_080D1C58: @ 0x080D1C58
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r5, r1, #0
	ldr r6, _080D1CD4  @ =gRam
	ldr r2, _080D1CD8  @ =0x00000F92
	add r0, r6, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #3
	bne _080D1C74
	add r0, r1, #0
	bl sub_080D1E5C
_080D1C74:
	ldr r4, _080D1CDC  @ =0x00001122
	add r2, r6, r4
	add r2, r5, r2
	ldrb r0, [r2]
	mov r1, #191
	and r1, r1, r0
	ldr r3, _080D1CE0  @ =gUnknown_08174B68
	ldr r4, _080D1CE4  @ =0x00000FB2
	add r0, r6, r4
	add r0, r5, r0
	ldrb r0, [r0]
	add r0, r0, r3
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
	ldr r1, _080D1CE8  @ =gUnknown_03003E74
	ldrh r0, [r1]
	add r0, r0, #1
	strh r0, [r1]
	ldr r0, _080D1CEC  @ =0x00001012
	add r4, r6, r0
	add r4, r5, r4
	ldrb r0, [r4]
	sub r0, r0, #1
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080C6240
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080C99DC
	ldr r1, _080D1CF0  @ =gUnknown_08174B6C
	ldr r2, _080D1CF4  @ =0x00000F52
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
	pop {r4-r6}
	pop {r0}
	bx r0
_080D1CD4:
	.4byte gRam
_080D1CD8:
	.4byte 0x00000F92
_080D1CDC:
	.4byte 0x00001122
_080D1CE0:
	.4byte gUnknown_08174B68
_080D1CE4:
	.4byte 0x00000FB2
_080D1CE8:
	.4byte gUnknown_03003E74
_080D1CEC:
	.4byte 0x00001012
_080D1CF0:
	.4byte gUnknown_08174B6C
_080D1CF4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D1C58

	THUMB_FUNC_START sub_080D1CF8
sub_080D1CF8: @ 0x080D1CF8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r2, #0
	ldr r5, _080D1D74  @ =gRam
	ldr r1, _080D1D78  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	mov r0, #24
	and r0, r0, r1
	cmp r0, #0
	bne _080D1D12
	mov r2, #3
_080D1D12:
	ldr r1, _080D1D7C  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	ldr r1, _080D1D80  @ =0x00001627
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D1D6C
	ldr r0, _080D1D84  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D1D88  @ =0x00000FB2
	add r2, r5, r1
	add r2, r4, r2
	ldrb r0, [r2]
	mov r1, #1
	eor r0, r0, r1
	strb r0, [r2]
	ldr r0, _080D1D8C  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r3, _080D1D90  @ =gUnknown_08174B78
	ldrb r0, [r2]
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080D1D94  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	ldr r1, _080D1D98  @ =0x00001152
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #16
	strb r1, [r0]
	ldr r1, _080D1D9C  @ =0x00000F12
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #248
	strb r1, [r0]
_080D1D6C:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D1D74:
	.4byte gRam
_080D1D78:
	.4byte 0x00000996
_080D1D7C:
	.4byte 0x00000F92
_080D1D80:
	.4byte 0x00001627
_080D1D84:
	.4byte 0x00000F52
_080D1D88:
	.4byte 0x00000FB2
_080D1D8C:
	.4byte 0x00000F22
_080D1D90:
	.4byte gUnknown_08174B78
_080D1D94:
	.4byte 0x00000FC2
_080D1D98:
	.4byte 0x00001152
_080D1D9C:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080D1CF8

	THUMB_FUNC_START sub_080D1DA0
sub_080D1DA0: @ 0x080D1DA0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	add r5, r3, #0
	ldr r4, _080D1DFC  @ =gRam
	ldr r1, _080D1E00  @ =0x00000FC2
	add r0, r4, r1
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D1DF4
	ldr r1, _080D1E04  @ =0x00001152
	add r0, r4, r1
	add r0, r3, r0
	ldrb r1, [r0]
	add r2, r1, #2
	strb r2, [r0]
	sub r1, r1, #14
	lsl r1, r1, #24
	cmp r1, #0
	blt _080D1DD6
	ldr r0, _080D1E08  @ =0x00000F52
	add r1, r4, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D1DD6:
	ldr r0, _080D1E0C  @ =0x00001052
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D1E10  @ =0x00000F92
	add r2, r4, r1
	add r2, r5, r2
	lsl r0, r0, #24
	lsr r0, r0, #25
	mov r1, #1
	and r0, r0, r1
	add r0, r0, #1
	strb r0, [r2]
_080D1DF4:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D1DFC:
	.4byte gRam
_080D1E00:
	.4byte 0x00000FC2
_080D1E04:
	.4byte 0x00001152
_080D1E08:
	.4byte 0x00000F52
_080D1E0C:
	.4byte 0x00001052
_080D1E10:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080D1DA0

	THUMB_FUNC_START sub_080D1E14
sub_080D1E14: @ 0x080D1E14
	push {r4,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r4, _080D1E4C  @ =gRam
	ldr r1, _080D1E50  @ =0x00000F92
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #1
	strb r1, [r0]
	ldr r0, _080D1E54  @ =0x00001152
	add r1, r4, r0
	add r1, r3, r1
	ldrb r0, [r1]
	sub r2, r0, #1
	strb r2, [r1]
	add r0, r0, #14
	lsl r0, r0, #24
	cmp r0, #0
	bge _080D1E46
	ldr r0, _080D1E58  @ =0x00000F52
	add r1, r4, r0
	add r1, r3, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
_080D1E46:
	pop {r4}
	pop {r0}
	bx r0
_080D1E4C:
	.4byte gRam
_080D1E50:
	.4byte 0x00000F92
_080D1E54:
	.4byte 0x00001152
_080D1E58:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D1E14

	THUMB_FUNC_START sub_080D1E5C
sub_080D1E5C: @ 0x080D1E5C
	push {r4-r7,lr}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r6, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	lsr r7, r0, #24
	cmp r7, #0
	bne _080D1EC4
	ldr r0, _080D1ECC  @ =gUnknown_03003E74
	ldrh r0, [r0]
	ldr r4, _080D1ED0  @ =gRam
	mov r2, #150
	lsl r2, r2, #4
	add r1, r4, r2
	ldrb r1, [r1]
	ldr r3, _080D1ED4  @ =gUnknown_08174B7C
	ldr r5, _080D1ED8  @ =0x00000FB2
	add r2, r4, r5
	add r2, r6, r2
	ldrb r5, [r2]
	add r3, r5, r3
	ldrb r2, [r3]
	add r1, r1, r2
	ldr r3, _080D1EDC  @ =0x00000964
	add r2, r4, r3
	ldrb r2, [r2]
	add r3, r3, #5
	add r4, r4, r3
	mov r3, #0
	ldrsb r3, [r4, r3]
	ldr r4, _080D1EE0  @ =gUnknown_08174B7E
	add r5, r5, r4
	ldrb r4, [r5]
	orr r3, r3, r4
	lsl r3, r3, #8
	add r3, r3, #206
	lsl r3, r3, #16
	lsr r3, r3, #16
	str r7, [sp]
	bl sub_080C6004
	add r0, r6, #0
	mov r1, #0
	mov r2, #0
	bl sub_080C6350
_080D1EC4:
	add sp, sp, #8
	pop {r4-r7}
	pop {r0}
	bx r0
_080D1ECC:
	.4byte gUnknown_03003E74
_080D1ED0:
	.4byte gRam
_080D1ED4:
	.4byte gUnknown_08174B7C
_080D1ED8:
	.4byte 0x00000FB2
_080D1EDC:
	.4byte 0x00000964
_080D1EE0:
	.4byte gUnknown_08174B7E
	THUMB_FUNC_END sub_080D1E5C

	THUMB_FUNC_START sub_080D1EE4
sub_080D1EE4: @ 0x080D1EE4
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080C36D8
	ldr r1, _080D1F08  @ =gRam
	ldr r2, _080D1F0C  @ =0x00000FB2
	add r1, r1, r2
	add r1, r4, r1
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080D2020
	pop {r4}
	pop {r0}
	bx r0
_080D1F08:
	.4byte gRam
_080D1F0C:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080D1EE4

	THUMB_FUNC_START sub_080D1F10
sub_080D1F10: @ 0x080D1F10
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	mov r4, #0
	ldr r3, _080D1F64  @ =gRam
	ldr r1, _080D1F68  @ =0x00000996
	add r0, r3, r1
	ldrb r1, [r0]
	mov r0, #24
	and r0, r0, r1
	cmp r0, #0
	beq _080D1F2A
	mov r4, #3
_080D1F2A:
	ldr r1, _080D1F6C  @ =0x00000F92
	add r0, r3, r1
	add r0, r2, r0
	strb r4, [r0]
	ldr r1, _080D1F70  @ =0x00001627
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D1F5C
	ldr r0, _080D1F74  @ =0x00000F52
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D1F78  @ =0x00000F12
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #248
	strb r1, [r0]
	ldr r1, _080D1F7C  @ =0x00000F22
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #240
	strb r1, [r0]
_080D1F5C:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D1F64:
	.4byte gRam
_080D1F68:
	.4byte 0x00000996
_080D1F6C:
	.4byte 0x00000F92
_080D1F70:
	.4byte 0x00001627
_080D1F74:
	.4byte 0x00000F52
_080D1F78:
	.4byte 0x00000F12
_080D1F7C:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080D1F10

	THUMB_FUNC_START sub_080D1F80
sub_080D1F80: @ 0x080D1F80
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C99DC
	ldr r5, _080D2004  @ =gRam
	ldr r1, _080D2008  @ =0x00001152
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	sub r0, r0, #2
	mov r3, #0
	strb r0, [r1]
	ldr r2, _080D200C  @ =0x00001142
	add r0, r5, r2
	add r2, r4, r0
	mov r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	bge _080D1FC0
	mov r0, #32
	strb r0, [r1]
	strb r3, [r2]
	ldr r1, _080D2010  @ =0x00001052
	add r0, r5, r1
	add r0, r4, r0
	strb r3, [r0]
	ldr r2, _080D2014  @ =0x00000F62
	add r0, r5, r2
	add r0, r4, r0
	strb r3, [r0]
_080D1FC0:
	ldr r3, _080D2010  @ =0x00001052
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #7
	and r1, r1, r0
	cmp r1, #0
	bne _080D1FE4
	ldr r1, _080D2014  @ =0x00000F62
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #3
	beq _080D1FE4
	add r0, r0, #1
	strb r0, [r1]
_080D1FE4:
	ldr r0, _080D2004  @ =gRam
	ldr r2, _080D2018  @ =0x00000F92
	add r1, r0, r2
	add r1, r4, r1
	ldr r2, _080D201C  @ =gUnknown_08174B88
	ldr r3, _080D2014  @ =0x00000F62
	add r0, r0, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2004:
	.4byte gRam
_080D2008:
	.4byte 0x00001152
_080D200C:
	.4byte 0x00001142
_080D2010:
	.4byte 0x00001052
_080D2014:
	.4byte 0x00000F62
_080D2018:
	.4byte 0x00000F92
_080D201C:
	.4byte gUnknown_08174B88
	THUMB_FUNC_END sub_080D1F80

	THUMB_FUNC_START sub_080D2020
sub_080D2020: @ 0x080D2020
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r2, r1, #0
	ldr r0, _080D2048  @ =gUnknown_0200232E
	ldrb r0, [r0]
	cmp r0, #1
	bls _080D203C
	ldr r0, _080D204C  @ =gRam
	ldr r3, _080D2050  @ =0x00000FA2
	add r0, r0, r3
	add r0, r1, r0
	mov r1, #0
	strb r1, [r0]
_080D203C:
	add r0, r2, #0
	bl sub_080C3758
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2048:
	.4byte gUnknown_0200232E
_080D204C:
	.4byte gRam
_080D2050:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080D2020

	THUMB_FUNC_START sub_080D2054
sub_080D2054: @ 0x080D2054
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080D2098
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D2084
	ldr r1, _080D208C  @ =gUnknown_08174B80
	ldr r0, _080D2090  @ =gRam
	ldr r2, _080D2094  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D2084:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D208C:
	.4byte gUnknown_08174B80
_080D2090:
	.4byte gRam
_080D2094:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D2054

	THUMB_FUNC_START sub_080D2098
sub_080D2098: @ 0x080D2098
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080D20C8  @ =gRam
	ldr r1, _080D20CC  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #5
	ldr r0, _080D20D0  @ =gUnknown_08174B8C
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #4
	bl sub_080C9480
	add r0, r4, #0
	mov r1, #18
	bl sub_080C57F8
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D20C8:
	.4byte gRam
_080D20CC:
	.4byte 0x00000F92
_080D20D0:
	.4byte gUnknown_08174B8C
	THUMB_FUNC_END sub_080D2098

	THUMB_FUNC_START sub_080D20D4
sub_080D20D4: @ 0x080D20D4
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080D2110  @ =gRam
	ldr r0, _080D2114  @ =0x00001172
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r3, _080D2118  @ =0x00001052
	add r1, r2, r3
	add r1, r4, r1
	ldr r3, _080D211C  @ =0x0000165C
	add r0, r2, r3
	ldrh r0, [r0]
	lsr r0, r0, #6
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080D2134
	ldr r0, _080D2120  @ =gUnknown_0200232E
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080D2124
	add r0, r4, #0
	bl sub_080D26E8
	b _080D2196
_080D2110:
	.4byte gRam
_080D2114:
	.4byte 0x00001172
_080D2118:
	.4byte 0x00001052
_080D211C:
	.4byte 0x0000165C
_080D2120:
	.4byte gUnknown_0200232E
_080D2124:
	ldr r3, _080D2130  @ =0x00000FA2
	add r0, r2, r3
	add r0, r4, r0
	strb r1, [r0]
	b _080D2196
	.byte 0x00
	.byte 0x00
_080D2130:
	.4byte 0x00000FA2
_080D2134:
	mov r3, #0
	ldr r1, _080D215C  @ =0x00001662
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #8
	and r0, r0, r1
	cmp r0, #0
	bne _080D216E
	ldr r0, _080D2160  @ =gUnknown_0200232E
	ldrb r0, [r0]
	cmp r0, #1
	bls _080D216A
	cmp r0, #2
	bne _080D2168
	ldr r1, _080D2164  @ =0x00000F92
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	b _080D216A
_080D215C:
	.4byte 0x00001662
_080D2160:
	.4byte gUnknown_0200232E
_080D2164:
	.4byte 0x00000F92
_080D2168:
	mov r3, #1
_080D216A:
	cmp r3, #0
	beq _080D2182
_080D216E:
	ldr r3, _080D219C  @ =0x00000F92
	add r0, r2, r3
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	ldr r1, _080D21A0  @ =0x00000F52
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #5
	strb r1, [r0]
_080D2182:
	add r0, r4, #0
	bl sub_080C35A4
	ldr r1, _080D21A4  @ =gRam
	ldr r3, _080D21A8  @ =0x00000ED2
	add r1, r1, r3
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #8
	strb r0, [r1]
_080D2196:
	pop {r4}
	pop {r0}
	bx r0
_080D219C:
	.4byte 0x00000F92
_080D21A0:
	.4byte 0x00000F52
_080D21A4:
	.4byte gRam
_080D21A8:
	.4byte 0x00000ED2
	THUMB_FUNC_END sub_080D20D4

	THUMB_FUNC_START sub_080D21AC
sub_080D21AC: @ 0x080D21AC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080D2250  @ =gRam
	ldr r1, _080D2254  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #3
	beq _080D21DC
	add r0, r4, #0
	bl sub_080D29E4
	ldr r3, _080D2258  @ =0x00000F82
	add r2, r5, r3
	add r2, r4, r2
	ldr r1, _080D225C  @ =0x00000961
	add r0, r5, r1
	ldr r3, _080D2260  @ =0x00000965
	add r1, r5, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	orr r0, r0, r1
	strb r0, [r2]
_080D21DC:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D2248
	ldr r1, _080D2258  @ =0x00000F82
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D221C
	ldr r2, _080D2264  @ =0x00000F72
	add r0, r5, r2
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080D221C
	ldr r0, _080D2268  @ =0x00000A3C
	add r3, r5, r0
	ldrh r1, [r3]
	ldr r0, _080D226C  @ =0x0000FFFF
	cmp r1, r0
	bne _080D221C
	ldr r0, _080D2270  @ =0x00000A3E
	add r1, r5, r0
	mov r0, #7
	strb r0, [r1]
	mov r0, #11
	strb r0, [r2]
	ldr r0, _080D2274  @ =0x0000FFF2
	strh r0, [r3]
_080D221C:
	ldr r1, _080D2250  @ =gRam
	ldr r2, _080D2278  @ =0x00000F92
	add r3, r1, r2
	add r3, r4, r3
	ldr r2, _080D227C  @ =0x00000996
	add r0, r1, r2
	ldrb r0, [r0]
	lsr r0, r0, #5
	mov r2, #1
	and r0, r0, r2
	strb r0, [r3]
	ldr r2, _080D2280  @ =gUnknown_08174C0C
	ldr r3, _080D2254  @ =0x00000F52
	add r1, r1, r3
	add r1, r4, r1
	ldrb r0, [r1]
	lsl r0, r0, #2
	add r0, r0, r2
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D2248:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2250:
	.4byte gRam
_080D2254:
	.4byte 0x00000F52
_080D2258:
	.4byte 0x00000F82
_080D225C:
	.4byte 0x00000961
_080D2260:
	.4byte 0x00000965
_080D2264:
	.4byte 0x00000F72
_080D2268:
	.4byte 0x00000A3C
_080D226C:
	.4byte 0x0000FFFF
_080D2270:
	.4byte 0x00000A3E
_080D2274:
	.4byte 0x0000FFF2
_080D2278:
	.4byte 0x00000F92
_080D227C:
	.4byte 0x00000996
_080D2280:
	.4byte gUnknown_08174C0C
	THUMB_FUNC_END sub_080D21AC

	THUMB_FUNC_START sub_080D2284
sub_080D2284: @ 0x080D2284
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r5, #1
	ldr r0, _080D22F8  @ =gUnknown_0200232E
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080D22A2
	add r0, r4, #0
	bl sub_080D24F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D22A2
	mov r5, #0
_080D22A2:
	ldr r2, _080D22FC  @ =gRam
	cmp r5, #0
	beq _080D22DC
	ldr r0, _080D2300  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080D2304  @ =0x00000FB2
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080D2308  @ =0x00001627
	add r1, r2, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D230C  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #176
	strb r1, [r0]
	ldr r0, _080D2310  @ =0x00001770
	add r1, r2, r0
	mov r0, #1
	strb r0, [r1]
_080D22DC:
	ldr r1, _080D230C  @ =0x00000FC2
	add r0, r2, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080D22F2
	mov r0, #25
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080D2654
_080D22F2:
	pop {r4,r5}
	pop {r0}
	bx r0
_080D22F8:
	.4byte gUnknown_0200232E
_080D22FC:
	.4byte gRam
_080D2300:
	.4byte 0x00000F52
_080D2304:
	.4byte 0x00000FB2
_080D2308:
	.4byte 0x00001627
_080D230C:
	.4byte 0x00000FC2
_080D2310:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080D2284

	THUMB_FUNC_START sub_080D2314
sub_080D2314: @ 0x080D2314
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080D239C  @ =gRam
	ldr r0, _080D23A0  @ =0x00001770
	add r1, r4, r0
	mov r0, #1
	strb r0, [r1]
	ldr r1, _080D23A4  @ =0x00000FC2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r2, [r0]
	cmp r2, #0
	bne _080D2394
	ldr r0, _080D23A8  @ =0x000009B5
	add r1, r4, r0
	mov r0, #2
	strb r0, [r1]
	ldr r0, _080D23AC  @ =0x000009D4
	add r1, r4, r0
	mov r0, #48
	strb r0, [r1]
	ldr r1, _080D23B0  @ =0x00000CF8
	add r0, r4, r1
	strh r2, [r0]
	add r1, r1, #2
	add r0, r4, r1
	strh r2, [r0]
	ldr r2, _080D23B4  @ =0x0000051E
	add r1, r4, r2
	mov r0, #185
	lsl r0, r0, #6
	strh r0, [r1]
	ldr r0, _080D23B8  @ =0x0000051A
	add r1, r4, r0
	mov r0, #63
	strh r0, [r1]
	ldr r1, _080D23BC  @ =0x00000998
	add r0, r4, r1
	mov r1, #15
	strb r1, [r0]
	ldr r2, _080D23C0  @ =0x00000999
	add r0, r4, r2
	strb r1, [r0]
	bl sub_081335FC
	ldr r0, _080D23C4  @ =0x00000F52
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r2, _080D23C8  @ =0x00000A3E
	add r1, r4, r2
	mov r0, #255
	strb r0, [r1]
	add r0, r5, #0
	mov r1, #76
	bl sub_080CF0AC
	ldr r0, _080D23CC  @ =0x00000A3C
	add r1, r4, r0
	ldr r0, _080D23D0  @ =0x0000FFF3
	strh r0, [r1]
_080D2394:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D239C:
	.4byte gRam
_080D23A0:
	.4byte 0x00001770
_080D23A4:
	.4byte 0x00000FC2
_080D23A8:
	.4byte 0x000009B5
_080D23AC:
	.4byte 0x000009D4
_080D23B0:
	.4byte 0x00000CF8
_080D23B4:
	.4byte 0x0000051E
_080D23B8:
	.4byte 0x0000051A
_080D23BC:
	.4byte 0x00000998
_080D23C0:
	.4byte 0x00000999
_080D23C4:
	.4byte 0x00000F52
_080D23C8:
	.4byte 0x00000A3E
_080D23CC:
	.4byte 0x00000A3C
_080D23D0:
	.4byte 0x0000FFF3
	THUMB_FUNC_END sub_080D2314

	THUMB_FUNC_START sub_080D23D4
sub_080D23D4: @ 0x080D23D4
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r4, _080D242C  @ =gRam
	ldr r1, _080D2430  @ =0x00000A4E
	add r0, r4, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #15
	bne _080D2424
	ldr r1, _080D2434  @ =gUnknown_03003E70
	mov r0, #1
	strb r0, [r1]
	ldr r1, _080D2438  @ =0x00000545
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	beq _080D2424
	ldr r0, _080D243C  @ =0x00000F52
	add r1, r4, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080D2440  @ =0x00000A3C
	add r1, r4, r0
	ldr r0, _080D2444  @ =0x0000FFF2
	strh r0, [r1]
	mov r0, #75
	mov r1, #0
	bl sub_0812A324
	ldr r0, _080D2448  @ =0x00001770
	add r1, r4, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D2424:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D242C:
	.4byte gRam
_080D2430:
	.4byte 0x00000A4E
_080D2434:
	.4byte gUnknown_03003E70
_080D2438:
	.4byte 0x00000545
_080D243C:
	.4byte 0x00000F52
_080D2440:
	.4byte 0x00000A3C
_080D2444:
	.4byte 0x0000FFF2
_080D2448:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080D23D4

	THUMB_FUNC_START sub_080D244C
sub_080D244C: @ 0x080D244C
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r8, r5
	ldr r6, _080D24B0  @ =gRam
	ldr r1, _080D24B4  @ =0x00000FC2
	add r0, r6, r1
	add r7, r5, r0
	ldrb r0, [r7]
	cmp r0, #0
	bne _080D24E0
	ldr r3, _080D24B8  @ =0x00000F62
	add r0, r6, r3
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #2
	bls _080D247A
	add r0, r5, #0
	mov r1, #76
	bl sub_080CF0AC
_080D247A:
	ldrb r2, [r4]
	add r0, r2, #1
	strb r0, [r4]
	ldr r0, _080D24BC  @ =gUnknown_08174C44
	add r0, r2, r0
	ldrb r1, [r0]
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bge _080D24D0
	ldr r0, _080D24C0  @ =0x00000A3C
	add r1, r6, r0
	mov r2, #0
	ldr r0, _080D24C4  @ =0x0000FFF3
	strh r0, [r1]
	ldr r3, _080D24C8  @ =0x00000F52
	add r1, r6, r3
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D24CC  @ =0x00001770
	add r0, r6, r1
	strb r2, [r0]
	b _080D24E0
	.byte 0x00
	.byte 0x00
_080D24B0:
	.4byte gRam
_080D24B4:
	.4byte 0x00000FC2
_080D24B8:
	.4byte 0x00000F62
_080D24BC:
	.4byte gUnknown_08174C44
_080D24C0:
	.4byte 0x00000A3C
_080D24C4:
	.4byte 0x0000FFF3
_080D24C8:
	.4byte 0x00000F52
_080D24CC:
	.4byte 0x00001770
_080D24D0:
	ldr r3, _080D24EC  @ =0x00000F92
	add r0, r6, r3
	add r0, r0, r8
	strb r1, [r0]
	ldr r0, _080D24F0  @ =gUnknown_08174C58
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r7]
_080D24E0:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D24EC:
	.4byte 0x00000F92
_080D24F0:
	.4byte gUnknown_08174C58
	THUMB_FUNC_END sub_080D244C

	THUMB_FUNC_START sub_080D24F4
sub_080D24F4: @ 0x080D24F4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D25A4  @ =gRam
	ldr r2, _080D25A8  @ =0x00000EE2
	add r1, r3, r2
	add r1, r0, r1
	ldrb r1, [r1]
	mov r4, #150
	lsl r4, r4, #4
	add r6, r3, r4
	strb r1, [r6]
	add r2, r2, #32
	add r1, r3, r2
	add r1, r0, r1
	ldrb r2, [r1]
	add r4, r4, #1
	add r1, r3, r4
	strb r2, [r1]
	ldr r2, _080D25AC  @ =0x00000ED2
	add r1, r3, r2
	add r1, r0, r1
	ldrb r1, [r1]
	ldr r2, _080D25B0  @ =0x00000964
	add r4, r3, r2
	strb r1, [r4]
	ldr r2, _080D25B4  @ =0x00000EF2
	add r1, r3, r2
	add r0, r0, r1
	ldrb r1, [r0]
	ldr r2, _080D25B8  @ =0x00000965
	add r0, r3, r2
	strb r1, [r0]
	ldrh r0, [r4]
	add r5, r0, #0
	sub r5, r5, #16
	strh r5, [r4]
	ldr r1, _080D25BC  @ =0x000016C4
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r2, _080D25C0  @ =0x000016C5
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r6]
	sub r1, r1, r0
	lsl r1, r1, #16
	lsr r2, r1, #16
	cmp r1, #0
	bge _080D2564
	mvn r0, r2
	lsl r0, r0, #16
	lsr r2, r0, #16
_080D2564:
	strh r2, [r6]
	mov r1, #182
	lsl r1, r1, #5
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r2, _080D25C4  @ =0x000016C1
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	sub r1, r1, r5
	lsl r1, r1, #16
	lsr r2, r1, #16
	cmp r1, #0
	bge _080D258C
	mvn r0, r2
	lsl r0, r0, #16
	lsr r2, r0, #16
_080D258C:
	strh r2, [r4]
	ldrh r0, [r6]
	cmp r0, #47
	bhi _080D259A
	mov r0, #0
	cmp r2, #47
	bls _080D259C
_080D259A:
	mov r0, #1
_080D259C:
	pop {r4-r6}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080D25A4:
	.4byte gRam
_080D25A8:
	.4byte 0x00000EE2
_080D25AC:
	.4byte 0x00000ED2
_080D25B0:
	.4byte 0x00000964
_080D25B4:
	.4byte 0x00000EF2
_080D25B8:
	.4byte 0x00000965
_080D25BC:
	.4byte 0x000016C4
_080D25C0:
	.4byte 0x000016C5
_080D25C4:
	.4byte 0x000016C1
	THUMB_FUNC_END sub_080D24F4

	THUMB_FUNC_START sub_080D25C8
sub_080D25C8: @ 0x080D25C8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080C58F0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D2632
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r1, _080D2638  @ =gRam
	ldr r2, _080D263C  @ =0x00000FC2
	add r0, r1, r2
	add r0, r4, r0
	ldrb r2, [r0]
	cmp r2, #0
	bne _080D2604
	ldr r3, _080D2640  @ =0x00000FA2
	add r0, r1, r3
	add r0, r4, r0
	strb r2, [r0]
_080D2604:
	ldr r4, _080D2644  @ =0x00000996
	add r0, r1, r4
	ldrb r4, [r0]
	mov r0, #1
	and r0, r0, r4
	cmp r0, #0
	bne _080D2632
	ldr r0, _080D2648  @ =0x00000F22
	add r2, r1, r0
	add r2, r5, r2
	ldr r3, _080D264C  @ =gUnknown_08174D2C
	lsr r0, r4, #5
	ldr r4, _080D2650  @ =0x000015DC
	add r1, r1, r4
	ldrb r1, [r1]
	eor r0, r0, r1
	mov r1, #1
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	ldrb r1, [r2]
	add r0, r0, r1
	strb r0, [r2]
_080D2632:
	pop {r4,r5}
	pop {r0}
	bx r0
_080D2638:
	.4byte gRam
_080D263C:
	.4byte 0x00000FC2
_080D2640:
	.4byte 0x00000FA2
_080D2644:
	.4byte 0x00000996
_080D2648:
	.4byte 0x00000F22
_080D264C:
	.4byte gUnknown_08174D2C
_080D2650:
	.4byte 0x000015DC
	THUMB_FUNC_END sub_080D25C8

	THUMB_FUNC_START sub_080D2654
sub_080D2654: @ 0x080D2654
	push {r4,r5,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #46
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080D26C6
	ldr r2, _080D26CC  @ =gRam
	mov r1, #150
	lsl r1, r1, #4
	add r0, r2, r1
	ldrh r1, [r0]
	add r1, r1, #4
	ldr r3, _080D26D0  @ =0x00000964
	add r0, r2, r3
	ldrh r3, [r0]
	add r3, r3, #4
	ldr r5, _080D26D4  @ =0x00000EE2
	add r0, r2, r5
	add r0, r4, r0
	strb r1, [r0]
	add r5, r5, #32
	add r0, r2, r5
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080D26D8  @ =0x00000ED2
	add r0, r2, r1
	add r0, r4, r0
	strb r3, [r0]
	sub r5, r5, #16
	add r0, r2, r5
	add r0, r4, r0
	lsr r3, r3, #8
	strb r3, [r0]
	ldr r1, _080D26DC  @ =0x00001082
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r3, _080D26E0  @ =0x00001152
	add r0, r2, r3
	add r0, r4, r0
	mov r1, #8
	strb r1, [r0]
	add r5, r5, #208
	add r0, r2, r5
	add r0, r4, r0
	mov r1, #96
	strb r1, [r0]
	ldr r0, _080D26E4  @ =0x00001172
	add r2, r2, r0
	add r2, r4, r2
	strb r1, [r2]
_080D26C6:
	pop {r4,r5}
	pop {r0}
	bx r0
_080D26CC:
	.4byte gRam
_080D26D0:
	.4byte 0x00000964
_080D26D4:
	.4byte 0x00000EE2
_080D26D8:
	.4byte 0x00000ED2
_080D26DC:
	.4byte 0x00001082
_080D26E0:
	.4byte 0x00001152
_080D26E4:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080D2654

	THUMB_FUNC_START sub_080D26E8
sub_080D26E8: @ 0x080D26E8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D26FC  @ =gRam
	ldr r2, _080D2700  @ =0x00000EE2
	add r1, r1, r2
	add r0, r0, r1
	ldrb r1, [r0]
	add r1, r1, #7
	strb r1, [r0]
	bx lr
_080D26FC:
	.4byte gRam
_080D2700:
	.4byte 0x00000EE2
	THUMB_FUNC_END sub_080D26E8

	THUMB_FUNC_START sub_080D2704
sub_080D2704: @ 0x080D2704
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r0, _080D2720  @ =gRam
	ldr r2, _080D2724  @ =0x00001082
	add r0, r0, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D2728
	cmp r0, #1
	beq _080D2730
	b _080D2736
	.byte 0x00
	.byte 0x00
_080D2720:
	.4byte gRam
_080D2724:
	.4byte 0x00001082
_080D2728:
	add r0, r1, #0
	bl sub_080D273C
	b _080D2736
_080D2730:
	add r0, r1, #0
	bl sub_080D25C8
_080D2736:
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D2704

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D273C
sub_080D273C: @ 0x080D273C
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r0, _080D2758  @ =gRam
	ldr r2, _080D275C  @ =0x00001052
	add r0, r0, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D2760
	cmp r0, #1
	beq _080D2768
	b _080D276E
	.byte 0x00
	.byte 0x00
_080D2758:
	.4byte gRam
_080D275C:
	.4byte 0x00001052
_080D2760:
	add r0, r1, #0
	bl sub_080D21AC
	b _080D276E
_080D2768:
	add r0, r1, #0
	bl sub_080D27FC
_080D276E:
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D273C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D2774
sub_080D2774: @ 0x080D2774
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080D27AC  @ =gRam
	ldr r1, _080D27B0  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080D27A4
	bl sub_08133620
	ldr r1, _080D27B4  @ =0x00000CF8
	add r0, r4, r1
	ldrh r0, [r0]
	cmp r0, #0
	bne _080D27A4
	ldr r0, _080D27B8  @ =0x00000F52
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D27A4:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D27AC:
	.4byte gRam
_080D27B0:
	.4byte 0x00000996
_080D27B4:
	.4byte 0x00000CF8
_080D27B8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D2774

	THUMB_FUNC_START sub_080D27BC
sub_080D27BC: @ 0x080D27BC
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	bl sub_08131E24
	bl sub_08133600
	ldr r1, _080D27EC  @ =gRam
	ldr r0, _080D27F0  @ =0x0000051E
	add r2, r1, r0
	mov r3, #0
	mov r0, #0
	strh r0, [r2]
	ldr r2, _080D27F4  @ =0x00000FA2
	add r0, r1, r2
	add r4, r4, r0
	strb r3, [r4]
	ldr r0, _080D27F8  @ =0x00001770
	add r1, r1, r0
	strb r3, [r1]
	pop {r4}
	pop {r0}
	bx r0
_080D27EC:
	.4byte gRam
_080D27F0:
	.4byte 0x0000051E
_080D27F4:
	.4byte 0x00000FA2
_080D27F8:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080D27BC

	THUMB_FUNC_START sub_080D27FC
sub_080D27FC: @ 0x080D27FC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080D2A34
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D282C
	ldr r1, _080D2834  @ =gUnknown_08174C1C
	ldr r0, _080D2838  @ =gRam
	ldr r2, _080D283C  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D282C:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2834:
	.4byte gUnknown_08174C1C
_080D2838:
	.4byte gRam
_080D283C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D27FC

	THUMB_FUNC_START sub_080D2840
sub_080D2840: @ 0x080D2840
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r0, _080D286C  @ =gUnknown_02002332
	ldrb r0, [r0]
	mov r1, #1
	and r1, r1, r0
	ldr r0, _080D2870  @ =gUnknown_0200232E
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D285A
	mov r1, #3
	and r1, r1, r0
_080D285A:
	ldr r0, _080D2874  @ =gUnknown_08174C34
	lsl r1, r1, #2
	add r1, r1, r0
	ldr r1, [r1]
	add r0, r2, #0
	bl _call_via_r1
	pop {r0}
	bx r0
_080D286C:
	.4byte gUnknown_02002332
_080D2870:
	.4byte gUnknown_0200232E
_080D2874:
	.4byte gUnknown_08174C34
	THUMB_FUNC_END sub_080D2840

	THUMB_FUNC_START sub_080D2878
sub_080D2878: @ 0x080D2878
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	mov r1, #232
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D289E
	ldr r1, _080D28A8  @ =gRam
	ldr r0, _080D28AC  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D289E:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D28A8:
	.4byte gRam
_080D28AC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D2878

	THUMB_FUNC_START sub_080D28B0
sub_080D28B0: @ 0x080D28B0
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #235
	mov r2, sp
	bl sub_080C9164
	add sp, sp, #4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D28B0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D28C8
sub_080D28C8: @ 0x080D28C8
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080D2900  @ =gRam
	ldr r1, _080D2904  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #236
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D28F6
	ldr r1, _080D2908  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
_080D28F6:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2900:
	.4byte gRam
_080D2904:
	.4byte 0x00000F92
_080D2908:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D28C8

	THUMB_FUNC_START sub_080D290C
sub_080D290C: @ 0x080D290C
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D2920  @ =gRam
	ldr r2, _080D2924  @ =0x00000F92
	add r1, r1, r2
	add r0, r0, r1
	mov r1, #3
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080D2920:
	.4byte gRam
_080D2924:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080D290C

	THUMB_FUNC_START sub_080D2928
sub_080D2928: @ 0x080D2928
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080D2954  @ =gRam
	ldr r1, _080D2958  @ =0x00001AE2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D2960
	add r0, r4, #0
	mov r1, #234
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080D295C  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080D2976
	.byte 0x00
	.byte 0x00
_080D2954:
	.4byte gRam
_080D2958:
	.4byte 0x00001AE2
_080D295C:
	.4byte 0x00000F52
_080D2960:
	add r0, r4, #0
	mov r1, #233
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080D2980  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D2976:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2980:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D2928

	THUMB_FUNC_START sub_080D2984
sub_080D2984: @ 0x080D2984
	push {r4-r6,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080D29AC  @ =gRam
	ldr r1, _080D29B0  @ =0x00001776
	add r0, r5, r1
	mov r6, #0
	strb r6, [r0]
	mov r0, #19
	bl sub_080A1588
	ldr r0, _080D29B4  @ =0x00000F52
	add r5, r5, r0
	add r4, r4, r5
	strb r6, [r4]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D29AC:
	.4byte gRam
_080D29B0:
	.4byte 0x00001776
_080D29B4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D2984

	THUMB_FUNC_START sub_080D29B8
sub_080D29B8: @ 0x080D29B8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D29D8  @ =gRam
	ldr r3, _080D29DC  @ =0x00000F92
	add r1, r2, r3
	add r0, r0, r1
	mov r1, #3
	strb r1, [r0]
	ldr r0, _080D29E0  @ =0x00001662
	add r2, r2, r0
	ldrb r1, [r2]
	mov r0, #8
	orr r0, r0, r1
	strb r0, [r2]
	bx lr
	.byte 0x00
	.byte 0x00
_080D29D8:
	.4byte gRam
_080D29DC:
	.4byte 0x00000F92
_080D29E0:
	.4byte 0x00001662
	THUMB_FUNC_END sub_080D29B8

	THUMB_FUNC_START sub_080D29E4
sub_080D29E4: @ 0x080D29E4
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r0, #16
	bl sub_080CF388
	ldr r2, _080D2A24  @ =gRam
	ldr r1, _080D2A28  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080D2A2C  @ =0x00000F92
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #5
	ldr r0, _080D2A30  @ =gUnknown_08174C6C
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #4
	bl sub_080C9480
	mov r0, #4
	bl sub_080C64A0
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2A24:
	.4byte gRam
_080D2A28:
	.4byte 0x00000FB2
_080D2A2C:
	.4byte 0x00000F92
_080D2A30:
	.4byte gUnknown_08174C6C
	THUMB_FUNC_END sub_080D29E4

	THUMB_FUNC_START sub_080D2A34
sub_080D2A34: @ 0x080D2A34
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D2A5C  @ =gRam
	ldr r2, _080D2A60  @ =0x0000096C
	add r3, r1, r2
	mov r2, #2
	strb r2, [r3]
	ldr r2, _080D2A64  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #4
	ldr r2, _080D2A68  @ =gUnknown_08174CEC
	add r1, r1, r2
	bl sub_080C94D0
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2A5C:
	.4byte gRam
_080D2A60:
	.4byte 0x0000096C
_080D2A64:
	.4byte 0x00000F92
_080D2A68:
	.4byte gUnknown_08174CEC
	THUMB_FUNC_END sub_080D2A34

	THUMB_FUNC_START sub_080D2A6C
sub_080D2A6C: @ 0x080D2A6C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D2AA4  @ =gRam
	ldr r1, _080D2AA8  @ =0x00000EE2
	add r5, r3, r1
	add r5, r0, r5
	ldrb r2, [r5]
	add r1, r1, #32
	add r4, r3, r1
	add r4, r0, r4
	ldrb r1, [r4]
	lsl r1, r1, #8
	add r2, r2, r1
	sub r2, r2, #8
	ldr r1, _080D2AAC  @ =0x00001172
	add r3, r3, r1
	add r0, r0, r3
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	strb r2, [r5]
	lsr r2, r2, #8
	strb r2, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2AA4:
	.4byte gRam
_080D2AA8:
	.4byte 0x00000EE2
_080D2AAC:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080D2A6C

	THUMB_FUNC_START sub_080D2AB0
sub_080D2AB0: @ 0x080D2AB0
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D2B4A
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D2B4A
	bl sub_0809E3CC
	cmp r0, #0
	bne _080D2B4A
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080D2B38
	ldr r3, _080D2B28  @ =gRam
	ldr r1, _080D2B2C  @ =0x00000F62
	add r0, r3, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D2B4A
	ldr r1, _080D2B30  @ =0x0000188F
	add r0, r3, r1
	strb r2, [r0]
	sub r1, r1, #254
	add r0, r3, r1
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	beq _080D2B4A
	ldr r1, _080D2B34  @ =0x00000FA2
	add r0, r3, r1
	add r0, r4, r0
	strb r2, [r0]
	add r0, r4, #0
	bl sub_080D2B60
	add r0, r4, #0
	bl sub_080CF6C0
	b _080D2B4A
	.byte 0x00
	.byte 0x00
_080D2B28:
	.4byte gRam
_080D2B2C:
	.4byte 0x00000F62
_080D2B30:
	.4byte 0x0000188F
_080D2B34:
	.4byte 0x00000FA2
_080D2B38:
	ldr r0, _080D2B54  @ =gRam
	ldr r2, _080D2B58  @ =0x0000188F
	add r1, r0, r2
	mov r2, #1
	strb r2, [r1]
	ldr r1, _080D2B5C  @ =0x00000F62
	add r0, r0, r1
	add r0, r5, r0
	strb r2, [r0]
_080D2B4A:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2B54:
	.4byte gRam
_080D2B58:
	.4byte 0x0000188F
_080D2B5C:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080D2AB0

	THUMB_FUNC_START sub_080D2B60
sub_080D2B60: @ 0x080D2B60
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	ldr r1, _080D2BA8  @ =gRam
	ldr r2, _080D2BAC  @ =0x00000ECD
	add r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D2C32
	mov r3, #0
	cmp r0, #3
	bls _080D2B8E
	mov r3, #1
	ldr r4, _080D2BB0  @ =0x00000ECE
	add r0, r1, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D2B8E
	mov r3, #2
_080D2B8E:
	ldr r1, _080D2BA8  @ =gRam
	ldr r0, _080D2BB4  @ =0x000015F9
	add r2, r1, r0
	mov r0, #3
	strb r0, [r2]
	ldr r4, _080D2BB8  @ =0x000015FA
	add r0, r1, r4
	strb r3, [r0]
	add r5, r1, #0
	add r6, r2, #0
	mov r9, r0
	mov r7, #32
	b _080D2C14
_080D2BA8:
	.4byte gRam
_080D2BAC:
	.4byte 0x00000ECD
_080D2BB0:
	.4byte 0x00000ECE
_080D2BB4:
	.4byte 0x000015F9
_080D2BB8:
	.4byte 0x000015FA
_080D2BBC:
	mov r0, r8
	mov r1, #94
	bl sub_080CF140
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r0, _080D2C50  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080D2C54  @ =gUnknown_08174D30
	ldrb r0, [r6]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080D2C58  @ =0x00000F12
	add r1, r5, r2
	add r1, r4, r1
	ldr r2, _080D2C5C  @ =gUnknown_08174D34
	ldrb r0, [r6]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080D2C60  @ =0x00000D74
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r2, _080D2C64  @ =0x000010E2
	add r0, r5, r2
	add r0, r4, r0
	strb r7, [r0]
	ldr r1, _080D2C68  @ =0x000010B2
	add r0, r5, r1
	add r0, r4, r0
	strb r7, [r0]
	add r2, r2, #112
	add r0, r5, r2
	add r0, r4, r0
	strb r7, [r0]
	ldrb r0, [r6]
	sub r0, r0, #1
	strb r0, [r6]
_080D2C14:
	mov r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #0
	blt _080D2C32
	ldr r0, _080D2C6C  @ =gUnknown_08174D38
	mov r4, r9
	ldrb r1, [r4]
	add r1, r1, r0
	ldrb r0, [r1]
	mov r1, r8
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	bge _080D2BBC
_080D2C32:
	ldr r0, _080D2C70  @ =gRam
	ldr r2, _080D2C74  @ =0x00000ECD
	add r1, r0, r2
	mov r2, #0
	strb r2, [r1]
	ldr r4, _080D2C78  @ =0x00000ECE
	add r0, r0, r4
	strb r2, [r0]
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2C50:
	.4byte 0x00000F22
_080D2C54:
	.4byte gUnknown_08174D30
_080D2C58:
	.4byte 0x00000F12
_080D2C5C:
	.4byte gUnknown_08174D34
_080D2C60:
	.4byte 0x00000D74
_080D2C64:
	.4byte 0x000010E2
_080D2C68:
	.4byte 0x000010B2
_080D2C6C:
	.4byte gUnknown_08174D38
_080D2C70:
	.4byte gRam
_080D2C74:
	.4byte 0x00000ECD
_080D2C78:
	.4byte 0x00000ECE
	THUMB_FUNC_END sub_080D2B60

	THUMB_FUNC_START sub_080D2C7C
sub_080D2C7C: @ 0x080D2C7C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r0, _080D2CBC  @ =gUnknown_020022D8
	ldrb r1, [r0]
	mov r0, #32
	and r0, r0, r1
	cmp r0, #0
	bne _080D2CCC
	ldr r1, _080D2CC0  @ =gRam
	ldr r0, _080D2CC4  @ =0x00000EE2
	add r4, r1, r0
	add r4, r5, r4
	ldrb r2, [r4]
	add r0, r0, #32
	add r3, r1, r0
	add r3, r5, r3
	ldrb r0, [r3]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r2, r2, #8
	ldr r0, _080D2CC8  @ =0x00001172
	add r1, r1, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	strb r2, [r4]
	lsr r2, r2, #8
	strb r2, [r3]
	b _080D2CD8
	.byte 0x00
	.byte 0x00
_080D2CBC:
	.4byte gUnknown_020022D8
_080D2CC0:
	.4byte gRam
_080D2CC4:
	.4byte 0x00000EE2
_080D2CC8:
	.4byte 0x00001172
_080D2CCC:
	ldr r0, _080D2CE0  @ =gRam
	ldr r1, _080D2CE4  @ =0x00000FA2
	add r0, r0, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
_080D2CD8:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2CE0:
	.4byte gRam
_080D2CE4:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080D2C7C

	THUMB_FUNC_START sub_080D2CE8
sub_080D2CE8: @ 0x080D2CE8
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D2DCE
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D2DCE
	bl sub_0809E3CC
	cmp r0, #0
	bne _080D2DCE
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080D2DBC
	ldr r5, _080D2D98  @ =gRam
	ldr r1, _080D2D9C  @ =0x00000F62
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D2DCE
	ldr r2, _080D2DA0  @ =0x0000188F
	add r0, r5, r2
	strb r6, [r0]
	ldr r1, _080D2DA4  @ =0x00001791
	add r0, r5, r1
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	beq _080D2DCE
	add r0, r4, #0
	mov r1, #109
	bl sub_080CF0AC
	bl sub_0808F1C4
	add r0, r4, #0
	bl sub_080F4CB8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D2DA8  @ =0x00000EE2
	add r1, r5, r2
	add r2, r0, r1
	add r1, r4, r1
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r2, _080D2DAC  @ =0x00000F02
	add r1, r5, r2
	add r2, r0, r1
	add r1, r4, r1
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r2, _080D2DB0  @ =0x00000ED2
	add r1, r5, r2
	add r2, r0, r1
	add r1, r4, r1
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r2, _080D2DB4  @ =0x00000EF2
	add r1, r5, r2
	add r0, r0, r1
	add r1, r4, r1
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D2DB8  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
	b _080D2DCE
_080D2D98:
	.4byte gRam
_080D2D9C:
	.4byte 0x00000F62
_080D2DA0:
	.4byte 0x0000188F
_080D2DA4:
	.4byte 0x00001791
_080D2DA8:
	.4byte 0x00000EE2
_080D2DAC:
	.4byte 0x00000F02
_080D2DB0:
	.4byte 0x00000ED2
_080D2DB4:
	.4byte 0x00000EF2
_080D2DB8:
	.4byte 0x00000FA2
_080D2DBC:
	ldr r0, _080D2DD8  @ =gRam
	ldr r2, _080D2DDC  @ =0x0000188F
	add r1, r0, r2
	mov r2, #1
	strb r2, [r1]
	ldr r1, _080D2DE0  @ =0x00000F62
	add r0, r0, r1
	add r0, r5, r0
	strb r2, [r0]
_080D2DCE:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D2DD8:
	.4byte gRam
_080D2DDC:
	.4byte 0x0000188F
_080D2DE0:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080D2CE8

	THUMB_FUNC_START sub_080D2DE4
sub_080D2DE4: @ 0x080D2DE4
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r2, r4, #0
	ldr r6, _080D2E6C  @ =gRam
	ldr r0, _080D2E70  @ =0x00001172
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D2E74  @ =0x0000165C
	add r0, r6, r1
	ldrh r1, [r0]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	bne _080D2EB0
	add r0, r4, #0
	bl sub_080D3F74
	ldr r0, _080D2E78  @ =0x00001662
	add r7, r6, r0
	ldrb r1, [r7]
	mov r0, #32
	and r0, r0, r1
	cmp r0, #0
	beq _080D2E8C
	ldr r0, _080D2E7C  @ =0x00000EE2
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #2
	strb r0, [r1]
	ldr r0, _080D2E80  @ =0x00000ED2
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #3
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080D3530
	add r5, r0, #0
	lsl r0, r5, #24
	lsr r0, r0, #24
	bl sub_080D3F74
	ldr r1, _080D2E84  @ =0x00001062
	add r0, r6, r1
	add r1, r4, r0
	strb r5, [r1]
	add r0, r5, r0
	strb r4, [r0]
	ldrb r1, [r7]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D2EDE
	ldr r1, _080D2E88  @ =0x00000F52
	add r0, r6, r1
	add r1, r4, r0
	mov r2, #5
	strb r2, [r1]
	add r0, r5, r0
	strb r2, [r0]
	b _080D2EDE
	.byte 0x00
	.byte 0x00
_080D2E6C:
	.4byte gRam
_080D2E70:
	.4byte 0x00001172
_080D2E74:
	.4byte 0x0000165C
_080D2E78:
	.4byte 0x00001662
_080D2E7C:
	.4byte 0x00000EE2
_080D2E80:
	.4byte 0x00000ED2
_080D2E84:
	.4byte 0x00001062
_080D2E88:
	.4byte 0x00000F52
_080D2E8C:
	ldr r0, _080D2EA8  @ =0x00000EE2
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #2
	strb r0, [r1]
	ldr r0, _080D2EAC  @ =0x00000ED2
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #3
	strb r0, [r1]
	b _080D2EDE
	.byte 0x00
	.byte 0x00
_080D2EA8:
	.4byte 0x00000EE2
_080D2EAC:
	.4byte 0x00000ED2
_080D2EB0:
	ldr r1, _080D2EC8  @ =0x00001662
	add r0, r6, r1
	ldrh r1, [r0]
	ldr r0, _080D2ECC  @ =0x0000FF20
	and r0, r0, r1
	cmp r0, #0
	beq _080D2ED4
	ldr r1, _080D2ED0  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #0
	b _080D2EDC
_080D2EC8:
	.4byte 0x00001662
_080D2ECC:
	.4byte 0x0000FF20
_080D2ED0:
	.4byte 0x00000FA2
_080D2ED4:
	ldr r1, _080D2EE4  @ =0x00001052
	add r0, r6, r1
	add r0, r2, r0
	mov r1, #2
_080D2EDC:
	strb r1, [r0]
_080D2EDE:
	pop {r4-r7}
	pop {r0}
	bx r0
_080D2EE4:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080D2DE4

	THUMB_FUNC_START sub_080D2EE8
sub_080D2EE8: @ 0x080D2EE8
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl Sprite3_Move
	ldr r3, _080D2F48  @ =gRam
	ldr r0, _080D2F4C  @ =0x00000F92
	add r2, r3, r0
	add r2, r4, r2
	ldr r1, _080D2F50  @ =0x00000996
	add r0, r3, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldr r1, _080D2F54  @ =0x00000FC2
	add r0, r3, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080D2F8A
	sub r1, r1, #96
	add r0, r3, r1
	add r0, r4, r0
	ldrb r2, [r0]
	add r1, r2, #1
	strb r1, [r0]
	ldr r0, _080D2F58  @ =gUnknown_08174D54
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r5]
	ldr r0, _080D2F5C  @ =gUnknown_08174D56
	add r2, r2, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D2F64
	ldr r0, _080D2F60  @ =0x00000F52
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	b _080D2F88
	.byte 0x00
	.byte 0x00
_080D2F48:
	.4byte gRam
_080D2F4C:
	.4byte 0x00000F92
_080D2F50:
	.4byte 0x00000996
_080D2F54:
	.4byte 0x00000FC2
_080D2F58:
	.4byte gUnknown_08174D54
_080D2F5C:
	.4byte gUnknown_08174D56
_080D2F60:
	.4byte 0x00000F52
_080D2F64:
	ldr r4, _080D2F90  @ =0x00000FB2
	add r0, r3, r4
	add r0, r6, r0
	strb r1, [r0]
	ldr r0, _080D2F94  @ =0x00000F22
	add r1, r3, r0
	add r1, r6, r1
	ldr r0, _080D2F98  @ =gUnknown_08174D59
	ldrb r2, [r2]
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	sub r4, r4, #160
	add r1, r3, r4
	add r1, r6, r1
	ldr r0, _080D2F9C  @ =gUnknown_08174D5D
	add r2, r2, r0
	ldrb r0, [r2]
_080D2F88:
	strb r0, [r1]
_080D2F8A:
	pop {r4-r6}
	pop {r0}
	bx r0
_080D2F90:
	.4byte 0x00000FB2
_080D2F94:
	.4byte 0x00000F22
_080D2F98:
	.4byte gUnknown_08174D59
_080D2F9C:
	.4byte gUnknown_08174D5D
	THUMB_FUNC_END sub_080D2EE8

	THUMB_FUNC_START sub_080D2FA0
sub_080D2FA0: @ 0x080D2FA0
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	add r0, r4, #0
	bl sub_080D3808
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080D3054
	add r0, r4, #0
	bl sub_080C5080
	ldr r7, _080D301C  @ =gRam
	ldr r1, _080D3020  @ =0x00001152
	add r0, r7, r1
	add r5, r4, r0
	ldrb r0, [r5]
	sub r0, r0, #2
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r1, _080D3024  @ =0x00001142
	add r0, r7, r1
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D2FF2
	strb r6, [r2]
	mov r0, #16
	strb r0, [r5]
_080D2FF2:
	ldr r1, _080D3028  @ =0x00000F52
	add r0, r7, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080D3034
	ldr r0, _080D302C  @ =0x00001663
	add r1, r7, r0
	mov r0, #7
	strb r0, [r1]
	bl sub_0812F9A8
	add r0, r4, #0
	bl sub_081146A4
	ldr r1, _080D3030  @ =0x00000FA2
	add r0, r7, r1
	add r0, r4, r0
	strb r6, [r0]
	b _080D3054
	.byte 0x00
	.byte 0x00
_080D301C:
	.4byte gRam
_080D3020:
	.4byte 0x00001152
_080D3024:
	.4byte 0x00001142
_080D3028:
	.4byte 0x00000F52
_080D302C:
	.4byte 0x00001663
_080D3030:
	.4byte 0x00000FA2
_080D3034:
	ldr r1, _080D3060  @ =0x00000FB2
	add r0, r7, r1
	add r0, r0, r8
	mov r1, #1
	strb r1, [r0]
	mov r0, r8
	mov r1, #228
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D3054
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
_080D3054:
	add sp, sp, #4
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080D3060:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080D2FA0

	THUMB_FUNC_START sub_080D3064
sub_080D3064: @ 0x080D3064
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080D3980
	ldr r6, _080D3150  @ =gRam
	ldr r1, _080D3154  @ =0x00001152
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	sub r0, r0, #2
	mov r7, #0
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r2, _080D3158  @ =0x00001142
	add r0, r6, r2
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D309A
	strb r7, [r2]
	strb r7, [r5]
_080D309A:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D314A
	ldr r1, _080D315C  @ =0x00001062
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	ldr r1, _080D3160  @ =0x00000F52
	add r2, r6, r1
	add r0, r0, r2
	ldrb r1, [r0]
	cmp r1, #5
	beq _080D30D8
	cmp r1, #7
	beq _080D30D8
	cmp r1, #9
	beq _080D30D8
	add r0, r4, r2
	ldrb r0, [r0]
	orr r1, r1, r0
	cmp r1, #0
	beq _080D30D8
	cmp r0, #5
	beq _080D30D8
	cmp r0, #7
	beq _080D30D8
	cmp r0, #9
	bne _080D3132
_080D30D8:
	ldr r6, _080D3150  @ =gRam
	ldr r2, _080D3164  @ =0x00000F72
	add r0, r6, r2
	add r5, r4, r0
	ldrb r1, [r5]
	sub r0, r1, #1
	strb r0, [r5]
	cmp r1, #0
	bne _080D3132
	ldr r0, _080D3168  @ =0x00000F62
	add r2, r6, r0
	add r2, r4, r2
	ldrb r0, [r2]
	add r3, r0, #0
	add r0, r3, #1
	mov r1, #7
	and r0, r0, r1
	strb r0, [r2]
	ldr r2, _080D316C  @ =0x00000F92
	add r1, r6, r2
	add r1, r4, r1
	ldr r0, _080D3170  @ =gUnknown_08174DB4
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D3174  @ =gUnknown_08174DBC
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r5]
	cmp r3, #1
	bne _080D3120
	ldr r1, _080D3154  @ =0x00001152
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #16
	strb r1, [r0]
_080D3120:
	cmp r3, #3
	bne _080D3132
	add r0, r4, #0
	bl sub_080D3650
	add r0, r4, #0
	mov r1, #113
	bl sub_080CF0AC
_080D3132:
	ldr r1, _080D3178  @ =gUnknown_08174DC4
	ldr r0, _080D3150  @ =gRam
	ldr r2, _080D3160  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D314A:
	pop {r4-r7}
	pop {r0}
	bx r0
_080D3150:
	.4byte gRam
_080D3154:
	.4byte 0x00001152
_080D3158:
	.4byte 0x00001142
_080D315C:
	.4byte 0x00001062
_080D3160:
	.4byte 0x00000F52
_080D3164:
	.4byte 0x00000F72
_080D3168:
	.4byte 0x00000F62
_080D316C:
	.4byte 0x00000F92
_080D3170:
	.4byte gUnknown_08174DB4
_080D3174:
	.4byte gUnknown_08174DBC
_080D3178:
	.4byte gUnknown_08174DC4
	THUMB_FUNC_END sub_080D3064

	THUMB_FUNC_START sub_080D317C
sub_080D317C: @ 0x080D317C
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r6, _080D31C8  @ =gRam
	ldr r1, _080D31CC  @ =0x00000F82
	add r0, r6, r1
	add r5, r4, r0
	mov r0, #0
	strb r0, [r5]
	ldr r1, _080D31D0  @ =0x00001663
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #8
	bne _080D31DC
	add r1, r1, #93
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #193
	bhi _080D3242
	add r0, r4, #0
	mov r1, #227
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080D31D4  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #10
	strb r1, [r0]
	ldr r0, _080D31D8  @ =0x00001770
	add r1, r6, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080D3242
	.byte 0x00
	.byte 0x00
_080D31C8:
	.4byte gRam
_080D31CC:
	.4byte 0x00000F82
_080D31D0:
	.4byte 0x00001663
_080D31D4:
	.4byte 0x00000F52
_080D31D8:
	.4byte 0x00001770
_080D31DC:
	add r0, r4, #0
	bl sub_080D383C
	cmp r0, #2
	beq _080D3228
	cmp r0, #0
	bne _080D3242
	ldr r1, _080D3204  @ =0x00001662
	add r0, r6, r1
	ldrb r1, [r0]
	mov r0, #32
	and r0, r0, r1
	cmp r0, #0
	bne _080D3208
	add r0, r4, #0
	mov r1, #226
	mov r2, sp
	bl sub_080C9164
	b _080D3242
_080D3204:
	.4byte 0x00001662
_080D3208:
	add r0, r4, #0
	mov r1, #219
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D3242
	ldr r1, _080D3224  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	b _080D323A
_080D3224:
	.4byte 0x00000F52
_080D3228:
	add r0, r7, #0
	mov r1, #231
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080D324C  @ =0x00000FD2
	add r0, r6, r1
	add r0, r7, r0
	mov r1, #96
_080D323A:
	strb r1, [r0]
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
_080D3242:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D324C:
	.4byte 0x00000FD2
	THUMB_FUNC_END sub_080D317C

	THUMB_FUNC_START sub_080D3250
sub_080D3250: @ 0x080D3250
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r6, _080D327C  @ =gRam
	ldr r1, _080D3280  @ =0x00001AE2
	add r0, r6, r1
	ldrb r5, [r0]
	cmp r5, #0
	beq _080D3288
	add r0, r4, #0
	mov r1, #223
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080D3284  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080D32C2
_080D327C:
	.4byte gRam
_080D3280:
	.4byte 0x00001AE2
_080D3284:
	.4byte 0x00000F52
_080D3288:
	ldr r0, _080D32A4  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #2
	bls _080D32AC
	add r0, r4, #0
	mov r1, #222
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080D32A8  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	b _080D32C2
_080D32A4:
	.4byte gUnknown_0200233D
_080D32A8:
	.4byte 0x00000F52
_080D32AC:
	add r0, r7, #0
	mov r1, #221
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080D32CC  @ =0x00000F52
	add r1, r6, r0
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D32C2:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D32CC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D3250

	THUMB_FUNC_START sub_080D32D0
sub_080D32D0: @ 0x080D32D0
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080D3330  @ =gRam
	ldr r1, _080D3334  @ =0x00001AE2
	add r0, r5, r1
	ldrb r6, [r0]
	cmp r6, #0
	bne _080D3364
	bl sub_080AA868
	cmp r0, #9
	ble _080D334C
	mov r0, #10
	neg r0, r0
	bl sub_080AA83C
	add r0, r4, #0
	mov r1, #224
	mov r2, sp
	bl sub_080C9564
	ldr r2, _080D3338  @ =0x00001062
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	ldr r2, _080D333C  @ =0x00000F52
	add r1, r5, r2
	add r0, r0, r1
	mov r2, #5
	strb r2, [r0]
	add r1, r4, r1
	strb r2, [r1]
	ldr r1, _080D3340  @ =0x00000CB4
	add r0, r5, r1
	strb r6, [r0]
	ldr r1, _080D3344  @ =gUnknown_0200233D
	mov r0, #255
	strb r0, [r1]
	ldr r0, _080D3348  @ =0x00001662
	add r2, r5, r0
	ldrb r1, [r2]
	mov r0, #128
	orr r0, r0, r1
	strb r0, [r2]
	b _080D3378
	.byte 0x00
	.byte 0x00
_080D3330:
	.4byte gRam
_080D3334:
	.4byte 0x00001AE2
_080D3338:
	.4byte 0x00001062
_080D333C:
	.4byte 0x00000F52
_080D3340:
	.4byte 0x00000CB4
_080D3344:
	.4byte gUnknown_0200233D
_080D3348:
	.4byte 0x00001662
_080D334C:
	add r0, r4, #0
	mov r1, #223
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080D3360  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
	b _080D3378
_080D3360:
	.4byte 0x00000F52
_080D3364:
	add r0, r4, #0
	mov r1, #223
	mov r2, sp
	bl sub_080C9564
	ldr r2, _080D3380  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
_080D3378:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080D3380:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D32D0

	THUMB_FUNC_START sub_080D3384
sub_080D3384: @ 0x080D3384
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080D33F4  @ =gRam
	ldr r1, _080D33F8  @ =0x00000F82
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	mov r6, #0
	ldr r2, _080D33FC  @ =0x00000FD2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D33D4
	ldr r1, _080D3400  @ =0x00000A4E
	add r0, r5, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #14
	bne _080D33D4
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D33D4
	ldr r2, _080D3404  @ =0x00001788
	add r0, r5, r2
	ldr r1, [r0]
	ldr r0, _080D3408  @ =0x0002FF00
	and r1, r1, r0
	ldr r0, _080D340C  @ =0x00020200
	mov r6, #1
	cmp r1, r0
	bne _080D33D4
	mov r6, #2
_080D33D4:
	cmp r6, #2
	beq _080D3444
	cmp r6, #0
	bne _080D3466
	ldr r5, _080D33F4  @ =gRam
	ldr r1, _080D3410  @ =0x00000CB4
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D3414
	add r0, r4, #0
	mov r1, #229
	mov r2, sp
	bl sub_080C9164
	b _080D3466
_080D33F4:
	.4byte gRam
_080D33F8:
	.4byte 0x00000F82
_080D33FC:
	.4byte 0x00000FD2
_080D3400:
	.4byte 0x00000A4E
_080D3404:
	.4byte 0x00001788
_080D3408:
	.4byte 0x0002FF00
_080D340C:
	.4byte 0x00020200
_080D3410:
	.4byte 0x00000CB4
_080D3414:
	add r0, r4, #0
	mov r1, #225
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D3466
	ldr r2, _080D343C  @ =0x00000F52
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D3440  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	b _080D3466
_080D343C:
	.4byte 0x00000F52
_080D3440:
	.4byte 0x00000F92
_080D3444:
	add r0, r4, #0
	mov r1, #231
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080D3470  @ =gRam
	ldr r2, _080D3474  @ =0x00000FD2
	add r0, r1, r2
	add r0, r4, r0
	mov r2, #96
	strb r2, [r0]
	ldr r0, _080D3478  @ =0x00000F82
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D3466:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D3470:
	.4byte gRam
_080D3474:
	.4byte 0x00000FD2
_080D3478:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080D3384

	THUMB_FUNC_START sub_080D347C
sub_080D347C: @ 0x080D347C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	mov r0, #26
	add r1, r4, #0
	bl sub_080CA538
	add r3, r0, #0
	cmp r3, #0
	blt _080D34DE
	ldr r2, _080D3504  @ =gRam
	ldr r1, _080D3508  @ =0x00000EE2
	add r0, r2, r1
	add r0, r3, r0
	ldr r5, _080D350C  @ =0x000016C4
	add r1, r2, r5
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D3510  @ =0x00000F02
	add r0, r2, r1
	add r0, r3, r0
	add r5, r5, #1
	add r1, r2, r5
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D3514  @ =0x00000ED2
	add r0, r2, r1
	add r0, r3, r0
	sub r5, r5, #5
	add r1, r2, r5
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D3518  @ =0x00000EF2
	add r0, r2, r1
	add r0, r3, r0
	add r5, r5, #1
	add r1, r2, r5
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D351C  @ =0x00001052
	add r0, r2, r1
	add r0, r3, r0
	mov r1, #3
	strb r1, [r0]
	ldr r5, _080D3520  @ =0x00001172
	add r2, r2, r5
	add r2, r3, r2
	strb r1, [r2]
_080D34DE:
	ldr r1, _080D3504  @ =gRam
	ldr r0, _080D3524  @ =0x00000F52
	add r2, r1, r0
	add r2, r4, r2
	ldrb r0, [r2]
	add r0, r0, #1
	mov r3, #0
	strb r0, [r2]
	ldr r2, _080D3528  @ =0x00001663
	add r0, r1, r2
	strb r3, [r0]
	ldr r5, _080D352C  @ =0x00000F92
	add r1, r1, r5
	add r1, r4, r1
	mov r0, #4
	strb r0, [r1]
	pop {r4,r5}
	pop {r0}
	bx r0
_080D3504:
	.4byte gRam
_080D3508:
	.4byte 0x00000EE2
_080D350C:
	.4byte 0x000016C4
_080D3510:
	.4byte 0x00000F02
_080D3514:
	.4byte 0x00000ED2
_080D3518:
	.4byte 0x00000EF2
_080D351C:
	.4byte 0x00001052
_080D3520:
	.4byte 0x00001172
_080D3524:
	.4byte 0x00000F52
_080D3528:
	.4byte 0x00001663
_080D352C:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080D347C

	THUMB_FUNC_START sub_080D3530
sub_080D3530: @ 0x080D3530
	push {r4,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #26
	bl sub_080CA538
	add r3, r0, #0
	cmp r3, #0
	blt _080D359A
	ldr r2, _080D35A4  @ =gRam
	mov r1, #150
	lsl r1, r1, #4
	add r0, r2, r1
	ldrh r1, [r0]
	add r1, r1, #44
	ldr r4, _080D35A8  @ =0x00000EE2
	add r0, r2, r4
	add r0, r3, r0
	strb r1, [r0]
	add r4, r4, #32
	add r0, r2, r4
	add r0, r3, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080D35AC  @ =0x00000ED2
	add r0, r2, r1
	add r0, r3, r0
	ldr r4, _080D35B0  @ =0x00000964
	add r1, r2, r4
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D35B4  @ =0x00000EF2
	add r0, r2, r1
	add r0, r3, r0
	add r4, r4, #1
	add r1, r2, r4
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D35B8  @ =0x00000FB2
	add r0, r2, r1
	add r0, r3, r0
	mov r1, #1
	strb r1, [r0]
	ldr r4, _080D35BC  @ =0x00000F62
	add r0, r2, r4
	add r0, r3, r0
	mov r1, #4
	strb r1, [r0]
	ldr r0, _080D35C0  @ =0x00001172
	add r2, r2, r0
	add r2, r3, r2
	strb r1, [r2]
_080D359A:
	add r0, r3, #0
	pop {r4}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080D35A4:
	.4byte gRam
_080D35A8:
	.4byte 0x00000EE2
_080D35AC:
	.4byte 0x00000ED2
_080D35B0:
	.4byte 0x00000964
_080D35B4:
	.4byte 0x00000EF2
_080D35B8:
	.4byte 0x00000FB2
_080D35BC:
	.4byte 0x00000F62
_080D35C0:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080D3530

	THUMB_FUNC_START sub_080D35C4
sub_080D35C4: @ 0x080D35C4
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	add r0, r4, #0
	bl sub_080D39D4
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D363C
	ldr r5, _080D3618  @ =gRam
	ldr r1, _080D361C  @ =0x00000FC2
	add r0, r5, r1
	add r7, r4, r0
	ldrb r6, [r7]
	cmp r6, #0
	bne _080D363C
	ldr r0, _080D3620  @ =0x00000F62
	add r2, r5, r0
	add r2, r4, r2
	ldrb r3, [r2]
	add r0, r3, #1
	mov r1, #7
	and r0, r0, r1
	strb r0, [r2]
	ldr r0, _080D3624  @ =gUnknown_08174E94
	add r0, r3, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D362C
	ldr r1, _080D3628  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
	b _080D363C
_080D3618:
	.4byte gRam
_080D361C:
	.4byte 0x00000FC2
_080D3620:
	.4byte 0x00000F62
_080D3624:
	.4byte gUnknown_08174E94
_080D3628:
	.4byte 0x00000FA2
_080D362C:
	ldr r2, _080D3648  @ =0x00000F92
	add r0, r5, r2
	add r0, r0, r8
	strb r1, [r0]
	ldr r0, _080D364C  @ =gUnknown_08174E9B
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r7]
_080D363C:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D3648:
	.4byte 0x00000F92
_080D364C:
	.4byte gUnknown_08174E9B
	THUMB_FUNC_END sub_080D35C4

	THUMB_FUNC_START sub_080D3650
sub_080D3650: @ 0x080D3650
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r0, #26
	add r1, r5, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080D36B8
	ldr r2, _080D36C0  @ =gRam
	ldr r1, _080D36C4  @ =0x00000FB2
	add r0, r2, r1
	add r0, r5, r0
	ldrb r0, [r0]
	mov r5, #150
	lsl r5, r5, #4
	add r3, r2, r5
	ldr r1, _080D36C8  @ =gUnknown_08174EA1
	add r0, r0, r1
	mov r1, #0
	ldrsb r1, [r0, r1]
	ldrh r3, [r3]
	add r1, r1, r3
	ldr r3, _080D36CC  @ =0x00000964
	add r0, r2, r3
	ldrh r3, [r0]
	add r3, r3, #2
	ldr r5, _080D36D0  @ =0x00000EE2
	add r0, r2, r5
	add r0, r4, r0
	strb r1, [r0]
	add r5, r5, #32
	add r0, r2, r5
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080D36D4  @ =0x00000ED2
	add r0, r2, r1
	add r0, r4, r0
	strb r3, [r0]
	sub r5, r5, #16
	add r0, r2, r5
	add r0, r4, r0
	lsr r3, r3, #8
	strb r3, [r0]
	ldr r0, _080D36D8  @ =0x00001052
	add r2, r2, r0
	add r2, r4, r2
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
_080D36B8:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D36C0:
	.4byte gRam
_080D36C4:
	.4byte 0x00000FB2
_080D36C8:
	.4byte gUnknown_08174EA1
_080D36CC:
	.4byte 0x00000964
_080D36D0:
	.4byte 0x00000EE2
_080D36D4:
	.4byte 0x00000ED2
_080D36D8:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080D3650

	THUMB_FUNC_START sub_080D36DC
sub_080D36DC: @ 0x080D36DC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D36FC  @ =gUnknown_08174D3C
	ldr r1, _080D3700  @ =gRam
	ldr r3, _080D3704  @ =0x00001052
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080D36FC:
	.4byte gUnknown_08174D3C
_080D3700:
	.4byte gRam
_080D3704:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080D36DC

	THUMB_FUNC_START sub_080D3708
sub_080D3708: @ 0x080D3708
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080D37A0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D3738
	ldr r1, _080D3740  @ =gUnknown_08174D4C
	ldr r0, _080D3744  @ =gRam
	ldr r2, _080D3748  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D3738:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D3740:
	.4byte gUnknown_08174D4C
_080D3744:
	.4byte gRam
_080D3748:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D3708

	THUMB_FUNC_START sub_080D374C
sub_080D374C: @ 0x080D374C
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080C5080
	add r0, r4, #0
	mov r1, #230
	mov r2, sp
	bl sub_080C9164
	ldr r1, _080D3790  @ =gRam
	ldr r0, _080D3794  @ =0x00001770
	add r2, r1, r0
	mov r0, #0
	strb r0, [r2]
	ldr r2, _080D3798  @ =0x00000FB2
	add r0, r1, r2
	add r4, r4, r0
	mov r0, #1
	strb r0, [r4]
	ldr r0, _080D379C  @ =0x00001662
	add r1, r1, r0
	ldrb r2, [r1]
	mov r0, #32
	orr r0, r0, r2
	strb r0, [r1]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D3790:
	.4byte gRam
_080D3794:
	.4byte 0x00001770
_080D3798:
	.4byte 0x00000FB2
_080D379C:
	.4byte 0x00001662
	THUMB_FUNC_END sub_080D374C

	THUMB_FUNC_START sub_080D37A0
sub_080D37A0: @ 0x080D37A0
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080D37F0  @ =gRam
	ldr r0, _080D37F4  @ =0x0000096C
	add r1, r2, r0
	mov r0, #1
	strh r0, [r1]
	ldr r1, _080D37F8  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r3, _080D37FC  @ =0x00000F92
	add r0, r2, r3
	add r0, r4, r0
	lsl r1, r1, #1
	ldrb r0, [r0]
	add r1, r1, r0
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r0, _080D3800  @ =gUnknown_08174DA4
	add r0, r1, r0
	ldrb r0, [r0]
	mov r3, #206
	lsl r3, r3, #4
	add r2, r2, r3
	strh r0, [r2]
	lsl r1, r1, #3
	ldr r0, _080D3804  @ =gUnknown_08174D64
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
_080D37F0:
	.4byte gRam
_080D37F4:
	.4byte 0x0000096C
_080D37F8:
	.4byte 0x00000FB2
_080D37FC:
	.4byte 0x00000F92
_080D3800:
	.4byte gUnknown_08174DA4
_080D3804:
	.4byte gUnknown_08174D64
	THUMB_FUNC_END sub_080D37A0

	THUMB_FUNC_START sub_080D3808
sub_080D3808: @ 0x080D3808
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080D3830  @ =gRam
	ldr r1, _080D3834  @ =0x0000096C
	add r0, r0, r1
	mov r1, #1
	strh r1, [r0]
	ldr r1, _080D3838  @ =gUnknown_08174DAC
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D3830:
	.4byte gRam
_080D3834:
	.4byte 0x0000096C
_080D3838:
	.4byte gUnknown_08174DAC
	THUMB_FUNC_END sub_080D3808

	THUMB_FUNC_START sub_080D383C
sub_080D383C: @ 0x080D383C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	mov r5, #0
	ldr r4, _080D3888  @ =gRam
	ldr r2, _080D388C  @ =0x00000FD2
	add r0, r4, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D3880
	ldr r2, _080D3890  @ =0x00000A4E
	add r0, r4, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #14
	bne _080D3880
	add r0, r1, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D3880
	ldr r1, _080D3894  @ =0x00001788
	add r0, r4, r1
	ldr r1, [r0]
	ldr r0, _080D3898  @ =0x0002FF00
	and r1, r1, r0
	ldr r0, _080D389C  @ =0x00020200
	mov r5, #1
	cmp r1, r0
	bne _080D3880
	mov r5, #2
_080D3880:
	add r0, r5, #0
	pop {r4,r5}
	pop {r1}
	bx r1
_080D3888:
	.4byte gRam
_080D388C:
	.4byte 0x00000FD2
_080D3890:
	.4byte 0x00000A4E
_080D3894:
	.4byte 0x00001788
_080D3898:
	.4byte 0x0002FF00
_080D389C:
	.4byte 0x00020200
	THUMB_FUNC_END sub_080D383C

	THUMB_FUNC_START sub_080D38A0
sub_080D38A0: @ 0x080D38A0
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080D38CC  @ =gRam
	ldr r1, _080D38D0  @ =0x00001AE2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D38D8
	add r0, r4, #0
	mov r1, #223
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080D38D4  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080D38EE
	.byte 0x00
	.byte 0x00
_080D38CC:
	.4byte gRam
_080D38D0:
	.4byte 0x00001AE2
_080D38D4:
	.4byte 0x00000F52
_080D38D8:
	add r0, r4, #0
	mov r1, #220
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080D38F8  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D38EE:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D38F8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D38A0

	THUMB_FUNC_START sub_080D38FC
sub_080D38FC: @ 0x080D38FC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080D3384
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D38FC

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D390C
sub_080D390C: @ 0x080D390C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r4, _080D3948  @ =gRam
	ldr r1, _080D394C  @ =0x00000F52
	add r3, r4, r1
	add r1, r0, r3
	mov r2, #0
	strb r2, [r1]
	ldr r5, _080D3950  @ =0x00001062
	add r1, r4, r5
	add r0, r0, r1
	ldrb r0, [r0]
	add r0, r0, r3
	strb r2, [r0]
	ldr r1, _080D3954  @ =0x00001776
	add r0, r4, r1
	strb r2, [r0]
	mov r0, #2
	bl sub_080A1588
	ldr r5, _080D3958  @ =0x00001662
	add r4, r4, r5
	ldrb r1, [r4]
	mov r0, #127
	and r0, r0, r1
	strb r0, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
_080D3948:
	.4byte gRam
_080D394C:
	.4byte 0x00000F52
_080D3950:
	.4byte 0x00001062
_080D3954:
	.4byte 0x00001776
_080D3958:
	.4byte 0x00001662
	THUMB_FUNC_END sub_080D390C

	THUMB_FUNC_START sub_080D395C
sub_080D395C: @ 0x080D395C
	bx lr
	THUMB_FUNC_END sub_080D395C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D3960
sub_080D3960: @ 0x080D3960
	bx lr
	THUMB_FUNC_END sub_080D3960

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D3964
sub_080D3964: @ 0x080D3964
	bx lr
	THUMB_FUNC_END sub_080D3964

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D3968
sub_080D3968: @ 0x080D3968
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #230
	mov r2, sp
	bl sub_080C9164
	add sp, sp, #4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D3968

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D3980
sub_080D3980: @ 0x080D3980
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080D39C0  @ =gRam
	ldr r0, _080D39C4  @ =0x0000096C
	add r1, r2, r0
	mov r0, #2
	strh r0, [r1]
	ldr r1, _080D39C8  @ =0x00000F92
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080D39CC  @ =0x00000FB2
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #4
	ldr r0, _080D39D0  @ =gUnknown_08174DF4
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D39C0:
	.4byte gRam
_080D39C4:
	.4byte 0x0000096C
_080D39C8:
	.4byte 0x00000F92
_080D39CC:
	.4byte 0x00000FB2
_080D39D0:
	.4byte gUnknown_08174DF4
	THUMB_FUNC_END sub_080D3980

	THUMB_FUNC_START sub_080D39D4
sub_080D39D4: @ 0x080D39D4
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r0, #8
	bl sub_080CF388
	ldr r0, _080D3A00  @ =gRam
	ldr r1, _080D3A04  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080D3A08  @ =gUnknown_08174EA4
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #2
	bl sub_080C9480
	pop {r4}
	pop {r0}
	bx r0
_080D3A00:
	.4byte gRam
_080D3A04:
	.4byte 0x00000F92
_080D3A08:
	.4byte gUnknown_08174EA4
	THUMB_FUNC_END sub_080D39D4

	THUMB_FUNC_START sub_080D3A0C
sub_080D3A0C: @ 0x080D3A0C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080D3A50  @ =gRam
	ldr r1, _080D3A54  @ =0x00000F92
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	bl GetRandomInt
	ldr r1, _080D3A58  @ =0x00000F62
	add r4, r6, r1
	add r4, r5, r4
	mov r1, #3
	and r1, r1, r0
	lsl r1, r1, #1
	strb r1, [r4]
	bl sub_080AA868
	ldr r2, _080D3A5C  @ =gUnknown_08174ED4
	ldrb r1, [r4]
	lsr r1, r1, #1
	lsl r1, r1, #1
	add r1, r1, r2
	ldrh r1, [r1]
	cmp r0, r1
	blt _080D3A64
	ldr r1, _080D3A60  @ =0x00000F52
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #2
	strb r1, [r0]
	b _080D3A70
_080D3A50:
	.4byte gRam
_080D3A54:
	.4byte 0x00000F92
_080D3A58:
	.4byte 0x00000F62
_080D3A5C:
	.4byte gUnknown_08174ED4
_080D3A60:
	.4byte 0x00000F52
_080D3A64:
	ldr r0, _080D3A78  @ =0x00000F52
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D3A70:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D3A78:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D3A0C

	THUMB_FUNC_START sub_080D3A7C
sub_080D3A7C: @ 0x080D3A7C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r3, _080D3AA4  @ =gRam
	ldr r1, _080D3AA8  @ =0x00001AE2
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D3AB4
	ldr r1, _080D3AAC  @ =0x00000F52
	add r0, r3, r1
	add r0, r2, r0
	mov r2, #0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080D3AB0  @ =0x00001770
	add r0, r3, r1
	strb r2, [r0]
	b _080D3AE0
_080D3AA4:
	.4byte gRam
_080D3AA8:
	.4byte 0x00001AE2
_080D3AAC:
	.4byte 0x00000F52
_080D3AB0:
	.4byte 0x00001770
_080D3AB4:
	ldr r1, _080D3AE8  @ =0x00000FC2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D3ACC
	ldr r0, _080D3AEC  @ =0x00000F52
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D3ACC:
	ldr r1, _080D3AF0  @ =0x00000F92
	add r2, r3, r1
	add r2, r4, r2
	ldr r1, _080D3AF4  @ =0x00000996
	add r0, r3, r1
	ldrb r0, [r0]
	lsr r0, r0, #4
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
_080D3AE0:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D3AE8:
	.4byte 0x00000FC2
_080D3AEC:
	.4byte 0x00000F52
_080D3AF0:
	.4byte 0x00000F92
_080D3AF4:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080D3A7C

	THUMB_FUNC_START sub_080D3AF8
sub_080D3AF8: @ 0x080D3AF8
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080D3B34  @ =gRam
	ldr r1, _080D3B38  @ =0x00000F92
	add r0, r4, r1
	add r0, r5, r0
	mov r2, #0
	strb r2, [r0]
	ldr r0, _080D3B3C  @ =0x00000F52
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D3B40  @ =0x00000965
	add r0, r4, r1
	strb r2, [r0]
	mov r1, #179
	lsl r1, r1, #5
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080D3B44
	mov r1, #150
	lsl r1, r1, #4
	add r0, r4, r1
	strh r2, [r0]
	b _080D3C50
_080D3B34:
	.4byte gRam
_080D3B38:
	.4byte 0x00000F92
_080D3B3C:
	.4byte 0x00000F52
_080D3B40:
	.4byte 0x00000965
_080D3B44:
	ldr r0, _080D3C6C  @ =gUnknown_02002330
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D3B56
	mov r0, #2
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3B56:
	ldr r0, _080D3C70  @ =gUnknown_02002354
	ldrb r1, [r0]
	mov r0, #2
	and r0, r0, r1
	cmp r0, #0
	bne _080D3B6C
	mov r0, #1
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3B6C:
	ldr r0, _080D3C74  @ =gUnknown_02002324
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080D3B7E
	mov r0, #3
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3B7E:
	ldr r0, _080D3C78  @ =gUnknown_0200233A
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D3B90
	mov r0, #4
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3B90:
	ldr r0, _080D3C7C  @ =gUnknown_0200233B
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D3BA2
	mov r0, #5
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3BA2:
	ldr r2, _080D3C80  @ =0x0000165E
	add r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080D3BB6
	mov r0, #6
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3BB6:
	ldr r0, _080D3C84  @ =gUnknown_0200235B
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D3BC8
	mov r0, #7
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3BC8:
	ldr r0, _080D3C88  @ =gUnknown_02002328
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D3BDA
	mov r0, #8
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3BDA:
	ldr r0, _080D3C8C  @ =0x00001662
	add r4, r4, r0
	ldrb r1, [r4]
	mov r0, #16
	and r0, r0, r1
	cmp r0, #0
	bne _080D3BF2
	mov r0, #9
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3BF2:
	ldrb r1, [r4]
	mov r0, #32
	and r0, r0, r1
	cmp r0, #0
	bne _080D3C06
	mov r0, #10
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3C06:
	ldr r0, _080D3C90  @ =gUnknown_02002335
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D3C18
	mov r0, #11
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3C18:
	ldr r0, _080D3C94  @ =gUnknown_020022DB
	ldrb r1, [r0]
	mov r0, #2
	and r0, r0, r1
	cmp r0, #0
	bne _080D3C2E
	mov r0, #12
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3C2E:
	ldr r0, _080D3C98  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #3
	bhi _080D3C40
	mov r0, #13
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
_080D3C40:
	mov r0, #14
	bl sub_080D3CD4
	cmp r0, #0
	bne _080D3C50
	mov r0, #15
	bl sub_080D3CD4
_080D3C50:
	ldr r3, _080D3C9C  @ =gRam
	ldr r1, _080D3CA0  @ =0x0000165F
	add r2, r3, r1
	ldrb r0, [r2]
	mov r1, #64
	eor r0, r0, r1
	strb r0, [r2]
	mov r1, #64
	and r0, r0, r1
	cmp r0, #0
	beq _080D3CAC
	ldr r1, _080D3CA4  @ =gUnknown_08174F0C
	ldr r2, _080D3CA8  @ =0x00000961
	b _080D3CB2
_080D3C6C:
	.4byte gUnknown_02002330
_080D3C70:
	.4byte gUnknown_02002354
_080D3C74:
	.4byte gUnknown_02002324
_080D3C78:
	.4byte gUnknown_0200233A
_080D3C7C:
	.4byte gUnknown_0200233B
_080D3C80:
	.4byte 0x0000165E
_080D3C84:
	.4byte gUnknown_0200235B
_080D3C88:
	.4byte gUnknown_02002328
_080D3C8C:
	.4byte 0x00001662
_080D3C90:
	.4byte gUnknown_02002335
_080D3C94:
	.4byte gUnknown_020022DB
_080D3C98:
	.4byte gUnknown_0200233D
_080D3C9C:
	.4byte gRam
_080D3CA0:
	.4byte 0x0000165F
_080D3CA4:
	.4byte gUnknown_08174F0C
_080D3CA8:
	.4byte 0x00000961
_080D3CAC:
	ldr r1, _080D3CD0  @ =gUnknown_08174F0C
	mov r2, #150
	lsl r2, r2, #4
_080D3CB2:
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r1, [r0]
	add r0, r5, #0
	mov r2, sp
	bl sub_080C9564
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080D3CD0:
	.4byte gUnknown_08174F0C
	THUMB_FUNC_END sub_080D3AF8

	THUMB_FUNC_START sub_080D3CD4
sub_080D3CD4: @ 0x080D3CD4
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080D3CF0  @ =gRam
	ldr r3, _080D3CF4  @ =0x00000965
	add r0, r1, r3
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bne _080D3CF8
	sub r3, r3, #5
	b _080D3CFA
	.byte 0x00
	.byte 0x00
_080D3CF0:
	.4byte gRam
_080D3CF4:
	.4byte 0x00000965
_080D3CF8:
	ldr r3, _080D3D10  @ =0x00000961
_080D3CFA:
	add r0, r1, r3
	strb r2, [r0]
	ldr r0, _080D3D14  @ =0x00000965
	add r1, r1, r0
	mov r0, #0
	ldrsb r0, [r1, r0]
	add r0, r0, #1
	cmp r0, #1
	ble _080D3D18
	mov r0, #1
	b _080D3D20
_080D3D10:
	.4byte 0x00000961
_080D3D14:
	.4byte 0x00000965
_080D3D18:
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #0
_080D3D20:
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080D3CD4

	THUMB_FUNC_START sub_080D3D24
sub_080D3D24: @ 0x080D3D24
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D3D6C  @ =gRam
	ldr r3, _080D3D70  @ =0x00000F92
	add r1, r2, r3
	add r1, r0, r1
	mov r3, #0
	strb r3, [r1]
	mov r4, #150
	lsl r4, r4, #4
	add r1, r2, r4
	strh r3, [r1]
	add r4, r4, #4
	add r1, r2, r4
	strh r3, [r1]
	add r4, r4, #4
	add r1, r2, r4
	strh r3, [r1]
	add r4, r4, #4
	add r1, r2, r4
	strh r3, [r1]
	ldr r3, _080D3D74  @ =gUnknown_08174ED4
	ldr r1, _080D3D78  @ =0x00000F62
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	lsr r1, r1, #1
	lsl r1, r1, #1
	add r1, r1, r3
	ldrb r1, [r1]
	bl sub_080D3E68
	pop {r4}
	pop {r0}
	bx r0
_080D3D6C:
	.4byte gRam
_080D3D70:
	.4byte 0x00000F92
_080D3D74:
	.4byte gUnknown_08174ED4
_080D3D78:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080D3D24

	THUMB_FUNC_START sub_080D3D7C
sub_080D3D7C: @ 0x080D3D7C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080D3DC0  @ =gRam
	ldr r1, _080D3DC4  @ =0x00000F92
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	bl GetRandomInt
	ldr r1, _080D3DC8  @ =0x00000F62
	add r4, r6, r1
	add r4, r5, r4
	mov r1, #3
	and r1, r1, r0
	lsl r1, r1, #1
	strb r1, [r4]
	bl sub_080AA868
	ldr r2, _080D3DCC  @ =gUnknown_08174ED4
	ldrb r1, [r4]
	lsr r1, r1, #1
	lsl r1, r1, #1
	add r1, r1, r2
	ldrh r1, [r1]
	cmp r0, r1
	blt _080D3DD4
	ldr r1, _080D3DD0  @ =0x00000F52
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #2
	strb r1, [r0]
	b _080D3DE0
_080D3DC0:
	.4byte gRam
_080D3DC4:
	.4byte 0x00000F92
_080D3DC8:
	.4byte 0x00000F62
_080D3DCC:
	.4byte gUnknown_08174ED4
_080D3DD0:
	.4byte 0x00000F52
_080D3DD4:
	ldr r0, _080D3DE8  @ =0x00000F52
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D3DE0:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D3DE8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D3D7C

	THUMB_FUNC_START sub_080D3DEC
sub_080D3DEC: @ 0x080D3DEC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r4, r1, #0
	ldr r3, _080D3E14  @ =gRam
	ldr r2, _080D3E18  @ =0x00001AE2
	add r0, r3, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D3E24
	ldr r2, _080D3E1C  @ =0x00000F52
	add r0, r3, r2
	add r0, r1, r0
	mov r2, #0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080D3E20  @ =0x00001770
	add r0, r3, r1
	strb r2, [r0]
	b _080D3E50
_080D3E14:
	.4byte gRam
_080D3E18:
	.4byte 0x00001AE2
_080D3E1C:
	.4byte 0x00000F52
_080D3E20:
	.4byte 0x00001770
_080D3E24:
	ldr r0, _080D3E58  @ =0x00000F92
	add r2, r3, r0
	add r2, r4, r2
	ldr r1, _080D3E5C  @ =0x00000996
	add r0, r3, r1
	ldrb r0, [r0]
	lsr r0, r0, #4
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldr r2, _080D3E60  @ =0x00000FC2
	add r0, r3, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D3E50
	ldr r0, _080D3E64  @ =0x00000F52
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D3E50:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D3E58:
	.4byte 0x00000F92
_080D3E5C:
	.4byte 0x00000996
_080D3E60:
	.4byte 0x00000FC2
_080D3E64:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D3DEC

	THUMB_FUNC_START sub_080D3E68
sub_080D3E68: @ 0x080D3E68
	push {r4-r6,lr}
	mov r6, r10
	mov r5, r9
	mov r4, r8
	push {r4-r6}
	sub sp, sp, #4
	mov r8, r0
	add r4, r1, #0
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080D3F54  @ =0x00002710
	add r0, r4, #0
	add r1, r5, #0
	bl __divsi3
	mul r0, r5, r0
	sub r4, r4, r0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080D3F58  @ =gRam
	mov r1, #250
	lsl r1, r1, #2
	add r0, r4, #0
	bl __divsi3
	mov r9, r0
	ldr r1, _080D3F5C  @ =0x0000096C
	add r0, r5, r1
	mov r2, r9
	strh r2, [r0]
	mov r3, #0
	ldrsh r1, [r0, r3]
	lsl r0, r1, #5
	sub r0, r0, r1
	lsl r0, r0, #2
	add r0, r0, r1
	lsl r0, r0, #3
	sub r4, r4, r0
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r0, #100
	mov r10, r0
	add r0, r4, #0
	mov r1, #100
	bl __udivsi3
	add r6, r0, #0
	lsl r6, r6, #24
	lsr r6, r6, #24
	ldr r1, _080D3F60  @ =0x00000968
	add r0, r5, r1
	strh r6, [r0]
	mov r2, #0
	ldrsh r0, [r0, r2]
	mov r3, r10
	mul r3, r0, r3
	add r0, r3, #0
	sub r4, r4, r0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #10
	bl __udivsi3
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D3F64  @ =0x00000964
	add r1, r5, r2
	strh r0, [r1]
	mov r3, #0
	ldrsh r2, [r1, r3]
	lsl r1, r2, #2
	add r1, r1, r2
	lsl r1, r1, #1
	sub r4, r4, r1
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	strh r4, [r1]
	lsl r4, r4, #4
	orr r4, r4, r0
	ldr r3, _080D3F68  @ =0x00001AEC
	add r0, r5, r3
	strb r4, [r0]
	mov r0, r9
	lsl r0, r0, #4
	orr r0, r0, r6
	mov r9, r0
	ldr r1, _080D3F6C  @ =0x00001AED
	add r0, r5, r1
	mov r2, r9
	strb r2, [r0]
	mov r0, r8
	mov r1, #247
	mov r2, sp
	bl sub_080C9564
	ldr r3, _080D3F70  @ =0x00000F52
	add r5, r5, r3
	add r8, r8, r5
	mov r1, r8
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D3F54:
	.4byte 0x00002710
_080D3F58:
	.4byte gRam
_080D3F5C:
	.4byte 0x0000096C
_080D3F60:
	.4byte 0x00000968
_080D3F64:
	.4byte 0x00000964
_080D3F68:
	.4byte 0x00001AEC
_080D3F6C:
	.4byte 0x00001AED
_080D3F70:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D3E68

	THUMB_FUNC_START sub_080D3F74
sub_080D3F74: @ 0x080D3F74
	push {r4,r5,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #49
	bl sub_080CA538
	ldr r3, _080D3FE0  @ =gRam
	ldr r1, _080D3FE4  @ =0x00000EE2
	add r2, r3, r1
	add r2, r0, r2
	mov r4, #150
	lsl r4, r4, #4
	add r1, r3, r4
	ldrb r1, [r1]
	mov r4, #0
	strb r1, [r2]
	ldr r5, _080D3FE8  @ =0x00000F02
	add r1, r3, r5
	add r1, r0, r1
	ldr r5, _080D3FEC  @ =0x00000961
	add r2, r3, r5
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080D3FF0  @ =0x00000ED2
	add r1, r3, r2
	add r1, r0, r1
	add r5, r5, #3
	add r2, r3, r5
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080D3FF4  @ =0x00000EF2
	add r1, r3, r2
	add r1, r0, r1
	add r5, r5, #1
	add r2, r3, r5
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080D3FF8  @ =0x00001052
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #1
	strb r2, [r1]
	ldr r5, _080D3FFC  @ =0x00001132
	add r1, r3, r5
	add r1, r0, r1
	strb r4, [r1]
	ldr r1, _080D4000  @ =0x00001172
	add r3, r3, r1
	add r0, r0, r3
	strb r2, [r0]
	pop {r4,r5}
	pop {r0}
	bx r0
_080D3FE0:
	.4byte gRam
_080D3FE4:
	.4byte 0x00000EE2
_080D3FE8:
	.4byte 0x00000F02
_080D3FEC:
	.4byte 0x00000961
_080D3FF0:
	.4byte 0x00000ED2
_080D3FF4:
	.4byte 0x00000EF2
_080D3FF8:
	.4byte 0x00001052
_080D3FFC:
	.4byte 0x00001132
_080D4000:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080D3F74

	THUMB_FUNC_START sub_080D4004
sub_080D4004: @ 0x080D4004
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080C35C0
	ldr r0, _080D4028  @ =gRam
	ldr r1, _080D402C  @ =0x00001172
	add r0, r0, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D4028:
	.4byte gRam
_080D402C:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080D4004

	THUMB_FUNC_START sub_080D4030
sub_080D4030: @ 0x080D4030
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D4050  @ =gUnknown_08174EDC
	ldr r1, _080D4054  @ =gRam
	ldr r3, _080D4058  @ =0x00001052
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080D4050:
	.4byte gUnknown_08174EDC
_080D4054:
	.4byte gRam
_080D4058:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080D4030

	THUMB_FUNC_START sub_080D405C
sub_080D405C: @ 0x080D405C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080D42DC
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D4090
	ldr r2, _080D4098  @ =gUnknown_08174EE4
	ldr r0, _080D409C  @ =gRam
	ldr r1, _080D40A0  @ =0x0000165C
	add r0, r0, r1
	ldrh r0, [r0]
	lsr r0, r0, #6
	mov r1, #1
	and r0, r0, r1
	lsl r0, r0, #2
	add r0, r0, r2
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D4090:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D4098:
	.4byte gUnknown_08174EE4
_080D409C:
	.4byte gRam
_080D40A0:
	.4byte 0x0000165C
	THUMB_FUNC_END sub_080D405C

	THUMB_FUNC_START sub_080D40A4
sub_080D40A4: @ 0x080D40A4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D40C4  @ =gUnknown_08174EEC
	ldr r1, _080D40C8  @ =gRam
	ldr r3, _080D40CC  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080D40C4:
	.4byte gUnknown_08174EEC
_080D40C8:
	.4byte gRam
_080D40CC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D40A4

	THUMB_FUNC_START sub_080D40D0
sub_080D40D0: @ 0x080D40D0
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #245
	mov r2, sp
	bl sub_080C9164
	add sp, sp, #4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D40D0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D40E8
sub_080D40E8: @ 0x080D40E8
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	mov r1, #246
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D4120
	ldr r2, _080D4128  @ =gRam
	ldr r0, _080D412C  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D4130  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r0, _080D4134  @ =0x00001770
	add r2, r2, r0
	mov r0, #1
	strb r0, [r2]
_080D4120:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080D4128:
	.4byte gRam
_080D412C:
	.4byte 0x00000F52
_080D4130:
	.4byte 0x00000FC2
_080D4134:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080D40E8

	THUMB_FUNC_START sub_080D4138
sub_080D4138: @ 0x080D4138
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r1, _080D417C  @ =gUnknown_08174ED4
	ldr r5, _080D4180  @ =gRam
	ldr r2, _080D4184  @ =0x00000F62
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsr r0, r0, #1
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r0, [r0]
	neg r0, r0
	bl sub_080AA83C
	ldr r1, _080D4188  @ =0x00000F52
	add r0, r5, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	mov r2, #0
	strb r0, [r4]
	ldr r1, _080D418C  @ =gUnknown_02002352
	mov r0, #160
	strb r0, [r1]
	ldr r0, _080D4190  @ =0x00001770
	add r5, r5, r0
	strb r2, [r5]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D417C:
	.4byte gUnknown_08174ED4
_080D4180:
	.4byte gRam
_080D4184:
	.4byte 0x00000F62
_080D4188:
	.4byte 0x00000F52
_080D418C:
	.4byte gUnknown_02002352
_080D4190:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080D4138

	THUMB_FUNC_START sub_080D4194
sub_080D4194: @ 0x080D4194
	bx lr
	THUMB_FUNC_END sub_080D4194

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D4198
sub_080D4198: @ 0x080D4198
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D41B8  @ =gUnknown_08174F2C
	ldr r1, _080D41BC  @ =gRam
	ldr r3, _080D41C0  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080D41B8:
	.4byte gUnknown_08174F2C
_080D41BC:
	.4byte gRam
_080D41C0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D4198

	THUMB_FUNC_START sub_080D41C4
sub_080D41C4: @ 0x080D41C4
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #245
	mov r2, sp
	bl sub_080C9164
	add sp, sp, #4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D41C4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D41DC
sub_080D41DC: @ 0x080D41DC
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	mov r1, #246
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D4214
	ldr r2, _080D421C  @ =gRam
	ldr r0, _080D4220  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D4224  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r0, _080D4228  @ =0x00001770
	add r2, r2, r0
	mov r0, #1
	strb r0, [r2]
_080D4214:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080D421C:
	.4byte gRam
_080D4220:
	.4byte 0x00000F52
_080D4224:
	.4byte 0x00000FC2
_080D4228:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080D41DC

	THUMB_FUNC_START sub_080D422C
sub_080D422C: @ 0x080D422C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D426C  @ =gRam
	mov r3, #150
	lsl r3, r3, #4
	add r2, r1, r3
	mov r3, #0
	strh r3, [r2]
	ldr r4, _080D4270  @ =0x00000964
	add r2, r1, r4
	strh r3, [r2]
	add r4, r4, #4
	add r2, r1, r4
	strh r3, [r2]
	add r4, r4, #4
	add r2, r1, r4
	strh r3, [r2]
	ldr r2, _080D4274  @ =gUnknown_08174ED4
	ldr r3, _080D4278  @ =0x00000F62
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsr r1, r1, #1
	lsl r1, r1, #1
	add r1, r1, r2
	ldrb r1, [r1]
	bl sub_080D3E68
	pop {r4}
	pop {r0}
	bx r0
_080D426C:
	.4byte gRam
_080D4270:
	.4byte 0x00000964
_080D4274:
	.4byte gUnknown_08174ED4
_080D4278:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080D422C

	THUMB_FUNC_START sub_080D427C
sub_080D427C: @ 0x080D427C
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r1, _080D42C0  @ =gUnknown_08174ED4
	ldr r5, _080D42C4  @ =gRam
	ldr r2, _080D42C8  @ =0x00000F62
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsr r0, r0, #1
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r0, [r0]
	neg r0, r0
	bl sub_080AA83C
	ldr r1, _080D42CC  @ =0x00000F52
	add r0, r5, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	mov r2, #0
	strb r0, [r4]
	ldr r1, _080D42D0  @ =gUnknown_02002352
	mov r0, #160
	strb r0, [r1]
	ldr r0, _080D42D4  @ =0x00001770
	add r5, r5, r0
	strb r2, [r5]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D42C0:
	.4byte gUnknown_08174ED4
_080D42C4:
	.4byte gRam
_080D42C8:
	.4byte 0x00000F62
_080D42CC:
	.4byte 0x00000F52
_080D42D0:
	.4byte gUnknown_02002352
_080D42D4:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080D427C

	THUMB_FUNC_START sub_080D42D8
sub_080D42D8: @ 0x080D42D8
	bx lr
	THUMB_FUNC_END sub_080D42D8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D42DC
sub_080D42DC: @ 0x080D42DC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D4310  @ =gRam
	ldr r2, _080D4314  @ =0x0000165C
	add r1, r3, r2
	ldrh r2, [r1]
	lsr r2, r2, #6
	mov r1, #1
	and r2, r2, r1
	ldr r1, _080D4318  @ =0x00000F92
	add r3, r3, r1
	add r3, r0, r3
	lsl r2, r2, #1
	ldrb r3, [r3]
	add r2, r2, r3
	lsl r1, r2, #1
	add r1, r1, r2
	lsl r1, r1, #3
	ldr r2, _080D431C  @ =gUnknown_08174F4C
	add r1, r1, r2
	mov r2, #3
	bl sub_080C9480
	pop {r0}
	bx r0
_080D4310:
	.4byte gRam
_080D4314:
	.4byte 0x0000165C
_080D4318:
	.4byte 0x00000F92
_080D431C:
	.4byte gUnknown_08174F4C
	THUMB_FUNC_END sub_080D42DC

	THUMB_FUNC_START sub_080D4320
sub_080D4320: @ 0x080D4320
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r5, r0, #24
	cmp r5, #0
	bne _080D4350
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D4350
	bl sub_080AF16C
	ldr r0, _080D4358  @ =gRam
	ldr r1, _080D435C  @ =0x00001719
	add r0, r0, r1
	strb r5, [r0]
	bl sub_08093078
_080D4350:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D4358:
	.4byte gRam
_080D435C:
	.4byte 0x00001719
	THUMB_FUNC_END sub_080D4320

	THUMB_FUNC_START sub_080D4360
sub_080D4360: @ 0x080D4360
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080D4394  @ =gRam
	ldr r1, _080D4398  @ =0x00000FD2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D43E8
	sub r1, r1, #176
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D43A0
	ldr r1, _080D439C  @ =0x00001122
	add r0, r2, r1
	add r0, r4, r0
	ldrb r2, [r0]
	mov r1, #191
	and r1, r1, r2
	strb r1, [r0]
	b _080D43B2
_080D4394:
	.4byte gRam
_080D4398:
	.4byte 0x00000FD2
_080D439C:
	.4byte 0x00001122
_080D43A0:
	ldr r0, _080D43F0  @ =0x00001122
	add r2, r2, r0
	add r2, r4, r2
	ldrb r1, [r2]
	mov r0, #191
	and r0, r0, r1
	mov r1, #64
	orr r0, r0, r1
	strb r0, [r2]
_080D43B2:
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D43E8
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r1, _080D43F4  @ =gUnknown_08174FAC
	ldr r0, _080D43F8  @ =gRam
	ldr r2, _080D43FC  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D43E8:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D43F0:
	.4byte 0x00001122
_080D43F4:
	.4byte gUnknown_08174FAC
_080D43F8:
	.4byte gRam
_080D43FC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D4360

	THUMB_FUNC_START sub_080D4400
sub_080D4400: @ 0x080D4400
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080D443C  @ =gRam
	ldr r1, _080D4440  @ =0x00000F92
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #0
	strb r1, [r0]
	ldr r0, _080D4444  @ =0x00001152
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	ldrb r0, [r1]
	sub r0, r0, #241
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D4436
	ldr r0, _080D4448  @ =0x00000F52
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D4436:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D443C:
	.4byte gRam
_080D4440:
	.4byte 0x00000F92
_080D4444:
	.4byte 0x00001152
_080D4448:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D4400

	THUMB_FUNC_START sub_080D444C
sub_080D444C: @ 0x080D444C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r5, r2, #0
	ldr r4, _080D449C  @ =gRam
	ldr r0, _080D44A0  @ =0x00001152
	add r1, r4, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldrb r0, [r1]
	add r3, r0, #0
	sub r3, r3, #16
	mov r0, #128
	and r3, r3, r0
	cmp r3, #0
	bne _080D4478
	ldr r1, _080D44A4  @ =0x00000F52
	add r0, r4, r1
	add r0, r2, r0
	strb r3, [r0]
_080D4478:
	ldr r0, _080D44A8  @ =0x00001052
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D44AC  @ =0x00000F92
	add r2, r4, r1
	add r2, r5, r2
	lsl r0, r0, #24
	lsr r0, r0, #25
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D449C:
	.4byte gRam
_080D44A0:
	.4byte 0x00001152
_080D44A4:
	.4byte 0x00000F52
_080D44A8:
	.4byte 0x00001052
_080D44AC:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080D444C

	THUMB_FUNC_START sub_080D44B0
sub_080D44B0: @ 0x080D44B0
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	bl GetRandomInt
	ldr r3, _080D44E4  @ =gRam
	ldr r1, _080D44E8  @ =0x00001152
	add r2, r3, r1
	add r2, r4, r2
	mov r1, #31
	and r1, r1, r0
	sub r1, r1, #16
	strb r1, [r2]
	ldr r0, _080D44EC  @ =0x00001142
	add r3, r3, r0
	add r3, r4, r3
	mov r0, #64
	strb r0, [r3]
	add r0, r4, #0
	bl sub_080D44F0
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D44E4:
	.4byte gRam
_080D44E8:
	.4byte 0x00001152
_080D44EC:
	.4byte 0x00001142
	THUMB_FUNC_END sub_080D44B0

	THUMB_FUNC_START sub_080D44F0
sub_080D44F0: @ 0x080D44F0
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C36D8
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D4518
	ldr r0, _080D4510  @ =gRam
	ldr r2, _080D4514  @ =0x00000F22
	add r1, r0, r2
	add r1, r4, r1
	mov r2, #16
	b _080D4522
	.byte 0x00
	.byte 0x00
_080D4510:
	.4byte gRam
_080D4514:
	.4byte 0x00000F22
_080D4518:
	ldr r0, _080D4544  @ =gRam
	ldr r3, _080D4548  @ =0x00000F22
	add r1, r0, r3
	add r1, r4, r1
	mov r2, #240
_080D4522:
	strb r2, [r1]
	add r2, r0, #0
	mov r1, #193
	lsl r1, r1, #4
	add r0, r2, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080D4550
	ldr r3, _080D454C  @ =0x00000F12
	add r0, r2, r3
	add r0, r4, r0
	mov r1, #252
	b _080D4558
_080D4544:
	.4byte gRam
_080D4548:
	.4byte 0x00000F22
_080D454C:
	.4byte 0x00000F12
_080D4550:
	ldr r1, _080D4570  @ =0x00000F12
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #4
_080D4558:
	strb r1, [r0]
	ldr r3, _080D4574  @ =0x00001172
	add r0, r2, r3
	add r0, r4, r0
	ldr r3, _080D4570  @ =0x00000F12
	add r1, r2, r3
	add r1, r4, r1
	ldrb r1, [r1]
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
_080D4570:
	.4byte 0x00000F12
_080D4574:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080D44F0

	THUMB_FUNC_START sub_080D4578
sub_080D4578: @ 0x080D4578
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080D45AC  @ =gRam
	ldr r1, _080D45B0  @ =0x00000FD2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D4656
	sub r1, r1, #176
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D45B8
	ldr r1, _080D45B4  @ =0x00001122
	add r0, r2, r1
	add r0, r4, r0
	ldrb r2, [r0]
	mov r1, #191
	and r1, r1, r2
	strb r1, [r0]
	b _080D45CA
_080D45AC:
	.4byte gRam
_080D45B0:
	.4byte 0x00000FD2
_080D45B4:
	.4byte 0x00001122
_080D45B8:
	ldr r0, _080D4638  @ =0x00001122
	add r2, r2, r0
	add r2, r4, r2
	ldrb r1, [r2]
	mov r0, #191
	and r0, r0, r1
	mov r1, #64
	orr r0, r0, r1
	strb r0, [r2]
_080D45CA:
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D4656
	add r0, r4, #0
	bl sub_080C841C
	add r6, r0, #0
	cmp r6, #0
	bne _080D4656
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r5, _080D463C  @ =gRam
	ldr r1, _080D4640  @ =0x00001152
	add r0, r5, r1
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #2
	strb r0, [r2]
	sub r1, r1, #16
	add r0, r5, r1
	add r3, r4, r0
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D4622
	strb r6, [r3]
	mov r0, #16
	strb r0, [r2]
	ldr r2, _080D4644  @ =0x00000FC2
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #12
	strb r1, [r0]
_080D4622:
	ldr r1, _080D4644  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080D464C
	ldr r2, _080D4648  @ =0x00000F92
	add r0, r5, r2
	add r0, r4, r0
	b _080D4654
	.byte 0x00
	.byte 0x00
_080D4638:
	.4byte 0x00001122
_080D463C:
	.4byte gRam
_080D4640:
	.4byte 0x00001152
_080D4644:
	.4byte 0x00000FC2
_080D4648:
	.4byte 0x00000F92
_080D464C:
	ldr r1, _080D465C  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
_080D4654:
	strb r1, [r0]
_080D4656:
	pop {r4-r6}
	pop {r0}
	bx r0
_080D465C:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080D4578

	THUMB_FUNC_START sub_080D4660
sub_080D4660: @ 0x080D4660
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D46F8
	bl sub_0809E3CC
	cmp r0, #0
	bne _080D46F8
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D46F8
	ldr r5, _080D4700  @ =gRam
	ldr r1, _080D4704  @ =0x000016D5
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #2
	bne _080D46F8
	ldr r0, _080D4708  @ =gUnknown_02002354
	ldrb r1, [r0]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #7
	bne _080D46F8
	ldr r1, _080D470C  @ =gUnknown_03003E70
	mov r0, #1
	strb r0, [r1]
	ldr r1, _080D4710  @ =0x00000546
	add r0, r5, r1
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	beq _080D46F8
	ldr r0, _080D4714  @ =0x00000A3C
	add r1, r5, r0
	mov r0, #25
	strh r0, [r1]
	ldr r0, _080D4718  @ =0x0000180D
	add r1, r5, r0
	mov r0, #1
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #9
	bl sub_080D4DA4
	add r0, r4, #0
	mov r1, #11
	bl sub_080D4DA4
	add r0, r4, #0
	mov r1, #15
	bl sub_080D4DA4
	add r0, r4, #0
	bl sub_080D5414
	ldr r0, _080D471C  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D4720  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #240
	strb r1, [r0]
_080D46F8:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D4700:
	.4byte gRam
_080D4704:
	.4byte 0x000016D5
_080D4708:
	.4byte gUnknown_02002354
_080D470C:
	.4byte gUnknown_03003E70
_080D4710:
	.4byte 0x00000546
_080D4714:
	.4byte 0x00000A3C
_080D4718:
	.4byte 0x0000180D
_080D471C:
	.4byte 0x00000F52
_080D4720:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080D4660

	THUMB_FUNC_START sub_080D4724
sub_080D4724: @ 0x080D4724
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080D4764  @ =gRam
	ldr r1, _080D4768  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080D474E
	add r0, r4, #0
	bl sub_080D5464
	ldr r1, _080D476C  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #192
	strb r0, [r6]
_080D474E:
	ldr r0, _080D4770  @ =0x00001809
	add r1, r5, r0
	mov r0, #10
	strb r0, [r1]
	ldr r0, _080D4774  @ =0x00001770
	add r1, r5, r0
	mov r0, #1
	strb r0, [r1]
	pop {r4-r6}
	pop {r0}
	bx r0
_080D4764:
	.4byte gRam
_080D4768:
	.4byte 0x00000FC2
_080D476C:
	.4byte 0x00000F52
_080D4770:
	.4byte 0x00001809
_080D4774:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080D4724

	THUMB_FUNC_START sub_080D4778
sub_080D4778: @ 0x080D4778
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080D47BC  @ =gRam
	ldr r1, _080D47C0  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080D47A6
	add r1, r0, #0
	add r0, r4, #0
	mov r2, #255
	bl sub_080D4AC4
	ldr r0, _080D47C4  @ =0x00000F52
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #8
	strb r0, [r5]
_080D47A6:
	ldr r0, _080D47C8  @ =0x00001809
	add r1, r6, r0
	mov r0, #10
	strb r0, [r1]
	ldr r0, _080D47CC  @ =0x00001770
	add r1, r6, r0
	mov r0, #1
	strb r0, [r1]
	pop {r4-r6}
	pop {r0}
	bx r0
_080D47BC:
	.4byte gRam
_080D47C0:
	.4byte 0x00000FC2
_080D47C4:
	.4byte 0x00000F52
_080D47C8:
	.4byte 0x00001809
_080D47CC:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080D4778

	THUMB_FUNC_START sub_080D47D0
sub_080D47D0: @ 0x080D47D0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080D4814  @ =gRam
	ldr r1, _080D4818  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080D47FE
	add r0, r4, #0
	mov r1, #1
	mov r2, #255
	bl sub_080D4AC4
	ldr r1, _080D481C  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #16
	strb r0, [r6]
_080D47FE:
	ldr r0, _080D4820  @ =0x00001809
	add r1, r5, r0
	mov r0, #11
	strb r0, [r1]
	ldr r0, _080D4824  @ =0x00001770
	add r1, r5, r0
	mov r0, #1
	strb r0, [r1]
	pop {r4-r6}
	pop {r0}
	bx r0
_080D4814:
	.4byte gRam
_080D4818:
	.4byte 0x00000FC2
_080D481C:
	.4byte 0x00000F52
_080D4820:
	.4byte 0x00001809
_080D4824:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080D47D0

	THUMB_FUNC_START sub_080D4828
sub_080D4828: @ 0x080D4828
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r5, _080D487C  @ =gRam
	ldr r1, _080D4880  @ =0x00000FC2
	add r0, r5, r1
	add r0, r6, r0
	ldrb r4, [r0]
	cmp r4, #0
	bne _080D4876
	ldr r1, _080D4884  @ =0x000009C6
	add r0, r5, r1
	ldrh r1, [r0]
	ldr r0, _080D4888  @ =gUnknown_02002280
	add r1, r1, r0
	ldrb r0, [r1]
	mov r2, #64
	orr r0, r0, r2
	strb r0, [r1]
	ldr r1, _080D488C  @ =0x00001776
	add r0, r5, r1
	strb r4, [r0]
	mov r0, #1
	bl sub_080A1588
	mov r0, #179
	lsl r0, r0, #5
	add r1, r5, r0
	mov r0, #5
	strb r0, [r1]
	ldr r1, _080D4890  @ =0x00001809
	add r0, r5, r1
	strb r4, [r0]
	ldr r0, _080D4894  @ =0x00000F52
	add r1, r5, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D4876:
	pop {r4-r6}
	pop {r0}
	bx r0
_080D487C:
	.4byte gRam
_080D4880:
	.4byte 0x00000FC2
_080D4884:
	.4byte 0x000009C6
_080D4888:
	.4byte gUnknown_02002280
_080D488C:
	.4byte 0x00001776
_080D4890:
	.4byte 0x00001809
_080D4894:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D4828

	THUMB_FUNC_START sub_080D4898
sub_080D4898: @ 0x080D4898
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080D53CC
	ldr r5, _080D4910  @ =gRam
	ldr r1, _080D4914  @ =0x00000F62
	add r0, r5, r1
	add r3, r4, r0
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080D48D0
	add r1, r1, #32
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	ldr r1, _080D4918  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
_080D48D0:
	ldr r0, _080D491C  @ =0x00000FB2
	add r2, r5, r0
	add r2, r6, r2
	ldrb r0, [r3]
	lsr r0, r0, #2
	mov r1, #3
	and r0, r0, r1
	strb r0, [r2]
	ldrb r0, [r3]
	lsr r2, r0, #5
	ldr r0, _080D4920  @ =0x00000F92
	add r1, r5, r0
	add r1, r6, r1
	ldr r0, _080D4924  @ =gUnknown_08174FE4
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D4928  @ =gUnknown_08174FED
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D490A
	ldrb r1, [r3]
	lsr r1, r1, #2
	mov r0, #1
	and r1, r1, r0
	add r0, r6, #0
	bl sub_080D4AC4
_080D490A:
	pop {r4-r6}
	pop {r0}
	bx r0
_080D4910:
	.4byte gRam
_080D4914:
	.4byte 0x00000F62
_080D4918:
	.4byte 0x00000FA2
_080D491C:
	.4byte 0x00000FB2
_080D4920:
	.4byte 0x00000F92
_080D4924:
	.4byte gUnknown_08174FE4
_080D4928:
	.4byte gUnknown_08174FED
	THUMB_FUNC_END sub_080D4898

	THUMB_FUNC_START sub_080D492C
sub_080D492C: @ 0x080D492C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080D53CC
	ldr r5, _080D4984  @ =gRam
	ldr r1, _080D4988  @ =0x00000F62
	add r0, r5, r1
	add r3, r4, r0
	ldrb r0, [r3]
	add r0, r0, #1
	mov r7, #0
	strb r0, [r3]
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D4964
	add r1, r1, #32
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	ldr r1, _080D498C  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	strb r7, [r0]
_080D4964:
	ldr r0, _080D4990  @ =0x00000FB2
	add r2, r5, r0
	add r2, r6, r2
	ldrb r0, [r3]
	lsr r0, r0, #2
	mov r1, #3
	and r0, r0, r1
	strb r0, [r2]
	ldr r1, _080D4994  @ =0x00000F92
	add r0, r5, r1
	add r0, r6, r0
	strb r7, [r0]
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D4984:
	.4byte gRam
_080D4988:
	.4byte 0x00000F62
_080D498C:
	.4byte 0x00000FA2
_080D4990:
	.4byte 0x00000FB2
_080D4994:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080D492C

	THUMB_FUNC_START sub_080D4998
sub_080D4998: @ 0x080D4998
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C6240
	ldr r5, _080D49F8  @ =gRam
	ldr r1, _080D49FC  @ =0x00000F62
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D49CC
	add r0, r4, #0
	bl Sprite3_Move
	ldr r3, _080D4A00  @ =0x00000996
	add r0, r5, r3
	ldrb r1, [r0]
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080D49F0
	add r0, r4, #0
	bl sub_080D4A0C
_080D49CC:
	mov r0, #1
	cmp r0, #0
	beq _080D49F0
	ldr r2, _080D49F8  @ =gRam
	ldr r0, _080D4A04  @ =0x00000F72
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080D49F0
	ldr r3, _080D4A08  @ =0x00000FA2
	add r0, r2, r3
	add r0, r4, r0
	strb r1, [r0]
_080D49F0:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D49F8:
	.4byte gRam
_080D49FC:
	.4byte 0x00000F62
_080D4A00:
	.4byte 0x00000996
_080D4A04:
	.4byte 0x00000F72
_080D4A08:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080D4998

	THUMB_FUNC_START sub_080D4A0C
sub_080D4A0C: @ 0x080D4A0C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r0, #98
	add r1, r5, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080D4A92
	ldr r2, _080D4A98  @ =gRam
	ldr r0, _080D4A9C  @ =0x00000EE2
	add r1, r2, r0
	add r1, r4, r1
	mov r3, #150
	lsl r3, r3, #4
	add r0, r2, r3
	ldrb r0, [r0]
	mov r3, #0
	strb r0, [r1]
	ldr r6, _080D4AA0  @ =0x00000F02
	add r0, r2, r6
	add r0, r4, r0
	ldr r6, _080D4AA4  @ =0x00000961
	add r1, r2, r6
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D4AA8  @ =0x00000ED2
	add r0, r2, r1
	add r0, r4, r0
	add r6, r6, #3
	add r1, r2, r6
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D4AAC  @ =0x00000EF2
	add r0, r2, r1
	add r0, r4, r0
	add r6, r6, #1
	add r1, r2, r6
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D4AB0  @ =0x00001052
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r6, _080D4AB4  @ =0x00000F72
	add r0, r2, r6
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	ldr r1, _080D4AB8  @ =0x00000F92
	add r0, r2, r1
	add r1, r4, r0
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r6, _080D4ABC  @ =0x00001122
	add r0, r2, r6
	add r1, r4, r0
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D4AC0  @ =0x00001012
	add r2, r2, r0
	add r2, r4, r2
	strb r3, [r2]
_080D4A92:
	pop {r4-r6}
	pop {r0}
	bx r0
_080D4A98:
	.4byte gRam
_080D4A9C:
	.4byte 0x00000EE2
_080D4AA0:
	.4byte 0x00000F02
_080D4AA4:
	.4byte 0x00000961
_080D4AA8:
	.4byte 0x00000ED2
_080D4AAC:
	.4byte 0x00000EF2
_080D4AB0:
	.4byte 0x00001052
_080D4AB4:
	.4byte 0x00000F72
_080D4AB8:
	.4byte 0x00000F92
_080D4ABC:
	.4byte 0x00001122
_080D4AC0:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080D4A0C

	THUMB_FUNC_START sub_080D4AC4
sub_080D4AC4: @ 0x080D4AC4
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r10, r0
	lsl r1, r1, #24
	lsr r4, r1, #24
	lsl r2, r2, #24
	lsr r2, r2, #24
	str r2, [sp]
	mov r0, #98
	mov r1, r10
	bl sub_080CA538
	add r3, r0, #0
	cmp r3, #0
	bge _080D4AF0
	b _080D4D22
_080D4AF0:
	ldr r1, _080D4D34  @ =gRam
	mov r0, #150
	lsl r0, r0, #4
	add r5, r1, r0
	ldrh r0, [r5]
	sub r0, r0, #4
	strh r0, [r5]
	ldr r6, _080D4D38  @ =gUnknown_03003112
	add r2, r3, r6
	ldrb r0, [r5]
	strb r0, [r2]
	ldr r7, _080D4D3C  @ =gUnknown_03003132
	add r2, r3, r7
	ldr r6, _080D4D40  @ =gUnknown_03002B91
	ldrb r0, [r6]
	strb r0, [r2]
	ldr r7, _080D4D44  @ =0x00000964
	add r6, r1, r7
	ldrh r0, [r6]
	add r0, r0, #4
	strh r0, [r6]
	ldr r0, _080D4D48  @ =gUnknown_03003102
	add r2, r3, r0
	ldrb r0, [r6]
	strb r0, [r2]
	ldr r7, _080D4D4C  @ =gUnknown_03003122
	add r2, r3, r7
	ldr r7, _080D4D50  @ =gUnknown_03002B95
	ldrb r0, [r7]
	strb r0, [r2]
	ldr r2, _080D4D54  @ =gUnknown_03003282
	add r0, r3, r2
	mov r7, #2
	strb r7, [r0]
	ldr r2, _080D4D58  @ =gUnknown_03003192
	add r0, r3, r2
	strb r7, [r0]
	ldr r2, _080D4D5C  @ =gUnknown_03003242
	add r0, r3, r2
	mov r2, #0
	strb r2, [r0]
	ldr r0, _080D4D60  @ =gUnknown_03003152
	add r2, r3, r0
	ldr r0, _080D4D64  @ =gUnknown_08175058
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, _080D4D68  @ =gUnknown_03003142
	add r2, r3, r0
	ldr r0, _080D4D6C  @ =gUnknown_08175060
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, _080D4D70  @ =gUnknown_030031C2
	add r2, r3, r0
	ldr r0, _080D4D74  @ =gUnknown_08175068
	add r0, r4, r0
	ldrb r0, [r0]
	mov r9, r0
	strb r0, [r2]
	ldr r0, _080D4D78  @ =gUnknown_03003352
	add r2, r3, r0
	ldr r0, _080D4D7C  @ =gUnknown_0817506C
	add r0, r4, r0
	ldrb r0, [r0]
	mov r8, r0
	strb r0, [r2]
	strb r4, [r5]
	ldr r1, _080D4D80  @ =gUnknown_030031A2
	add r0, r3, r1
	mov r2, sp
	ldrb r2, [r2]
	strb r2, [r0]
	mov r0, #98
	mov r1, r10
	bl sub_080CA538
	add r3, r0, #0
	cmp r3, #0
	bge _080D4B92
	b _080D4D22
_080D4B92:
	ldrh r0, [r5]
	sub r0, r0, #4
	strh r0, [r5]
	ldr r0, _080D4D38  @ =gUnknown_03003112
	add r1, r3, r0
	ldrb r0, [r5]
	strb r0, [r1]
	ldr r2, _080D4D3C  @ =gUnknown_03003132
	add r1, r3, r2
	ldr r2, _080D4D40  @ =gUnknown_03002B91
	ldrb r0, [r2]
	strb r0, [r1]
	ldrh r0, [r6]
	add r0, r0, #4
	strh r0, [r6]
	ldr r0, _080D4D48  @ =gUnknown_03003102
	add r1, r3, r0
	ldrb r0, [r6]
	strb r0, [r1]
	ldr r2, _080D4D4C  @ =gUnknown_03003122
	add r1, r3, r2
	ldr r2, _080D4D50  @ =gUnknown_03002B95
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r1, _080D4D54  @ =gUnknown_03003282
	add r0, r3, r1
	strb r7, [r0]
	ldr r2, _080D4D58  @ =gUnknown_03003192
	add r0, r3, r2
	strb r7, [r0]
	ldr r1, _080D4D5C  @ =gUnknown_03003242
	add r0, r3, r1
	mov r2, #0
	strb r2, [r0]
	ldr r0, _080D4D60  @ =gUnknown_03003152
	add r1, r3, r0
	ldr r0, _080D4D84  @ =gUnknown_0817505A
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080D4D68  @ =gUnknown_03003142
	add r1, r3, r2
	ldr r0, _080D4D88  @ =gUnknown_08175062
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080D4D70  @ =gUnknown_030031C2
	add r0, r3, r1
	mov r2, r9
	strb r2, [r0]
	ldr r1, _080D4D78  @ =gUnknown_03003352
	add r0, r3, r1
	mov r2, r8
	strb r2, [r0]
	strb r4, [r5]
	ldr r1, _080D4D80  @ =gUnknown_030031A2
	add r0, r3, r1
	mov r2, sp
	ldrb r2, [r2]
	strb r2, [r0]
	mov r0, #98
	mov r1, r10
	bl sub_080CA538
	add r3, r0, #0
	cmp r3, #0
	bge _080D4C1A
	b _080D4D22
_080D4C1A:
	ldrh r0, [r5]
	sub r0, r0, #4
	strh r0, [r5]
	ldr r0, _080D4D38  @ =gUnknown_03003112
	add r1, r3, r0
	ldrb r0, [r5]
	strb r0, [r1]
	ldr r2, _080D4D3C  @ =gUnknown_03003132
	add r1, r3, r2
	ldr r2, _080D4D40  @ =gUnknown_03002B91
	ldrb r0, [r2]
	strb r0, [r1]
	ldrh r0, [r6]
	add r0, r0, #4
	strh r0, [r6]
	ldr r0, _080D4D48  @ =gUnknown_03003102
	add r1, r3, r0
	ldrb r0, [r6]
	strb r0, [r1]
	ldr r2, _080D4D4C  @ =gUnknown_03003122
	add r1, r3, r2
	ldr r2, _080D4D50  @ =gUnknown_03002B95
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r1, _080D4D54  @ =gUnknown_03003282
	add r0, r3, r1
	strb r7, [r0]
	ldr r2, _080D4D58  @ =gUnknown_03003192
	add r0, r3, r2
	strb r7, [r0]
	ldr r1, _080D4D5C  @ =gUnknown_03003242
	add r0, r3, r1
	mov r2, #0
	strb r2, [r0]
	ldr r0, _080D4D60  @ =gUnknown_03003152
	add r1, r3, r0
	ldr r0, _080D4D8C  @ =gUnknown_0817505C
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080D4D68  @ =gUnknown_03003142
	add r1, r3, r2
	ldr r0, _080D4D90  @ =gUnknown_08175064
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D4D70  @ =gUnknown_030031C2
	add r1, r3, r0
	ldr r0, _080D4D94  @ =gUnknown_0817506A
	add r0, r4, r0
	ldrb r0, [r0]
	mov r9, r0
	strb r0, [r1]
	ldr r2, _080D4D78  @ =gUnknown_03003352
	add r1, r3, r2
	ldr r0, _080D4D98  @ =gUnknown_0817506E
	add r0, r4, r0
	ldrb r0, [r0]
	mov r8, r0
	strb r0, [r1]
	strb r4, [r5]
	ldr r1, _080D4D80  @ =gUnknown_030031A2
	add r0, r3, r1
	mov r2, sp
	ldrb r2, [r2]
	strb r2, [r0]
	mov r0, #98
	mov r1, r10
	bl sub_080CA538
	add r3, r0, #0
	cmp r3, #0
	blt _080D4D22
	ldrh r0, [r5]
	sub r0, r0, #4
	strh r0, [r5]
	ldr r0, _080D4D38  @ =gUnknown_03003112
	add r1, r3, r0
	ldrb r0, [r5]
	strb r0, [r1]
	ldr r2, _080D4D3C  @ =gUnknown_03003132
	add r1, r3, r2
	ldr r2, _080D4D40  @ =gUnknown_03002B91
	ldrb r0, [r2]
	strb r0, [r1]
	ldrh r0, [r6]
	add r0, r0, #4
	strh r0, [r6]
	ldr r0, _080D4D48  @ =gUnknown_03003102
	add r1, r3, r0
	ldrb r0, [r6]
	strb r0, [r1]
	ldr r2, _080D4D4C  @ =gUnknown_03003122
	add r1, r3, r2
	ldr r6, _080D4D50  @ =gUnknown_03002B95
	ldrb r0, [r6]
	strb r0, [r1]
	ldr r1, _080D4D54  @ =gUnknown_03003282
	add r0, r3, r1
	strb r7, [r0]
	ldr r2, _080D4D58  @ =gUnknown_03003192
	add r0, r3, r2
	strb r7, [r0]
	ldr r6, _080D4D5C  @ =gUnknown_03003242
	add r0, r3, r6
	mov r7, #0
	strb r7, [r0]
	ldr r0, _080D4D60  @ =gUnknown_03003152
	add r1, r3, r0
	ldr r0, _080D4D9C  @ =gUnknown_0817505E
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080D4D68  @ =gUnknown_03003142
	add r1, r3, r2
	ldr r0, _080D4DA0  @ =gUnknown_08175066
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r6, _080D4D70  @ =gUnknown_030031C2
	add r0, r3, r6
	mov r7, r9
	strb r7, [r0]
	ldr r1, _080D4D78  @ =gUnknown_03003352
	add r0, r3, r1
	mov r2, r8
	strb r2, [r0]
	ldr r6, _080D4D80  @ =gUnknown_030031A2
	add r0, r3, r6
	mov r7, sp
	ldrb r7, [r7]
	strb r7, [r0]
_080D4D22:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D4D34:
	.4byte gRam
_080D4D38:
	.4byte gUnknown_03003112
_080D4D3C:
	.4byte gUnknown_03003132
_080D4D40:
	.4byte gUnknown_03002B91
_080D4D44:
	.4byte 0x00000964
_080D4D48:
	.4byte gUnknown_03003102
_080D4D4C:
	.4byte gUnknown_03003122
_080D4D50:
	.4byte gUnknown_03002B95
_080D4D54:
	.4byte gUnknown_03003282
_080D4D58:
	.4byte gUnknown_03003192
_080D4D5C:
	.4byte gUnknown_03003242
_080D4D60:
	.4byte gUnknown_03003152
_080D4D64:
	.4byte gUnknown_08175058
_080D4D68:
	.4byte gUnknown_03003142
_080D4D6C:
	.4byte gUnknown_08175060
_080D4D70:
	.4byte gUnknown_030031C2
_080D4D74:
	.4byte gUnknown_08175068
_080D4D78:
	.4byte gUnknown_03003352
_080D4D7C:
	.4byte gUnknown_0817506C
_080D4D80:
	.4byte gUnknown_030031A2
_080D4D84:
	.4byte gUnknown_0817505A
_080D4D88:
	.4byte gUnknown_08175062
_080D4D8C:
	.4byte gUnknown_0817505C
_080D4D90:
	.4byte gUnknown_08175064
_080D4D94:
	.4byte gUnknown_0817506A
_080D4D98:
	.4byte gUnknown_0817506E
_080D4D9C:
	.4byte gUnknown_0817505E
_080D4DA0:
	.4byte gUnknown_08175066
	THUMB_FUNC_END sub_080D4AC4

	THUMB_FUNC_START sub_080D4DA4
sub_080D4DA4: @ 0x080D4DA4
	push {r4-r6,lr}
	add r2, r0, #0
	add r5, r1, #0
	lsl r2, r2, #24
	lsr r2, r2, #24
	lsl r5, r5, #24
	lsr r5, r5, #24
	mov r0, #98
	add r1, r2, #0
	bl sub_080CA538
	ldr r4, _080D4E48  @ =gRam
	ldr r1, _080D4E4C  @ =0x00001122
	add r6, r4, r1
	add r6, r0, r6
	strb r5, [r6]
	ldr r2, _080D4E50  @ =0x00000EE2
	add r1, r4, r2
	add r1, r0, r1
	ldr r5, _080D4E54  @ =0x000016C4
	add r3, r4, r5
	ldrb r2, [r3]
	strb r2, [r1]
	ldr r2, _080D4E58  @ =0x00000F02
	add r1, r4, r2
	add r1, r0, r1
	add r5, r5, #1
	add r2, r4, r5
	ldrb r2, [r2]
	strb r2, [r1]
	ldrh r2, [r3]
	add r2, r2, #8
	ldr r3, _080D4E5C  @ =0x00000ED2
	add r1, r4, r3
	add r1, r0, r1
	strb r2, [r1]
	ldr r5, _080D4E60  @ =0x00000EF2
	add r1, r4, r5
	add r1, r0, r1
	lsr r2, r2, #8
	strb r2, [r1]
	ldr r2, _080D4E64  @ =0x00000F92
	add r1, r4, r2
	add r1, r0, r1
	mov r2, #4
	strb r2, [r1]
	ldr r3, _080D4E68  @ =0x00001052
	add r1, r4, r3
	add r1, r0, r1
	mov r3, #3
	mov r2, #3
	strb r2, [r1]
	ldr r5, _080D4E6C  @ =0x00001012
	add r1, r4, r5
	add r1, r0, r1
	mov r2, #64
	strb r2, [r1]
	ldr r2, _080D4E70  @ =0x00000FC2
	add r1, r4, r2
	add r1, r0, r1
	mov r2, #228
	strb r2, [r1]
	ldrb r2, [r6]
	lsr r2, r2, #1
	and r2, r2, r3
	sub r5, r5, #240
	add r3, r4, r5
	add r3, r0, r3
	ldr r1, _080D4E74  @ =gUnknown_08175070
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r3]
	ldr r1, _080D4E78  @ =0x00000F12
	add r4, r4, r1
	add r0, r0, r4
	ldr r1, _080D4E7C  @ =gUnknown_08175074
	add r2, r2, r1
	ldrb r1, [r2]
	strb r1, [r0]
	pop {r4-r6}
	pop {r0}
	bx r0
_080D4E48:
	.4byte gRam
_080D4E4C:
	.4byte 0x00001122
_080D4E50:
	.4byte 0x00000EE2
_080D4E54:
	.4byte 0x000016C4
_080D4E58:
	.4byte 0x00000F02
_080D4E5C:
	.4byte 0x00000ED2
_080D4E60:
	.4byte 0x00000EF2
_080D4E64:
	.4byte 0x00000F92
_080D4E68:
	.4byte 0x00001052
_080D4E6C:
	.4byte 0x00001012
_080D4E70:
	.4byte 0x00000FC2
_080D4E74:
	.4byte gUnknown_08175070
_080D4E78:
	.4byte 0x00000F12
_080D4E7C:
	.4byte gUnknown_08175074
	THUMB_FUNC_END sub_080D4DA4

	THUMB_FUNC_START sub_080D4E80
sub_080D4E80: @ 0x080D4E80
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl Sprite3_Move
	ldr r2, _080D4EC0  @ =gRam
	ldr r1, _080D4EC4  @ =0x00000FC2
	add r0, r2, r1
	add r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #0
	bne _080D4EBA
	ldr r0, _080D4EC8  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #208
	strb r0, [r3]
	ldr r3, _080D4ECC  @ =0x00000F62
	add r1, r2, r3
	add r1, r4, r1
	ldr r3, _080D4ED0  @ =0x00001122
	add r0, r2, r3
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
_080D4EBA:
	pop {r4}
	pop {r0}
	bx r0
_080D4EC0:
	.4byte gRam
_080D4EC4:
	.4byte 0x00000FC2
_080D4EC8:
	.4byte 0x00000F52
_080D4ECC:
	.4byte 0x00000F62
_080D4ED0:
	.4byte 0x00001122
	THUMB_FUNC_END sub_080D4E80

	THUMB_FUNC_START sub_080D4ED4
sub_080D4ED4: @ 0x080D4ED4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r5, _080D4F24  @ =gRam
	ldr r1, _080D4F28  @ =0x00001122
	add r0, r5, r1
	add r4, r3, r0
	ldrb r0, [r4]
	mov r2, #241
	and r2, r2, r0
	strb r2, [r4]
	lsl r0, r3, #1
	ldr r6, _080D4F2C  @ =0x00000996
	add r1, r5, r6
	ldrb r1, [r1]
	eor r0, r0, r1
	mov r1, #14
	and r0, r0, r1
	orr r0, r0, r2
	strb r0, [r4]
	ldr r1, _080D4F30  @ =0x00000FC2
	add r0, r5, r1
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D4F1E
	ldr r6, _080D4F34  @ =0x00000F52
	add r1, r5, r6
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D4F38  @ =0x00000F62
	add r0, r5, r1
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r4]
_080D4F1E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080D4F24:
	.4byte gRam
_080D4F28:
	.4byte 0x00001122
_080D4F2C:
	.4byte 0x00000996
_080D4F30:
	.4byte 0x00000FC2
_080D4F34:
	.4byte 0x00000F52
_080D4F38:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080D4ED4

	THUMB_FUNC_START sub_080D4F3C
sub_080D4F3C: @ 0x080D4F3C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl Sprite3_Move
	ldr r2, _080D4F98  @ =gRam
	ldr r1, _080D4F9C  @ =0x00000FC2
	add r0, r2, r1
	add r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #0
	bne _080D4F74
	ldr r0, _080D4FA0  @ =0x00000F22
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	lsl r0, r0, #1
	strb r0, [r1]
	ldr r0, _080D4FA4  @ =0x00000F12
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	lsl r0, r0, #1
	strb r0, [r1]
	mov r0, #6
	strb r0, [r3]
_080D4F74:
	ldr r3, _080D4FA8  @ =0x00001062
	add r1, r2, r3
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080D4F90
	sub r3, r3, #192
	add r0, r2, r3
	add r0, r5, r0
	strb r1, [r0]
_080D4F90:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D4F98:
	.4byte gRam
_080D4F9C:
	.4byte 0x00000FC2
_080D4FA0:
	.4byte 0x00000F22
_080D4FA4:
	.4byte 0x00000F12
_080D4FA8:
	.4byte 0x00001062
	THUMB_FUNC_END sub_080D4F3C

	THUMB_FUNC_START sub_080D4FAC
sub_080D4FAC: @ 0x080D4FAC
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r8
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D5056
	mov r2, #5
	add r6, sp, #4
	ldr r0, _080D5068  @ =0x00000969
	ldr r1, _080D506C  @ =gRam
	add r0, r0, r1
	mov r10, r0
	mov r3, #150
	lsl r3, r3, #4
	add r3, r3, r1
	mov r9, r3
_080D4FE4:
	ldr r0, _080D5070  @ =gUnknown_03003E74
	ldrb r1, [r6]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r1, _080D5074  @ =gUnknown_08175084
	lsl r5, r2, #24
	asr r5, r5, #24
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	mov r4, r9
	ldrh r4, [r4]
	add r1, r1, r4
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r7, _080D506C  @ =gRam
	ldr r2, _080D5078  @ =0x00000964
	add r3, r7, r2
	ldr r2, _080D507C  @ =gUnknown_0817508A
	add r2, r5, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080D5080  @ =gUnknown_08175090
	add r3, r5, r3
	ldrb r3, [r3]
	mov r7, r10
	mov r4, #0
	ldrsb r4, [r7, r4]
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #2
	str r4, [sp]
	bl sub_080C6004
	sub r5, r5, #1
	lsl r5, r5, #24
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsr r2, r5, #24
	cmp r5, #0
	bge _080D4FE4
	mov r0, r8
	mov r1, #0
	mov r2, #5
	bl sub_080C6350
_080D5056:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D5068:
	.4byte 0x00000969
_080D506C:
	.4byte gRam
_080D5070:
	.4byte gUnknown_03003E74
_080D5074:
	.4byte gUnknown_08175084
_080D5078:
	.4byte 0x00000964
_080D507C:
	.4byte gUnknown_0817508A
_080D5080:
	.4byte gUnknown_08175090
	THUMB_FUNC_END sub_080D4FAC

	THUMB_FUNC_START sub_080D5084
sub_080D5084: @ 0x080D5084
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r6, _080D5158  @ =gRam
	ldr r0, _080D515C  @ =0x0000096C
	add r1, r6, r0
	mov r0, #0
	mov r8, r0
	mov r0, #2
	strh r0, [r1]
	ldr r1, _080D5160  @ =gUnknown_08175098
	add r0, r7, #0
	bl sub_080C94D0
	mov r1, #128
	lsl r1, r1, #2
	mov r0, #2
	bl sub_080C6174
	ldr r4, _080D5164  @ =gUnknown_03003E74
	ldrh r1, [r4]
	lsl r1, r1, #3
	add r1, r1, r6
	ldr r5, _080D5168  @ =0x00000555
	add r1, r1, r5
	ldrb r3, [r1]
	mov r2, #15
	add r0, r2, #0
	and r0, r0, r3
	mov r3, #144
	orr r0, r0, r3
	strb r0, [r1]
	ldrh r0, [r4]
	add r0, r0, #1
	lsl r0, r0, #3
	add r0, r0, r6
	add r0, r0, r5
	ldrb r1, [r0]
	and r2, r2, r1
	orr r2, r2, r3
	strb r2, [r0]
	add r0, r7, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D514E
	bl sub_0809E3CC
	cmp r0, #0
	bne _080D514E
	add r0, r7, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D514E
	ldr r1, _080D516C  @ =0x000016D5
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #2
	bne _080D514E
	ldr r1, _080D5170  @ =gUnknown_03003E70
	mov r0, #1
	strb r0, [r1]
	ldr r1, _080D5174  @ =0x00000546
	add r0, r6, r1
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	beq _080D514E
	ldr r1, _080D5178  @ =0x00001776
	add r0, r6, r1
	mov r1, r8
	strb r1, [r0]
	ldr r0, _080D517C  @ =0x00000F62
	add r4, r6, r0
	add r4, r7, r4
	ldrb r0, [r4]
	add r0, r0, #76
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080A1588
	ldr r1, _080D5180  @ =0x00000FA2
	add r0, r6, r1
	add r0, r7, r0
	mov r1, r8
	strb r1, [r0]
	ldr r0, _080D5184  @ =0x000016B3
	add r2, r6, r0
	mov r0, #1
	ldrb r4, [r4]
	lsl r0, r0, r4
	ldrb r1, [r2]
	orr r0, r0, r1
	strb r0, [r2]
_080D514E:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080D5158:
	.4byte gRam
_080D515C:
	.4byte 0x0000096C
_080D5160:
	.4byte gUnknown_08175098
_080D5164:
	.4byte gUnknown_03003E74
_080D5168:
	.4byte 0x00000555
_080D516C:
	.4byte 0x000016D5
_080D5170:
	.4byte gUnknown_03003E70
_080D5174:
	.4byte 0x00000546
_080D5178:
	.4byte 0x00001776
_080D517C:
	.4byte 0x00000F62
_080D5180:
	.4byte 0x00000FA2
_080D5184:
	.4byte 0x000016B3
	THUMB_FUNC_END sub_080D5084

	THUMB_FUNC_START sub_080D5188
sub_080D5188: @ 0x080D5188
	push {r4,r5,lr}
	mov r5, #0
	mov r4, #3
	ldr r1, _080D5268  @ =gRam
	ldr r2, _080D526C  @ =0x000009DA
	add r0, r1, r2
	ldr r3, _080D5270  @ =gUnknown_081750A8
	ldrh r0, [r0]
	add r2, r1, #0
	ldrb r1, [r3, #3]
	cmp r0, r1
	beq _080D51B0
	add r1, r0, #0
_080D51A2:
	sub r4, r4, #1
	cmp r4, #0
	blt _080D51C4
	add r0, r4, r3
	ldrb r0, [r0]
	cmp r1, r0
	bne _080D51A2
_080D51B0:
	cmp r4, #0
	blt _080D51C4
	ldr r3, _080D5274  @ =0x000016B3
	add r0, r2, r3
	ldrb r0, [r0]
	asr r0, r0, r4
	mov r1, #1
	and r0, r0, r1
	cmp r0, #0
	beq _080D51C6
_080D51C4:
	mov r5, #1
_080D51C6:
	cmp r5, #0
	bne _080D5262
	mov r1, #15
	ldr r3, _080D5278  @ =0x00000FB1
	add r0, r2, r3
	ldrb r0, [r0]
	cmp r0, #9
	bne _080D51E0
	add r3, r3, #80
	add r0, r2, r3
	ldrb r0, [r0]
	cmp r0, #98
	beq _080D5262
_080D51E0:
	sub r1, r1, #1
	cmp r1, #0
	blt _080D5200
	ldr r3, _080D527C  @ =0x00000FA2
	add r0, r2, r3
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #9
	bne _080D51E0
	add r3, r3, #80
	add r0, r2, r3
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #98
	bne _080D51E0
	mov r5, #1
_080D5200:
	cmp r5, #0
	bne _080D5262
	mov r0, #98
	mov r1, #0
	mov r2, #14
	bl sub_080C9AAC
	ldr r3, _080D5268  @ =gRam
	ldr r5, _080D5280  @ =0x00000EE2
	add r1, r3, r5
	add r1, r0, r1
	mov r2, #126
	strb r2, [r1]
	ldr r2, _080D5284  @ =0x00000F02
	add r1, r3, r2
	add r1, r0, r1
	ldr r5, _080D5288  @ =0x000016C5
	add r2, r3, r5
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080D528C  @ =0x00000ED2
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #110
	strb r2, [r1]
	ldr r5, _080D5290  @ =0x00000EF2
	add r1, r3, r5
	add r1, r0, r1
	ldr r5, _080D5294  @ =0x000015F5
	add r2, r3, r5
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080D5298  @ =0x00001052
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #5
	strb r2, [r1]
	ldr r5, _080D529C  @ =0x000010F2
	add r1, r3, r5
	add r1, r0, r1
	mov r5, #161
	lsl r5, r5, #4
	add r2, r3, r5
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r1, _080D52A0  @ =0x00000F62
	add r3, r3, r1
	add r0, r0, r3
	strb r4, [r0]
_080D5262:
	pop {r4,r5}
	pop {r0}
	bx r0
_080D5268:
	.4byte gRam
_080D526C:
	.4byte 0x000009DA
_080D5270:
	.4byte gUnknown_081750A8
_080D5274:
	.4byte 0x000016B3
_080D5278:
	.4byte 0x00000FB1
_080D527C:
	.4byte 0x00000FA2
_080D5280:
	.4byte 0x00000EE2
_080D5284:
	.4byte 0x00000F02
_080D5288:
	.4byte 0x000016C5
_080D528C:
	.4byte 0x00000ED2
_080D5290:
	.4byte 0x00000EF2
_080D5294:
	.4byte 0x000015F5
_080D5298:
	.4byte 0x00001052
_080D529C:
	.4byte 0x000010F2
_080D52A0:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080D5188

	THUMB_FUNC_START sub_080D52A4
sub_080D52A4: @ 0x080D52A4
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D52C4  @ =gRam
	ldr r1, _080D52C8  @ =0x00000EE2
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #6
	strb r1, [r2]
	ldr r1, _080D52CC  @ =0x00000ED2
	add r3, r3, r1
	add r0, r0, r3
	ldrb r1, [r0]
	add r1, r1, #6
	strb r1, [r0]
	bx lr
_080D52C4:
	.4byte gRam
_080D52C8:
	.4byte 0x00000EE2
_080D52CC:
	.4byte 0x00000ED2
	THUMB_FUNC_END sub_080D52A4

	THUMB_FUNC_START sub_080D52D0
sub_080D52D0: @ 0x080D52D0
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D52F0  @ =gUnknown_08174FB4
	ldr r1, _080D52F4  @ =gRam
	ldr r3, _080D52F8  @ =0x00001052
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080D52F0:
	.4byte gUnknown_08174FB4
_080D52F4:
	.4byte gRam
_080D52F8:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080D52D0

	THUMB_FUNC_START sub_080D52FC
sub_080D52FC: @ 0x080D52FC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r2, _080D5348  @ =gRam
	ldr r1, _080D534C  @ =0x000009AC
	add r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #26
	beq _080D5322
	add r1, r1, #26
	add r0, r2, r1
	ldrh r0, [r0]
	ldr r1, _080D5350  @ =gUnknown_02002280
	add r0, r0, r1
	ldrb r1, [r0]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	bne _080D535C
_080D5322:
	ldr r1, _080D5354  @ =0x00000F52
	add r0, r2, r1
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #5
	beq _080D5334
	add r0, r5, #0
	bl sub_080D4FAC
_080D5334:
	ldr r0, _080D5358  @ =gUnknown_08174FCC
	ldrb r1, [r4]
	lsl r1, r1, #2
	add r1, r1, r0
	ldr r1, [r1]
	add r0, r5, #0
	bl _call_via_r1
	b _080D5366
	.byte 0x00
	.byte 0x00
_080D5348:
	.4byte gRam
_080D534C:
	.4byte 0x000009AC
_080D5350:
	.4byte gUnknown_02002280
_080D5354:
	.4byte 0x00000F52
_080D5358:
	.4byte gUnknown_08174FCC
_080D535C:
	ldr r1, _080D536C  @ =0x00000FA2
	add r0, r2, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
_080D5366:
	pop {r4,r5}
	pop {r0}
	bx r0
_080D536C:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080D52FC

	THUMB_FUNC_START sub_080D5370
sub_080D5370: @ 0x080D5370
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r0, #4
	bl sub_080CF388
	add r0, r4, #0
	bl sub_080C6240
	ldr r1, _080D53A4  @ =gUnknown_08175078
	ldr r0, _080D53A8  @ =gRam
	ldr r2, _080D53AC  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D53A4:
	.4byte gUnknown_08175078
_080D53A8:
	.4byte gRam
_080D53AC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D5370

	THUMB_FUNC_START sub_080D53B0
sub_080D53B0: @ 0x080D53B0
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D53C4  @ =gRam
	ldr r2, _080D53C8  @ =0x00000FA2
	add r1, r1, r2
	add r0, r0, r1
	mov r1, #0
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080D53C4:
	.4byte gRam
_080D53C8:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080D53B0

	THUMB_FUNC_START sub_080D53CC
sub_080D53CC: @ 0x080D53CC
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r0, #4
	bl sub_080CF3A0
	ldr r2, _080D5404  @ =gRam
	ldr r1, _080D5408  @ =0x00000F92
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080D540C  @ =0x00000FB2
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #2
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #3
	ldr r0, _080D5410  @ =gUnknown_08174FF8
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #1
	bl sub_080C9480
	pop {r4}
	pop {r0}
	bx r0
_080D5404:
	.4byte gRam
_080D5408:
	.4byte 0x00000F92
_080D540C:
	.4byte 0x00000FB2
_080D5410:
	.4byte gUnknown_08174FF8
	THUMB_FUNC_END sub_080D53CC

	THUMB_FUNC_START sub_080D5414
sub_080D5414: @ 0x080D5414
	push {r4,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #98
	bl sub_080CA538
	add r4, r0, #0
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080D5454  @ =gRam
	ldr r1, _080D5458  @ =0x00001052
	add r0, r2, r1
	add r0, r4, r0
	mov r3, #0
	mov r1, #4
	strb r1, [r0]
	ldr r1, _080D545C  @ =0x00001122
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #5
	strb r1, [r0]
	ldr r0, _080D5460  @ =0x00001012
	add r2, r2, r0
	add r4, r4, r2
	strb r3, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D5454:
	.4byte gRam
_080D5458:
	.4byte 0x00001052
_080D545C:
	.4byte 0x00001122
_080D5460:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080D5414

	THUMB_FUNC_START sub_080D5464
sub_080D5464: @ 0x080D5464
	push {r4,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #98
	bl sub_080CA538
	add r4, r0, #0
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080D54A4  @ =gRam
	ldr r1, _080D54A8  @ =0x00001052
	add r0, r2, r1
	add r0, r4, r0
	mov r3, #0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080D54AC  @ =0x00001122
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #5
	strb r1, [r0]
	ldr r0, _080D54B0  @ =0x00001012
	add r2, r2, r0
	add r4, r4, r2
	strb r3, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D54A4:
	.4byte gRam
_080D54A8:
	.4byte 0x00001052
_080D54AC:
	.4byte 0x00001122
_080D54B0:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080D5464

	THUMB_FUNC_START sub_080D54B4
sub_080D54B4: @ 0x080D54B4
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r7, #0
	ldr r1, _080D54D4  @ =gRam
	ldr r2, _080D54D8  @ =0x0000165C
	add r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D54E0
	ldr r3, _080D54DC  @ =0x00000FA2
	add r0, r1, r3
	add r0, r6, r0
	strb r7, [r0]
	b _080D55FA
	.byte 0x00
	.byte 0x00
_080D54D4:
	.4byte gRam
_080D54D8:
	.4byte 0x0000165C
_080D54DC:
	.4byte 0x00000FA2
_080D54E0:
	ldr r2, _080D555C  @ =0x000009C6
	add r0, r1, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bge _080D54F0
	b _080D55F6
_080D54F0:
	ldr r3, _080D5560  @ =0x000009AD
	add r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #35
	beq _080D550A
	ldr r2, _080D5564  @ =0x00001610
	add r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080D550A
	add r0, r6, #0
	bl sub_080C6240
_080D550A:
	add r0, r6, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D5518
	b _080D5650
_080D5518:
	ldr r4, _080D5568  @ =gRam
	ldr r3, _080D556C  @ =0x00001122
	add r0, r4, r3
	add r5, r6, r0
	ldrb r0, [r5]
	mov r2, #63
	and r2, r2, r0
	ldr r3, _080D5570  @ =gUnknown_081750AC
	ldr r1, _080D5574  @ =0x00000996
	add r0, r4, r1
	ldrb r0, [r0]
	lsr r0, r0, #2
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	orr r2, r2, r0
	strb r2, [r5]
	bl sub_0809E3F4
	cmp r0, #0
	bne _080D55F6
	add r0, r6, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D557C
	ldr r2, _080D5578  @ =0x00000F62
	add r0, r4, r2
	add r0, r6, r0
	mov r1, #1
	strb r1, [r0]
	b _080D55FA
_080D555C:
	.4byte 0x000009C6
_080D5560:
	.4byte 0x000009AD
_080D5564:
	.4byte 0x00001610
_080D5568:
	.4byte gRam
_080D556C:
	.4byte 0x00001122
_080D5570:
	.4byte gUnknown_081750AC
_080D5574:
	.4byte 0x00000996
_080D5578:
	.4byte 0x00000F62
_080D557C:
	ldr r3, _080D5658  @ =0x00000F62
	add r0, r4, r3
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D55FA
	ldr r1, _080D565C  @ =0x0000180D
	add r0, r4, r1
	ldr r2, _080D5660  @ =0x000017AA
	add r1, r4, r2
	ldrb r2, [r0]
	ldrb r0, [r1]
	add r3, r2, #0
	orr r3, r3, r0
	ldr r1, _080D5664  @ =0x00001770
	add r0, r4, r1
	ldrb r0, [r0]
	orr r3, r3, r0
	cmp r3, #0
	bne _080D55FA
	ldr r2, _080D5668  @ =0x000009AC
	add r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #9
	bne _080D55FA
	ldr r0, _080D566C  @ =0x000009AD
	add r1, r4, r0
	mov r0, #35
	strb r0, [r1]
	mov r2, #187
	lsl r2, r2, #5
	add r1, r4, r2
	mov r0, #1
	strb r0, [r1]
	ldr r1, _080D5670  @ =0x000009E8
	add r0, r4, r1
	mov r2, #0
	strh r3, [r0]
	ldr r3, _080D5674  @ =0x000016CD
	add r0, r4, r3
	strb r2, [r0]
	ldr r1, _080D5678  @ =0x000016CE
	add r0, r4, r1
	strb r2, [r0]
	add r3, r3, #75
	add r1, r4, r3
	mov r0, #20
	strb r0, [r1]
	ldr r1, _080D567C  @ =0x000009C6
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #64
	and r0, r0, r1
	add r3, r3, #34
	add r1, r4, r3
	strb r0, [r1]
	ldr r1, _080D5680  @ =0x00000FA2
	add r0, r4, r1
	add r0, r6, r0
	strb r2, [r0]
	mov r7, #1
_080D55F6:
	cmp r7, #0
	beq _080D5650
_080D55FA:
	ldr r2, _080D5684  @ =gRam
	ldr r3, _080D5688  @ =0x00000F72
	add r1, r2, r3
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D5618
	ldr r1, _080D5658  @ =0x00000F62
	add r0, r2, r1
	add r0, r6, r0
	mov r1, #1
	strb r1, [r0]
_080D5618:
	ldr r3, _080D568C  @ =0x00000EE2
	add r0, r2, r3
	add r0, r6, r0
	ldr r1, _080D5690  @ =gUnknown_0201094F
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D5694  @ =0x00000F02
	add r0, r2, r1
	add r0, r6, r0
	ldr r1, _080D5698  @ =gUnknown_0201095F
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080D569C  @ =gUnknown_0201096F
	ldrb r1, [r0]
	add r0, r0, #16
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #8
	sub r3, r3, #16
	add r0, r2, r3
	add r0, r6, r0
	strb r1, [r0]
	add r3, r3, #32
	add r0, r2, r3
	add r0, r6, r0
	lsr r1, r1, #8
	strb r1, [r0]
_080D5650:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D5658:
	.4byte 0x00000F62
_080D565C:
	.4byte 0x0000180D
_080D5660:
	.4byte 0x000017AA
_080D5664:
	.4byte 0x00001770
_080D5668:
	.4byte 0x000009AC
_080D566C:
	.4byte 0x000009AD
_080D5670:
	.4byte 0x000009E8
_080D5674:
	.4byte 0x000016CD
_080D5678:
	.4byte 0x000016CE
_080D567C:
	.4byte 0x000009C6
_080D5680:
	.4byte 0x00000FA2
_080D5684:
	.4byte gRam
_080D5688:
	.4byte 0x00000F72
_080D568C:
	.4byte 0x00000EE2
_080D5690:
	.4byte gUnknown_0201094F
_080D5694:
	.4byte 0x00000F02
_080D5698:
	.4byte gUnknown_0201095F
_080D569C:
	.4byte gUnknown_0201096F
	THUMB_FUNC_END sub_080D54B4

	THUMB_FUNC_START sub_080D56A0
sub_080D56A0: @ 0x080D56A0
	push {r4,r5,lr}
	mov r4, #15
	ldr r2, _080D5728  @ =gUnknown_030031D2
	add r3, r2, #0
	add r3, r3, #80
_080D56AA:
	add r1, r4, r2
	ldrb r0, [r1]
	cmp r0, #0
	beq _080D56BC
	add r0, r4, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D56BC
	strb r0, [r1]
_080D56BC:
	sub r4, r4, #1
	cmp r4, #0
	bge _080D56AA
	lsl r1, r4, #24
	lsr r1, r1, #24
	mov r0, #108
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	bgt _080D56D4
	mov r4, #0
_080D56D4:
	ldr r2, _080D572C  @ =gRam
	ldr r0, _080D5730  @ =0x00000EE2
	add r1, r2, r0
	add r1, r4, r1
	ldr r0, _080D5734  @ =gUnknown_0201094F
	ldrb r0, [r0]
	mov r3, #0
	strb r0, [r1]
	ldr r1, _080D5738  @ =0x00000F02
	add r0, r2, r1
	add r0, r4, r0
	ldr r1, _080D573C  @ =gUnknown_0201095F
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080D5740  @ =gUnknown_0201096F
	ldrb r1, [r0]
	add r0, r0, #16
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #8
	ldr r5, _080D5744  @ =0x00000ED2
	add r0, r2, r5
	add r0, r4, r0
	strb r1, [r0]
	add r5, r5, #32
	add r0, r2, r5
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080D5748  @ =0x000010F2
	add r0, r2, r1
	add r0, r4, r0
	strb r3, [r0]
	ldr r5, _080D574C  @ =0x00001172
	add r2, r2, r5
	add r2, r4, r2
	mov r0, #1
	strb r0, [r2]
	pop {r4,r5}
	pop {r0}
	bx r0
_080D5728:
	.4byte gUnknown_030031D2
_080D572C:
	.4byte gRam
_080D5730:
	.4byte 0x00000EE2
_080D5734:
	.4byte gUnknown_0201094F
_080D5738:
	.4byte 0x00000F02
_080D573C:
	.4byte gUnknown_0201095F
_080D5740:
	.4byte gUnknown_0201096F
_080D5744:
	.4byte 0x00000ED2
_080D5748:
	.4byte 0x000010F2
_080D574C:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080D56A0

	THUMB_FUNC_START sub_080D5750
sub_080D5750: @ 0x080D5750
	bx lr
	THUMB_FUNC_END sub_080D5750

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D5754
sub_080D5754: @ 0x080D5754
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r9, r5
	add r0, r5, #0
	bl sub_080D58D4
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D5776
	b _080D58A8
_080D5776:
	add r0, r5, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D5784
	b _080D58A8
_080D5784:
	ldr r7, _080D5804  @ =gRam
	ldr r1, _080D5808  @ =0x00001052
	add r0, r7, r1
	add r4, r5, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	ldr r3, _080D580C  @ =0x00000F62
	add r2, r7, r3
	add r2, r5, r2
	lsl r0, r0, #24
	lsr r0, r0, #28
	mov r1, #3
	and r0, r0, r1
	strb r0, [r2]
	add r0, r5, #0
	bl sub_080C5044
	ldr r1, _080D5810  @ =0x00000F52
	add r0, r7, r1
	add r0, r0, r5
	mov r8, r0
	ldrb r2, [r0]
	add r0, r2, #0
	cmp r0, #2
	bne _080D582A
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	ldr r2, _080D5814  @ =0x00000FC2
	add r0, r7, r2
	add r6, r5, r0
	ldrb r0, [r6]
	cmp r0, #0
	beq _080D5820
	ldr r3, _080D5818  @ =0x00000996
	add r0, r7, r3
	ldrb r0, [r0]
	add r4, r5, #0
	eor r4, r4, r0
	add r1, r1, #32
	add r0, r7, r1
	add r0, r5, r0
	ldrb r0, [r0]
	and r4, r4, r0
	cmp r4, #0
	bne _080D57FC
	add r0, r5, #0
	bl Sprite3_Move
	ldr r2, _080D581C  @ =0x00001042
	add r0, r7, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D57FC
	mov r3, r8
	strb r4, [r3]
	mov r0, #80
	strb r0, [r6]
_080D57FC:
	mov r0, r9
	bl sub_080C79D0
	b _080D58A8
_080D5804:
	.4byte gRam
_080D5808:
	.4byte 0x00001052
_080D580C:
	.4byte 0x00000F62
_080D5810:
	.4byte 0x00000F52
_080D5814:
	.4byte 0x00000FC2
_080D5818:
	.4byte 0x00000996
_080D581C:
	.4byte 0x00001042
_080D5820:
	mov r1, r8
	strb r0, [r1]
	mov r0, #80
	strb r0, [r6]
	b _080D58A8
_080D582A:
	cmp r0, #1
	bne _080D5890
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	ldr r2, _080D587C  @ =0x00000FC2
	add r0, r7, r2
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D58A8
	bl GetRandomInt
	mov r1, #63
	and r1, r1, r0
	add r1, r1, #128
	strb r1, [r4]
	mov r3, r8
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
	bl GetRandomInt
	mov r2, #15
	and r2, r2, r0
	ldr r0, _080D5880  @ =0x00000F22
	add r1, r7, r0
	add r1, r5, r1
	ldr r0, _080D5884  @ =gUnknown_08177D54
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	strb r0, [r1]
	ldr r3, _080D5888  @ =0x00000F12
	add r1, r7, r3
	add r1, r5, r1
	ldr r0, _080D588C  @ =gUnknown_08177D64
	add r2, r2, r0
	ldrb r0, [r2]
	lsl r0, r0, #2
	b _080D58A6
_080D587C:
	.4byte 0x00000FC2
_080D5880:
	.4byte 0x00000F22
_080D5884:
	.4byte gUnknown_08177D54
_080D5888:
	.4byte 0x00000F12
_080D588C:
	.4byte gUnknown_08177D64
_080D5890:
	ldr r1, _080D58B4  @ =0x00000FC2
	add r0, r7, r1
	mov r3, r9
	add r1, r3, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080D58A8
	add r0, r2, #1
	mov r2, r8
	strb r0, [r2]
	mov r0, #105
_080D58A6:
	strb r0, [r1]
_080D58A8:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080D58B4:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080D5754

	THUMB_FUNC_START sub_080D58B8
sub_080D58B8: @ 0x080D58B8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D58CC  @ =gRam
	ldr r2, _080D58D0  @ =0x00000F72
	add r1, r1, r2
	add r0, r0, r1
	mov r1, #7
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080D58CC:
	.4byte gRam
_080D58D0:
	.4byte 0x00000F72
	THUMB_FUNC_END sub_080D58B8

	THUMB_FUNC_START sub_080D58D4
sub_080D58D4: @ 0x080D58D4
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D5914  @ =gRam
	ldr r1, _080D5918  @ =0x00000F92
	add r2, r3, r1
	add r2, r0, r2
	ldr r4, _080D591C  @ =gUnknown_081750B0
	sub r1, r1, #48
	add r5, r3, r1
	add r5, r0, r5
	ldrb r1, [r5]
	add r1, r1, r4
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r1, _080D5920  @ =0x00001122
	add r3, r3, r1
	add r3, r0, r3
	ldrb r1, [r3]
	mov r2, #191
	and r2, r2, r1
	ldr r4, _080D5924  @ =gUnknown_081750B4
	ldrb r1, [r5]
	add r1, r1, r4
	ldrb r1, [r1]
	orr r2, r2, r1
	strb r2, [r3]
	bl sub_080C6240
	pop {r4,r5}
	pop {r0}
	bx r0
_080D5914:
	.4byte gRam
_080D5918:
	.4byte 0x00000F92
_080D591C:
	.4byte gUnknown_081750B0
_080D5920:
	.4byte 0x00001122
_080D5924:
	.4byte gUnknown_081750B4
	THUMB_FUNC_END sub_080D58D4

	THUMB_FUNC_START sub_080D5928
sub_080D5928: @ 0x080D5928
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D593C  @ =gRam
	ldr r2, _080D5940  @ =0x00000F72
	add r1, r1, r2
	add r0, r0, r1
	mov r1, #15
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080D593C:
	.4byte gRam
_080D5940:
	.4byte 0x00000F72
	THUMB_FUNC_END sub_080D5928

	THUMB_FUNC_START sub_080D5944
sub_080D5944: @ 0x080D5944
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080D5754
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D5944

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D5954
sub_080D5954: @ 0x080D5954
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080D59B8  @ =gRam
	ldr r1, _080D59BC  @ =0x00001052
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r3, #1
	and r3, r3, r1
	ldr r1, _080D59C0  @ =0x000009AD
	add r0, r2, r1
	ldrb r0, [r0]
	orr r3, r3, r0
	ldr r1, _080D59C4  @ =0x00001605
	add r0, r2, r1
	ldrb r0, [r0]
	orr r3, r3, r0
	cmp r3, #0
	bne _080D5996
	ldr r1, _080D59C8  @ =0x00000F92
	add r0, r2, r1
	add r1, r4, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #6
	bne _080D5996
	strb r3, [r1]
_080D5996:
	ldr r1, _080D59C8  @ =0x00000F92
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r1, r0, #2
	add r1, r1, r0
	lsl r1, r1, #3
	ldr r0, _080D59CC  @ =gUnknown_081750BC
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #5
	bl sub_080C9480
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D59B8:
	.4byte gRam
_080D59BC:
	.4byte 0x00001052
_080D59C0:
	.4byte 0x000009AD
_080D59C4:
	.4byte 0x00001605
_080D59C8:
	.4byte 0x00000F92
_080D59CC:
	.4byte gUnknown_081750BC
	THUMB_FUNC_END sub_080D5954

	THUMB_FUNC_START sub_080D59D0
sub_080D59D0: @ 0x080D59D0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D5A04  @ =gRam
	ldr r1, _080D5A08  @ =0x00000F22
	add r4, r3, r1
	add r4, r0, r4
	ldr r5, _080D5A0C  @ =gUnknown_081750B8
	ldr r2, _080D5A10  @ =0x00000EE2
	add r1, r3, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsr r1, r1, #4
	mov r2, #1
	and r1, r1, r2
	add r1, r1, r5
	ldrb r1, [r1]
	strb r1, [r4]
	ldr r1, _080D5A14  @ =0x00000F12
	add r3, r3, r1
	add r0, r0, r3
	mov r1, #240
	strb r1, [r0]
	pop {r4,r5}
	pop {r0}
	bx r0
_080D5A04:
	.4byte gRam
_080D5A08:
	.4byte 0x00000F22
_080D5A0C:
	.4byte gUnknown_081750B8
_080D5A10:
	.4byte 0x00000EE2
_080D5A14:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080D59D0

	THUMB_FUNC_START sub_080D5A18
sub_080D5A18: @ 0x080D5A18
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080D5954
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D5A82
	add r0, r5, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D5A76
	ldr r0, _080D5A68  @ =gRam
	ldr r1, _080D5A6C  @ =0x00000FC2
	add r0, r0, r1
	add r1, r5, r0
	ldrb r2, [r1]
	cmp r2, #0
	bne _080D5A76
	mov r0, #16
	strb r0, [r1]
	ldr r4, _080D5A70  @ =gUnknown_0200234E
	ldrb r0, [r4]
	cmp r0, #7
	bls _080D5A74
	mov r0, #38
	mov r1, #0
	bl sub_0812A324
	ldrb r0, [r4]
	sub r0, r0, #8
	strb r0, [r4]
	b _080D5A76
	.byte 0x00
	.byte 0x00
_080D5A68:
	.4byte gRam
_080D5A6C:
	.4byte 0x00000FC2
_080D5A70:
	.4byte gUnknown_0200234E
_080D5A74:
	strb r2, [r4]
_080D5A76:
	add r0, r5, #0
	bl Sprite3_Move
	add r0, r5, #0
	bl sub_080CA2A4
_080D5A82:
	pop {r4,r5}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D5A18

	THUMB_FUNC_START sub_080D5A88
sub_080D5A88: @ 0x080D5A88
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r4, _080D5B8C  @ =gRam
	ldr r0, _080D5B90  @ =0x00000EE2
	add r3, r4, r0
	add r3, r6, r3
	ldrb r1, [r3]
	ldr r7, _080D5B94  @ =0x00000F02
	add r2, r4, r7
	add r2, r6, r2
	ldrb r0, [r2]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r1, r1, #10
	mov r5, #0
	strb r1, [r3]
	lsr r1, r1, #8
	strb r1, [r2]
	ldr r1, _080D5B98  @ =0x00000F12
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #238
	strb r1, [r0]
	add r7, r7, #32
	add r0, r4, r7
	add r0, r6, r0
	strb r5, [r0]
	ldr r1, _080D5B9C  @ =0x00000F62
	add r0, r4, r1
	add r0, r6, r0
	strb r5, [r0]
	add r7, r7, #80
	add r1, r4, r7
	add r0, r6, r1
	strb r5, [r0]
	mov r5, #2
	mov r8, r1
_080D5AD8:
	mov r0, #130
	add r1, r6, #0
	bl sub_080CA538
	add r3, r0, #0
	lsl r5, r5, #24
	cmp r3, #0
	blt _080D5B76
	mov r0, #150
	lsl r0, r0, #4
	add r1, r4, r0
	ldr r0, _080D5BA0  @ =gUnknown_081751AC
	asr r2, r5, #24
	add r0, r2, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080D5BA4  @ =gUnknown_081751AF
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r7, _080D5B90  @ =0x00000EE2
	add r0, r4, r7
	add r0, r3, r0
	strb r1, [r0]
	add r7, r7, #32
	add r0, r4, r7
	add r0, r3, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080D5BA8  @ =0x00000964
	add r1, r4, r0
	ldr r0, _080D5BAC  @ =gUnknown_081751B2
	add r0, r2, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080D5BB0  @ =gUnknown_081751B5
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r7, r7, #48
	add r0, r4, r7
	add r0, r3, r0
	strb r1, [r0]
	add r7, r7, #32
	add r0, r4, r7
	add r0, r3, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080D5BB4  @ =0x00000F22
	add r1, r4, r0
	add r1, r3, r1
	ldr r0, _080D5BB8  @ =gUnknown_081751B8
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r7, r7, #32
	add r1, r4, r7
	add r1, r3, r1
	ldr r0, _080D5BBC  @ =gUnknown_081751BE
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D5B9C  @ =0x00000F62
	add r1, r4, r0
	add r1, r3, r1
	ldr r0, _080D5BC0  @ =gUnknown_081751BB
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	mov r7, r8
	add r1, r3, r7
	ldr r0, _080D5BC4  @ =gUnknown_081751C1
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
_080D5B76:
	mov r1, #255
	lsl r1, r1, #24
	add r0, r5, r1
	lsr r5, r0, #24
	cmp r0, #0
	bge _080D5AD8
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080D5B8C:
	.4byte gRam
_080D5B90:
	.4byte 0x00000EE2
_080D5B94:
	.4byte 0x00000F02
_080D5B98:
	.4byte 0x00000F12
_080D5B9C:
	.4byte 0x00000F62
_080D5BA0:
	.4byte gUnknown_081751AC
_080D5BA4:
	.4byte gUnknown_081751AF
_080D5BA8:
	.4byte 0x00000964
_080D5BAC:
	.4byte gUnknown_081751B2
_080D5BB0:
	.4byte gUnknown_081751B5
_080D5BB4:
	.4byte 0x00000F22
_080D5BB8:
	.4byte gUnknown_081751B8
_080D5BBC:
	.4byte gUnknown_081751BE
_080D5BC0:
	.4byte gUnknown_081751BB
_080D5BC4:
	.4byte gUnknown_081751C1
	THUMB_FUNC_END sub_080D5A88

	THUMB_FUNC_START sub_080D5BC8
sub_080D5BC8: @ 0x080D5BC8
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080D5954
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D5CD2
	ldr r7, _080D5C84  @ =gRam
	ldr r1, _080D5C88  @ =0x00000F62
	add r0, r7, r1
	add r2, r5, r0
	ldrb r0, [r2]
	mov r4, #1
	add r1, r4, #0
	and r1, r1, r0
	ldr r3, _080D5C8C  @ =0x00000F22
	add r0, r7, r3
	add r6, r5, r0
	ldr r0, _080D5C90  @ =gUnknown_081751C4
	mov r12, r0
	add r0, r1, r0
	ldrb r0, [r0]
	ldrb r3, [r6]
	add r0, r0, r3
	strb r0, [r6]
	ldr r3, _080D5C94  @ =gUnknown_081751C6
	mov r8, r3
	add r1, r1, r8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r1, [r1]
	cmp r0, r1
	bne _080D5C1E
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
_080D5C1E:
	ldr r1, _080D5C98  @ =0x00000F72
	add r0, r7, r1
	add r2, r5, r0
	ldrb r0, [r2]
	add r1, r4, #0
	and r1, r1, r0
	ldr r3, _080D5C9C  @ =0x00000F12
	add r0, r7, r3
	add r4, r5, r0
	add r12, r12, r1
	mov r3, r12
	ldrb r0, [r3]
	ldrb r3, [r4]
	add r0, r0, r3
	strb r0, [r4]
	add r1, r1, r8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r1, [r1]
	cmp r0, r1
	bne _080D5C4E
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
_080D5C4E:
	add r0, r5, #0
	bl Sprite3_Move
	ldrb r0, [r6]
	cmp r0, #0
	beq _080D5CCC
	ldrb r0, [r4]
	cmp r0, #0
	beq _080D5CCC
	bl sub_080CAF64
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D5CCC
	ldr r1, _080D5CA0  @ =0x00000FF2
	add r0, r7, r1
	add r0, r5, r0
	mov r1, #21
	strb r1, [r0]
	ldrb r1, [r6]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080D5CA4
	mov r0, #16
	b _080D5CA6
	.byte 0x00
	.byte 0x00
_080D5C84:
	.4byte gRam
_080D5C88:
	.4byte 0x00000F62
_080D5C8C:
	.4byte 0x00000F22
_080D5C90:
	.4byte gUnknown_081751C4
_080D5C94:
	.4byte gUnknown_081751C6
_080D5C98:
	.4byte 0x00000F72
_080D5C9C:
	.4byte 0x00000F12
_080D5CA0:
	.4byte 0x00000FF2
_080D5CA4:
	mov r0, #240
_080D5CA6:
	strb r0, [r6]
	ldr r0, _080D5CC0  @ =gRam
	ldr r3, _080D5CC4  @ =0x00000F12
	add r0, r0, r3
	add r2, r5, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080D5CC8
	mov r0, #16
	b _080D5CCA
	.byte 0x00
	.byte 0x00
_080D5CC0:
	.4byte gRam
_080D5CC4:
	.4byte 0x00000F12
_080D5CC8:
	mov r0, #240
_080D5CCA:
	strb r0, [r2]
_080D5CCC:
	add r0, r5, #0
	bl sub_080C4F98
_080D5CD2:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D5BC8

	THUMB_FUNC_START sub_080D5CDC
sub_080D5CDC: @ 0x080D5CDC
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080D5D18  @ =gRam
	ldr r1, _080D5D1C  @ =0x00000F62
	add r0, r6, r1
	add r5, r4, r0
	ldrb r7, [r5]
	cmp r7, #0
	bne _080D5D52
	ldr r2, _080D5D20  @ =0x00000F22
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r3, _080D5D24  @ =0x00000F12
	add r0, r6, r3
	add r0, r4, r0
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C6F48
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D5D2C
	ldr r1, _080D5D28  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	strb r7, [r0]
	b _080D5E02
_080D5D18:
	.4byte gRam
_080D5D1C:
	.4byte 0x00000F62
_080D5D20:
	.4byte 0x00000F22
_080D5D24:
	.4byte 0x00000F12
_080D5D28:
	.4byte 0x00000FA2
_080D5D2C:
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
	ldr r2, _080D5DB0  @ =0x00000F82
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #10
	strb r1, [r0]
	ldr r3, _080D5DB4  @ =0x00001032
	add r1, r6, r3
	add r1, r4, r1
	ldrb r0, [r1]
	mov r2, #64
	orr r0, r0, r2
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #108
	bl sub_080CF0AC
_080D5D52:
	ldr r6, _080D5DB8  @ =gRam
	ldr r0, _080D5DBC  @ =0x00000D94
	add r2, r6, r0
	add r2, r4, r2
	ldr r1, _080D5DC0  @ =gUnknown_081751C8
	ldr r3, _080D5DC4  @ =0x00000F52
	add r0, r6, r3
	add r5, r4, r0
	ldrb r0, [r5]
	add r0, r0, r1
	ldrb r1, [r2]
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
	add r0, r4, #0
	bl sub_080D6268
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080D5E02
	ldr r0, _080D5DC8  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080D5DD4
	ldrb r0, [r5]
	cmp r0, #5
	beq _080D5DE0
	ldr r1, _080D5DCC  @ =0x000010C2
	add r0, r6, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080D5DE0
	strb r2, [r1]
	mov r0, #5
	strb r0, [r5]
	ldr r2, _080D5DD0  @ =0x00000FC2
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	b _080D5DE0
	.byte 0x00
	.byte 0x00
_080D5DB0:
	.4byte 0x00000F82
_080D5DB4:
	.4byte 0x00001032
_080D5DB8:
	.4byte gRam
_080D5DBC:
	.4byte 0x00000D94
_080D5DC0:
	.4byte gUnknown_081751C8
_080D5DC4:
	.4byte 0x00000F52
_080D5DC8:
	.4byte gUnknown_0200233D
_080D5DCC:
	.4byte 0x000010C2
_080D5DD0:
	.4byte 0x00000FC2
_080D5DD4:
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D5E02
_080D5DE0:
	ldr r2, _080D5E08  @ =gRam
	ldr r3, _080D5E0C  @ =0x00001172
	add r0, r2, r3
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080D5E10  @ =gUnknown_081751D0
	ldr r0, _080D5E14  @ =0x00000F52
	add r2, r2, r0
	add r2, r4, r2
	ldrb r0, [r2]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D5E02:
	pop {r4-r7}
	pop {r0}
	bx r0
_080D5E08:
	.4byte gRam
_080D5E0C:
	.4byte 0x00001172
_080D5E10:
	.4byte gUnknown_081751D0
_080D5E14:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D5CDC

	THUMB_FUNC_START sub_080D5E18
sub_080D5E18: @ 0x080D5E18
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	ldr r7, _080D5E98  @ =gRam
	ldr r1, _080D5E9C  @ =0x00001082
	add r0, r7, r1
	add r0, r5, r0
	mov r1, #0
	mov r8, r1
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080D5EA0  @ =0x00001142
	add r0, r7, r1
	add r6, r5, r0
	ldrb r4, [r6]
	add r0, r5, #0
	bl sub_080C2C4C
	ldr r1, _080D5EA4  @ =0x00001152
	add r0, r7, r1
	add r2, r5, r0
	ldrb r1, [r2]
	add r0, r1, #0
	add r0, r0, #64
	mov r3, #128
	and r0, r0, r3
	cmp r0, #0
	bne _080D5E5A
	sub r0, r1, #3
	strb r0, [r2]
_080D5E5A:
	ldrb r1, [r6]
	eor r4, r4, r1
	and r4, r4, r3
	cmp r4, #0
	beq _080D5E8E
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D5E8E
	ldr r0, _080D5EA8  @ =0x00000F52
	add r1, r7, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r1, r8
	strb r1, [r6]
	strb r1, [r2]
	ldr r1, _080D5EAC  @ =0x00000FC2
	add r0, r7, r1
	add r0, r5, r0
	mov r1, #64
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080D6220
_080D5E8E:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080D5E98:
	.4byte gRam
_080D5E9C:
	.4byte 0x00001082
_080D5EA0:
	.4byte 0x00001142
_080D5EA4:
	.4byte 0x00001152
_080D5EA8:
	.4byte 0x00000F52
_080D5EAC:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080D5E18

	THUMB_FUNC_START sub_080D5EB0
sub_080D5EB0: @ 0x080D5EB0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	ldr r5, _080D5F10  @ =gRam
	ldr r1, _080D5F14  @ =0x00001172
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r2, _080D5F18  @ =0x00000FB2
	add r1, r5, r2
	add r1, r4, r1
	strb r0, [r1]
	add r2, r2, #208
	add r1, r5, r2
	add r1, r4, r1
	strb r0, [r1]
	ldr r1, _080D5F1C  @ =0x00000FC2
	add r0, r5, r1
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080D5EFC
	sub r1, r1, #112
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #127
	strb r0, [r2]
_080D5EFC:
	ldr r2, _080D5F20  @ =0x00001032
	add r0, r5, r2
	add r0, r6, r0
	ldrb r2, [r0]
	mov r1, #191
	and r1, r1, r2
	strb r1, [r0]
	pop {r4-r6}
	pop {r0}
	bx r0
_080D5F10:
	.4byte gRam
_080D5F14:
	.4byte 0x00001172
_080D5F18:
	.4byte 0x00000FB2
_080D5F1C:
	.4byte 0x00000FC2
_080D5F20:
	.4byte 0x00001032
	THUMB_FUNC_END sub_080D5EB0

	THUMB_FUNC_START sub_080D5F24
sub_080D5F24: @ 0x080D5F24
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080D5FA4  @ =gRam
	ldr r1, _080D5FA8  @ =0x00001172
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C5044
	ldr r7, _080D5FAC  @ =0x00000FC2
	add r0, r6, r7
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080D5FCC
	cmp r0, #48
	bne _080D5F52
	add r0, r4, #0
	bl sub_080D647C
_080D5F52:
	ldr r0, _080D5FB0  @ =0x00000F92
	add r2, r6, r0
	add r2, r4, r2
	ldr r3, _080D5FB4  @ =gUnknown_081751E8
	ldrb r1, [r5]
	lsr r1, r1, #2
	mov r0, #252
	and r1, r1, r0
	ldr r7, _080D5FB8  @ =0x00000FB2
	add r0, r6, r7
	add r0, r4, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	add r1, r1, r3
	ldrb r0, [r1]
	strb r0, [r2]
	ldrb r2, [r5]
	lsr r2, r2, #2
	ldr r0, _080D5FBC  @ =0x00000F72
	add r1, r6, r0
	add r1, r4, r1
	ldr r0, _080D5FC0  @ =gUnknown_08175208
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	sub r7, r7, #48
	add r1, r6, r7
	add r1, r4, r1
	ldr r0, _080D5FC4  @ =gUnknown_08175228
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r0, _080D5FC8  @ =0x00001032
	add r1, r6, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #191
	and r0, r0, r2
	strb r0, [r1]
	b _080D5FDC
	.byte 0x00
	.byte 0x00
_080D5FA4:
	.4byte gRam
_080D5FA8:
	.4byte 0x00001172
_080D5FAC:
	.4byte 0x00000FC2
_080D5FB0:
	.4byte 0x00000F92
_080D5FB4:
	.4byte gUnknown_081751E8
_080D5FB8:
	.4byte 0x00000FB2
_080D5FBC:
	.4byte 0x00000F72
_080D5FC0:
	.4byte gUnknown_08175208
_080D5FC4:
	.4byte gUnknown_08175228
_080D5FC8:
	.4byte 0x00001032
_080D5FCC:
	ldr r1, _080D5FE4  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #64
	strb r0, [r5]
_080D5FDC:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D5FE4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D5F24

	THUMB_FUNC_START sub_080D5FE8
sub_080D5FE8: @ 0x080D5FE8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	ldr r7, _080D6050  @ =gRam
	ldr r1, _080D6054  @ =0x00000F92
	add r0, r7, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	ldr r2, _080D6058  @ =0x00001082
	add r0, r7, r2
	add r0, r5, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080D605C  @ =0x00001142
	add r0, r7, r1
	add r6, r5, r0
	ldrb r4, [r6]
	add r0, r5, #0
	bl sub_080C2C4C
	ldr r2, _080D6060  @ =0x00001152
	add r0, r7, r2
	add r2, r5, r0
	ldrb r1, [r2]
	add r0, r1, #0
	sub r0, r0, #64
	mov r3, #128
	and r0, r0, r3
	cmp r0, #0
	beq _080D602C
	add r0, r1, #2
	strb r0, [r2]
_080D602C:
	ldrb r1, [r6]
	eor r4, r4, r1
	and r4, r4, r3
	cmp r4, #0
	beq _080D604A
	mov r0, #128
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080D604A
	ldr r2, _080D6064  @ =0x00000FA2
	add r0, r7, r2
	add r0, r5, r0
	strb r1, [r0]
_080D604A:
	pop {r4-r7}
	pop {r0}
	bx r0
_080D6050:
	.4byte gRam
_080D6054:
	.4byte 0x00000F92
_080D6058:
	.4byte 0x00001082
_080D605C:
	.4byte 0x00001142
_080D6060:
	.4byte 0x00001152
_080D6064:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080D5FE8

	THUMB_FUNC_START sub_080D6068
sub_080D6068: @ 0x080D6068
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	ldr r5, _080D60C8  @ =gRam
	ldr r1, _080D60CC  @ =0x00001172
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	ldr r1, _080D60D0  @ =0x00000FC2
	add r0, r5, r1
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080D609E
	ldr r0, _080D60D4  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
_080D609E:
	ldrb r2, [r2]
	lsr r2, r2, #4
	ldr r0, _080D60D8  @ =0x00000F92
	add r1, r5, r0
	add r1, r6, r1
	ldr r0, _080D60DC  @ =gUnknown_0817524C
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D60E0  @ =0x00000F82
	add r1, r5, r0
	add r1, r6, r1
	ldr r0, _080D60E4  @ =gUnknown_0817525C
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D60C8:
	.4byte gRam
_080D60CC:
	.4byte 0x00001172
_080D60D0:
	.4byte 0x00000FC2
_080D60D4:
	.4byte 0x00000F52
_080D60D8:
	.4byte 0x00000F92
_080D60DC:
	.4byte gUnknown_0817524C
_080D60E0:
	.4byte 0x00000F82
_080D60E4:
	.4byte gUnknown_0817525C
	THUMB_FUNC_END sub_080D6068

	THUMB_FUNC_START sub_080D60E8
sub_080D60E8: @ 0x080D60E8
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r7, r1, #0
	ldr r6, _080D6198  @ =gRam
	ldr r2, _080D619C  @ =0x00000F92
	add r0, r6, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #10
	beq _080D618E
	ldr r4, _080D61A0  @ =0x00000979
	add r3, r6, r4
	mov r5, #0
	strb r5, [r3]
	sub r2, r2, #32
	add r0, r6, r2
	add r0, r1, r0
	ldrb r2, [r0]
	cmp r2, #128
	beq _080D618E
	ldr r1, _080D61A4  @ =0x00000978
	add r4, r6, r1
	strb r2, [r4]
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D612A
	mov r0, #1
	neg r0, r0
	strb r0, [r3]
_080D612A:
	ldr r2, _080D61A8  @ =0x00000F82
	add r0, r6, r2
	add r0, r7, r0
	ldrb r0, [r0]
	ldr r1, _080D61AC  @ =0x00000974
	add r3, r6, r1
	strb r0, [r3]
	ldr r2, _080D61B0  @ =0x00000975
	add r0, r6, r2
	strb r5, [r0]
	ldr r0, _080D61B4  @ =gUnknown_03003E74
	ldrh r0, [r0]
	sub r1, r1, #20
	add r2, r6, r1
	ldrh r1, [r4]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r4, _080D61B8  @ =0x00000964
	add r2, r6, r4
	ldrh r2, [r2]
	ldrh r3, [r3]
	sub r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r5, _080D61BC  @ =gUnknown_0817531C
	ldr r4, _080D61C0  @ =0x00001082
	add r3, r6, r4
	add r3, r7, r3
	ldrb r4, [r3]
	add r5, r4, r5
	ldrb r3, [r5]
	ldr r5, _080D61C4  @ =gUnknown_08175320
	add r4, r4, r5
	ldrb r4, [r4]
	ldr r7, _080D61C8  @ =0x00000969
	add r5, r6, r7
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
_080D618E:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6198:
	.4byte gRam
_080D619C:
	.4byte 0x00000F92
_080D61A0:
	.4byte 0x00000979
_080D61A4:
	.4byte 0x00000978
_080D61A8:
	.4byte 0x00000F82
_080D61AC:
	.4byte 0x00000974
_080D61B0:
	.4byte 0x00000975
_080D61B4:
	.4byte gUnknown_03003E74
_080D61B8:
	.4byte 0x00000964
_080D61BC:
	.4byte gUnknown_0817531C
_080D61C0:
	.4byte 0x00001082
_080D61C4:
	.4byte gUnknown_08175320
_080D61C8:
	.4byte 0x00000969
	THUMB_FUNC_END sub_080D60E8

	THUMB_FUNC_START sub_080D61CC
sub_080D61CC: @ 0x080D61CC
	bx lr
	THUMB_FUNC_END sub_080D61CC

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D61D0
sub_080D61D0: @ 0x080D61D0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	ldr r5, _080D6210  @ =gRam
	ldr r1, _080D6214  @ =0x00001172
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C5044
	ldr r1, _080D6218  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D6202
	ldr r0, _080D621C  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D6202:
	add r0, r6, #0
	bl sub_080D6220
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6210:
	.4byte gRam
_080D6214:
	.4byte 0x00001172
_080D6218:
	.4byte 0x00000FC2
_080D621C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D61D0

	THUMB_FUNC_START sub_080D6220
sub_080D6220: @ 0x080D6220
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D6254  @ =gRam
	ldr r1, _080D6258  @ =0x00000F92
	add r3, r2, r1
	add r3, r0, r3
	ldr r4, _080D625C  @ =gUnknown_08175248
	ldr r5, _080D6260  @ =0x00000FB2
	add r1, r2, r5
	add r1, r0, r1
	ldrb r1, [r1]
	add r1, r1, r4
	ldrb r1, [r1]
	strb r1, [r3]
	ldr r1, _080D6264  @ =0x00001032
	add r2, r2, r1
	add r0, r0, r2
	ldrb r2, [r0]
	mov r1, #191
	and r1, r1, r2
	strb r1, [r0]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6254:
	.4byte gRam
_080D6258:
	.4byte 0x00000F92
_080D625C:
	.4byte gUnknown_08175248
_080D6260:
	.4byte 0x00000FB2
_080D6264:
	.4byte 0x00001032
	THUMB_FUNC_END sub_080D6220

	THUMB_FUNC_START sub_080D6268
sub_080D6268: @ 0x080D6268
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r5, _080D62B4  @ =gUnknown_03003E74
	ldrh r0, [r5]
	add r0, r0, #1
	strh r0, [r5]
	ldr r4, _080D62B8  @ =gRam
	ldr r1, _080D62BC  @ =0x00000F92
	add r0, r4, r1
	add r0, r6, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080D62C0  @ =gUnknown_0817526C
	add r1, r1, r0
	add r0, r6, #0
	mov r2, #2
	bl sub_080C9480
	ldrh r0, [r5]
	sub r0, r0, #1
	strh r0, [r5]
	ldr r0, _080D62C4  @ =0x000010D2
	add r4, r4, r0
	add r4, r6, r4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D62AC
	add r0, r6, #0
	bl sub_080D60E8
	add r0, r6, #0
	bl sub_080C6230
_080D62AC:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D62B4:
	.4byte gUnknown_03003E74
_080D62B8:
	.4byte gRam
_080D62BC:
	.4byte 0x00000F92
_080D62C0:
	.4byte gUnknown_0817526C
_080D62C4:
	.4byte 0x000010D2
	THUMB_FUNC_END sub_080D6268

	THUMB_FUNC_START sub_080D62C8
sub_080D62C8: @ 0x080D62C8
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r0, #0
	mov r8, r0
	ldr r5, _080D63B8  @ =gRam
	ldr r1, _080D63BC  @ =0x000010F2
	add r0, r5, r1
	add r0, r4, r0
	mov r2, #161
	lsl r2, r2, #4
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D63C0  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D62FA
	mov r0, #8
	bl sub_080CF3A0
_080D62FA:
	ldr r2, _080D63C4  @ =0x00001052
	add r0, r5, r2
	add r6, r4, r0
	ldrb r2, [r6]
	lsr r2, r2, #3
	mov r7, #3
	and r2, r2, r7
	ldr r0, _080D63C8  @ =0x00001122
	add r3, r5, r0
	add r3, r4, r3
	ldrb r0, [r3]
	mov r1, #191
	and r1, r1, r0
	ldr r0, _080D63CC  @ =gUnknown_08175324
	add r0, r2, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r3]
	ldr r0, _080D63D0  @ =0x00000F92
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080D63D4  @ =gUnknown_08175328
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r1, _080D63D8  @ =0x00000D94
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #48
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D634A
	b _080D646C
_080D634A:
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D6358
	b _080D646C
_080D6358:
	add r0, r4, #0
	bl sub_080C5044
	ldr r2, _080D63DC  @ =0x00001072
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D6370
	add r0, r4, #0
	bl sub_080C3540
_080D6370:
	add r0, r4, #0
	bl Sprite3_Move
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	ldr r1, _080D63E0  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080D63EC
	ldr r2, _080D63E4  @ =0x00000996
	add r0, r5, r2
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	and r0, r0, r7
	cmp r0, #0
	bne _080D6400
	add r0, r4, #0
	mov r1, #16
	bl sub_080C2CB4
	mov r0, #150
	lsl r0, r0, #4
	add r1, r5, r0
	ldrb r0, [r1]
	neg r0, r0
	strb r0, [r1]
	ldr r2, _080D63E8  @ =0x00000961
	add r1, r5, r2
	ldrb r0, [r1]
	neg r0, r0
	strb r0, [r1]
	b _080D6406
_080D63B8:
	.4byte gRam
_080D63BC:
	.4byte 0x000010F2
_080D63C0:
	.4byte 0x00000FD2
_080D63C4:
	.4byte 0x00001052
_080D63C8:
	.4byte 0x00001122
_080D63CC:
	.4byte gUnknown_08175324
_080D63D0:
	.4byte 0x00000F92
_080D63D4:
	.4byte gUnknown_08175328
_080D63D8:
	.4byte 0x00000D94
_080D63DC:
	.4byte 0x00001072
_080D63E0:
	.4byte 0x00000FC2
_080D63E4:
	.4byte 0x00000996
_080D63E8:
	.4byte 0x00000961
_080D63EC:
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080D6400
	add r0, r4, #0
	mov r1, #16
	bl sub_080C2CB4
	mov r5, #1
	mov r8, r5
_080D6400:
	mov r0, r8
	cmp r0, #0
	beq _080D646C
_080D6406:
	ldr r0, _080D6430  @ =gRam
	ldr r2, _080D6434  @ =0x00000F12
	add r1, r0, r2
	add r3, r4, r1
	ldrb r2, [r3]
	mov r5, #150
	lsl r5, r5, #4
	add r1, r0, r5
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	add r5, r0, #0
	cmp r2, r1
	beq _080D643C
	sub r0, r2, r1
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080D6438
	sub r0, r2, #1
	b _080D643A
_080D6430:
	.4byte gRam
_080D6434:
	.4byte 0x00000F12
_080D6438:
	add r0, r2, #1
_080D643A:
	strb r0, [r3]
_080D643C:
	ldr r1, _080D6460  @ =0x00000F22
	add r0, r5, r1
	add r3, r4, r0
	ldrb r2, [r3]
	ldr r1, _080D6464  @ =0x00000961
	add r0, r5, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r2, r0
	beq _080D646C
	sub r0, r2, r0
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080D6468
	sub r0, r2, #1
	b _080D646A
_080D6460:
	.4byte 0x00000F22
_080D6464:
	.4byte 0x00000961
_080D6468:
	add r0, r2, #1
_080D646A:
	strb r0, [r3]
_080D646C:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D62C8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D6478
sub_080D6478: @ 0x080D6478
	bx lr
	THUMB_FUNC_END sub_080D6478

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D647C
sub_080D647C: @ 0x080D647C
	push {r4-r6,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #2
	bl sub_080CA538
	add r6, r0, #0
	cmp r6, #0
	blt _080D64C2
	lsl r5, r6, #24
	lsr r5, r5, #24
	add r0, r5, #0
	bl sub_080CAE50
	ldr r4, _080D64C8  @ =gRam
	ldr r1, _080D64CC  @ =0x00001142
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #13
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #16
	bl sub_080C35FC
	ldr r1, _080D64D0  @ =0x00000FC2
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #255
	strb r1, [r0]
	ldr r0, _080D64D4  @ =0x00000FD2
	add r4, r4, r0
	add r4, r6, r4
	mov r0, #32
	strb r0, [r4]
_080D64C2:
	pop {r4-r6}
	pop {r0}
	bx r0
_080D64C8:
	.4byte gRam
_080D64CC:
	.4byte 0x00001142
_080D64D0:
	.4byte 0x00000FC2
_080D64D4:
	.4byte 0x00000FD2
	THUMB_FUNC_END sub_080D647C

	THUMB_FUNC_START sub_080D64D8
sub_080D64D8: @ 0x080D64D8
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080D6504  @ =gRam
	ldr r1, _080D6508  @ =0x00000F52
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D650C
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C631C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D6558
	b _080D6512
	.byte 0x00
	.byte 0x00
_080D6504:
	.4byte gRam
_080D6508:
	.4byte 0x00000F52
_080D650C:
	add r0, r4, #0
	bl sub_080D6754
_080D6512:
	ldr r5, _080D6560  @ =gRam
	ldr r2, _080D6564  @ =0x000010D2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D652A
	ldr r1, _080D6568  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #8
	strb r1, [r0]
_080D652A:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D6558
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D6558
	ldr r1, _080D656C  @ =gUnknown_08175330
	ldr r2, _080D6570  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D6558:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080D6560:
	.4byte gRam
_080D6564:
	.4byte 0x000010D2
_080D6568:
	.4byte 0x00000FA2
_080D656C:
	.4byte gUnknown_08175330
_080D6570:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D64D8

	THUMB_FUNC_START sub_080D6574
sub_080D6574: @ 0x080D6574
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080D65A8  @ =gRam
	ldr r0, _080D65AC  @ =0x00001172
	add r1, r3, r0
	add r1, r4, r1
	ldr r2, _080D65B0  @ =0x00000FC2
	add r0, r3, r2
	add r2, r4, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #0
	beq _080D65B4
	add r0, r4, #0
	mov r1, #16
	bl sub_080C35FC
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C6F48
	b _080D65C4
_080D65A8:
	.4byte gRam
_080D65AC:
	.4byte 0x00001172
_080D65B0:
	.4byte 0x00000FC2
_080D65B4:
	ldr r1, _080D65CC  @ =0x00000F52
	add r0, r3, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #127
	strb r0, [r2]
_080D65C4:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D65CC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D6574

	THUMB_FUNC_START sub_080D65D0
sub_080D65D0: @ 0x080D65D0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r2, _080D6604  @ =gRam
	ldr r0, _080D6608  @ =0x00001172
	add r1, r2, r0
	add r1, r5, r1
	ldr r3, _080D660C  @ =0x00000FC2
	add r0, r2, r3
	add r4, r5, r0
	ldrb r0, [r4]
	strb r0, [r1]
	ldrb r0, [r4]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D6614
	sub r3, r3, #48
	add r1, r2, r3
	add r1, r5, r1
	ldr r2, _080D6610  @ =gUnknown_08175340
	lsr r0, r0, #27
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080D6632
	.byte 0x00
	.byte 0x00
_080D6604:
	.4byte gRam
_080D6608:
	.4byte 0x00001172
_080D660C:
	.4byte 0x00000FC2
_080D6610:
	.4byte gUnknown_08175340
_080D6614:
	ldr r0, _080D6638  @ =0x00000F52
	add r1, r2, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	bl GetRandomInt
	mov r1, #63
	and r1, r1, r0
	add r1, r1, #160
	strb r1, [r4]
	add r0, r5, #0
	bl sub_080C3540
_080D6632:
	pop {r4,r5}
	pop {r0}
	bx r0
_080D6638:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D65D0

	THUMB_FUNC_START sub_080D663C
sub_080D663C: @ 0x080D663C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C5044
	ldr r5, _080D66B0  @ =gRam
	ldr r1, _080D66B4  @ =0x00000FC2
	add r0, r5, r1
	add r7, r4, r0
	ldrb r0, [r7]
	cmp r0, #0
	beq _080D66CC
	ldr r2, _080D66B8  @ =0x00001052
	add r0, r5, r2
	add r6, r4, r0
	ldrb r1, [r6]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080D667A
	ldr r1, _080D66BC  @ =gUnknown_08175350
	sub r2, r2, #240
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r1, [r0]
	add r0, r4, #0
	bl sub_080C35FC
_080D667A:
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C6F48
	ldr r1, _080D66C0  @ =0x00001042
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D66CC
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	ldr r1, _080D66C4  @ =0x00000F92
	add r2, r5, r1
	add r2, r4, r2
	ldr r3, _080D66C8  @ =gUnknown_08175352
	lsl r0, r0, #24
	lsr r0, r0, #26
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	b _080D66DC
_080D66B0:
	.4byte gRam
_080D66B4:
	.4byte 0x00000FC2
_080D66B8:
	.4byte 0x00001052
_080D66BC:
	.4byte gUnknown_08175350
_080D66C0:
	.4byte 0x00001042
_080D66C4:
	.4byte 0x00000F92
_080D66C8:
	.4byte gUnknown_08175352
_080D66CC:
	ldr r2, _080D66E4  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #127
	strb r0, [r7]
_080D66DC:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D66E4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D663C

	THUMB_FUNC_START sub_080D66E8
sub_080D66E8: @ 0x080D66E8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080D6720  @ =gRam
	ldr r0, _080D6724  @ =0x00001172
	add r1, r2, r0
	add r1, r3, r1
	ldr r4, _080D6728  @ =0x00000FC2
	add r0, r2, r4
	add r4, r3, r0
	ldrb r0, [r4]
	strb r0, [r1]
	ldrb r0, [r4]
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	beq _080D6734
	ldr r5, _080D672C  @ =0x00000F92
	add r2, r2, r5
	add r2, r3, r2
	ldr r3, _080D6730  @ =gUnknown_08175356
	lsr r0, r0, #27
	mov r1, #15
	eor r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	b _080D6748
_080D6720:
	.4byte gRam
_080D6724:
	.4byte 0x00001172
_080D6728:
	.4byte 0x00000FC2
_080D672C:
	.4byte 0x00000F92
_080D6730:
	.4byte gUnknown_08175356
_080D6734:
	ldr r5, _080D6750  @ =0x00000F52
	add r0, r2, r5
	add r0, r3, r0
	strb r1, [r0]
	bl GetRandomInt
	mov r1, #31
	and r1, r1, r0
	add r1, r1, #64
	strb r1, [r4]
_080D6748:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6750:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D66E8

	THUMB_FUNC_START sub_080D6754
sub_080D6754: @ 0x080D6754
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	ldr r5, _080D6854  @ =gRam
	ldr r1, _080D6858  @ =0x00000F92
	add r0, r5, r1
	mov r2, r9
	add r4, r2, r0
	ldrb r0, [r4]
	cmp r0, #8
	bhi _080D677C
	mov r0, r9
	bl sub_080C5D18
_080D677C:
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r9
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D6844
	ldr r1, _080D685C  @ =gUnknown_08175366
	ldrb r0, [r4]
	add r0, r0, r1
	ldrb r0, [r0]
	str r0, [sp, #8]
	lsl r2, r0, #24
	cmp r2, #0
	blt _080D6844
	mov r10, r5
	add r3, sp, #4
	mov r8, r3
_080D67A4:
	ldr r0, _080D6858  @ =0x00000F92
	add r0, r0, r10
	add r0, r0, r9
	ldrb r1, [r0]
	lsl r1, r1, #2
	asr r0, r2, #24
	add r0, r0, r1
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r0, _080D6860  @ =gUnknown_08175454
	add r0, r5, r0
	ldr r7, _080D6864  @ =gUnknown_03002B99
	ldrb r4, [r7]
	ldrb r6, [r0]
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	blt _080D67D2
	cmp r6, #72
	beq _080D67D2
	cmp r6, #104
	bne _080D67D6
_080D67D2:
	mov r0, #240
	and r4, r4, r0
_080D67D6:
	ldr r0, _080D6868  @ =gUnknown_03003E74
	mov r2, r8
	ldrb r1, [r2]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r10
	ldr r1, _080D686C  @ =gUnknown_08175374
	lsl r3, r5, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080D6870  @ =gUnknown_081753E4
	add r3, r3, r2
	ldrh r2, [r3]
	ldr r3, _080D6874  @ =gUnknown_03002B94
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080D6878  @ =gUnknown_0817548C
	add r3, r5, r3
	ldrb r3, [r3]
	orr r4, r4, r3
	lsl r3, r4, #8
	add r3, r6, r3
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080D687C  @ =gUnknown_081754C4
	add r4, r5, r4
	ldrb r4, [r4]
	str r4, [sp]
	bl sub_080C6368
	ldr r7, [sp, #8]
	lsl r0, r7, #24
	mov r1, #255
	lsl r1, r1, #24
	add r0, r0, r1
	lsr r0, r0, #24
	str r0, [sp, #8]
	mov r2, r8
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	ldr r3, [sp, #8]
	lsl r2, r3, #24
	cmp r2, #0
	bge _080D67A4
_080D6844:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080D6854:
	.4byte gRam
_080D6858:
	.4byte 0x00000F92
_080D685C:
	.4byte gUnknown_08175366
_080D6860:
	.4byte gUnknown_08175454
_080D6864:
	.4byte gUnknown_03002B99
_080D6868:
	.4byte gUnknown_03003E74
_080D686C:
	.4byte gUnknown_08175374
_080D6870:
	.4byte gUnknown_081753E4
_080D6874:
	.4byte gUnknown_03002B94
_080D6878:
	.4byte gUnknown_0817548C
_080D687C:
	.4byte gUnknown_081754C4
	THUMB_FUNC_END sub_080D6754

	THUMB_FUNC_START sub_080D6880
sub_080D6880: @ 0x080D6880
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D68B4  @ =gRam
	ldr r1, _080D68B8  @ =0x00000F62
	add r4, r3, r1
	add r4, r0, r4
	ldr r2, _080D68BC  @ =0x00000EE2
	add r1, r3, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsr r1, r1, #4
	mov r2, #1
	and r1, r1, r2
	strb r1, [r4]
	ldr r1, _080D68C0  @ =0x00001122
	add r3, r3, r1
	add r0, r0, r3
	ldr r2, _080D68C4  @ =gUnknown_0817532C
	ldrb r1, [r4]
	add r1, r1, r2
	ldrb r1, [r1]
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
_080D68B4:
	.4byte gRam
_080D68B8:
	.4byte 0x00000F62
_080D68BC:
	.4byte 0x00000EE2
_080D68C0:
	.4byte 0x00001122
_080D68C4:
	.4byte gUnknown_0817532C
	THUMB_FUNC_END sub_080D6880

	THUMB_FUNC_START sub_080D68C8
sub_080D68C8: @ 0x080D68C8
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r7, _080D694C  @ =gRam
	ldr r0, _080D6950  @ =0x000010A2
	add r0, r0, r7
	mov r9, r0
	add r6, r5, r0
	ldrb r0, [r6]
	add r0, r0, #1
	mov r1, #0
	strb r0, [r6]
	ldr r2, _080D6954  @ =0x00000FC2
	add r2, r2, r7
	mov r8, r2
	add r0, r5, r2
	strb r1, [r0]
	ldr r1, _080D6958  @ =0x00000F92
	add r0, r7, r1
	add r0, r5, r0
	mov r1, #6
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080C3758
	mov r0, #100
	add r1, r5, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080D693E
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	mov r2, r8
	add r1, r4, r2
	mov r0, #96
	strb r0, [r1]
	ldr r1, _080D695C  @ =0x00001082
	add r0, r7, r1
	add r0, r5, r0
	strb r4, [r0]
	mov r2, r9
	add r1, r4, r2
	ldrb r0, [r6]
	strb r0, [r1]
	ldr r0, _080D6960  @ =0x00001122
	add r1, r7, r0
	add r1, r4, r1
	ldr r2, _080D6964  @ =gUnknown_081754FC
	ldrb r0, [r6]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080D693E:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D694C:
	.4byte gRam
_080D6950:
	.4byte 0x000010A2
_080D6954:
	.4byte 0x00000FC2
_080D6958:
	.4byte 0x00000F92
_080D695C:
	.4byte 0x00001082
_080D6960:
	.4byte 0x00001122
_080D6964:
	.4byte gUnknown_081754FC
	THUMB_FUNC_END sub_080D68C8

	THUMB_FUNC_START sub_080D6968
sub_080D6968: @ 0x080D6968
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r1, _080D6A9C  @ =gRam
	ldr r2, _080D6AA0  @ =0x0000097C
	add r0, r1, r2
	ldrb r0, [r0]
	add r0, r0, #32
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #63
	bhi _080D699C
	add r2, r2, #1
	add r0, r1, r2
	ldrb r0, [r0]
	add r0, r0, #32
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #63
	bhi _080D699C
	mov r0, #16
	bl sub_080CF388
_080D699C:
	add r0, r4, #0
	bl sub_080D6BB8
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D69B0
	b _080D6AF2
_080D69B0:
	ldr r5, _080D6A9C  @ =gRam
	ldr r1, _080D6AA4  @ =0x00001082
	add r0, r5, r1
	add r3, r4, r0
	ldrb r0, [r3]
	sub r1, r1, #224
	add r2, r5, r1
	add r0, r0, r2
	ldrb r1, [r0]
	cmp r1, #6
	bne _080D69C8
	b _080D6AD4
_080D69C8:
	ldr r2, _080D6AA8  @ =0x00000F92
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080D6A80
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D6A80
	bl sub_08093078
	ldr r1, _080D6AAC  @ =0x00000546
	add r0, r5, r1
	ldrb r1, [r0]
	mov r0, #16
	and r0, r0, r1
	cmp r0, #0
	bne _080D69FA
	ldr r2, _080D6AB0  @ =0x00000DA7
	add r1, r5, r2
	mov r0, #1
	strb r0, [r1]
_080D69FA:
	add r0, r4, #0
	mov r1, #16
	bl sub_080C35FC
	mov r6, #0
	ldr r1, _080D6AB4  @ =0x00000F62
	add r0, r5, r1
	add r3, r4, r0
	ldrb r2, [r3]
	mov r1, #150
	lsl r1, r1, #4
	add r0, r5, r1
	ldrb r1, [r0]
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bge _080D6A28
	mov r6, #1
	mvn r0, r1
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
_080D6A28:
	add r0, r1, r2
	strb r0, [r3]
	mov r7, #128
	lsl r7, r7, #1
	and r0, r0, r7
	cmp r0, #0
	beq _080D6A44
	ldr r1, _080D6AB8  @ =gUnknown_081754FE
	lsl r0, r6, #1
	add r0, r0, r1
	ldrh r1, [r0]
	ldr r2, _080D6ABC  @ =0x00000DAA
	add r0, r5, r2
	strh r1, [r0]
_080D6A44:
	mov r6, #0
	ldr r1, _080D6AC0  @ =0x00000F72
	add r0, r5, r1
	add r3, r4, r0
	ldrb r2, [r3]
	ldr r1, _080D6AC4  @ =0x00000961
	add r0, r5, r1
	ldrb r1, [r0]
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bge _080D6A68
	mov r6, #1
	mvn r0, r1
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
_080D6A68:
	add r0, r1, r2
	strb r0, [r3]
	and r0, r0, r7
	cmp r0, #0
	beq _080D6A80
	ldr r1, _080D6AB8  @ =gUnknown_081754FE
	lsl r0, r6, #1
	add r0, r0, r1
	ldrh r1, [r0]
	ldr r2, _080D6AC8  @ =0x00000DA8
	add r0, r5, r2
	strh r1, [r0]
_080D6A80:
	ldr r1, _080D6ACC  @ =gUnknown_08175504
	ldr r0, _080D6A9C  @ =gRam
	ldr r2, _080D6AD0  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	b _080D6AF2
	.byte 0x00
	.byte 0x00
_080D6A9C:
	.4byte gRam
_080D6AA0:
	.4byte 0x0000097C
_080D6AA4:
	.4byte 0x00001082
_080D6AA8:
	.4byte 0x00000F92
_080D6AAC:
	.4byte 0x00000546
_080D6AB0:
	.4byte 0x00000DA7
_080D6AB4:
	.4byte 0x00000F62
_080D6AB8:
	.4byte gUnknown_081754FE
_080D6ABC:
	.4byte 0x00000DAA
_080D6AC0:
	.4byte 0x00000F72
_080D6AC4:
	.4byte 0x00000961
_080D6AC8:
	.4byte 0x00000DA8
_080D6ACC:
	.4byte gUnknown_08175504
_080D6AD0:
	.4byte 0x00000F52
_080D6AD4:
	add r0, r4, r2
	strb r1, [r0]
	ldr r0, _080D6AF8  @ =0x00000FC2
	add r1, r5, r0
	add r2, r4, r1
	ldrb r0, [r3]
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r2, _080D6AFC  @ =0x00001012
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #4
	strb r0, [r1]
_080D6AF2:
	pop {r4-r7}
	pop {r0}
	bx r0
_080D6AF8:
	.4byte 0x00000FC2
_080D6AFC:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080D6968

	THUMB_FUNC_START sub_080D6B00
sub_080D6B00: @ 0x080D6B00
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080D6B28  @ =gRam
	ldr r3, _080D6B2C  @ =0x00000FC2
	add r0, r1, r3
	add r3, r2, r0
	ldrb r0, [r3]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D6B38
	ldr r4, _080D6B30  @ =0x00000F92
	add r1, r1, r4
	add r1, r2, r1
	ldr r2, _080D6B34  @ =gUnknown_08175514
	lsr r0, r0, #28
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080D6B48
_080D6B28:
	.4byte gRam
_080D6B2C:
	.4byte 0x00000FC2
_080D6B30:
	.4byte 0x00000F92
_080D6B34:
	.4byte gUnknown_08175514
_080D6B38:
	ldr r4, _080D6B50  @ =0x00000F52
	add r0, r1, r4
	add r0, r2, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #255
	strb r0, [r3]
_080D6B48:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6B50:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D6B00

	THUMB_FUNC_START sub_080D6B54
sub_080D6B54: @ 0x080D6B54
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080D6BA4  @ =gRam
	ldr r2, _080D6BA8  @ =0x00000996
	add r0, r1, r2
	ldrb r0, [r0]
	mov r3, #15
	and r3, r3, r0
	cmp r3, #0
	bne _080D6B80
	ldr r2, _080D6BAC  @ =0x00000F92
	add r0, r1, r2
	add r2, r4, r0
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #2
	bls _080D6B80
	strb r3, [r2]
_080D6B80:
	ldr r2, _080D6BB0  @ =0x00000FC2
	add r0, r1, r2
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080D6B9C
	mov r0, #63
	strb r0, [r2]
	ldr r0, _080D6BB4  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D6B9C:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6BA4:
	.4byte gRam
_080D6BA8:
	.4byte 0x00000996
_080D6BAC:
	.4byte 0x00000F92
_080D6BB0:
	.4byte 0x00000FC2
_080D6BB4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D6B54

	THUMB_FUNC_START sub_080D6BB8
sub_080D6BB8: @ 0x080D6BB8
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r5, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D6C7A
	ldr r4, _080D6C8C  @ =gRam
	ldr r1, _080D6C90  @ =0x00000F92
	add r0, r4, r1
	add r2, r5, r0
	ldrb r0, [r2]
	cmp r0, #6
	beq _080D6C7A
	mov r0, #3
	mov r9, r4
	mov r8, r2
	ldr r4, _080D6C94  @ =0x00000969
	add r4, r4, r9
	mov r10, r4
	add r7, sp, #4
_080D6BF6:
	mov r1, r8
	ldrb r5, [r1]
	lsl r5, r5, #2
	lsl r6, r0, #24
	asr r6, r6, #24
	add r5, r6, r5
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r0, _080D6C98  @ =gUnknown_03003E74
	ldrb r1, [r7]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r9
	ldr r1, _080D6C9C  @ =gUnknown_0817551C
	lsl r3, r5, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r4, _080D6CA0  @ =0x00000964
	add r4, r4, r9
	ldr r2, _080D6CA4  @ =gUnknown_0817554C
	add r3, r3, r2
	ldrh r2, [r3]
	ldrh r4, [r4]
	add r2, r2, r4
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080D6CA8  @ =gUnknown_0817557C
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080D6CAC  @ =gUnknown_08175594
	add r5, r5, r4
	ldrb r4, [r5]
	mov r5, r10
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080D6CB0  @ =gUnknown_081755AC
	mov r12, r4
	mov r5, r8
	ldrb r4, [r5]
	add r4, r4, r12
	ldrb r4, [r4]
	str r4, [sp]
	bl sub_080C6368
	sub r6, r6, #1
	lsl r6, r6, #24
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsr r0, r6, #24
	cmp r6, #0
	bge _080D6BF6
_080D6C7A:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6C8C:
	.4byte gRam
_080D6C90:
	.4byte 0x00000F92
_080D6C94:
	.4byte 0x00000969
_080D6C98:
	.4byte gUnknown_03003E74
_080D6C9C:
	.4byte gUnknown_0817551C
_080D6CA0:
	.4byte 0x00000964
_080D6CA4:
	.4byte gUnknown_0817554C
_080D6CA8:
	.4byte gUnknown_0817557C
_080D6CAC:
	.4byte gUnknown_08175594
_080D6CB0:
	.4byte gUnknown_081755AC
	THUMB_FUNC_END sub_080D6BB8

	THUMB_FUNC_START sub_080D6CB4
sub_080D6CB4: @ 0x080D6CB4
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080D6CE8  @ =gRam
	ldr r1, _080D6CEC  @ =0x00000F92
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #6
	strb r1, [r0]
	ldr r1, _080D6CF0  @ =0x00000FC2
	add r0, r3, r1
	add r4, r2, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D6CE2
	sub r1, r1, #112
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #63
	strb r0, [r4]
_080D6CE2:
	pop {r4}
	pop {r0}
	bx r0
_080D6CE8:
	.4byte gRam
_080D6CEC:
	.4byte 0x00000F92
_080D6CF0:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080D6CB4

	THUMB_FUNC_START sub_080D6CF4
sub_080D6CF4: @ 0x080D6CF4
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080D6D20  @ =gRam
	ldr r3, _080D6D24  @ =0x00000FC2
	add r0, r1, r3
	add r4, r2, r0
	ldrb r0, [r4]
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r3, #0
	beq _080D6D30
	ldr r5, _080D6D28  @ =0x00000F92
	add r1, r1, r5
	add r1, r2, r1
	ldr r2, _080D6D2C  @ =gUnknown_08175518
	lsr r0, r0, #28
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080D6D3C
	.byte 0x00
	.byte 0x00
_080D6D20:
	.4byte gRam
_080D6D24:
	.4byte 0x00000FC2
_080D6D28:
	.4byte 0x00000F92
_080D6D2C:
	.4byte gUnknown_08175518
_080D6D30:
	ldr r5, _080D6D44  @ =0x00000F52
	add r0, r1, r5
	add r0, r2, r0
	strb r3, [r0]
	mov r0, #32
	strb r0, [r4]
_080D6D3C:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6D44:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D6CF4

	THUMB_FUNC_START sub_080D6D48
sub_080D6D48: @ 0x080D6D48
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C5044
	ldr r1, _080D6D78  @ =gRam
	ldr r2, _080D6D7C  @ =0x00000FC2
	add r0, r1, r2
	add r2, r4, r0
	ldrb r0, [r2]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D6D88
	ldr r3, _080D6D80  @ =0x00000F92
	add r1, r1, r3
	add r1, r4, r1
	ldr r2, _080D6D84  @ =gUnknown_081755C4
	lsr r0, r0, #28
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080D6D98
	.byte 0x00
	.byte 0x00
_080D6D78:
	.4byte gRam
_080D6D7C:
	.4byte 0x00000FC2
_080D6D80:
	.4byte 0x00000F92
_080D6D84:
	.4byte gUnknown_081755C4
_080D6D88:
	ldr r3, _080D6DA0  @ =0x00000F52
	add r0, r1, r3
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #128
	strb r0, [r2]
_080D6D98:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6DA0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D6D48

	THUMB_FUNC_START sub_080D6DA4
sub_080D6DA4: @ 0x080D6DA4
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C5044
	ldr r5, _080D6E10  @ =gRam
	ldr r1, _080D6E14  @ =0x00000FC2
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080D6E30
	mov r1, #31
	and r1, r1, r0
	ldr r2, _080D6E18  @ =0x000010A2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	ldr r2, _080D6E1C  @ =0x000009AD
	add r0, r5, r2
	ldrb r0, [r0]
	orr r1, r1, r0
	ldr r2, _080D6E20  @ =0x000010D2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	ldr r2, _080D6E24  @ =0x00001605
	add r0, r5, r2
	ldrb r0, [r0]
	orr r1, r1, r0
	cmp r1, #0
	bne _080D6DF0
	add r0, r4, #0
	bl sub_080E89E4
_080D6DF0:
	ldr r0, _080D6E28  @ =0x00001052
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D6E2C  @ =0x00000F92
	add r2, r5, r1
	add r2, r4, r2
	lsl r0, r0, #24
	lsr r0, r0, #27
	mov r1, #1
	and r0, r0, r1
	add r0, r0, #2
	strb r0, [r2]
	b _080D6E40
_080D6E10:
	.4byte gRam
_080D6E14:
	.4byte 0x00000FC2
_080D6E18:
	.4byte 0x000010A2
_080D6E1C:
	.4byte 0x000009AD
_080D6E20:
	.4byte 0x000010D2
_080D6E24:
	.4byte 0x00001605
_080D6E28:
	.4byte 0x00001052
_080D6E2C:
	.4byte 0x00000F92
_080D6E30:
	mov r0, #31
	strb r0, [r1]
	ldr r2, _080D6E48  @ =0x00000F52
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D6E40:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6E48:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D6DA4

	THUMB_FUNC_START sub_080D6E4C
sub_080D6E4C: @ 0x080D6E4C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	ldr r4, _080D6F30  @ =gRam
	ldr r1, _080D6F34  @ =0x00000F52
	add r0, r4, r1
	add r0, r0, r9
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D6F20
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r9
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D6F20
	mov r2, #3
	mov r8, r4
	mov r3, sp
	add r3, r3, #4
	str r3, [sp, #8]
	ldr r7, _080D6F38  @ =0x00000964
	add r7, r7, r8
	mov r10, r7
_080D6E8E:
	ldr r0, _080D6F3C  @ =0x00000F92
	add r0, r0, r8
	add r0, r0, r9
	ldrb r0, [r0]
	lsl r0, r0, #2
	lsl r1, r2, #24
	asr r6, r1, #24
	add r0, r6, r0
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	ldr r0, _080D6F40  @ =gUnknown_08175618
	add r0, r5, r0
	ldr r1, _080D6F44  @ =0x00000969
	add r1, r1, r8
	ldrb r2, [r0]
	ldrb r0, [r1]
	add r4, r0, #0
	eor r4, r4, r2
	mov r0, #15
	and r0, r0, r2
	cmp r0, #0
	bne _080D6EC0
	mov r0, #240
	and r4, r4, r0
_080D6EC0:
	ldr r0, _080D6F48  @ =gUnknown_03003E74
	ldr r2, [sp, #8]
	ldrb r1, [r2]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r8
	ldr r1, _080D6F4C  @ =gUnknown_081755C8
	lsl r3, r5, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080D6F50  @ =gUnknown_081755E8
	add r3, r3, r2
	ldrh r2, [r3]
	mov r3, r10
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080D6F54  @ =gUnknown_08175608
	add r3, r5, r3
	ldrb r3, [r3]
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080D6F58  @ =gUnknown_08175628
	add r4, r5, r4
	ldrb r4, [r4]
	str r4, [sp]
	bl sub_080C6368
	sub r1, r6, #1
	lsl r1, r1, #24
	ldr r7, [sp, #8]
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsr r2, r1, #24
	cmp r1, #0
	bge _080D6E8E
_080D6F20:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080D6F30:
	.4byte gRam
_080D6F34:
	.4byte 0x00000F52
_080D6F38:
	.4byte 0x00000964
_080D6F3C:
	.4byte 0x00000F92
_080D6F40:
	.4byte gUnknown_08175618
_080D6F44:
	.4byte 0x00000969
_080D6F48:
	.4byte gUnknown_03003E74
_080D6F4C:
	.4byte gUnknown_081755C8
_080D6F50:
	.4byte gUnknown_081755E8
_080D6F54:
	.4byte gUnknown_08175608
_080D6F58:
	.4byte gUnknown_08175628
	THUMB_FUNC_END sub_080D6E4C

	THUMB_FUNC_START sub_080D6F5C
sub_080D6F5C: @ 0x080D6F5C
	push {r4,r5,lr}
	add r5, r0, #0
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r4, _080D6F90  @ =gRam
	ldr r1, _080D6F94  @ =0x00000FF2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #99
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080CEB84
	ldr r0, _080D6F98  @ =0x000010A2
	add r4, r4, r0
	add r4, r5, r4
	ldrb r0, [r4]
	sub r0, r0, #1
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080D68C8
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6F90:
	.4byte gRam
_080D6F94:
	.4byte 0x00000FF2
_080D6F98:
	.4byte 0x000010A2
	THUMB_FUNC_END sub_080D6F5C

	THUMB_FUNC_START sub_080D6F9C
sub_080D6F9C: @ 0x080D6F9C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080D6E4C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D6FCC
	ldr r1, _080D6FD4  @ =gUnknown_081755B4
	ldr r0, _080D6FD8  @ =gRam
	ldr r2, _080D6FDC  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D6FCC:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D6FD4:
	.4byte gUnknown_081755B4
_080D6FD8:
	.4byte gRam
_080D6FDC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D6F9C

	THUMB_FUNC_START sub_080D6FE0
sub_080D6FE0: @ 0x080D6FE0
	push {r4,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r4, _080D7014  @ =gRam
	ldr r0, _080D7018  @ =0x00001172
	add r1, r4, r0
	add r1, r3, r1
	ldr r2, _080D701C  @ =0x00000FC2
	add r0, r4, r2
	add r2, r3, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #0
	bne _080D700E
	ldr r1, _080D7020  @ =0x00000F52
	add r0, r4, r1
	add r0, r3, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #31
	strb r0, [r2]
_080D700E:
	pop {r4}
	pop {r0}
	bx r0
_080D7014:
	.4byte gRam
_080D7018:
	.4byte 0x00001172
_080D701C:
	.4byte 0x00000FC2
_080D7020:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D6FE0

	THUMB_FUNC_START sub_080D7024
sub_080D7024: @ 0x080D7024
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C5044
	ldr r1, _080D7054  @ =gRam
	ldr r2, _080D7058  @ =0x00000FC2
	add r0, r1, r2
	add r3, r4, r0
	ldrb r0, [r3]
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	beq _080D7064
	ldr r5, _080D705C  @ =0x00000F92
	add r1, r1, r5
	add r1, r4, r1
	ldr r2, _080D7060  @ =gUnknown_081755C6
	lsr r0, r0, #28
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080D7070
_080D7054:
	.4byte gRam
_080D7058:
	.4byte 0x00000FC2
_080D705C:
	.4byte 0x00000F92
_080D7060:
	.4byte gUnknown_081755C6
_080D7064:
	ldr r5, _080D7078  @ =0x00000F52
	add r0, r1, r5
	add r0, r4, r0
	strb r2, [r0]
	mov r0, #223
	strb r0, [r3]
_080D7070:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D7078:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D7024

	THUMB_FUNC_START sub_080D707C
sub_080D707C: @ 0x080D707C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	ldr r6, _080D7248  @ =gRam
	ldr r1, _080D724C  @ =0x00000FB2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r3, [r0]
	add r7, r3, #0
	ldr r2, _080D7250  @ =0x00000D94
	add r1, r6, r2
	add r1, r4, r1
	ldrb r5, [r1]
	mov r9, r5
	mov r0, #48
	mov r5, #0
	mov r2, sp
	strb r5, [r2]
	mov r2, r9
	orr r0, r0, r2
	strb r0, [r1]
	ldr r5, _080D7254  @ =gUnknown_030031C2
	add r2, r4, r5
	ldr r0, _080D7258  @ =gUnknown_08175640
	add r0, r3, r0
	ldrb r1, [r0]
	strb r1, [r2]
	ldr r5, _080D725C  @ =0x00000FE2
	add r0, r6, r5
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080D70CE
	add r0, r1, #1
	strb r0, [r2]
_080D70CE:
	ldr r0, _080D7260  @ =0x00001122
	add r2, r6, r0
	add r2, r4, r2
	ldrb r0, [r2]
	mov r1, #191
	and r1, r1, r0
	ldr r0, _080D7264  @ =gUnknown_08175644
	add r0, r3, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D70F8
	b _080D7236
_080D70F8:
	ldr r2, _080D7268  @ =gUnknown_030031F2
	add r1, r4, r2
	ldrb r0, [r1]
	cmp r0, #0
	bne _080D7114
	mov r0, #128
	strb r0, [r1]
	ldr r0, _080D726C  @ =0x00000F62
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mov r2, #1
	eor r0, r0, r2
	strb r0, [r1]
_080D7114:
	ldr r1, _080D7270  @ =0x00000F22
	add r1, r1, r6
	mov r10, r1
	add r3, r4, r1
	ldr r2, _080D7274  @ =gUnknown_08175638
	ldr r0, _080D726C  @ =0x00000F62
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r3]
	ldr r2, _080D7278  @ =0x00000F12
	add r2, r2, r6
	mov r9, r2
	add r3, r4, r2
	ldr r2, _080D727C  @ =gUnknown_0817563C
	ldrb r0, [r1]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r3]
	add r0, r4, #0
	bl Sprite3_Move
	ldr r0, _080D7280  @ =0x00000996
	add r1, r6, r0
	lsl r0, r4, #2
	ldrb r1, [r1]
	add r0, r0, r1
	mov r1, #31
	and r0, r0, r1
	cmp r0, #0
	bne _080D715A
	mov r0, #16
	strb r0, [r5]
_080D715A:
	ldrb r5, [r5]
	cmp r5, #1
	bne _080D7236
	ldr r1, _080D7284  @ =0x000010D2
	add r0, r6, r1
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D7236
	mov r0, #107
	mov r1, r8
	mov r2, #13
	bl sub_080C9AAC
	add r4, r0, #0
	cmp r4, #0
	blt _080D7236
	mov r0, r8
	mov r1, #88
	bl sub_080CF140
	ldr r2, _080D7288  @ =0x00000F82
	add r0, r6, r2
	add r0, r4, r0
	mov r3, #1
	strb r5, [r0]
	ldr r1, _080D7254  @ =gUnknown_030031C2
	add r0, r4, r1
	strb r5, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r1, r6, r2
	ldr r0, _080D728C  @ =gUnknown_08175648
	add r0, r7, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080D7290  @ =gUnknown_0817564C
	add r0, r7, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r5, _080D7294  @ =0x00000EE2
	add r0, r6, r5
	add r0, r4, r0
	strb r1, [r0]
	ldr r2, _080D7298  @ =0x00000F02
	add r0, r6, r2
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r5, _080D729C  @ =0x00000964
	add r1, r6, r5
	ldr r0, _080D72A0  @ =gUnknown_08175650
	add r0, r7, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080D72A4  @ =gUnknown_08175654
	add r0, r7, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r2, r2, #48
	add r0, r6, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r5, _080D72A8  @ =0x00000EF2
	add r0, r6, r5
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	mov r0, r10
	add r1, r4, r0
	ldr r0, _080D72AC  @ =gUnknown_08175658
	add r0, r7, r0
	ldrb r0, [r0]
	strb r0, [r1]
	mov r2, r9
	add r1, r4, r2
	ldr r0, _080D72B0  @ =gUnknown_0817565C
	add r0, r7, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r5, _080D72B4  @ =0x00001012
	add r1, r6, r5
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #240
	and r0, r0, r2
	orr r0, r0, r3
	strb r0, [r1]
	ldr r0, _080D72B8  @ =0x00001032
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mov r2, #71
	orr r0, r0, r2
	strb r0, [r1]
	ldr r2, _080D72BC  @ =0x00000E75
	add r1, r6, r2
	add r1, r4, r1
	ldrb r0, [r1]
	mov r2, #68
	orr r0, r0, r2
	strb r0, [r1]
	ldr r5, _080D7268  @ =gUnknown_030031F2
	add r1, r4, r5
	mov r0, #32
	strb r0, [r1]
_080D7236:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D7248:
	.4byte gRam
_080D724C:
	.4byte 0x00000FB2
_080D7250:
	.4byte 0x00000D94
_080D7254:
	.4byte gUnknown_030031C2
_080D7258:
	.4byte gUnknown_08175640
_080D725C:
	.4byte 0x00000FE2
_080D7260:
	.4byte 0x00001122
_080D7264:
	.4byte gUnknown_08175644
_080D7268:
	.4byte gUnknown_030031F2
_080D726C:
	.4byte 0x00000F62
_080D7270:
	.4byte 0x00000F22
_080D7274:
	.4byte gUnknown_08175638
_080D7278:
	.4byte 0x00000F12
_080D727C:
	.4byte gUnknown_0817563C
_080D7280:
	.4byte 0x00000996
_080D7284:
	.4byte 0x000010D2
_080D7288:
	.4byte 0x00000F82
_080D728C:
	.4byte gUnknown_08175648
_080D7290:
	.4byte gUnknown_0817564C
_080D7294:
	.4byte 0x00000EE2
_080D7298:
	.4byte 0x00000F02
_080D729C:
	.4byte 0x00000964
_080D72A0:
	.4byte gUnknown_08175650
_080D72A4:
	.4byte gUnknown_08175654
_080D72A8:
	.4byte 0x00000EF2
_080D72AC:
	.4byte gUnknown_08175658
_080D72B0:
	.4byte gUnknown_0817565C
_080D72B4:
	.4byte 0x00001012
_080D72B8:
	.4byte 0x00001032
_080D72BC:
	.4byte 0x00000E75
	THUMB_FUNC_END sub_080D707C

	THUMB_FUNC_START sub_080D72C0
sub_080D72C0: @ 0x080D72C0
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D72EC  @ =gRam
	ldr r1, _080D72F0  @ =0x00000FB2
	add r3, r2, r1
	add r3, r0, r3
	ldr r4, _080D72F4  @ =0x00000FF2
	add r1, r2, r4
	add r1, r0, r1
	ldrb r1, [r1]
	sub r1, r1, #102
	strb r1, [r3]
	ldr r3, _080D72F8  @ =0x00000F62
	add r2, r2, r3
	add r0, r0, r2
	mov r2, #2
	and r1, r1, r2
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
_080D72EC:
	.4byte gRam
_080D72F0:
	.4byte 0x00000FB2
_080D72F4:
	.4byte 0x00000FF2
_080D72F8:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080D72C0

	THUMB_FUNC_START sub_080D72FC
sub_080D72FC: @ 0x080D72FC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r2, r4, #0
	ldr r5, _080D7320  @ =gRam
	ldr r1, _080D7324  @ =0x000009B2
	add r0, r5, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bne _080D732C
	ldr r1, _080D7328  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	b _080D73DC
_080D7320:
	.4byte gRam
_080D7324:
	.4byte 0x000009B2
_080D7328:
	.4byte 0x00000F92
_080D732C:
	ldr r1, _080D7398  @ =0x000010F2
	add r0, r5, r1
	add r0, r4, r0
	mov r6, #0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080D739C  @ =0x000009DA
	add r0, r5, r1
	ldrh r1, [r0]
	ldr r0, _080D73A0  @ =0x00000107
	cmp r1, r0
	beq _080D73C0
	ldr r0, _080D73A4  @ =0x00000E85
	add r3, r5, r0
	add r3, r4, r3
	sub r0, r0, #206
	add r1, r5, r0
	ldrb r0, [r1]
	strb r0, [r3]
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D73A8  @ =0x00000AA8
	add r0, r5, r1
	ldrh r1, [r0]
	lsr r1, r1, #8
	ldr r2, _080D73AC  @ =gUnknown_08175660
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	and r1, r1, r0
	cmp r1, #0
	beq _080D7376
	ldr r1, _080D73B0  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
_080D7376:
	ldr r0, _080D73B4  @ =0x00000F92
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D73B8  @ =0x00001122
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #8
	strb r1, [r0]
	ldr r1, _080D73BC  @ =0x00001032
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	b _080D73DC
_080D7398:
	.4byte 0x000010F2
_080D739C:
	.4byte 0x000009DA
_080D73A0:
	.4byte 0x00000107
_080D73A4:
	.4byte 0x00000E85
_080D73A8:
	.4byte 0x00000AA8
_080D73AC:
	.4byte gUnknown_08175660
_080D73B0:
	.4byte 0x00000FA2
_080D73B4:
	.4byte 0x00000F92
_080D73B8:
	.4byte 0x00001122
_080D73BC:
	.4byte 0x00001032
_080D73C0:
	ldr r0, _080D73D0  @ =gUnknown_02002330
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D73D4
	mov r0, #14
	bl sub_0812FBC4
	b _080D73DC
_080D73D0:
	.4byte gUnknown_02002330
_080D73D4:
	ldr r1, _080D73E4  @ =0x00000FA2
	add r0, r5, r1
	add r0, r2, r0
	strb r6, [r0]
_080D73DC:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D73E4:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080D72FC

	THUMB_FUNC_START sub_080D73E8
sub_080D73E8: @ 0x080D73E8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C59CC
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080D749C
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D741A
	ldr r0, _080D74A4  @ =gRam
	ldr r1, _080D74A8  @ =0x00000F52
	add r0, r0, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
_080D741A:
	ldr r7, _080D74A4  @ =gRam
	ldr r2, _080D74A8  @ =0x00000F52
	add r0, r7, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #2
	bne _080D7434
	add r0, r4, #0
	bl sub_080D0820
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D749C
_080D7434:
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080D74AC  @ =0x00001152
	add r0, r7, r1
	add r5, r4, r0
	ldrb r0, [r5]
	sub r0, r0, #1
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r2, _080D74B0  @ =0x00001142
	add r0, r7, r2
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D7484
	ldr r1, _080D74B4  @ =0x00000F12
	add r0, r7, r1
	add r0, r4, r0
	strb r6, [r0]
	strb r6, [r2]
	ldrb r0, [r5]
	mvn r0, r0
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r0, r0, #1
	asr r0, r0, #2
	strb r0, [r5]
	mov r1, #254
	and r0, r0, r1
	cmp r0, #0
	beq _080D7484
	add r0, r4, #0
	mov r1, #19
	bl sub_080CF140
_080D7484:
	ldr r1, _080D74B8  @ =gUnknown_08175670
	ldr r0, _080D74A4  @ =gRam
	ldr r2, _080D74A8  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D749C:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D74A4:
	.4byte gRam
_080D74A8:
	.4byte 0x00000F52
_080D74AC:
	.4byte 0x00001152
_080D74B0:
	.4byte 0x00001142
_080D74B4:
	.4byte 0x00000F12
_080D74B8:
	.4byte gUnknown_08175670
	THUMB_FUNC_END sub_080D73E8

	THUMB_FUNC_START sub_080D74BC
sub_080D74BC: @ 0x080D74BC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080D7548  @ =gRam
	ldr r1, _080D754C  @ =0x00001622
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r2, _080D7550  @ =0x00001623
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r5, _080D7554  @ =0x000016C4
	add r0, r3, r5
	ldrb r2, [r0]
	add r5, r5, #1
	add r0, r3, r5
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #16
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #32
	bhi _080D7542
	ldr r1, _080D7558  @ =0x00001624
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r2, _080D755C  @ =0x00001625
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r5, r5, #5
	add r0, r3, r5
	ldrb r2, [r0]
	add r5, r5, #1
	add r0, r3, r5
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #24
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #40
	bhi _080D7542
	ldr r1, _080D7560  @ =0x00000A28
	add r0, r3, r1
	ldr r2, _080D7564  @ =0x00000A2A
	add r1, r3, r2
	ldrh r0, [r0]
	ldrh r1, [r1]
	orr r0, r0, r1
	cmp r0, #0
	beq _080D7542
	ldr r5, _080D7568  @ =0x00000F52
	add r1, r3, r5
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D7542:
	pop {r4,r5}
	pop {r0}
	bx r0
_080D7548:
	.4byte gRam
_080D754C:
	.4byte 0x00001622
_080D7550:
	.4byte 0x00001623
_080D7554:
	.4byte 0x000016C4
_080D7558:
	.4byte 0x00001624
_080D755C:
	.4byte 0x00001625
_080D7560:
	.4byte 0x00000A28
_080D7564:
	.4byte 0x00000A2A
_080D7568:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D74BC

	THUMB_FUNC_START sub_080D756C
sub_080D756C: @ 0x080D756C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080D7608
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D759E
	ldr r0, _080D7610  @ =gRam
	ldr r1, _080D7614  @ =0x00000F52
	add r0, r0, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
_080D759E:
	add r0, r4, #0
	bl Sprite3_Move
	ldr r7, _080D7610  @ =gRam
	ldr r2, _080D7618  @ =0x00001152
	add r0, r7, r2
	add r5, r4, r0
	ldrb r0, [r5]
	sub r0, r0, #1
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r1, _080D761C  @ =0x00001142
	add r0, r7, r1
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D75F0
	ldr r1, _080D7620  @ =0x00000F12
	add r0, r7, r1
	add r0, r4, r0
	strb r6, [r0]
	strb r6, [r2]
	ldrb r0, [r5]
	mvn r0, r0
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r0, r0, #1
	asr r0, r0, #2
	strb r0, [r5]
	mov r1, #254
	and r0, r0, r1
	cmp r0, #0
	beq _080D75F0
	add r0, r4, #0
	mov r1, #13
	bl sub_080CF0AC
_080D75F0:
	ldr r1, _080D7624  @ =gUnknown_08175684
	ldr r0, _080D7610  @ =gRam
	ldr r2, _080D7614  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080D7608:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D7610:
	.4byte gRam
_080D7614:
	.4byte 0x00000F52
_080D7618:
	.4byte 0x00001152
_080D761C:
	.4byte 0x00001142
_080D7620:
	.4byte 0x00000F12
_080D7624:
	.4byte gUnknown_08175684
	THUMB_FUNC_END sub_080D756C

	THUMB_FUNC_START sub_080D7628
sub_080D7628: @ 0x080D7628
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080D76C0  @ =gRam
	ldr r1, _080D76C4  @ =0x000016D5
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D76B8
	ldr r2, _080D76C8  @ =0x00001622
	add r0, r3, r2
	ldrb r1, [r0]
	ldr r5, _080D76CC  @ =0x00001623
	add r0, r3, r5
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r2, r2, #162
	add r0, r3, r2
	ldrb r2, [r0]
	add r5, r5, #162
	add r0, r3, r5
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #39
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #46
	bhi _080D76B8
	ldr r1, _080D76D0  @ =0x00001624
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r2, _080D76D4  @ =0x00001625
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r5, r5, #5
	add r0, r3, r5
	ldrb r2, [r0]
	add r5, r5, #1
	add r0, r3, r5
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #40
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #45
	bhi _080D76B8
	ldr r1, _080D76D8  @ =0x00000A28
	add r0, r3, r1
	ldr r2, _080D76DC  @ =0x00000A2A
	add r1, r3, r2
	ldrh r0, [r0]
	ldrh r1, [r1]
	orr r0, r0, r1
	cmp r0, #0
	beq _080D76B8
	ldr r5, _080D76E0  @ =0x00000F52
	add r1, r3, r5
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D76B8:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D76C0:
	.4byte gRam
_080D76C4:
	.4byte 0x000016D5
_080D76C8:
	.4byte 0x00001622
_080D76CC:
	.4byte 0x00001623
_080D76D0:
	.4byte 0x00001624
_080D76D4:
	.4byte 0x00001625
_080D76D8:
	.4byte 0x00000A28
_080D76DC:
	.4byte 0x00000A2A
_080D76E0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D7628

	THUMB_FUNC_START sub_080D76E4
sub_080D76E4: @ 0x080D76E4
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	ldr r7, _080D778C  @ =gRam
	ldr r1, _080D7790  @ =0x00001012
	add r0, r7, r1
	add r0, r4, r0
	mov r1, #143
	strb r1, [r0]
	ldr r2, _080D7794  @ =0x00001132
	add r0, r7, r2
	add r0, r4, r0
	mov r1, #71
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080D7930
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080D7782
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D7734
	bl sub_080AF16C
	ldr r1, _080D7798  @ =0x00001719
	add r0, r7, r1
	strb r6, [r0]
	bl sub_0809945C
_080D7734:
	add r0, r4, #0
	bl Sprite3_Move
	ldr r2, _080D779C  @ =0x00001152
	add r0, r7, r2
	add r5, r4, r0
	ldrb r0, [r5]
	sub r0, r0, #1
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r1, _080D77A0  @ =0x00001142
	add r0, r7, r1
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080D776C
	strb r6, [r2]
	ldrb r0, [r5]
	mvn r0, r0
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r0, r0, #1
	asr r0, r0, #2
	strb r0, [r5]
_080D776C:
	ldr r1, _080D77A4  @ =gUnknown_08175694
	ldr r2, _080D77A8  @ =0x00000F52
	add r0, r7, r2
	add r0, r0, r8
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	mov r0, r8
	bl _call_via_r1
_080D7782:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080D778C:
	.4byte gRam
_080D7790:
	.4byte 0x00001012
_080D7794:
	.4byte 0x00001132
_080D7798:
	.4byte 0x00001719
_080D779C:
	.4byte 0x00001152
_080D77A0:
	.4byte 0x00001142
_080D77A4:
	.4byte gUnknown_08175694
_080D77A8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D76E4

	THUMB_FUNC_START sub_080D77AC
sub_080D77AC: @ 0x080D77AC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080D784C  @ =gRam
	ldr r1, _080D7850  @ =0x00001052
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r2, _080D7854  @ =0x00001622
	add r0, r3, r2
	ldrb r1, [r0]
	ldr r5, _080D7858  @ =0x00001623
	add r0, r3, r5
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r2, r2, #162
	add r0, r3, r2
	ldrb r2, [r0]
	add r5, r5, #162
	add r0, r3, r5
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #24
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #64
	bhi _080D7846
	ldr r1, _080D785C  @ =0x00001624
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r2, _080D7860  @ =0x00001625
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r5, r5, #5
	add r0, r3, r5
	ldrb r2, [r0]
	add r5, r5, #1
	add r0, r3, r5
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #32
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #80
	bhi _080D7846
	ldr r1, _080D7864  @ =0x00000A28
	add r0, r3, r1
	ldr r2, _080D7868  @ =0x00000A2A
	add r1, r3, r2
	ldrh r0, [r0]
	ldrh r1, [r1]
	orr r0, r0, r1
	cmp r0, #0
	beq _080D7846
	ldr r5, _080D786C  @ =0x00000F52
	add r1, r3, r5
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D7870  @ =0x00001152
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #20
	strb r1, [r0]
_080D7846:
	pop {r4,r5}
	pop {r0}
	bx r0
_080D784C:
	.4byte gRam
_080D7850:
	.4byte 0x00001052
_080D7854:
	.4byte 0x00001622
_080D7858:
	.4byte 0x00001623
_080D785C:
	.4byte 0x00001624
_080D7860:
	.4byte 0x00001625
_080D7864:
	.4byte 0x00000A28
_080D7868:
	.4byte 0x00000A2A
_080D786C:
	.4byte 0x00000F52
_080D7870:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080D77AC

	THUMB_FUNC_START sub_080D7874
sub_080D7874: @ 0x080D7874
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r4, _080D78D8  @ =gRam
	ldr r1, _080D78DC  @ =0x00001142
	add r0, r4, r1
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D78D2
	ldr r0, _080D78E0  @ =0x00000F52
	add r1, r4, r0
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #123
	mov r1, #0
	bl sub_0812A324
	ldr r1, _080D78E4  @ =0x00000F22
	add r5, r4, r1
	add r0, r7, r5
	mov r6, #252
	strb r6, [r0]
	ldr r0, _080D78E8  @ =0x00000F12
	add r4, r4, r0
	add r0, r7, r4
	strb r6, [r0]
	add r0, r7, #0
	bl sub_080D7A94
	add r2, r0, #0
	add r0, r2, r5
	mov r1, #5
	strb r1, [r0]
	add r0, r2, r4
	strb r1, [r0]
	add r0, r7, #0
	bl sub_080D7A94
	add r2, r0, #0
	add r5, r2, r5
	strb r6, [r5]
	add r4, r2, r4
	mov r0, #4
	strb r0, [r4]
_080D78D2:
	pop {r4-r7}
	pop {r0}
	bx r0
_080D78D8:
	.4byte gRam
_080D78DC:
	.4byte 0x00001142
_080D78E0:
	.4byte 0x00000F52
_080D78E4:
	.4byte 0x00000F22
_080D78E8:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080D7874

	THUMB_FUNC_START sub_080D78EC
sub_080D78EC: @ 0x080D78EC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080D7924  @ =gRam
	ldr r1, _080D7928  @ =0x00000FC2
	add r0, r3, r1
	add r1, r2, r0
	ldrb r4, [r1]
	cmp r4, #0
	bne _080D791E
	mov r0, #8
	strb r0, [r1]
	ldr r5, _080D792C  @ =0x00001052
	add r0, r3, r5
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #6
	bne _080D7918
	sub r5, r5, #176
	add r0, r3, r5
	add r0, r2, r0
	strb r4, [r0]
_080D7918:
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D791E:
	pop {r4,r5}
	pop {r0}
	bx r0
_080D7924:
	.4byte gRam
_080D7928:
	.4byte 0x00000FC2
_080D792C:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080D78EC

	THUMB_FUNC_START sub_080D7930
sub_080D7930: @ 0x080D7930
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r8
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D7956
	b _080D7A78
_080D7956:
	ldr r3, _080D79EC  @ =gRam
	ldr r0, _080D79F0  @ =0x000015E8
	add r1, r3, r0
	ldrb r0, [r1]
	sub r0, r0, #32
	strb r0, [r1]
	ldr r2, _080D79F4  @ =0x000015E9
	add r1, r3, r2
	ldrb r0, [r1]
	sub r0, r0, #32
	strb r0, [r1]
	ldr r4, _080D79F8  @ =0x00001052
	add r0, r3, r4
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D7A10
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r7, r0, #24
	mov r4, #15
	add r6, sp, #4
	mov r10, r1
	ldr r0, _080D79FC  @ =gUnknown_081756C0
	add r0, r7, r0
	ldrb r0, [r0]
	mov r9, r0
_080D798C:
	ldr r0, _080D7A00  @ =gUnknown_03003E74
	ldrb r1, [r6]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r2, _080D79EC  @ =gRam
	ldr r3, _080D79F0  @ =0x000015E8
	add r1, r2, r3
	ldrb r1, [r1]
	ldr r2, _080D7A04  @ =gUnknown_081756A0
	lsl r5, r4, #24
	asr r5, r5, #24
	add r2, r5, r2
	ldrb r2, [r2]
	add r1, r1, r2
	mov r4, r10
	ldrb r2, [r4]
	ldr r3, _080D7A08  @ =gUnknown_081756B0
	add r3, r5, r3
	ldrb r3, [r3]
	add r2, r2, r3
	ldr r3, _080D7A0C  @ =gUnknown_081756C6
	add r3, r7, r3
	ldrb r3, [r3]
	lsl r3, r3, #8
	add r3, r3, r9
	lsl r3, r3, #16
	mov r4, #2
	str r4, [sp]
	lsr r3, r3, #16
	bl sub_080C6004
	sub r5, r5, #1
	lsl r5, r5, #24
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsr r4, r5, #24
	cmp r5, #0
	bge _080D798C
	mov r0, r8
	mov r1, #2
	mov r2, #15
	bl sub_080C6350
	b _080D7A78
	.byte 0x00
	.byte 0x00
_080D79EC:
	.4byte gRam
_080D79F0:
	.4byte 0x000015E8
_080D79F4:
	.4byte 0x000015E9
_080D79F8:
	.4byte 0x00001052
_080D79FC:
	.4byte gUnknown_081756C0
_080D7A00:
	.4byte gUnknown_03003E74
_080D7A04:
	.4byte gUnknown_081756A0
_080D7A08:
	.4byte gUnknown_081756B0
_080D7A0C:
	.4byte gUnknown_081756C6
_080D7A10:
	mov r0, #150
	lsl r0, r0, #4
	add r2, r3, r0
	ldrh r0, [r2]
	sub r0, r0, #32
	strh r0, [r2]
	ldr r4, _080D7A88  @ =0x00000964
	add r1, r3, r4
	ldrh r0, [r1]
	sub r0, r0, #32
	strh r0, [r1]
	mov r5, #0
	add r6, sp, #4
	mov r7, #3
	mov r9, r1
	mov r8, r2
_080D7A30:
	ldr r0, _080D7A8C  @ =gUnknown_03003E74
	ldrb r1, [r6]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	add r1, r5, #0
	and r1, r1, r7
	lsl r1, r1, #4
	mov r2, r8
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	asr r2, r5, #2
	and r2, r2, r7
	lsl r2, r2, #4
	mov r3, r9
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r4, _080D7A90  @ =gUnknown_081756CC
	lsl r3, r5, #1
	add r3, r3, r4
	ldrh r3, [r3]
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	add r5, r5, #1
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	cmp r5, #15
	ble _080D7A30
_080D7A78:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080D7A88:
	.4byte 0x00000964
_080D7A8C:
	.4byte gUnknown_03003E74
_080D7A90:
	.4byte gUnknown_081756CC
	THUMB_FUNC_END sub_080D7930

	THUMB_FUNC_START sub_080D7A94
sub_080D7A94: @ 0x080D7A94
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r0, #59
	add r1, r4, #0
	bl sub_080CA538
	add r5, r0, #0
	ldr r2, _080D7AEC  @ =gRam
	ldr r1, _080D7AF0  @ =0x00000F92
	add r0, r2, r1
	add r0, r5, r0
	mov r3, #2
	strb r3, [r0]
	ldr r1, _080D7AF4  @ =0x00001152
	add r0, r2, r1
	add r1, r5, r0
	add r4, r4, r0
	ldrb r0, [r4]
	strb r0, [r1]
	ldr r1, _080D7AF8  @ =0x00001052
	add r0, r2, r1
	add r0, r5, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080D7AFC  @ =0x00000F52
	add r0, r2, r1
	add r0, r5, r0
	strb r3, [r0]
	ldr r0, _080D7B00  @ =0x00000FC2
	add r2, r2, r0
	add r2, r5, r2
	mov r0, #8
	strb r0, [r2]
	lsl r0, r5, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	add r0, r5, #0
	pop {r4,r5}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080D7AEC:
	.4byte gRam
_080D7AF0:
	.4byte 0x00000F92
_080D7AF4:
	.4byte 0x00001152
_080D7AF8:
	.4byte 0x00001052
_080D7AFC:
	.4byte 0x00000F52
_080D7B00:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080D7A94

	THUMB_FUNC_START sub_080D7B04
sub_080D7B04: @ 0x080D7B04
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D7B24  @ =gUnknown_08175664
	ldr r1, _080D7B28  @ =gRam
	ldr r3, _080D7B2C  @ =0x00000F92
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080D7B24:
	.4byte gUnknown_08175664
_080D7B28:
	.4byte gRam
_080D7B2C:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080D7B04

	THUMB_FUNC_START sub_080D7B30
sub_080D7B30: @ 0x080D7B30
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D7B70  @ =gUnknown_0200234F
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	ldr r1, _080D7B74  @ =gRam
	ldr r3, _080D7B78  @ =0x00000FA2
	add r2, r1, r3
	add r2, r0, r2
	mov r3, #0
	strb r3, [r2]
	ldr r4, _080D7B7C  @ =0x00000AA8
	add r3, r1, r4
	ldr r2, _080D7B80  @ =gUnknown_08175680
	ldr r4, _080D7B84  @ =0x00000E85
	add r1, r1, r4
	add r1, r0, r1
	ldrb r1, [r1]
	add r1, r1, r2
	ldrb r1, [r1]
	lsl r1, r1, #8
	ldrh r2, [r3]
	orr r1, r1, r2
	strh r1, [r3]
	mov r1, #18
	bl sub_080CF140
	pop {r4}
	pop {r0}
	bx r0
_080D7B70:
	.4byte gUnknown_0200234F
_080D7B74:
	.4byte gRam
_080D7B78:
	.4byte 0x00000FA2
_080D7B7C:
	.4byte 0x00000AA8
_080D7B80:
	.4byte gUnknown_08175680
_080D7B84:
	.4byte 0x00000E85
	THUMB_FUNC_END sub_080D7B30

	THUMB_FUNC_START sub_080D7B88
sub_080D7B88: @ 0x080D7B88
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D7BBC  @ =gRam
	ldr r2, _080D7BC0  @ =0x00001152
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #32
	strb r2, [r1]
	ldr r2, _080D7BC4  @ =0x00000F12
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #251
	strb r2, [r1]
	ldr r1, _080D7BC8  @ =0x00000F52
	add r3, r3, r1
	add r0, r0, r3
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #123
	mov r1, #0
	bl sub_0812A324
	pop {r0}
	bx r0
_080D7BBC:
	.4byte gRam
_080D7BC0:
	.4byte 0x00001152
_080D7BC4:
	.4byte 0x00000F12
_080D7BC8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D7B88

	THUMB_FUNC_START sub_080D7BCC
sub_080D7BCC: @ 0x080D7BCC
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080D7BF4  @ =gRam
	ldr r3, _080D7BF8  @ =0x00001142
	add r0, r1, r3
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D7BF0
	sub r3, r3, #80
	add r0, r1, r3
	add r0, r2, r0
	mov r2, #161
	lsl r2, r2, #4
	add r1, r1, r2
	ldrb r1, [r1]
	strb r1, [r0]
_080D7BF0:
	pop {r0}
	bx r0
_080D7BF4:
	.4byte gRam
_080D7BF8:
	.4byte 0x00001142
	THUMB_FUNC_END sub_080D7BCC

	THUMB_FUNC_START sub_080D7BFC
sub_080D7BFC: @ 0x080D7BFC
	push {r4-r6,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	bl sub_08093078
	ldr r5, _080D7C28  @ =gRam
	ldr r1, _080D7C2C  @ =0x00001776
	add r0, r5, r1
	mov r6, #0
	strb r6, [r0]
	mov r0, #29
	bl sub_080A1588
	ldr r0, _080D7C30  @ =0x00000FA2
	add r5, r5, r0
	add r4, r4, r5
	strb r6, [r4]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D7C28:
	.4byte gRam
_080D7C2C:
	.4byte 0x00001776
_080D7C30:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080D7BFC

	THUMB_FUNC_START sub_080D7C34
sub_080D7C34: @ 0x080D7C34
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	ldr r6, _080D7C7C  @ =gRam
	ldr r1, _080D7C80  @ =0x00001062
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D7CBC
	ldr r2, _080D7C84  @ =0x00000D94
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #48
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080D83C8
	add r0, r4, #0
	bl Sprite3_CheckIfActive_Permissive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D7CF2
	ldr r1, _080D7C88  @ =0x000010C2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D7C8C
	add r0, r4, #0
	bl sub_080D8364
	b _080D7CF2
	.byte 0x00
	.byte 0x00
_080D7C7C:
	.4byte gRam
_080D7C80:
	.4byte 0x00001062
_080D7C84:
	.4byte 0x00000D94
_080D7C88:
	.4byte 0x000010C2
_080D7C8C:
	ldr r2, _080D7CB0  @ =0x00001172
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080D7CB4  @ =gUnknown_081756EC
	ldr r2, _080D7CB8  @ =0x00000F52
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	b _080D7CF2
	.byte 0x00
	.byte 0x00
_080D7CB0:
	.4byte 0x00001172
_080D7CB4:
	.4byte gUnknown_081756EC
_080D7CB8:
	.4byte 0x00000F52
_080D7CBC:
	ldr r0, _080D7CF8  @ =0x00000D94
	add r1, r6, r0
	add r1, r5, r1
	ldrb r2, [r1]
	mov r0, #48
	orr r0, r0, r2
	strb r0, [r1]
	add r0, r5, #0
	bl sub_080D808C
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D7CF2
	ldr r1, _080D7CFC  @ =gUnknown_081756F8
	ldr r2, _080D7D00  @ =0x00000F52
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
_080D7CF2:
	pop {r4-r6}
	pop {r0}
	bx r0
_080D7CF8:
	.4byte 0x00000D94
_080D7CFC:
	.4byte gUnknown_081756F8
_080D7D00:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D7C34

	THUMB_FUNC_START sub_080D7D04
sub_080D7D04: @ 0x080D7D04
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r5, _080D7D50  @ =gRam
	ldr r1, _080D7D54  @ =0x00000FC2
	add r0, r5, r1
	add r3, r2, r0
	ldrb r0, [r3]
	cmp r0, #0
	bne _080D7D2A
	sub r1, r1, #112
	add r0, r5, r1
	add r0, r2, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #31
	strb r0, [r3]
_080D7D2A:
	ldr r1, _080D7D58  @ =0x00001172
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r3]
	strb r1, [r0]
	ldr r3, _080D7D5C  @ =0x00000F62
	add r1, r5, r3
	add r1, r4, r1
	ldr r2, _080D7D60  @ =gUnknown_08175708
	add r3, r3, #80
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r4,r5}
	pop {r0}
	bx r0
_080D7D50:
	.4byte gRam
_080D7D54:
	.4byte 0x00000FC2
_080D7D58:
	.4byte 0x00001172
_080D7D5C:
	.4byte 0x00000F62
_080D7D60:
	.4byte gUnknown_08175708
	THUMB_FUNC_END sub_080D7D04

	THUMB_FUNC_START sub_080D7D64
sub_080D7D64: @ 0x080D7D64
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080D7DC4  @ =gRam
	ldr r1, _080D7DC8  @ =0x00000FC2
	add r0, r6, r1
	add r2, r5, r0
	ldrb r0, [r2]
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r3, #0
	beq _080D7DE4
	sub r1, r1, #96
	add r2, r6, r1
	add r2, r5, r2
	ldr r4, _080D7DCC  @ =gUnknown_0817570C
	lsr r1, r0, #27
	mov r0, #1
	and r1, r1, r0
	ldr r0, _080D7DD0  @ =0x00000FB2
	add r3, r6, r0
	add r3, r5, r3
	ldrb r0, [r3]
	lsl r0, r0, #1
	orr r1, r1, r0
	add r1, r1, r4
	ldrb r0, [r1]
	strb r0, [r2]
	ldr r0, _080D7DD4  @ =0x00000F22
	add r1, r6, r0
	add r1, r5, r1
	ldr r2, _080D7DD8  @ =gUnknown_08175718
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D7DDC  @ =0x00000F12
	add r1, r6, r0
	add r1, r5, r1
	ldr r2, _080D7DE0  @ =gUnknown_08175714
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r5, #0
	bl Sprite3_Move
	b _080D7E02
_080D7DC4:
	.4byte gRam
_080D7DC8:
	.4byte 0x00000FC2
_080D7DCC:
	.4byte gUnknown_0817570C
_080D7DD0:
	.4byte 0x00000FB2
_080D7DD4:
	.4byte 0x00000F22
_080D7DD8:
	.4byte gUnknown_08175718
_080D7DDC:
	.4byte 0x00000F12
_080D7DE0:
	.4byte gUnknown_08175714
_080D7DE4:
	ldr r0, _080D7E08  @ =0x00000F52
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #32
	strb r0, [r2]
	ldr r1, _080D7E0C  @ =0x00001172
	add r0, r6, r1
	add r0, r5, r0
	strb r3, [r0]
	add r0, r5, #0
	bl sub_080C351C
_080D7E02:
	pop {r4-r6}
	pop {r0}
	bx r0
_080D7E08:
	.4byte 0x00000F52
_080D7E0C:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080D7D64

	THUMB_FUNC_START sub_080D7E10
sub_080D7E10: @ 0x080D7E10
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl Sprite3_Move
	ldr r5, _080D7E88  @ =gRam
	ldr r0, _080D7E8C  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r3, _080D7E90  @ =gUnknown_0817571C
	add r0, r0, #144
	add r2, r5, r0
	add r2, r4, r2
	ldrb r0, [r2]
	add r0, r0, r3
	ldrb r0, [r0]
	ldrb r3, [r1]
	add r0, r0, r3
	strb r0, [r1]
	ldr r0, _080D7E94  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldr r3, _080D7E98  @ =gUnknown_08175720
	ldrb r0, [r2]
	add r0, r0, r3
	ldrb r0, [r0]
	ldrb r2, [r1]
	add r0, r0, r2
	strb r0, [r1]
	ldr r3, _080D7E9C  @ =0x00000FC2
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D7E7C
	add r0, r4, #0
	bl sub_080C969C
	ldr r1, _080D7EA0  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #16
	strb r1, [r0]
	ldr r2, _080D7EA4  @ =0x00000F52
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080D7E7C:
	add r0, r6, #0
	bl sub_080D8318
	pop {r4-r6}
	pop {r0}
	bx r0
_080D7E88:
	.4byte gRam
_080D7E8C:
	.4byte 0x00000F22
_080D7E90:
	.4byte gUnknown_0817571C
_080D7E94:
	.4byte 0x00000F12
_080D7E98:
	.4byte gUnknown_08175720
_080D7E9C:
	.4byte 0x00000FC2
_080D7EA0:
	.4byte 0x00000FD2
_080D7EA4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D7E10

	THUMB_FUNC_START sub_080D7EA8
sub_080D7EA8: @ 0x080D7EA8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D7F4A
	add r0, r4, #0
	bl sub_080C5044
	ldr r6, _080D7F50  @ =gRam
	ldr r0, _080D7F54  @ =0x00000F62
	add r2, r6, r0
	add r2, r4, r2
	ldr r3, _080D7F58  @ =gUnknown_08175724
	ldr r1, _080D7F5C  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	mov r1, #4
	and r1, r1, r0
	lsl r1, r1, #24
	lsr r1, r1, #26
	ldr r5, _080D7F60  @ =0x00000FB2
	add r0, r6, r5
	add r5, r4, r0
	ldrb r0, [r5]
	lsl r0, r0, #1
	orr r1, r1, r0
	add r1, r1, r3
	ldrb r0, [r1]
	add r0, r0, #8
	strb r0, [r2]
	ldr r1, _080D7F64  @ =0x00000FD2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D7F4A
	add r0, r4, #0
	bl sub_080D7F7C
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C7A20
	mov r1, #15
	and r1, r1, r0
	cmp r1, #0
	beq _080D7F2A
	bl GetRandomInt
	ldr r2, _080D7F68  @ =gUnknown_0817572C
	ldrb r1, [r5]
	lsl r1, r1, #1
	lsl r0, r0, #24
	lsr r0, r0, #31
	orr r1, r1, r0
	add r1, r1, r2
	ldrb r0, [r1]
	strb r0, [r5]
_080D7F2A:
	ldr r0, _080D7F6C  @ =0x00000F22
	add r1, r6, r0
	add r1, r7, r1
	ldr r2, _080D7F70  @ =gUnknown_08175734
	ldrb r0, [r5]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D7F74  @ =0x00000F12
	add r1, r6, r0
	add r1, r7, r1
	ldr r2, _080D7F78  @ =gUnknown_08175738
	ldrb r0, [r5]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080D7F4A:
	pop {r4-r7}
	pop {r0}
	bx r0
_080D7F50:
	.4byte gRam
_080D7F54:
	.4byte 0x00000F62
_080D7F58:
	.4byte gUnknown_08175724
_080D7F5C:
	.4byte 0x00000996
_080D7F60:
	.4byte 0x00000FB2
_080D7F64:
	.4byte 0x00000FD2
_080D7F68:
	.4byte gUnknown_0817572C
_080D7F6C:
	.4byte 0x00000F22
_080D7F70:
	.4byte gUnknown_08175734
_080D7F74:
	.4byte 0x00000F12
_080D7F78:
	.4byte gUnknown_08175738
	THUMB_FUNC_END sub_080D7EA8

	THUMB_FUNC_START sub_080D7F7C
sub_080D7F7C: @ 0x080D7F7C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r7, _080D8050  @ =gRam
	ldr r1, _080D8054  @ =0x00000996
	add r0, r7, r1
	ldrb r1, [r0]
	add r0, r6, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080D8086
	bl GetRandomInt
	ldr r5, _080D8058  @ =gUnknown_0817573C
	mov r4, #3
	add r1, r4, #0
	and r1, r1, r0
	add r1, r1, r5
	ldrb r1, [r1]
	mov r2, #150
	lsl r2, r2, #4
	add r0, r7, r2
	strb r1, [r0]
	bl GetRandomInt
	and r4, r4, r0
	add r4, r4, r5
	ldrb r1, [r4]
	ldr r4, _080D805C  @ =0x00000961
	add r0, r7, r4
	strb r1, [r0]
	mov r1, #14
	add r3, r7, #0
	ldr r0, _080D8060  @ =0x000011D2
	add r5, r3, r0
	mov r4, #11
	ldr r2, _080D8064  @ =0x000015F8
	add r7, r3, r2
_080D7FCC:
	lsl r0, r1, #24
	asr r2, r0, #24
	add r1, r2, r5
	ldrb r0, [r1]
	cmp r0, #0
	bne _080D807C
	strb r4, [r1]
	strb r4, [r7]
	mov r4, #150
	lsl r4, r4, #4
	add r1, r3, r4
	ldr r4, _080D8068  @ =0x00000EE2
	add r0, r3, r4
	add r0, r6, r0
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrb r0, [r0]
	add r1, r1, r0
	add r4, r4, #32
	add r0, r3, r4
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r4, _080D806C  @ =0x0000122C
	add r0, r3, r4
	add r0, r2, r0
	strb r1, [r0]
	add r4, r4, #60
	add r0, r3, r4
	add r0, r2, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080D805C  @ =0x00000961
	add r1, r3, r0
	ldr r4, _080D8070  @ =0x00000ED2
	add r0, r3, r4
	add r0, r6, r0
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrb r0, [r0]
	add r1, r1, r0
	add r4, r4, #32
	add r0, r3, r4
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #16
	ldr r4, _080D8074  @ =0x0000120E
	add r0, r3, r4
	add r0, r2, r0
	strb r1, [r0]
	add r4, r4, #60
	add r0, r3, r4
	add r0, r2, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080D8078  @ =0x000012FE
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #15
	strb r1, [r0]
	b _080D8086
_080D8050:
	.4byte gRam
_080D8054:
	.4byte 0x00000996
_080D8058:
	.4byte gUnknown_0817573C
_080D805C:
	.4byte 0x00000961
_080D8060:
	.4byte 0x000011D2
_080D8064:
	.4byte 0x000015F8
_080D8068:
	.4byte 0x00000EE2
_080D806C:
	.4byte 0x0000122C
_080D8070:
	.4byte 0x00000ED2
_080D8074:
	.4byte 0x0000120E
_080D8078:
	.4byte 0x000012FE
_080D807C:
	sub r0, r2, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bge _080D7FCC
_080D8086:
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D7F7C

	THUMB_FUNC_START sub_080D808C
sub_080D808C: @ 0x080D808C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r7, _080D80D0  @ =gRam
	ldr r0, _080D80D4  @ =0x00001122
	add r2, r7, r0
	add r2, r6, r2
	ldrb r0, [r2]
	mov r1, #63
	and r1, r1, r0
	ldr r4, _080D80D8  @ =gUnknown_08175740
	ldr r0, _080D80DC  @ =0x00000F62
	add r3, r7, r0
	add r3, r6, r3
	ldrb r0, [r3]
	add r0, r0, r4
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
	ldr r0, _080D80E0  @ =0x00000F92
	add r1, r7, r0
	add r1, r6, r1
	ldr r2, _080D80E4  @ =gUnknown_0817575C
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldrb r0, [r3]
	cmp r0, #3
	bls _080D80E8
	add r0, r6, #0
	bl sub_080C6240
	b _080D8122
_080D80D0:
	.4byte gRam
_080D80D4:
	.4byte 0x00001122
_080D80D8:
	.4byte gUnknown_08175740
_080D80DC:
	.4byte 0x00000F62
_080D80E0:
	.4byte 0x00000F92
_080D80E4:
	.4byte gUnknown_0817575C
_080D80E8:
	ldr r0, _080D8128  @ =0x00001622
	add r0, r0, r7
	mov r12, r0
	ldrb r2, [r0]
	ldr r0, _080D812C  @ =0x00001623
	add r5, r7, r0
	ldrb r0, [r5]
	lsl r0, r0, #8
	add r2, r2, r0
	add r2, r2, #4
	ldr r0, _080D8130  @ =0x00001624
	add r3, r7, r0
	ldrb r1, [r3]
	add r0, r0, #1
	add r4, r7, r0
	ldrb r0, [r4]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #4
	mov r0, r12
	strb r2, [r0]
	lsr r2, r2, #8
	strb r2, [r5]
	strb r1, [r3]
	lsr r1, r1, #8
	strb r1, [r4]
	add r0, r6, #0
	bl sub_080C58F0
_080D8122:
	pop {r4-r7}
	pop {r0}
	bx r0
_080D8128:
	.4byte 0x00001622
_080D812C:
	.4byte 0x00001623
_080D8130:
	.4byte 0x00001624
	THUMB_FUNC_END sub_080D808C

	THUMB_FUNC_START sub_080D8134
sub_080D8134: @ 0x080D8134
	push {r4,r5,lr}
	add r5, r0, #0
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r4, _080D819C  @ =gRam
	ldr r1, _080D81A0  @ =0x00000EE2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r0, r4, r2
	strb r1, [r0]
	ldr r1, _080D81A4  @ =0x00000F02
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r4, r2
	strb r1, [r0]
	ldr r1, _080D81A8  @ =0x00000ED2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	add r0, r0, #8
	add r2, r2, #3
	add r1, r4, r2
	strb r0, [r1]
	ldr r1, _080D81AC  @ =0x00000EF2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r4, r2
	strb r1, [r0]
	mov r0, #6
	bl sub_08079844
	ldr r0, _080D81B0  @ =0x00000F52
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D81B4  @ =0x00000FC2
	add r4, r4, r1
	add r5, r5, r4
	mov r0, #128
	strb r0, [r5]
	pop {r4,r5}
	pop {r0}
	bx r0
_080D819C:
	.4byte gRam
_080D81A0:
	.4byte 0x00000EE2
_080D81A4:
	.4byte 0x00000F02
_080D81A8:
	.4byte 0x00000ED2
_080D81AC:
	.4byte 0x00000EF2
_080D81B0:
	.4byte 0x00000F52
_080D81B4:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080D8134

	THUMB_FUNC_START sub_080D81B8
sub_080D81B8: @ 0x080D81B8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r1, _080D81FC  @ =gRam
	ldr r2, _080D8200  @ =0x00001172
	add r0, r1, r2
	add r0, r5, r0
	mov r2, #0
	strb r2, [r0]
	ldr r0, _080D8204  @ =0x00000FC2
	add r1, r1, r0
	add r1, r5, r1
	ldrb r1, [r1]
	cmp r1, #0
	beq _080D81E6
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080D81E6
	add r0, r5, #0
	mov r1, #32
	bl sub_080C35FC
_080D81E6:
	add r0, r5, #0
	bl sub_080C5044
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D8208
	add r0, r5, #0
	bl sub_080D8364
	b _080D825A
	.byte 0x00
	.byte 0x00
_080D81FC:
	.4byte gRam
_080D8200:
	.4byte 0x00001172
_080D8204:
	.4byte 0x00000FC2
_080D8208:
	add r0, r5, #0
	bl Sprite3_Move
	ldr r1, _080D8244  @ =gRam
	ldr r2, _080D8248  @ =0x00001624
	add r3, r1, r2
	ldrb r2, [r3]
	ldr r0, _080D824C  @ =0x00001625
	add r4, r1, r0
	ldrb r0, [r4]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r0, _080D8250  @ =0x00001142
	add r1, r1, r0
	add r1, r5, r1
	ldrb r0, [r1]
	sub r2, r2, r0
	strb r2, [r3]
	lsr r2, r2, #8
	strb r2, [r4]
	add r0, r5, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D8254
	add r0, r5, #0
	bl sub_080D82C0
	b _080D825A
_080D8244:
	.4byte gRam
_080D8248:
	.4byte 0x00001624
_080D824C:
	.4byte 0x00001625
_080D8250:
	.4byte 0x00001142
_080D8254:
	add r0, r5, #0
	bl sub_080D8364
_080D825A:
	pop {r4,r5}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D81B8

	THUMB_FUNC_START sub_080D8260
sub_080D8260: @ 0x080D8260
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080D8290  @ =gRam
	ldr r2, _080D8294  @ =0x00000FC2
	add r0, r1, r2
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	beq _080D829C
	cmp r0, #63
	bls _080D8288
	ldr r3, _080D8298  @ =0x00001152
	add r0, r1, r3
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C2C4C
_080D8288:
	add r0, r4, #0
	bl sub_080D82C0
	b _080D82B4
_080D8290:
	.4byte gRam
_080D8294:
	.4byte 0x00000FC2
_080D8298:
	.4byte 0x00001152
_080D829C:
	ldr r3, _080D82BC  @ =0x00000F52
	add r0, r1, r3
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #16
	strb r0, [r2]
	add r0, r4, #0
	mov r1, #32
	bl sub_080C35FC
_080D82B4:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D82BC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D8260

	THUMB_FUNC_START sub_080D82C0
sub_080D82C0: @ 0x080D82C0
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080D8304  @ =gRam
	ldr r0, _080D8308  @ =0x00001052
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D830C  @ =0x00000F92
	add r2, r3, r1
	add r2, r4, r2
	lsl r0, r0, #24
	lsr r0, r0, #26
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldr r0, _080D8310  @ =0x00000996
	add r3, r3, r0
	ldrb r1, [r3]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080D82FE
	add r0, r4, #0
	mov r1, #27
	bl sub_080CF0AC
_080D82FE:
	pop {r4}
	pop {r0}
	bx r0
_080D8304:
	.4byte gRam
_080D8308:
	.4byte 0x00001052
_080D830C:
	.4byte 0x00000F92
_080D8310:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080D82C0

	THUMB_FUNC_START sub_080D8314
sub_080D8314: @ 0x080D8314
	bx lr
	THUMB_FUNC_END sub_080D8314

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D8318
sub_080D8318: @ 0x080D8318
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D8350  @ =gRam
	ldr r1, _080D8354  @ =0x00000F62
	add r4, r2, r1
	add r4, r0, r4
	ldr r5, _080D8358  @ =gUnknown_08175724
	ldr r3, _080D835C  @ =0x00000996
	add r1, r2, r3
	ldrb r3, [r1]
	mov r1, #4
	and r1, r1, r3
	lsl r1, r1, #24
	lsr r1, r1, #26
	ldr r3, _080D8360  @ =0x00000FB2
	add r2, r2, r3
	add r0, r0, r2
	ldrb r0, [r0]
	lsl r0, r0, #1
	orr r1, r1, r0
	add r1, r1, r5
	ldrb r0, [r1]
	strb r0, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D8350:
	.4byte gRam
_080D8354:
	.4byte 0x00000F62
_080D8358:
	.4byte gUnknown_08175724
_080D835C:
	.4byte 0x00000996
_080D8360:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080D8318

	THUMB_FUNC_START sub_080D8364
sub_080D8364: @ 0x080D8364
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #109
	bl sub_080CF0AC
	ldr r2, _080D83B0  @ =gRam
	ldr r1, _080D83B4  @ =0x00000FA2
	add r0, r2, r1
	add r0, r4, r0
	mov r3, #0
	mov r1, #6
	strb r1, [r0]
	ldr r1, _080D83B8  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #31
	strb r1, [r0]
	ldr r1, _080D83BC  @ =0x00000FF2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #236
	strb r1, [r0]
	ldr r1, _080D83C0  @ =0x000010C2
	add r0, r2, r1
	add r0, r4, r0
	strb r3, [r0]
	ldr r0, _080D83C4  @ =0x00000F82
	add r2, r2, r0
	add r4, r4, r2
	mov r0, #128
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D83B0:
	.4byte gRam
_080D83B4:
	.4byte 0x00000FA2
_080D83B8:
	.4byte 0x00000FC2
_080D83BC:
	.4byte 0x00000FF2
_080D83C0:
	.4byte 0x000010C2
_080D83C4:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080D8364

	THUMB_FUNC_START sub_080D83C8
sub_080D83C8: @ 0x080D83C8
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080D83F4  @ =gRam
	ldr r1, _080D83F8  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #5
	ldr r0, _080D83FC  @ =gUnknown_08175778
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #4
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
_080D83F4:
	.4byte gRam
_080D83F8:
	.4byte 0x00000F92
_080D83FC:
	.4byte gUnknown_08175778
	THUMB_FUNC_END sub_080D83C8

	THUMB_FUNC_START sub_080D8400
sub_080D8400: @ 0x080D8400
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r4, _080D8478  @ =gRam
	ldr r2, _080D847C  @ =0x00000EE2
	add r1, r4, r2
	add r1, r0, r1
	ldrb r1, [r1]
	mov r2, #16
	and r2, r2, r1
	lsl r2, r2, #24
	lsr r2, r2, #24
	neg r2, r2
	lsr r2, r2, #31
	ldr r1, _080D8480  @ =0x00001122
	add r3, r4, r1
	add r3, r0, r3
	ldr r1, _080D8484  @ =gUnknown_081757B8
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r3]
	ldr r1, _080D8488  @ =0x00001022
	add r3, r4, r1
	add r3, r0, r3
	ldr r1, _080D848C  @ =gUnknown_081757BA
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r3]
	ldr r1, _080D8490  @ =0x00000F62
	add r3, r4, r1
	add r3, r0, r3
	ldr r1, _080D8494  @ =gUnknown_081757BC
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r3]
	ldr r1, _080D8498  @ =0x00000F52
	add r3, r4, r1
	add r3, r0, r3
	ldr r1, _080D849C  @ =gUnknown_081757BE
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r3]
	ldr r1, _080D84A0  @ =0x000011B2
	add r3, r4, r1
	add r3, r0, r3
	ldr r1, _080D84A4  @ =gUnknown_081757C0
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r3]
	ldr r1, _080D84A8  @ =0x00000EA5
	add r4, r4, r1
	add r0, r0, r4
	ldr r1, _080D84AC  @ =gUnknown_081757C2
	add r2, r2, r1
	ldrb r1, [r2]
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D8478:
	.4byte gRam
_080D847C:
	.4byte 0x00000EE2
_080D8480:
	.4byte 0x00001122
_080D8484:
	.4byte gUnknown_081757B8
_080D8488:
	.4byte 0x00001022
_080D848C:
	.4byte gUnknown_081757BA
_080D8490:
	.4byte 0x00000F62
_080D8494:
	.4byte gUnknown_081757BC
_080D8498:
	.4byte 0x00000F52
_080D849C:
	.4byte gUnknown_081757BE
_080D84A0:
	.4byte 0x000011B2
_080D84A4:
	.4byte gUnknown_081757C0
_080D84A8:
	.4byte 0x00000EA5
_080D84AC:
	.4byte gUnknown_081757C2
	THUMB_FUNC_END sub_080D8400

	THUMB_FUNC_START sub_080D84B0
sub_080D84B0: @ 0x080D84B0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D84C4
	b _080D85F0
_080D84C4:
	ldr r6, _080D8500  @ =gRam
	ldr r1, _080D8504  @ =0x00001052
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	lsr r5, r0, #24
	cmp r5, #0
	beq _080D84E2
	b _080D85F0
_080D84E2:
	add r0, r4, #0
	bl sub_080C5044
	ldr r2, _080D8508  @ =0x00001042
	add r0, r6, r2
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080D850C
	add r0, r4, #0
	bl Sprite3_Move
	b _080D8524
_080D8500:
	.4byte gRam
_080D8504:
	.4byte 0x00001052
_080D8508:
	.4byte 0x00001042
_080D850C:
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	beq _080D851C
	ldr r1, _080D859C  @ =0x00000F22
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
_080D851C:
	ldr r2, _080D85A0  @ =0x00000F12
	add r0, r6, r2
	add r0, r4, r0
	strb r5, [r0]
_080D8524:
	add r0, r4, #0
	bl sub_080C6F48
	ldr r5, _080D85A4  @ =gRam
	ldr r0, _080D85A8  @ =0x00000996
	add r6, r5, r0
	ldrb r0, [r6]
	add r1, r4, #0
	eor r1, r1, r0
	mov r0, #31
	and r1, r1, r0
	cmp r1, #0
	bne _080D856A
	ldr r1, _080D85AC  @ =0x00000F62
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r0, r4, #0
	bl sub_080C2CB4
	ldr r2, _080D85B0  @ =0x00000F72
	add r0, r5, r2
	add r0, r4, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D85B4  @ =0x00000F82
	add r0, r5, r1
	add r0, r4, r0
	add r2, r2, #1
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
_080D856A:
	ldrb r0, [r6]
	add r1, r4, #0
	eor r1, r1, r0
	ldr r2, _080D85B8  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	and r1, r1, r0
	cmp r1, #0
	bne _080D85F0
	ldr r1, _080D85A0  @ =0x00000F12
	add r0, r5, r1
	add r3, r4, r0
	add r2, r2, #32
	add r0, r5, r2
	add r0, r4, r0
	ldrb r2, [r3]
	ldrb r0, [r0]
	sub r0, r2, r0
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080D85BC
	sub r0, r2, #1
	b _080D85BE
_080D859C:
	.4byte 0x00000F22
_080D85A0:
	.4byte 0x00000F12
_080D85A4:
	.4byte gRam
_080D85A8:
	.4byte 0x00000996
_080D85AC:
	.4byte 0x00000F62
_080D85B0:
	.4byte 0x00000F72
_080D85B4:
	.4byte 0x00000F82
_080D85B8:
	.4byte 0x00000F52
_080D85BC:
	add r0, r2, #1
_080D85BE:
	strb r0, [r3]
	ldr r0, _080D85E0  @ =gRam
	ldr r2, _080D85E4  @ =0x00000F22
	add r1, r0, r2
	add r3, r4, r1
	ldr r1, _080D85E8  @ =0x00000F82
	add r0, r0, r1
	add r0, r4, r0
	ldrb r2, [r3]
	ldrb r0, [r0]
	sub r0, r2, r0
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080D85EC
	sub r0, r2, #1
	b _080D85EE
_080D85E0:
	.4byte gRam
_080D85E4:
	.4byte 0x00000F22
_080D85E8:
	.4byte 0x00000F82
_080D85EC:
	add r0, r2, #1
_080D85EE:
	strb r0, [r3]
_080D85F0:
	pop {r4-r6}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D84B0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D85F8
sub_080D85F8: @ 0x080D85F8
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080D862C  @ =gRam
	ldr r1, _080D8630  @ =0x00000F92
	add r2, r0, r1
	add r2, r4, r2
	add r1, r1, #192
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsr r0, r0, #2
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080D8634
	add r0, r4, #0
	bl sub_080D84B0
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D862C:
	.4byte gRam
_080D8630:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080D85F8

	THUMB_FUNC_START sub_080D8634
sub_080D8634: @ 0x080D8634
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D8654  @ =gRam
	ldr r2, _080D8658  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #4
	ldr r2, _080D865C  @ =gUnknown_081757C4
	add r1, r1, r2
	mov r2, #2
	bl sub_080C9480
	pop {r0}
	bx r0
_080D8654:
	.4byte gRam
_080D8658:
	.4byte 0x00000F92
_080D865C:
	.4byte gUnknown_081757C4
	THUMB_FUNC_END sub_080D8634

	THUMB_FUNC_START sub_080D8660
sub_080D8660: @ 0x080D8660
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	bl sub_080C6240
	add r0, r7, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D8680
	b _080D8838
_080D8680:
	ldr r0, _080D86E0  @ =gRam
	mov r8, r0
	ldr r0, _080D86E4  @ =0x00000F52
	add r0, r0, r8
	add r1, r7, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080D8722
	add r0, r0, #1
	strb r0, [r1]
	ldr r5, _080D86E8  @ =0x00000F12
	add r5, r5, r8
	add r5, r7, r5
	mov r1, #1
	mov r9, r1
	mov r3, r9
	strb r3, [r5]
	ldr r4, _080D86EC  @ =0x00000F22
	add r4, r4, r8
	add r4, r7, r4
	strb r3, [r4]
	add r0, r7, #0
	bl sub_080C79F8
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r0, #255
	strb r0, [r5]
	mov r0, #1
	neg r0, r0
	strb r0, [r4]
	add r0, r7, #0
	bl sub_080C79F8
	ldr r0, _080D86F0  @ =0x00001042
	add r0, r0, r8
	add r0, r7, r0
	ldrb r0, [r0]
	orr r6, r6, r0
	cmp r6, #3
	bls _080D86F4
	mov r2, #2
	mov r0, #4
	and r6, r6, r0
	cmp r6, #0
	bne _080D8700
	mov r2, #3
	b _080D8700
_080D86E0:
	.4byte gRam
_080D86E4:
	.4byte 0x00000F52
_080D86E8:
	.4byte 0x00000F12
_080D86EC:
	.4byte 0x00000F22
_080D86F0:
	.4byte 0x00001042
_080D86F4:
	mov r2, #0
	mov r0, r9
	and r6, r6, r0
	cmp r6, #0
	bne _080D8700
	mov r2, #1
_080D8700:
	ldr r1, _080D87A8  @ =gRam
	ldr r3, _080D87AC  @ =0x00000FF2
	add r0, r1, r3
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #92
	beq _080D8714
	add r0, r2, #4
	lsl r0, r0, #24
	lsr r2, r0, #24
_080D8714:
	ldr r3, _080D87B0  @ =0x00000FB2
	add r0, r1, r3
	add r0, r7, r0
	ldr r1, _080D87B4  @ =gUnknown_081757E8
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r0]
_080D8722:
	ldr r5, _080D87A8  @ =gRam
	ldr r0, _080D87B8  @ =0x00001122
	add r3, r5, r0
	add r3, r7, r3
	ldrb r0, [r3]
	mov r2, #63
	and r2, r2, r0
	ldr r4, _080D87BC  @ =gUnknown_081757E4
	ldr r1, _080D87C0  @ =0x00000996
	add r0, r5, r1
	ldrb r0, [r0]
	lsr r0, r0, #2
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r4
	ldrb r0, [r0]
	orr r2, r2, r0
	strb r2, [r3]
	add r0, r7, #0
	bl Sprite3_Move
	add r0, r7, #0
	bl sub_080C4F98
	ldr r3, _080D87C4  @ =0x00000F22
	add r1, r5, r3
	add r1, r7, r1
	ldr r2, _080D87C8  @ =gUnknown_08176960
	add r3, r3, #144
	add r0, r5, r3
	add r4, r7, r0
	ldrb r0, [r4]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D87CC  @ =0x00000F12
	add r1, r5, r0
	add r1, r7, r1
	ldr r2, _080D87D0  @ =gUnknown_08176968
	ldrb r0, [r4]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r7, #0
	bl sub_080C79F8
	ldr r1, _080D87D4  @ =0x00000FE2
	add r0, r5, r1
	add r3, r7, r0
	ldrb r0, [r3]
	cmp r0, #0
	bne _080D87E0
	ldr r0, _080D87D8  @ =0x00001042
	add r1, r5, r0
	add r1, r7, r1
	ldr r2, _080D87DC  @ =gUnknown_08176990
	ldrb r0, [r4]
	add r0, r0, r2
	ldrb r1, [r1]
	ldrb r0, [r0]
	and r0, r0, r1
	cmp r0, #0
	bne _080D87EE
	mov r0, #10
	strb r0, [r3]
	b _080D87EE
	.byte 0x00
	.byte 0x00
_080D87A8:
	.4byte gRam
_080D87AC:
	.4byte 0x00000FF2
_080D87B0:
	.4byte 0x00000FB2
_080D87B4:
	.4byte gUnknown_081757E8
_080D87B8:
	.4byte 0x00001122
_080D87BC:
	.4byte gUnknown_081757E4
_080D87C0:
	.4byte 0x00000996
_080D87C4:
	.4byte 0x00000F22
_080D87C8:
	.4byte gUnknown_08176960
_080D87CC:
	.4byte 0x00000F12
_080D87D0:
	.4byte gUnknown_08176968
_080D87D4:
	.4byte 0x00000FE2
_080D87D8:
	.4byte 0x00001042
_080D87DC:
	.4byte gUnknown_08176990
_080D87E0:
	cmp r0, #6
	bne _080D87EE
	ldr r0, _080D8844  @ =gUnknown_081769A0
	ldrb r1, [r4]
	add r1, r1, r0
	ldrb r0, [r1]
	strb r0, [r4]
_080D87EE:
	ldr r4, _080D8848  @ =gRam
	ldr r1, _080D884C  @ =0x00001042
	add r2, r4, r1
	add r2, r7, r2
	ldr r1, _080D8850  @ =gUnknown_08176988
	ldr r3, _080D8854  @ =0x00000FB2
	add r0, r4, r3
	add r6, r7, r0
	ldrb r3, [r6]
	add r1, r3, r1
	ldrb r2, [r2]
	ldrb r0, [r1]
	and r0, r0, r2
	cmp r0, #0
	beq _080D8814
	ldr r0, _080D8858  @ =gUnknown_08176998
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r6]
_080D8814:
	ldr r0, _080D885C  @ =0x00000F22
	add r1, r4, r0
	add r1, r7, r1
	ldr r2, _080D8860  @ =gUnknown_08176970
	ldrb r0, [r6]
	add r0, r0, r2
	ldrb r0, [r0]
	lsl r0, r0, #1
	strb r0, [r1]
	ldr r3, _080D8864  @ =0x00000F12
	add r1, r4, r3
	add r1, r7, r1
	ldr r2, _080D8868  @ =gUnknown_08176978
	ldrb r0, [r6]
	add r0, r0, r2
	ldrb r0, [r0]
	lsl r0, r0, #1
	strb r0, [r1]
_080D8838:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080D8844:
	.4byte gUnknown_081769A0
_080D8848:
	.4byte gRam
_080D884C:
	.4byte 0x00001042
_080D8850:
	.4byte gUnknown_08176988
_080D8854:
	.4byte 0x00000FB2
_080D8858:
	.4byte gUnknown_08176998
_080D885C:
	.4byte 0x00000F22
_080D8860:
	.4byte gUnknown_08176970
_080D8864:
	.4byte 0x00000F12
_080D8868:
	.4byte gUnknown_08176978
	THUMB_FUNC_END sub_080D8660

	THUMB_FUNC_START sub_080D886C
sub_080D886C: @ 0x080D886C
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D8880  @ =gRam
	ldr r2, _080D8884  @ =0x00001002
	add r1, r1, r2
	add r0, r0, r1
	ldrb r1, [r0]
	sub r1, r1, #1
	strb r1, [r0]
	bx lr
_080D8880:
	.4byte gRam
_080D8884:
	.4byte 0x00001002
	THUMB_FUNC_END sub_080D886C

	THUMB_FUNC_START sub_080D8888
sub_080D8888: @ 0x080D8888
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080D891C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D88FA
	ldr r3, _080D8900  @ =gRam
	ldr r0, _080D8904  @ =0x00001052
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080D8908  @ =0x00000FF2
	add r0, r3, r1
	add r0, r4, r0
	ldrb r0, [r0]
	sub r0, r0, #126
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r1, _080D890C  @ =0x00000AB2
	add r0, r3, r1
	ldrh r0, [r0]
	cmp r0, #18
	bne _080D88CE
	add r0, r5, #2
	lsl r0, r0, #24
	lsr r5, r0, #24
_080D88CE:
	ldr r0, _080D8910  @ =0x00000F62
	add r4, r3, r0
	add r4, r6, r4
	ldrb r1, [r4]
	add r0, r0, #16
	add r3, r3, r0
	add r3, r6, r3
	ldrb r2, [r3]
	lsl r2, r2, #8
	ldr r0, _080D8914  @ =gUnknown_081757F0
	add r0, r5, r0
	orr r1, r1, r2
	ldrb r0, [r0]
	add r1, r1, r0
	ldr r0, _080D8918  @ =gUnknown_081757F4
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	strb r1, [r4]
	lsr r1, r1, #8
	strb r1, [r3]
_080D88FA:
	pop {r4-r6}
	pop {r0}
	bx r0
_080D8900:
	.4byte gRam
_080D8904:
	.4byte 0x00001052
_080D8908:
	.4byte 0x00000FF2
_080D890C:
	.4byte 0x00000AB2
_080D8910:
	.4byte 0x00000F62
_080D8914:
	.4byte gUnknown_081757F0
_080D8918:
	.4byte gUnknown_081757F4
	THUMB_FUNC_END sub_080D8888

	THUMB_FUNC_START sub_080D891C
sub_080D891C: @ 0x080D891C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #20
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r10, r0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r10
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D8942
	b _080D8BBC
_080D8942:
	ldr r1, _080D89A8  @ =gRam
	mov r2, #150
	lsl r2, r2, #4
	add r0, r1, r2
	ldrb r2, [r0]
	ldr r3, _080D89AC  @ =0x000015E8
	add r0, r1, r3
	strb r2, [r0]
	ldr r4, _080D89B0  @ =0x00000964
	add r0, r1, r4
	ldrb r2, [r0]
	add r3, r3, #1
	add r0, r1, r3
	strb r2, [r0]
	ldr r4, _080D89B4  @ =0x00000F62
	add r0, r1, r4
	add r0, r0, r10
	ldrb r3, [r0]
	ldr r0, _080D89B8  @ =0x00000F72
	add r1, r1, r0
	add r1, r1, r10
	ldrb r0, [r1]
	lsl r0, r0, #8
	orr r3, r3, r0
	mov r7, #64
	add r5, r3, #0
	add r5, r5, #128
	ldr r1, _080D89BC  @ =0x000001FF
	add r0, r1, #0
	and r5, r5, r0
	ldr r1, _080D89C0  @ =gUnknown_08173F38
	mov r6, #255
	add r0, r3, #0
	and r0, r0, r6
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r2, [r0]
	add r0, r5, #0
	and r0, r0, r6
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r4, [r0]
	mov r0, #255
	lsl r0, r0, #8
	and r0, r0, r2
	cmp r0, #0
	beq _080D89C4
	mov r2, #64
	str r2, [sp, #8]
	b _080D89D4
	.byte 0x00
	.byte 0x00
_080D89A8:
	.4byte gRam
_080D89AC:
	.4byte 0x000015E8
_080D89B0:
	.4byte 0x00000964
_080D89B4:
	.4byte 0x00000F62
_080D89B8:
	.4byte 0x00000F72
_080D89BC:
	.4byte 0x000001FF
_080D89C0:
	.4byte gUnknown_08173F38
_080D89C4:
	and r2, r2, r6
	lsl r0, r2, #22
	lsr r2, r0, #24
	lsr r0, r0, #23
	mov r1, #1
	and r0, r0, r1
	add r0, r2, r0
	str r0, [sp, #8]
_080D89D4:
	ldr r0, [sp, #8]
	str r0, [sp, #12]
	mov r0, #128
	lsl r0, r0, #1
	and r3, r3, r0
	cmp r3, #0
	beq _080D89EC
	ldr r1, [sp, #12]
	neg r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #12]
_080D89EC:
	mov r0, #255
	lsl r0, r0, #8
	and r0, r0, r4
	cmp r0, #0
	beq _080D89FA
	mov r9, r7
	b _080D8A10
_080D89FA:
	mov r0, #255
	and r4, r4, r0
	add r0, r4, #0
	mul r0, r7, r0
	lsl r0, r0, #16
	lsr r2, r0, #24
	lsr r0, r0, #23
	mov r1, #1
	and r0, r0, r1
	add r2, r2, r0
	mov r9, r2
_080D8A10:
	mov r7, r9
	mov r0, #128
	lsl r0, r0, #1
	and r5, r5, r0
	cmp r5, #0
	beq _080D8A24
	mov r2, r9
	neg r0, r2
	lsl r0, r0, #24
	lsr r7, r0, #24
_080D8A24:
	ldr r5, _080D8BCC  @ =gRam
	ldr r3, _080D8BD0  @ =0x00001052
	add r0, r5, r3
	add r0, r0, r10
	ldrb r0, [r0]
	lsl r0, r0, #4
	mov r4, #64
	neg r4, r4
	add r1, r4, #0
	and r0, r0, r1
	ldr r2, _080D8BD4  @ =0x00000969
	add r1, r5, r2
	ldrb r1, [r1]
	orr r0, r0, r1
	ldr r3, _080D8BD8  @ =0x00000979
	add r6, r5, r3
	strb r0, [r6]
	ldr r0, _080D8BDC  @ =gUnknown_03003E74
	ldrh r0, [r0]
	ldr r4, _080D8BE0  @ =0x000015E8
	add r1, r5, r4
	ldrb r1, [r1]
	ldr r2, [sp, #12]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080D8BE4  @ =0x000015E9
	add r2, r5, r3
	ldrb r2, [r2]
	add r2, r2, r7
	lsl r2, r2, #16
	lsr r2, r2, #16
	mov r3, #0
	ldrsb r3, [r6, r3]
	lsl r3, r3, #8
	mov r4, #72
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #2
	str r4, [sp]
	bl sub_080C6004
	mov r2, #2
	add r1, sp, #4
	mov r0, #1
	strb r0, [r1]
	mov r4, #128
	and r7, r7, r4
	lsl r0, r7, #24
	lsr r0, r0, #24
	str r0, [sp, #16]
	add r7, r1, #0
	mov r8, r5
_080D8A90:
	ldr r1, _080D8BE8  @ =gUnknown_081757F8
	lsl r0, r2, #24
	asr r5, r0, #24
	add r1, r5, r1
	ldrb r1, [r1]
	ldr r2, [sp, #8]
	add r0, r2, #0
	mul r0, r1, r0
	lsr r3, r0, #8
	ldr r0, [sp, #12]
	mov r4, #128
	and r0, r0, r4
	cmp r0, #0
	beq _080D8AB2
	neg r0, r3
	lsl r0, r0, #24
	lsr r3, r0, #24
_080D8AB2:
	mov r0, r9
	mul r0, r1, r0
	lsr r2, r0, #8
	ldr r0, [sp, #16]
	cmp r0, #0
	beq _080D8AC4
	lsl r0, r2, #24
	neg r0, r0
	lsr r2, r0, #24
_080D8AC4:
	ldr r0, _080D8BDC  @ =gUnknown_03003E74
	ldrb r1, [r7]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	lsl r1, r3, #24
	ldr r6, _080D8BE0  @ =0x000015E8
	add r6, r6, r8
	asr r1, r1, #24
	ldrb r3, [r6]
	add r1, r1, r3
	lsl r1, r1, #16
	lsr r1, r1, #16
	lsl r2, r2, #24
	ldr r3, _080D8BE4  @ =0x000015E9
	add r3, r3, r8
	asr r2, r2, #24
	ldrb r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r4, _080D8BEC  @ =gUnknown_03002BA9
	mov r3, #0
	ldrsb r3, [r4, r3]
	lsl r3, r3, #8
	mov r4, #72
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #2
	str r4, [sp]
	bl sub_080C6004
	sub r1, r5, #1
	lsl r1, r1, #24
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsr r2, r1, #24
	cmp r1, #0
	bge _080D8A90
	mov r0, r10
	mov r1, #255
	mov r2, #3
	bl sub_080C6350
	ldr r0, _080D8BF0  @ =0x00000996
	add r0, r0, r8
	ldrb r1, [r0]
	mov r0, r10
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	ldr r1, _080D8BF4  @ =0x000009AD
	add r1, r1, r8
	ldrb r1, [r1]
	orr r0, r0, r1
	ldrb r1, [r6, #29]
	orr r0, r0, r1
	cmp r0, #0
	bne _080D8BBC
	mov r2, #0
	mov r4, #170
	lsl r4, r4, #3
	add r4, r4, r8
	mov r5, #182
	lsl r5, r5, #5
	add r5, r5, r8
_080D8B4E:
	ldr r1, _080D8BDC  @ =gUnknown_03003E74
	lsl r2, r2, #24
	asr r0, r2, #24
	ldrh r1, [r1]
	add r0, r0, r1
	lsl r0, r0, #3
	add r3, r0, r4
	ldrh r0, [r3, #2]
	lsl r0, r0, #23
	lsr r1, r0, #23
	mov r0, #128
	lsl r0, r0, #1
	and r0, r0, r1
	add r6, r2, #0
	cmp r0, #0
	bne _080D8BAE
	ldr r2, _080D8BF8  @ =0x00000402
	add r0, r4, r2
	ldrh r0, [r0]
	add r0, r1, r0
	ldr r2, _080D8BFC  @ =0x00001174
	add r1, r4, r2
	ldrh r1, [r1]
	sub r0, r0, r1
	add r0, r0, #12
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #23
	bhi _080D8BAE
	ldrb r0, [r3]
	cmp r0, #239
	bhi _080D8BAE
	mov r1, #129
	lsl r1, r1, #3
	add r0, r4, r1
	ldrh r0, [r0]
	ldrb r3, [r3]
	add r0, r0, r3
	ldrh r1, [r5]
	sub r0, r0, r1
	add r0, r0, #4
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #15
	bhi _080D8BAE
	mov r0, r10
	bl sub_080C3BD0
_080D8BAE:
	mov r2, #128
	lsl r2, r2, #17
	add r0, r6, r2
	lsr r2, r0, #24
	asr r0, r0, #24
	cmp r0, #3
	ble _080D8B4E
_080D8BBC:
	add sp, sp, #20
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080D8BCC:
	.4byte gRam
_080D8BD0:
	.4byte 0x00001052
_080D8BD4:
	.4byte 0x00000969
_080D8BD8:
	.4byte 0x00000979
_080D8BDC:
	.4byte gUnknown_03003E74
_080D8BE0:
	.4byte 0x000015E8
_080D8BE4:
	.4byte 0x000015E9
_080D8BE8:
	.4byte gUnknown_081757F8
_080D8BEC:
	.4byte gUnknown_03002BA9
_080D8BF0:
	.4byte 0x00000996
_080D8BF4:
	.4byte 0x000009AD
_080D8BF8:
	.4byte 0x00000402
_080D8BFC:
	.4byte 0x00001174
	THUMB_FUNC_END sub_080D891C

	THUMB_FUNC_START sub_080D8C00
sub_080D8C00: @ 0x080D8C00
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D8C1C  @ =gRam
	ldr r1, _080D8C20  @ =0x00000F72
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	bl sub_080C3758
	pop {r0}
	bx r0
_080D8C1C:
	.4byte gRam
_080D8C20:
	.4byte 0x00000F72
	THUMB_FUNC_END sub_080D8C00

	THUMB_FUNC_START sub_080D8C24
sub_080D8C24: @ 0x080D8C24
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r0, r6, #0
	bl sub_080D8E68
	add r0, r6, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D8C44
	b _080D8DDC
_080D8C44:
	add r0, r6, #0
	bl sub_080C7A20
	ldr r5, _080D8DE8  @ =gRam
	ldr r1, _080D8DEC  @ =0x00001710
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D8CC4
	add r0, r6, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D8CC4
	bl sub_08093078
	ldr r2, _080D8DF0  @ =0x00000FC2
	add r0, r5, r2
	add r0, r6, r0
	mov r1, #32
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #48
	bl sub_080C2CB4
	mov r0, #150
	lsl r0, r0, #4
	add r3, r5, r0
	ldr r4, _080D8DF4  @ =gUnknown_081757FC
	ldr r1, _080D8DF8  @ =0x00000545
	add r0, r5, r1
	ldrb r2, [r0]
	lsr r0, r2, #2
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r4
	ldrb r0, [r0]
	ldrb r3, [r3]
	add r0, r0, r3
	ldr r3, _080D8DFC  @ =0x000016CD
	add r1, r5, r3
	strb r0, [r1]
	ldr r0, _080D8E00  @ =0x00000961
	add r1, r5, r0
	mov r0, #3
	and r0, r0, r2
	add r0, r0, r4
	ldrb r0, [r0]
	ldrb r1, [r1]
	add r0, r0, r1
	ldr r2, _080D8E04  @ =0x000016CE
	add r1, r5, r2
	strb r0, [r1]
	add r3, r3, #43
	add r1, r5, r3
	mov r0, #20
	strb r0, [r1]
	bl sub_0809E2CC
	add r0, r6, #0
	mov r1, #121
	bl sub_080CF140
_080D8CC4:
	mov r2, #15
	ldr r5, _080D8DE8  @ =gRam
	ldr r0, _080D8E08  @ =0x00000968
	add r0, r0, r5
	mov r8, r0
	ldr r1, _080D8DF0  @ =0x00000FC2
	add r0, r5, r1
	add r0, r0, r6
	mov r9, r0
_080D8CD6:
	lsl r2, r2, #24
	asr r4, r2, #24
	ldr r3, _080D8E0C  @ =0x00000996
	add r0, r5, r3
	ldrb r1, [r0]
	eor r1, r1, r4
	mov r0, #3
	and r1, r1, r0
	ldr r3, _080D8E10  @ =0x00001142
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	add r7, r2, #0
	cmp r1, #0
	bne _080D8DCE
	ldr r1, _080D8E14  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #8
	bls _080D8DCE
	ldr r2, _080D8E18  @ =0x00001032
	add r1, r5, r2
	add r1, r4, r1
	sub r3, r3, #16
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	orr r1, r1, r0
	mov r0, #64
	and r1, r1, r0
	cmp r1, #0
	bne _080D8DCE
	ldr r1, _080D8E1C  @ =0x00000EE2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	mov r2, r8
	strb r0, [r2]
	ldr r3, _080D8E20  @ =0x00000F02
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r2, _080D8E24  @ =0x00000969
	add r0, r5, r2
	strb r1, [r0]
	sub r3, r3, #48
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	ldr r1, _080D8E28  @ =0x0000096C
	add r2, r5, r1
	strb r0, [r2]
	add r3, r3, #32
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r3, _080D8E2C  @ =0x0000096D
	add r0, r5, r3
	strb r1, [r0]
	ldr r1, _080D8E30  @ =0x00001622
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r3, _080D8E34  @ =0x00001623
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	mov r3, r8
	ldrh r0, [r3]
	sub r1, r1, r0
	add r1, r1, #16
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #31
	bhi _080D8DCE
	ldr r1, _080D8E38  @ =0x00001624
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r3, _080D8E3C  @ =0x00001625
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r1, r1, r0
	add r1, r1, #16
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #31
	bhi _080D8DCE
	ldr r1, _080D8E40  @ =0x00001072
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #15
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #64
	bl sub_080C2DCC
	ldr r2, _080D8E44  @ =0x00001102
	add r1, r5, r2
	add r1, r4, r1
	mov r3, #150
	lsl r3, r3, #4
	add r0, r5, r3
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D8E48  @ =0x00001112
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080D8E00  @ =0x00000961
	add r0, r5, r2
	ldrb r0, [r0]
	strb r0, [r1]
	mov r0, #32
	mov r3, r9
	strb r0, [r3]
	add r0, r6, #0
	mov r1, #121
	bl sub_080CF140
_080D8DCE:
	mov r1, #255
	lsl r1, r1, #24
	add r0, r7, r1
	lsr r2, r0, #24
	cmp r0, #0
	blt _080D8DDC
	b _080D8CD6
_080D8DDC:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080D8DE8:
	.4byte gRam
_080D8DEC:
	.4byte 0x00001710
_080D8DF0:
	.4byte 0x00000FC2
_080D8DF4:
	.4byte gUnknown_081757FC
_080D8DF8:
	.4byte 0x00000545
_080D8DFC:
	.4byte 0x000016CD
_080D8E00:
	.4byte 0x00000961
_080D8E04:
	.4byte 0x000016CE
_080D8E08:
	.4byte 0x00000968
_080D8E0C:
	.4byte 0x00000996
_080D8E10:
	.4byte 0x00001142
_080D8E14:
	.4byte 0x00000FA2
_080D8E18:
	.4byte 0x00001032
_080D8E1C:
	.4byte 0x00000EE2
_080D8E20:
	.4byte 0x00000F02
_080D8E24:
	.4byte 0x00000969
_080D8E28:
	.4byte 0x0000096C
_080D8E2C:
	.4byte 0x0000096D
_080D8E30:
	.4byte 0x00001622
_080D8E34:
	.4byte 0x00001623
_080D8E38:
	.4byte 0x00001624
_080D8E3C:
	.4byte 0x00001625
_080D8E40:
	.4byte 0x00001072
_080D8E44:
	.4byte 0x00001102
_080D8E48:
	.4byte 0x00001112
	THUMB_FUNC_END sub_080D8C24

	THUMB_FUNC_START sub_080D8E4C
sub_080D8E4C: @ 0x080D8E4C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080C3758
	add r0, r4, #0
	bl sub_080C35C0
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D8E4C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D8E68
sub_080D8E68: @ 0x080D8E68
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D8E90  @ =gRam
	ldr r2, _080D8E94  @ =0x00000FC2
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsr r1, r1, #1
	mov r2, #1
	and r1, r1, r2
	lsl r1, r1, #5
	ldr r2, _080D8E98  @ =gUnknown_08175800
	add r1, r1, r2
	mov r2, #4
	bl sub_080C9480
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D8E90:
	.4byte gRam
_080D8E94:
	.4byte 0x00000FC2
_080D8E98:
	.4byte gUnknown_08175800
	THUMB_FUNC_END sub_080D8E68

	THUMB_FUNC_START sub_080D8E9C
sub_080D8E9C: @ 0x080D8E9C
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080D91B4
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D8EBA
	b _080D904E
_080D8EBA:
	ldr r5, _080D8FE4  @ =gRam
	ldr r1, _080D8FE8  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #3
	bne _080D8ECA
	b _080D9048
_080D8ECA:
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	mov r2, #7
	ldr r1, _080D8FEC  @ =0x00001022
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080D8EEE
	ldr r2, _080D8FF0  @ =0x00001052
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r2, #3
_080D8EEE:
	ldr r1, _080D8FF0  @ =0x00001052
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	ldr r0, _080D8FF4  @ =0x00000996
	add r7, r5, r0
	ldrb r0, [r7]
	and r2, r2, r0
	cmp r2, #0
	bne _080D8F0E
	add r0, r4, #0
	mov r1, #101
	bl sub_080CF140
_080D8F0E:
	ldr r1, _080D8FF8  @ =0x00001072
	add r0, r5, r1
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	beq _080D8F1C
	b _080D9028
_080D8F1C:
	ldr r2, _080D8FFC  @ =0x000016F8
	add r7, r5, r2
	ldrb r0, [r7]
	cmp r0, #0
	bne _080D8F6E
	add r0, r4, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D8F6E
	bl sub_08093078
	add r0, r4, #0
	mov r1, #40
	bl sub_080C2CB4
	mov r1, #150
	lsl r1, r1, #4
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r2, _080D9000  @ =0x000016CD
	add r0, r5, r2
	strb r1, [r0]
	ldr r1, _080D9004  @ =0x00000961
	add r0, r5, r1
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r5, r2
	strb r1, [r0]
	mov r0, #24
	strb r0, [r7]
	ldr r1, _080D9008  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #48
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #121
	bl sub_080CF140
_080D8F6E:
	ldr r5, _080D8FE4  @ =gRam
	ldr r2, _080D900C  @ =0x00000FB2
	add r0, r5, r2
	add r4, r6, r0
	ldrb r2, [r4]
	ldr r1, _080D8FEC  @ =0x00001022
	add r0, r5, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080D8F8C
	add r0, r2, #0
	add r0, r0, #16
	lsl r0, r0, #24
	lsr r2, r0, #24
_080D8F8C:
	ldr r0, _080D9010  @ =0x00000F22
	add r1, r5, r0
	add r1, r6, r1
	ldr r0, _080D9014  @ =gUnknown_08175840
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080D9018  @ =0x00000F12
	add r1, r5, r0
	add r1, r6, r1
	ldr r0, _080D901C  @ =gUnknown_08175860
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r6, #0
	bl Sprite3_Move
	add r0, r6, #0
	bl sub_080C7A48
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D8FCC
	ldr r0, _080D9020  @ =gUnknown_08175880
	ldrb r1, [r4]
	add r1, r1, r0
	ldrb r0, [r1]
	strb r0, [r4]
	add r0, r6, #0
	mov r1, #13
	bl sub_080CF0AC
_080D8FCC:
	ldr r1, _080D9024  @ =gUnknown_08175890
	ldr r2, _080D8FE8  @ =0x00000F52
	add r0, r5, r2
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r6, #0
	bl _call_via_r1
	b _080D904E
_080D8FE4:
	.4byte gRam
_080D8FE8:
	.4byte 0x00000F52
_080D8FEC:
	.4byte 0x00001022
_080D8FF0:
	.4byte 0x00001052
_080D8FF4:
	.4byte 0x00000996
_080D8FF8:
	.4byte 0x00001072
_080D8FFC:
	.4byte 0x000016F8
_080D9000:
	.4byte 0x000016CD
_080D9004:
	.4byte 0x00000961
_080D9008:
	.4byte 0x00000FD2
_080D900C:
	.4byte 0x00000FB2
_080D9010:
	.4byte 0x00000F22
_080D9014:
	.4byte gUnknown_08175840
_080D9018:
	.4byte 0x00000F12
_080D901C:
	.4byte gUnknown_08175860
_080D9020:
	.4byte gUnknown_08175880
_080D9024:
	.4byte gUnknown_08175890
_080D9028:
	ldr r1, _080D9044  @ =0x00000FE2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
	ldrb r1, [r7]
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080D904E
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	b _080D904E
_080D9044:
	.4byte 0x00000FE2
_080D9048:
	add r0, r6, #0
	bl sub_080D9984
_080D904E:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D8E9C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D9058
sub_080D9058: @ 0x080D9058
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r5, r1, #0
	ldr r4, _080D90B4  @ =gRam
	ldr r2, _080D90B8  @ =0x00000FC2
	add r0, r4, r2
	add r6, r1, r0
	ldrb r2, [r6]
	cmp r2, #0
	bne _080D90AE
	mov r3, #1
	ldr r7, _080D90BC  @ =0x000010A2
	add r0, r4, r7
	add r1, r1, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #3
	bne _080D9088
	strb r2, [r1]
	mov r3, #2
_080D9088:
	ldr r1, _080D90C0  @ =0x00000F52
	add r0, r4, r1
	add r0, r5, r0
	strb r3, [r0]
	bl GetRandomInt
	ldr r7, _080D90C4  @ =0x00001082
	add r2, r4, r7
	add r2, r5, r2
	mov r1, #2
	and r1, r1, r0
	sub r1, r1, #1
	strb r1, [r2]
	bl GetRandomInt
	mov r1, #31
	and r1, r1, r0
	add r1, r1, #32
	strb r1, [r6]
_080D90AE:
	pop {r4-r7}
	pop {r0}
	bx r0
_080D90B4:
	.4byte gRam
_080D90B8:
	.4byte 0x00000FC2
_080D90BC:
	.4byte 0x000010A2
_080D90C0:
	.4byte 0x00000F52
_080D90C4:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080D9058

	THUMB_FUNC_START sub_080D90C8
sub_080D90C8: @ 0x080D90C8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r7, _080D9100  @ =gRam
	ldr r1, _080D9104  @ =0x00000FC2
	add r0, r7, r1
	add r5, r4, r0
	ldrb r1, [r5]
	add r6, r1, #0
	cmp r6, #0
	beq _080D9110
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080D9124
	ldr r0, _080D9108  @ =0x00000FB2
	add r2, r7, r0
	add r2, r4, r2
	ldr r1, _080D910C  @ =0x00001082
	add r0, r7, r1
	add r0, r4, r0
	ldrb r0, [r0]
	ldrb r1, [r2]
	add r0, r0, r1
	mov r1, #15
	and r0, r0, r1
	strb r0, [r2]
	b _080D9124
_080D9100:
	.4byte gRam
_080D9104:
	.4byte 0x00000FC2
_080D9108:
	.4byte 0x00000FB2
_080D910C:
	.4byte 0x00001082
_080D9110:
	bl GetRandomInt
	mov r1, #15
	and r1, r1, r0
	add r1, r1, #8
	strb r1, [r5]
	ldr r1, _080D912C  @ =0x00000F52
	add r0, r7, r1
	add r0, r4, r0
	strb r6, [r0]
_080D9124:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D912C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080D90C8

	THUMB_FUNC_START sub_080D9130
sub_080D9130: @ 0x080D9130
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r7, r5, #0
	ldr r6, _080D9188  @ =gRam
	ldr r1, _080D918C  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	add r4, r5, #0
	eor r4, r4, r0
	mov r0, #3
	and r4, r4, r0
	cmp r4, #0
	bne _080D91A6
	add r0, r5, #0
	mov r1, #31
	bl sub_080C35FC
	bl sub_080CA32C
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r2, _080D9190  @ =0x00000FB2
	add r0, r6, r2
	add r3, r5, r0
	ldrb r0, [r3]
	cmp r1, r0
	beq _080D9194
	ldrb r2, [r3]
	sub r0, r1, r2
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080D917A
	add r0, r2, #2
	lsl r0, r0, #24
	lsr r2, r0, #24
_080D917A:
	sub r0, r2, #1
	lsl r0, r0, #24
	lsr r2, r0, #24
	mov r0, #15
	and r2, r2, r0
	strb r2, [r3]
	b _080D91A6
_080D9188:
	.4byte gRam
_080D918C:
	.4byte 0x00000996
_080D9190:
	.4byte 0x00000FB2
_080D9194:
	ldr r1, _080D91AC  @ =0x00000F52
	add r0, r6, r1
	add r0, r7, r0
	strb r4, [r0]
	ldr r2, _080D91B0  @ =0x00000FC2
	add r0, r6, r2
	add r0, r7, r0
	mov r1, #48
	strb r1, [r0]
_080D91A6:
	pop {r4-r7}
	pop {r0}
	bx r0
_080D91AC:
	.4byte 0x00000F52
_080D91B0:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080D9130

	THUMB_FUNC_START sub_080D91B4
sub_080D91B4: @ 0x080D91B4
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r5, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D929E
	ldr r4, _080D92A8  @ =gRam
	ldr r1, _080D92AC  @ =0x000010D2
	add r0, r4, r1
	add r7, r5, r0
	ldrb r6, [r7]
	ldr r2, _080D92B0  @ =0x00001122
	add r0, r4, r2
	add r0, r5, r0
	mov r1, #11
	strb r1, [r0]
	mov r0, sp
	ldrb r1, [r0]
	add r0, r5, #0
	bl sub_080D9580
	ldr r1, _080D92B4  @ =gUnknown_03003E74
	ldrh r0, [r1]
	add r0, r0, #2
	strh r0, [r1]
	ldr r3, _080D92B8  @ =0x00001052
	add r0, r4, r3
	add r0, r5, r0
	ldrb r0, [r0]
	mov r1, #127
	and r1, r1, r0
	ldr r0, _080D92BC  @ =gUnknown_0200EC18
	add r2, r1, r0
	ldr r3, _080D92C0  @ =0x00000EE2
	add r0, r4, r3
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, _080D92C4  @ =gUnknown_0200ED18
	add r2, r1, r0
	sub r3, r3, #16
	add r0, r4, r3
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, _080D92C8  @ =gUnknown_0200EC98
	add r2, r1, r0
	add r3, r3, #48
	add r0, r4, r3
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, _080D92CC  @ =gUnknown_0200ED98
	add r1, r1, r0
	ldr r2, _080D92D0  @ =0x00000EF2
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r5, #0
	bl sub_080D9860
	ldrb r0, [r7]
	and r6, r6, r0
	ldr r3, _080D92D4  @ =0x00000F72
	add r4, r4, r3
	add r4, r5, r4
	ldrb r0, [r4]
	cmp r0, #3
	bhi _080D9288
	add r0, r5, #0
	bl sub_080D98A4
	ldrb r0, [r7]
	and r6, r6, r0
	ldrb r0, [r4]
	cmp r0, #2
	bhi _080D9288
	add r0, r5, #0
	bl sub_080D98CC
	ldrb r0, [r7]
	and r6, r6, r0
	ldrb r0, [r4]
	cmp r0, #1
	bhi _080D9288
	add r0, r5, #0
	bl sub_080D98F4
	ldrb r0, [r7]
	and r6, r6, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080D9288
	add r0, r5, #0
	bl sub_080D9484
	ldrb r0, [r7]
	and r6, r6, r0
_080D9288:
	ldr r0, _080D92A8  @ =gRam
	ldr r1, _080D92AC  @ =0x000010D2
	add r0, r0, r1
	add r0, r5, r0
	strb r6, [r0]
	add r0, r5, #0
	bl sub_080D92D8
	add r0, r5, #0
	bl sub_080C1F70
_080D929E:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D92A8:
	.4byte gRam
_080D92AC:
	.4byte 0x000010D2
_080D92B0:
	.4byte 0x00001122
_080D92B4:
	.4byte gUnknown_03003E74
_080D92B8:
	.4byte 0x00001052
_080D92BC:
	.4byte gUnknown_0200EC18
_080D92C0:
	.4byte 0x00000EE2
_080D92C4:
	.4byte gUnknown_0200ED18
_080D92C8:
	.4byte gUnknown_0200EC98
_080D92CC:
	.4byte gUnknown_0200ED98
_080D92D0:
	.4byte 0x00000EF2
_080D92D4:
	.4byte 0x00000F72
	THUMB_FUNC_END sub_080D91B4

	THUMB_FUNC_START sub_080D92D8
sub_080D92D8: @ 0x080D92D8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080D9330  @ =gRam
	ldr r1, _080D9334  @ =0x00000FA2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #9
	bne _080D9328
	ldr r4, _080D9338  @ =0x000010E2
	add r0, r3, r4
	add r0, r2, r0
	ldrb r1, [r0]
	add r0, r1, #0
	cmp r0, #0
	beq _080D9328
	cmp r0, #79
	bhi _080D9328
	mov r0, #15
	and r0, r0, r1
	ldr r4, _080D933C  @ =0x000009AD
	add r1, r3, r4
	ldrb r1, [r1]
	orr r0, r0, r1
	ldr r4, _080D9340  @ =0x00001605
	add r1, r3, r4
	ldrb r1, [r1]
	orr r0, r0, r1
	cmp r0, #0
	bne _080D9328
	ldr r0, _080D9344  @ =0x00000F72
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r2, #0
	bl sub_080D9844
_080D9328:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D9330:
	.4byte gRam
_080D9334:
	.4byte 0x00000FA2
_080D9338:
	.4byte 0x000010E2
_080D933C:
	.4byte 0x000009AD
_080D9340:
	.4byte 0x00001605
_080D9344:
	.4byte 0x00000F72
	THUMB_FUNC_END sub_080D92D8

	THUMB_FUNC_START sub_080D9348
sub_080D9348: @ 0x080D9348
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	mov r2, #254
	lsl r2, r2, #23
	and r2, r2, r1
	lsr r2, r2, #24
	ldr r3, _080D93B4  @ =gRam
	ldr r4, _080D93B8  @ =gUnknown_0200EC18
	add r1, r2, r4
	ldrb r4, [r1]
	ldr r5, _080D93BC  @ =0x00001622
	add r1, r3, r5
	strb r4, [r1]
	ldr r4, _080D93C0  @ =gUnknown_0200EC98
	add r1, r2, r4
	ldrb r4, [r1]
	add r5, r5, #1
	add r1, r3, r5
	strb r4, [r1]
	ldr r4, _080D93C4  @ =gUnknown_0200ED18
	add r1, r2, r4
	ldrb r4, [r1]
	add r5, r5, #1
	add r1, r3, r5
	strb r4, [r1]
	ldr r1, _080D93C8  @ =gUnknown_0200ED98
	add r2, r2, r1
	ldrb r2, [r2]
	ldr r4, _080D93CC  @ =0x00001625
	add r1, r3, r4
	strb r2, [r1]
	ldr r2, _080D93D0  @ =gUnknown_03003E74
	ldrh r1, [r2]
	add r1, r1, #4
	strh r1, [r2]
	ldr r5, _080D93D4  @ =0x00001052
	add r3, r3, r5
	add r3, r0, r3
	ldrb r1, [r3]
	lsr r1, r1, #1
	mov r2, #1
	and r1, r1, r2
	lsl r1, r1, #5
	ldr r2, _080D93D8  @ =gUnknown_0817591C
	add r1, r1, r2
	mov r2, #4
	bl sub_080C9480
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D93B4:
	.4byte gRam
_080D93B8:
	.4byte gUnknown_0200EC18
_080D93BC:
	.4byte 0x00001622
_080D93C0:
	.4byte gUnknown_0200EC98
_080D93C4:
	.4byte gUnknown_0200ED18
_080D93C8:
	.4byte gUnknown_0200ED98
_080D93CC:
	.4byte 0x00001625
_080D93D0:
	.4byte gUnknown_03003E74
_080D93D4:
	.4byte 0x00001052
_080D93D8:
	.4byte gUnknown_0817591C
	THUMB_FUNC_END sub_080D9348

	THUMB_FUNC_START sub_080D93DC
sub_080D93DC: @ 0x080D93DC
	push {r4-r6,lr}
	mov r6, r8
	push {r6}
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	mov r2, #254
	lsl r2, r2, #23
	and r2, r2, r1
	lsr r2, r2, #24
	ldr r3, _080D945C  @ =gRam
	ldr r4, _080D9460  @ =gUnknown_0200EC18
	add r1, r2, r4
	ldrb r4, [r1]
	ldr r5, _080D9464  @ =0x00001622
	add r1, r3, r5
	strb r4, [r1]
	ldr r4, _080D9468  @ =gUnknown_0200EC98
	add r1, r2, r4
	ldrb r4, [r1]
	add r5, r5, #1
	add r1, r3, r5
	strb r4, [r1]
	ldr r4, _080D946C  @ =gUnknown_0200ED18
	add r1, r2, r4
	ldrb r4, [r1]
	add r5, r5, #1
	add r1, r3, r5
	strb r4, [r1]
	ldr r1, _080D9470  @ =gUnknown_0200ED98
	add r2, r2, r1
	ldrb r2, [r2]
	ldr r4, _080D9474  @ =0x00001625
	add r1, r3, r4
	strb r2, [r1]
	ldr r1, _080D9478  @ =0x00001122
	add r5, r3, r1
	add r5, r0, r5
	ldrb r4, [r5]
	mov r8, r4
	mov r4, #63
	mov r1, r8
	and r4, r4, r1
	ldr r6, _080D947C  @ =gUnknown_0817595C
	ldr r1, _080D9480  @ =0x00001052
	add r3, r3, r1
	add r3, r0, r3
	ldrb r1, [r3]
	lsr r1, r1, #1
	mov r2, #3
	and r1, r1, r2
	add r1, r1, r6
	ldrb r1, [r1]
	orr r4, r4, r1
	strb r4, [r5]
	bl sub_080C6240
	mov r4, r8
	strb r4, [r5]
	pop {r3}
	mov r8, r3
	pop {r4-r6}
	pop {r0}
	bx r0
_080D945C:
	.4byte gRam
_080D9460:
	.4byte gUnknown_0200EC18
_080D9464:
	.4byte 0x00001622
_080D9468:
	.4byte gUnknown_0200EC98
_080D946C:
	.4byte gUnknown_0200ED18
_080D9470:
	.4byte gUnknown_0200ED98
_080D9474:
	.4byte 0x00001625
_080D9478:
	.4byte 0x00001122
_080D947C:
	.4byte gUnknown_0817595C
_080D9480:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080D93DC

	THUMB_FUNC_START sub_080D9484
sub_080D9484: @ 0x080D9484
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #32
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	bl sub_080D9934
	ldr r1, _080D9560  @ =gRam
	ldr r2, _080D9564  @ =0x00000FE2
	add r0, r1, r2
	add r0, r7, r0
	ldrb r0, [r0]
	mov r10, r0
	cmp r0, #0
	bne _080D954E
	ldr r6, _080D9568  @ =0x00000F62
	add r6, r6, r1
	mov r9, r6
	add r9, r9, r7
	mov r0, #1
	mov r2, r9
	strb r0, [r2]
	ldr r6, _080D956C  @ =0x00001132
	add r6, r6, r1
	mov r8, r6
	add r8, r8, r7
	mov r2, r10
	mov r0, r8
	strb r2, [r0]
	ldr r6, _080D9570  @ =0x00000E75
	add r3, r1, r6
	add r3, r7, r3
	strb r2, [r3]
	ldr r0, _080D9574  @ =0x00000EE2
	add r2, r1, r0
	add r2, r7, r2
	ldrb r6, [r2]
	str r6, [sp, #4]
	add r0, r0, #32
	add r6, r1, r0
	add r6, r7, r6
	str r6, [sp, #28]
	ldrb r6, [r6]
	str r6, [sp, #8]
	sub r0, r0, #48
	add r5, r1, r0
	add r5, r7, r5
	ldrb r6, [r5]
	str r6, [sp, #12]
	add r0, r0, #32
	add r4, r1, r0
	add r4, r7, r4
	ldrb r6, [r4]
	str r6, [sp, #16]
	ldr r0, _080D9578  @ =0x00001622
	ldrb r6, [r0, r1]
	strb r6, [r2]
	add r0, r0, #1
	ldrb r6, [r0, r1]
	ldr r0, [sp, #28]
	strb r6, [r0]
	ldr r6, _080D957C  @ =0x00001624
	ldrb r0, [r6, r1]
	strb r0, [r5]
	add r6, r6, #1
	add r1, r1, r6
	ldrb r0, [r1]
	strb r0, [r4]
	mov r0, sp
	add r1, r7, #0
	str r2, [sp, #20]
	str r3, [sp, #24]
	bl sub_080C4948
	mov r1, r10
	mov r0, r9
	strb r1, [r0]
	mov r0, #9
	mov r6, r8
	strb r0, [r6]
	mov r0, #4
	ldr r3, [sp, #24]
	strb r0, [r3]
	mov r0, sp
	ldrb r0, [r0, #16]
	strb r0, [r4]
	mov r1, sp
	ldrb r1, [r1, #12]
	strb r1, [r5]
	mov r6, sp
	ldrb r0, [r6, #8]
	ldr r6, [sp, #28]
	strb r0, [r6]
	ldr r2, [sp, #20]
	mov r1, sp
	ldrb r1, [r1, #4]
	strb r1, [r2]
_080D954E:
	add sp, sp, #32
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D9560:
	.4byte gRam
_080D9564:
	.4byte 0x00000FE2
_080D9568:
	.4byte 0x00000F62
_080D956C:
	.4byte 0x00001132
_080D9570:
	.4byte 0x00000E75
_080D9574:
	.4byte 0x00000EE2
_080D9578:
	.4byte 0x00001622
_080D957C:
	.4byte 0x00001624
	THUMB_FUNC_END sub_080D9484

	THUMB_FUNC_START sub_080D9580
sub_080D9580: @ 0x080D9580
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r3, r0, #0
	lsl r1, r1, #24
	lsr r7, r1, #24
	ldr r2, _080D966C  @ =gRam
	ldr r0, _080D9670  @ =0x0000096D
	add r1, r2, r0
	mov r0, #0
	strb r0, [r1]
	ldr r4, _080D9674  @ =0x00001072
	add r0, r2, r4
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D95B4
	ldr r5, _080D9678  @ =0x00000996
	add r0, r2, r5
	ldrb r0, [r0]
	strb r0, [r1]
_080D95B4:
	ldr r1, _080D967C  @ =0x00000FB2
	add r0, r2, r1
	add r0, r3, r0
	ldrb r0, [r0]
	add r0, r0, #255
	ldr r3, _080D9680  @ =0x0000096C
	add r1, r2, r3
	strb r0, [r1]
	mov r4, #1
	mov r9, r4
	add r6, r2, #0
	mov r8, r1
	mov r5, #15
	mov r10, r5
_080D95D0:
	mov r0, r8
	ldrb r5, [r0]
	mov r3, #15
	and r3, r3, r5
	ldr r1, _080D9670  @ =0x0000096D
	add r0, r6, r1
	ldrb r0, [r0]
	add r5, r5, r0
	mov r2, r10
	and r5, r5, r2
	ldr r0, _080D9684  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r7
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r4, #150
	lsl r4, r4, #4
	add r2, r6, r4
	ldr r1, _080D9688  @ =gUnknown_08175960
	lsl r3, r3, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080D968C  @ =0x00000964
	add r4, r6, r2
	ldr r2, _080D9690  @ =gUnknown_08175980
	add r3, r3, r2
	ldrh r2, [r3]
	ldrh r4, [r4]
	add r2, r2, r4
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080D9694  @ =gUnknown_081759A0
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080D9698  @ =gUnknown_081759B0
	add r5, r5, r4
	ldrb r4, [r5]
	ldr r5, _080D969C  @ =gUnknown_03002B99
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	mov r0, r9
	lsl r1, r0, #24
	mov r2, #255
	lsl r2, r2, #24
	add r1, r1, r2
	add r0, r7, #1
	lsl r0, r0, #24
	lsr r7, r0, #24
	mov r3, r8
	ldrb r0, [r3]
	add r0, r0, #2
	strb r0, [r3]
	lsr r4, r1, #24
	mov r9, r4
	cmp r1, #0
	bge _080D95D0
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080D966C:
	.4byte gRam
_080D9670:
	.4byte 0x0000096D
_080D9674:
	.4byte 0x00001072
_080D9678:
	.4byte 0x00000996
_080D967C:
	.4byte 0x00000FB2
_080D9680:
	.4byte 0x0000096C
_080D9684:
	.4byte gUnknown_03003E74
_080D9688:
	.4byte gUnknown_08175960
_080D968C:
	.4byte 0x00000964
_080D9690:
	.4byte gUnknown_08175980
_080D9694:
	.4byte gUnknown_081759A0
_080D9698:
	.4byte gUnknown_081759B0
_080D969C:
	.4byte gUnknown_03002B99
	THUMB_FUNC_END sub_080D9580

	THUMB_FUNC_START sub_080D96A0
sub_080D96A0: @ 0x080D96A0
	push {r4,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #0
	bl sub_080CA538
	add r3, r0, #0
	cmp r3, #0
	blt _080D9730
	ldr r2, _080D9738  @ =gRam
	ldr r0, _080D973C  @ =0x00000CA2
	add r1, r2, r0
	mov r0, #11
	strh r0, [r1]
	ldr r1, _080D9740  @ =0x00000FA2
	add r0, r2, r1
	add r0, r3, r0
	mov r1, #4
	strb r1, [r0]
	ldr r4, _080D9744  @ =0x00001012
	add r0, r2, r4
	add r0, r3, r0
	mov r1, #3
	strb r1, [r0]
	ldr r1, _080D9748  @ =0x00001122
	add r0, r2, r1
	add r0, r3, r0
	mov r1, #12
	strb r1, [r0]
	ldr r4, _080D974C  @ =0x00000EE2
	add r0, r2, r4
	add r0, r3, r0
	ldr r4, _080D9750  @ =0x00001622
	add r1, r2, r4
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D9754  @ =0x00000F02
	add r0, r2, r1
	add r0, r3, r0
	add r4, r4, #1
	add r1, r2, r4
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D9758  @ =0x00000ED2
	add r0, r2, r1
	add r0, r3, r0
	add r4, r4, #1
	add r1, r2, r4
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D975C  @ =0x00000EF2
	add r0, r2, r1
	add r0, r3, r0
	add r4, r4, #1
	add r1, r2, r4
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080D9760  @ =0x00000FC2
	add r0, r2, r1
	add r0, r3, r0
	mov r1, #31
	strb r1, [r0]
	ldr r4, _080D9764  @ =0x00000F62
	add r0, r2, r4
	add r0, r3, r0
	strb r1, [r0]
	ldr r0, _080D9768  @ =0x000010F2
	add r2, r2, r0
	add r2, r3, r2
	mov r0, #2
	strb r0, [r2]
_080D9730:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D9738:
	.4byte gRam
_080D973C:
	.4byte 0x00000CA2
_080D9740:
	.4byte 0x00000FA2
_080D9744:
	.4byte 0x00001012
_080D9748:
	.4byte 0x00001122
_080D974C:
	.4byte 0x00000EE2
_080D9750:
	.4byte 0x00001622
_080D9754:
	.4byte 0x00000F02
_080D9758:
	.4byte 0x00000ED2
_080D975C:
	.4byte 0x00000EF2
_080D9760:
	.4byte 0x00000FC2
_080D9764:
	.4byte 0x00000F62
_080D9768:
	.4byte 0x000010F2
	THUMB_FUNC_END sub_080D96A0

	THUMB_FUNC_START sub_080D976C
sub_080D976C: @ 0x080D976C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080ED830
	lsl r0, r0, #24
	cmp r0, #0
	bne _080D9792
	ldr r1, _080D9798  @ =gRam
	ldr r0, _080D979C  @ =0x00001172
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080D97A0
_080D9792:
	pop {r4}
	pop {r0}
	bx r0
_080D9798:
	.4byte gRam
_080D979C:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080D976C

	THUMB_FUNC_START sub_080D97A0
sub_080D97A0: @ 0x080D97A0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r3, #127
	ldr r1, _080D97F0  @ =gUnknown_03003112
	add r7, r0, r1
	add r2, r1, #0
	add r2, r2, #32
	add r6, r0, r2
	sub r2, r2, #48
	add r5, r0, r2
	add r1, r1, #16
	add r4, r0, r1
_080D97BA:
	lsl r1, r3, #24
	asr r1, r1, #24
	ldr r0, _080D97F4  @ =gUnknown_0200EC18
	add r2, r1, r0
	ldrb r0, [r7]
	strb r0, [r2]
	ldr r0, _080D97F8  @ =gUnknown_0200EC98
	add r2, r1, r0
	ldrb r0, [r6]
	strb r0, [r2]
	ldr r0, _080D97FC  @ =gUnknown_0200ED18
	add r2, r1, r0
	ldrb r0, [r5]
	strb r0, [r2]
	ldr r0, _080D9800  @ =gUnknown_0200ED98
	add r2, r1, r0
	ldrb r0, [r4]
	strb r0, [r2]
	sub r1, r1, #1
	lsl r1, r1, #24
	lsr r3, r1, #24
	cmp r1, #0
	bge _080D97BA
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D97F0:
	.4byte gUnknown_03003112
_080D97F4:
	.4byte gUnknown_0200EC18
_080D97F8:
	.4byte gUnknown_0200EC98
_080D97FC:
	.4byte gUnknown_0200ED18
_080D9800:
	.4byte gUnknown_0200ED98
	THUMB_FUNC_END sub_080D97A0

	THUMB_FUNC_START sub_080D9804
sub_080D9804: @ 0x080D9804
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D9834  @ =gRam
	ldr r3, _080D9838  @ =0x00000F52
	add r1, r2, r3
	add r1, r0, r1
	mov r3, #3
	strb r3, [r1]
	ldr r3, _080D983C  @ =0x000010E2
	add r1, r2, r3
	add r1, r0, r1
	mov r3, #160
	strb r3, [r1]
	ldr r1, _080D9840  @ =0x00000FA2
	add r2, r2, r1
	add r2, r0, r2
	mov r1, #9
	strb r1, [r2]
	bl sub_080ED8C8
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D9834:
	.4byte gRam
_080D9838:
	.4byte 0x00000F52
_080D983C:
	.4byte 0x000010E2
_080D9840:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080D9804

	THUMB_FUNC_START sub_080D9844
sub_080D9844: @ 0x080D9844
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #41
	bl sub_080CF0AC
	add r0, r4, #0
	bl sub_080D96A0
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D9844

	THUMB_FUNC_START sub_080D9860
sub_080D9860: @ 0x080D9860
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D9894  @ =gRam
	ldr r2, _080D9898  @ =0x00001052
	add r1, r3, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsr r1, r1, #1
	mov r2, #1
	and r1, r1, r2
	ldr r2, _080D989C  @ =0x00000FD2
	add r3, r3, r2
	add r3, r0, r3
	ldrb r3, [r3]
	mov r2, #2
	and r2, r2, r3
	orr r1, r1, r2
	lsl r1, r1, #5
	ldr r2, _080D98A0  @ =gUnknown_0817589C
	add r1, r1, r2
	mov r2, #4
	bl sub_080C9480
	pop {r0}
	bx r0
_080D9894:
	.4byte gRam
_080D9898:
	.4byte 0x00001052
_080D989C:
	.4byte 0x00000FD2
_080D98A0:
	.4byte gUnknown_0817589C
	THUMB_FUNC_END sub_080D9860

	THUMB_FUNC_START sub_080D98A4
sub_080D98A4: @ 0x080D98A4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D98C4  @ =gRam
	ldr r2, _080D98C8  @ =0x00001052
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	sub r1, r1, #16
	lsl r1, r1, #24
	lsr r1, r1, #24
	bl sub_080D9348
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D98C4:
	.4byte gRam
_080D98C8:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080D98A4

	THUMB_FUNC_START sub_080D98CC
sub_080D98CC: @ 0x080D98CC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D98EC  @ =gRam
	ldr r2, _080D98F0  @ =0x00001052
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	sub r1, r1, #28
	lsl r1, r1, #24
	lsr r1, r1, #24
	bl sub_080D9348
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D98EC:
	.4byte gRam
_080D98F0:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080D98CC

	THUMB_FUNC_START sub_080D98F4
sub_080D98F4: @ 0x080D98F4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D9924  @ =gRam
	ldr r2, _080D9928  @ =0x00000F92
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #0
	strb r2, [r1]
	ldr r2, _080D992C  @ =gUnknown_03003E74
	ldrh r1, [r2]
	add r1, r1, #4
	strh r1, [r2]
	ldr r1, _080D9930  @ =0x00001052
	add r3, r3, r1
	add r3, r0, r3
	ldrb r1, [r3]
	sub r1, r1, #40
	lsl r1, r1, #24
	lsr r1, r1, #24
	bl sub_080D93DC
	pop {r0}
	bx r0
_080D9924:
	.4byte gRam
_080D9928:
	.4byte 0x00000F92
_080D992C:
	.4byte gUnknown_03003E74
_080D9930:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080D98F4

	THUMB_FUNC_START sub_080D9934
sub_080D9934: @ 0x080D9934
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080D9970  @ =gUnknown_03003E74
	ldrh r1, [r2]
	add r1, r1, #1
	strh r1, [r2]
	ldr r3, _080D9974  @ =gRam
	ldr r1, _080D9978  @ =0x00000F92
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	ldr r2, _080D997C  @ =0x00001122
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #13
	strb r2, [r1]
	ldr r1, _080D9980  @ =0x00001052
	add r3, r3, r1
	add r3, r0, r3
	ldrb r1, [r3]
	sub r1, r1, #48
	lsl r1, r1, #24
	lsr r1, r1, #24
	bl sub_080D93DC
	pop {r0}
	bx r0
_080D9970:
	.4byte gUnknown_03003E74
_080D9974:
	.4byte gRam
_080D9978:
	.4byte 0x00000F92
_080D997C:
	.4byte 0x00001122
_080D9980:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080D9934

	THUMB_FUNC_START sub_080D9984
sub_080D9984: @ 0x080D9984
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r2, _080D99A8  @ =gRam
	ldr r3, _080D99AC  @ =0x000010E2
	add r0, r2, r3
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D99B0
	sub r3, r3, #32
	add r0, r2, r3
	add r0, r1, r0
	ldrb r2, [r0]
	mov r1, #224
	orr r1, r1, r2
	strb r1, [r0]
	b _080D99B6
_080D99A8:
	.4byte gRam
_080D99AC:
	.4byte 0x000010E2
_080D99B0:
	add r0, r1, #0
	bl sub_080CA5D8
_080D99B6:
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080D9984

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D99BC
sub_080D99BC: @ 0x080D99BC
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r0, #0
	mov r8, r0
	ldr r5, _080D9B98  @ =gRam
	ldr r1, _080D9B9C  @ =0x00000FB2
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080D99EA
	mov r2, r8
	strb r2, [r1]
	ldr r3, _080D9BA0  @ =0x00001719
	add r0, r5, r3
	strb r2, [r0]
	ldr r2, _080D9BA4  @ =0x000016FA
	add r0, r5, r2
	mov r3, r8
	strb r3, [r0]
_080D99EA:
	ldr r2, _080D9BA8  @ =0x00000FC2
	add r0, r5, r2
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	beq _080D9A0A
	mov r0, #1
	strb r0, [r1]
	ldr r3, _080D9BA4  @ =0x000016FA
	add r1, r5, r3
	mov r0, #129
	strb r0, [r1]
	ldr r0, _080D9BA0  @ =0x00001719
	add r1, r5, r0
	mov r0, #8
	strb r0, [r1]
_080D9A0A:
	add r0, r4, #0
	bl sub_080D9EF4
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D9A1E
	b _080D9C88
_080D9A1E:
	add r0, r4, #0
	bl sub_080D9D8C
	mov r1, #188
	lsl r1, r1, #4
	add r7, r5, r1
	mov r2, r8
	strh r2, [r7]
	add r0, r4, #0
	bl sub_080D9CB4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D9A3E
	mov r0, #1
	strh r0, [r7]
_080D9A3E:
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C1F70
	add r0, r4, #0
	bl sub_080C6F48
	add r0, r4, #0
	bl sub_080C3540
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080D9A64
	b _080D9BFC
_080D9A64:
	mov r7, #1
	ldrb r0, [r6]
	cmp r0, #0
	bne _080D9A76
	ldr r3, _080D9BAC  @ =0x00000FD2
	add r0, r5, r3
	add r0, r4, r0
	mov r1, #13
	strb r1, [r0]
_080D9A76:
	ldr r1, _080D9BB0  @ =0x00001622
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r2, _080D9BB4  @ =0x00001623
	add r0, r5, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r3, _080D9BB8  @ =0x000016C4
	add r0, r5, r3
	ldrb r2, [r0]
	add r3, r3, #1
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #16
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #34
	bhi _080D9B60
	ldr r1, _080D9BBC  @ =0x00001624
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r2, _080D9BC0  @ =0x00001625
	add r0, r5, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r3, r3, #5
	add r0, r5, r3
	ldrb r2, [r0]
	add r3, r3, #1
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #12
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #35
	bhi _080D9B60
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r0, _080D9BC4  @ =0x000016D5
	add r1, r5, r0
	ldr r0, _080D9BC8  @ =gUnknown_081759C8
	add r0, r2, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bne _080D9B60
	ldr r1, _080D9BCC  @ =0x00001804
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080D9B60
	ldr r3, _080D9BD0  @ =0x00001788
	add r0, r5, r3
	strb r7, [r0]
	ldr r1, _080D9BD4  @ =0x00000F62
	add r0, r5, r1
	add r0, r4, r0
	strb r7, [r0]
	add r3, r3, #128
	add r0, r5, r3
	ldrb r1, [r0]
	mov r0, #2
	and r0, r0, r1
	cmp r0, #0
	beq _080D9B5E
	ldr r0, _080D9BD8  @ =0x00000545
	add r1, r5, r0
	ldr r0, _080D9BDC  @ =gUnknown_081759CC
	add r0, r2, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	and r0, r0, r1
	cmp r0, #0
	beq _080D9B5E
	ldr r1, _080D9BE0  @ =0x000016D6
	add r0, r5, r1
	ldr r3, _080D9BE4  @ =0x000016D7
	add r1, r5, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	orr r0, r0, r1
	cmp r0, #0
	beq _080D9B5E
	mov r0, #1
	eor r2, r2, r0
	ldr r0, _080D9BE8  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080D9BEC  @ =gUnknown_081759C0
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r3, _080D9BF0  @ =0x00000F12
	add r1, r5, r3
	add r1, r4, r1
	ldr r0, _080D9BF4  @ =gUnknown_081759C4
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	mov r0, #1
	mov r8, r0
_080D9B5E:
	mov r7, #0
_080D9B60:
	cmp r7, #0
	beq _080D9C46
	ldr r2, _080D9B98  @ =gRam
	ldr r1, _080D9BD4  @ =0x00000F62
	add r0, r2, r1
	add r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #0
	beq _080D9C46
	mov r1, #0
	strb r1, [r3]
	ldr r3, _080D9BA0  @ =0x00001719
	add r0, r2, r3
	strb r1, [r0]
	add r3, r3, #239
	add r0, r2, r3
	strb r1, [r0]
	sub r3, r3, #128
	add r0, r2, r3
	strb r1, [r0]
	ldr r0, _080D9BF8  @ =0x00001705
	add r2, r2, r0
	ldrb r1, [r2]
	mov r0, #254
	and r0, r0, r1
	strb r0, [r2]
	b _080D9C46
	.byte 0x00
	.byte 0x00
_080D9B98:
	.4byte gRam
_080D9B9C:
	.4byte 0x00000FB2
_080D9BA0:
	.4byte 0x00001719
_080D9BA4:
	.4byte 0x000016FA
_080D9BA8:
	.4byte 0x00000FC2
_080D9BAC:
	.4byte 0x00000FD2
_080D9BB0:
	.4byte 0x00001622
_080D9BB4:
	.4byte 0x00001623
_080D9BB8:
	.4byte 0x000016C4
_080D9BBC:
	.4byte 0x00001624
_080D9BC0:
	.4byte 0x00001625
_080D9BC4:
	.4byte 0x000016D5
_080D9BC8:
	.4byte gUnknown_081759C8
_080D9BCC:
	.4byte 0x00001804
_080D9BD0:
	.4byte 0x00001788
_080D9BD4:
	.4byte 0x00000F62
_080D9BD8:
	.4byte 0x00000545
_080D9BDC:
	.4byte gUnknown_081759CC
_080D9BE0:
	.4byte 0x000016D6
_080D9BE4:
	.4byte 0x000016D7
_080D9BE8:
	.4byte 0x00000F22
_080D9BEC:
	.4byte gUnknown_081759C0
_080D9BF0:
	.4byte 0x00000F12
_080D9BF4:
	.4byte gUnknown_081759C4
_080D9BF8:
	.4byte 0x00001705
_080D9BFC:
	mov r0, #7
	strb r0, [r6]
	bl sub_0809945C
	ldr r1, _080D9C18  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080D9C1C
	bl sub_080AF16C
	b _080D9C46
	.byte 0x00
	.byte 0x00
_080D9C18:
	.4byte 0x00000FD2
_080D9C1C:
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080D9C94  @ =0x00000F22
	add r2, r5, r3
	add r2, r4, r2
	ldr r1, _080D9C98  @ =gUnknown_081759C0
	add r1, r0, r1
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r1, _080D9C9C  @ =0x00000F12
	add r2, r5, r1
	add r2, r4, r2
	ldr r1, _080D9CA0  @ =gUnknown_081759C4
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2]
	mov r2, #1
	mov r8, r2
_080D9C46:
	mov r3, r8
	cmp r3, #0
	beq _080D9C88
	ldr r5, _080D9CA4  @ =gRam
	ldr r1, _080D9CA8  @ =0x00001808
	add r0, r5, r1
	ldrb r1, [r0]
	mov r0, #2
	and r0, r0, r1
	cmp r0, #0
	bne _080D9C60
	bl sub_080AF16C
_080D9C60:
	ldr r2, _080D9CAC  @ =0x00001042
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080D9C88
	ldr r3, _080D9CB0  @ =0x000010E2
	add r0, r5, r3
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080D9C88
	add r0, r4, #0
	mov r1, #58
	bl sub_080CF0AC
	mov r0, #8
	strb r0, [r5]
_080D9C88:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D9C94:
	.4byte 0x00000F22
_080D9C98:
	.4byte gUnknown_081759C0
_080D9C9C:
	.4byte 0x00000F12
_080D9CA0:
	.4byte gUnknown_081759C4
_080D9CA4:
	.4byte gRam
_080D9CA8:
	.4byte 0x00001808
_080D9CAC:
	.4byte 0x00001042
_080D9CB0:
	.4byte 0x000010E2
	THUMB_FUNC_END sub_080D99BC

	THUMB_FUNC_START sub_080D9CB4
sub_080D9CB4: @ 0x080D9CB4
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r0, #1
	mov r8, r0
	mov r4, #3
	ldr r6, _080D9D4C  @ =gRam
	ldr r1, _080D9D50  @ =0x000015E2
	add r1, r1, r6
	mov r9, r1
	ldr r7, _080D9D54  @ =gUnknown_081759D8
_080D9CD0:
	ldr r1, _080D9D58  @ =0x00000ED2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r2, [r0]
	add r1, r1, #32
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #8
	ldr r0, _080D9D5C  @ =gUnknown_081759D4
	lsl r4, r4, #24
	asr r3, r4, #24
	add r0, r3, r0
	orr r2, r2, r1
	ldrb r0, [r0]
	add r2, r2, r0
	mov r1, #150
	lsl r1, r1, #4
	add r0, r6, r1
	strh r2, [r0]
	ldr r1, _080D9D60  @ =0x00000EE2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r2, [r0]
	add r1, r1, #32
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #8
	ldr r0, _080D9D64  @ =gUnknown_081759D0
	add r3, r3, r0
	orr r2, r2, r1
	ldrb r3, [r3]
	add r2, r2, r3
	ldr r1, _080D9D68  @ =0x00000964
	add r0, r6, r1
	strh r2, [r0]
	ldr r1, _080D9D6C  @ =0x000010F2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r0, r5, #0
	bl sub_080C781C
	mov r0, r9
	ldrh r1, [r0]
	ldrb r0, [r7]
	cmp r1, r0
	beq _080D9D70
	ldrb r0, [r7, #1]
	cmp r1, r0
	beq _080D9D70
	ldrb r0, [r7, #2]
	cmp r1, r0
	beq _080D9D70
	ldrb r0, [r7, #3]
	cmp r1, r0
	beq _080D9D70
	mov r1, #0
	mov r8, r1
	b _080D9D7C
	.byte 0x00
	.byte 0x00
_080D9D4C:
	.4byte gRam
_080D9D50:
	.4byte 0x000015E2
_080D9D54:
	.4byte gUnknown_081759D8
_080D9D58:
	.4byte 0x00000ED2
_080D9D5C:
	.4byte gUnknown_081759D4
_080D9D60:
	.4byte 0x00000EE2
_080D9D64:
	.4byte gUnknown_081759D0
_080D9D68:
	.4byte 0x00000964
_080D9D6C:
	.4byte 0x000010F2
_080D9D70:
	mov r1, #255
	lsl r1, r1, #24
	add r0, r4, r1
	lsr r4, r0, #24
	cmp r0, #0
	bge _080D9CD0
_080D9D7C:
	mov r0, r8
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080D9CB4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080D9D8C
sub_080D9D8C: @ 0x080D9D8C
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	mov r1, #15
	ldr r5, _080D9E98  @ =gRam
	ldr r0, _080D9E9C  @ =0x00000968
	add r7, r5, r0
	ldr r2, _080D9EA0  @ =0x00000961
	add r2, r2, r5
	mov r9, r2
_080D9DA8:
	lsl r0, r1, #24
	asr r4, r0, #24
	ldr r3, _080D9EA4  @ =0x00000FF2
	add r1, r5, r3
	add r1, r4, r1
	ldrb r1, [r1]
	add r6, r0, #0
	cmp r1, #28
	beq _080D9E7E
	ldr r1, _080D9EA8  @ =0x000015DC
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, r4
	beq _080D9E7E
	ldr r2, _080D9EAC  @ =0x00000996
	add r0, r5, r2
	ldrb r0, [r0]
	eor r0, r0, r4
	mov r1, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080D9E7E
	sub r3, r3, #80
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #8
	bls _080D9E7E
	ldr r1, _080D9EB0  @ =0x00000EE2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r7]
	ldr r2, _080D9EB4  @ =0x00000F02
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r3, _080D9EB8  @ =0x00000969
	add r0, r5, r3
	strb r1, [r0]
	ldr r1, _080D9EBC  @ =0x00000ED2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	add r3, r3, #3
	add r2, r5, r3
	strb r0, [r2]
	add r1, r1, #32
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r3, r3, #1
	add r0, r5, r3
	strb r1, [r0]
	ldr r1, _080D9EC0  @ =0x00001622
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r3, _080D9EC4  @ =0x00001623
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r7]
	sub r1, r1, r0
	add r1, r1, #12
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #23
	bhi _080D9E7E
	ldr r1, _080D9EC8  @ =0x00001624
	add r0, r5, r1
	ldrb r1, [r0]
	add r3, r3, #2
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r1, r1, r0
	add r1, r1, #12
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #35
	bhi _080D9E7E
	ldr r1, _080D9ECC  @ =0x00001072
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	mov r0, r8
	mov r1, #32
	bl sub_080C2DCC
	ldr r2, _080D9ED0  @ =0x00001102
	add r1, r5, r2
	add r1, r4, r1
	mov r3, #150
	lsl r3, r3, #4
	add r0, r5, r3
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080D9ED4  @ =0x00001112
	add r0, r5, r1
	add r0, r4, r0
	mov r2, r9
	ldrb r1, [r2]
	strb r1, [r0]
_080D9E7E:
	mov r3, #255
	lsl r3, r3, #24
	add r0, r6, r3
	lsr r1, r0, #24
	cmp r0, #0
	bge _080D9DA8
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D9E98:
	.4byte gRam
_080D9E9C:
	.4byte 0x00000968
_080D9EA0:
	.4byte 0x00000961
_080D9EA4:
	.4byte 0x00000FF2
_080D9EA8:
	.4byte 0x000015DC
_080D9EAC:
	.4byte 0x00000996
_080D9EB0:
	.4byte 0x00000EE2
_080D9EB4:
	.4byte 0x00000F02
_080D9EB8:
	.4byte 0x00000969
_080D9EBC:
	.4byte 0x00000ED2
_080D9EC0:
	.4byte 0x00001622
_080D9EC4:
	.4byte 0x00001623
_080D9EC8:
	.4byte 0x00001624
_080D9ECC:
	.4byte 0x00001072
_080D9ED0:
	.4byte 0x00001102
_080D9ED4:
	.4byte 0x00001112
	THUMB_FUNC_END sub_080D9D8C

	THUMB_FUNC_START sub_080D9ED8
sub_080D9ED8: @ 0x080D9ED8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D9EEC  @ =gRam
	ldr r2, _080D9EF0  @ =0x00000ED2
	add r1, r1, r2
	add r0, r0, r1
	ldrb r1, [r0]
	add r1, r1, #7
	strb r1, [r0]
	bx lr
_080D9EEC:
	.4byte gRam
_080D9EF0:
	.4byte 0x00000ED2
	THUMB_FUNC_END sub_080D9ED8

	THUMB_FUNC_START sub_080D9EF4
sub_080D9EF4: @ 0x080D9EF4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080D9F10  @ =gRam
	ldr r2, _080D9F14  @ =0x0000096C
	add r1, r1, r2
	mov r2, #3
	strh r2, [r1]
	ldr r1, _080D9F18  @ =gUnknown_081759DC
	bl sub_080C94D0
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080D9F10:
	.4byte gRam
_080D9F14:
	.4byte 0x0000096C
_080D9F18:
	.4byte gUnknown_081759DC
	THUMB_FUNC_END sub_080D9EF4

	THUMB_FUNC_START sub_080D9F1C
sub_080D9F1C: @ 0x080D9F1C
	push {r4-r6,lr}
	mov r6, r8
	push {r6}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r5, _080D9FA8  @ =gRam
	ldr r0, _080D9FAC  @ =0x00000EE2
	add r2, r5, r0
	add r2, r1, r2
	ldrb r0, [r2]
	add r0, r0, #8
	mov r3, #0
	mov r8, r3
	strb r0, [r2]
	ldr r0, _080D9FB0  @ =0x00000ED2
	add r6, r5, r0
	add r2, r1, r6
	ldrb r0, [r2]
	add r0, r0, #6
	strb r0, [r2]
	mov r0, #193
	bl sub_080CA538
	add r4, r0, #0
	ldr r1, _080D9FB4  @ =0x00000F62
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r2, _080D9FB8  @ =0x00001172
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	add r6, r4, r6
	ldr r3, _080D9FBC  @ =0x00000964
	add r0, r5, r3
	ldrb r0, [r0]
	add r0, r0, #40
	strb r0, [r6]
	ldr r1, _080D9FC0  @ =0x00001012
	add r0, r5, r1
	add r0, r4, r0
	mov r2, r8
	strb r2, [r0]
	ldr r3, _080D9FC4  @ =0x00001122
	add r0, r5, r3
	add r4, r4, r0
	mov r0, #12
	strb r0, [r4]
	ldr r0, _080D9FC8  @ =0x00000AA8
	add r5, r5, r0
	ldrh r1, [r5]
	mov r0, #128
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	beq _080D9F9E
	ldr r0, _080D9FCC  @ =0x0000BFFF
	and r0, r0, r1
	strh r0, [r5]
_080D9F9E:
	pop {r3}
	mov r8, r3
	pop {r4-r6}
	pop {r0}
	bx r0
_080D9FA8:
	.4byte gRam
_080D9FAC:
	.4byte 0x00000EE2
_080D9FB0:
	.4byte 0x00000ED2
_080D9FB4:
	.4byte 0x00000F62
_080D9FB8:
	.4byte 0x00001172
_080D9FBC:
	.4byte 0x00000964
_080D9FC0:
	.4byte 0x00001012
_080D9FC4:
	.4byte 0x00001122
_080D9FC8:
	.4byte 0x00000AA8
_080D9FCC:
	.4byte 0x0000BFFF
	THUMB_FUNC_END sub_080D9F1C

	THUMB_FUNC_START sub_080D9FD0
sub_080D9FD0: @ 0x080D9FD0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r3, r4, #0
	ldr r6, _080DA044  @ =gRam
	ldr r1, _080DA048  @ =0x00000F82
	add r0, r6, r1
	add r0, r4, r0
	ldrb r5, [r0]
	cmp r5, #0
	bne _080DA05C
	add r0, r4, #0
	bl sub_080DA660
	add r0, r4, #0
	bl sub_080DA390
	ldr r2, _080DA04C  @ =0x000010D2
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DA020
	ldr r1, _080DA050  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	ldr r2, _080DA054  @ =0x00000F72
	add r0, r6, r2
	add r0, r4, r0
	strb r5, [r0]
	add r1, r1, #64
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	add r2, r2, #80
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
_080DA020:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DA080
	ldr r1, _080DA058  @ =gUnknown_081759FC
	ldr r5, _080DA050  @ =0x00000F52
	add r0, r6, r5
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	b _080DA080
_080DA044:
	.4byte gRam
_080DA048:
	.4byte 0x00000F82
_080DA04C:
	.4byte 0x000010D2
_080DA050:
	.4byte 0x00000F52
_080DA054:
	.4byte 0x00000F72
_080DA058:
	.4byte gUnknown_081759FC
_080DA05C:
	ldr r1, _080DA088  @ =0x00000FC2
	add r0, r6, r1
	add r1, r4, r0
	ldrb r2, [r1]
	cmp r2, #0
	bne _080DA070
	ldr r5, _080DA08C  @ =0x00000FA2
	add r0, r6, r5
	add r0, r4, r0
	strb r2, [r0]
_080DA070:
	ldrb r1, [r1]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080DA080
	add r0, r3, #0
	bl sub_080DA660
_080DA080:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DA088:
	.4byte 0x00000FC2
_080DA08C:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080D9FD0

	THUMB_FUNC_START sub_080DA090
sub_080DA090: @ 0x080DA090
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080DA0C8  @ =gRam
	ldr r1, _080DA0CC  @ =0x00000F72
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	ldr r3, _080DA0D0  @ =0x00001151
	add r0, r2, r3
	ldrb r0, [r0]
	add r5, r2, #0
	cmp r0, #15
	bhi _080DA0DC
	ldr r0, _080DA0D4  @ =0x00000F92
	add r2, r5, r0
	add r2, r4, r2
	ldr r3, _080DA0D8  @ =gUnknown_08175A18
	lsl r0, r1, #24
	lsr r0, r0, #29
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	b _080DA0E6
_080DA0C8:
	.4byte gRam
_080DA0CC:
	.4byte 0x00000F72
_080DA0D0:
	.4byte 0x00001151
_080DA0D4:
	.4byte 0x00000F92
_080DA0D8:
	.4byte gUnknown_08175A18
_080DA0DC:
	ldr r1, _080DA154  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
_080DA0E6:
	ldr r3, _080DA158  @ =0x00000F72
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080DA14C
	ldr r0, _080DA15C  @ =0x00000FA1
	add r1, r5, r0
	mov r0, #1
	strb r0, [r1]
	ldr r3, _080DA160  @ =0x00001151
	add r1, r5, r3
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #22
	bne _080DA14C
	mov r0, #90
	mov r1, #0
	bl sub_0812A324
	ldr r0, _080DA164  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080DA168  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r3, _080DA16C  @ =0x00001052
	add r0, r5, r3
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080DA170  @ =0x00001002
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	neg r1, r1
	strb r1, [r0]
	ldr r3, _080DA174  @ =0x00001644
	add r1, r5, r3
	mov r0, #240
	strb r0, [r1]
_080DA14C:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DA154:
	.4byte 0x00000F92
_080DA158:
	.4byte 0x00000F72
_080DA15C:
	.4byte 0x00000FA1
_080DA160:
	.4byte 0x00001151
_080DA164:
	.4byte 0x00000F52
_080DA168:
	.4byte 0x00000FC2
_080DA16C:
	.4byte 0x00001052
_080DA170:
	.4byte 0x00001002
_080DA174:
	.4byte 0x00001644
	THUMB_FUNC_END sub_080DA090

	THUMB_FUNC_START sub_080DA178
sub_080DA178: @ 0x080DA178
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	mov r0, #3
	mov r1, #176
	bl sub_081337C8
	ldr r5, _080DA1BC  @ =gRam
	ldr r0, _080DA1C0  @ =0x00001644
	add r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #15
	bhi _080DA198
	mov r0, #16
	strb r0, [r1]
_080DA198:
	ldr r1, _080DA1C4  @ =0x00000FC2
	add r0, r5, r1
	add r3, r4, r0
	ldrb r2, [r3]
	lsl r1, r2, #24
	lsr r0, r1, #24
	cmp r0, #0
	bne _080DA1CC
	ldr r1, _080DA1C8  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #80
	strb r0, [r3]
	b _080DA1F4
	.byte 0x00
	.byte 0x00
_080DA1BC:
	.4byte gRam
_080DA1C0:
	.4byte 0x00001644
_080DA1C4:
	.4byte 0x00000FC2
_080DA1C8:
	.4byte 0x00000F52
_080DA1CC:
	cmp r0, #120
	beq _080DA1F4
	cmp r1, #0
	blt _080DA1F4
	mov r0, #3
	and r0, r0, r2
	cmp r0, #0
	bne _080DA1F4
	mov r0, #17
	mov r1, #0
	bl sub_0812A324
	ldr r1, _080DA1FC  @ =0x00001052
	add r0, r5, r1
	add r1, r6, r0
	ldrb r0, [r1]
	cmp r0, #14
	beq _080DA1F4
	add r0, r0, #4
	strb r0, [r1]
_080DA1F4:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DA1FC:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DA178

	THUMB_FUNC_START sub_080DA200
sub_080DA200: @ 0x080DA200
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r8, r5
	mov r0, #3
	mov r1, #176
	bl sub_081337C8
	ldr r6, _080DA264  @ =gRam
	ldr r0, _080DA268  @ =0x00001644
	add r2, r6, r0
	ldrb r0, [r2]
	cmp r0, #15
	bhi _080DA224
	mov r0, #16
	strb r0, [r2]
_080DA224:
	ldr r1, _080DA26C  @ =0x00000FC2
	add r0, r6, r1
	add r7, r5, r0
	ldrb r1, [r7]
	add r4, r1, #0
	cmp r4, #0
	bne _080DA27C
	strb r4, [r2]
	bl sub_08132448
	ldr r2, _080DA270  @ =0x00000FD1
	add r1, r6, r2
	mov r0, #19
	strb r0, [r1]
	ldr r0, _080DA274  @ =0x00000F52
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #80
	strb r0, [r7]
	ldr r1, _080DA278  @ =0x00001052
	add r0, r6, r1
	add r0, r5, r0
	strb r4, [r0]
	mov r0, #76
	mov r1, #0
	bl sub_0812A324
	b _080DA296
	.byte 0x00
	.byte 0x00
_080DA264:
	.4byte gRam
_080DA268:
	.4byte 0x00001644
_080DA26C:
	.4byte 0x00000FC2
_080DA270:
	.4byte 0x00000FD1
_080DA274:
	.4byte 0x00000F52
_080DA278:
	.4byte 0x00001052
_080DA27C:
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080DA296
	ldr r2, _080DA2A0  @ =0x00001002
	add r0, r6, r2
	mov r2, r8
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #9
	beq _080DA296
	add r0, r0, #2
	strb r0, [r1]
_080DA296:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080DA2A0:
	.4byte 0x00001002
	THUMB_FUNC_END sub_080DA200

	THUMB_FUNC_START sub_080DA2A4
sub_080DA2A4: @ 0x080DA2A4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	ldr r5, _080DA300  @ =gRam
	ldr r1, _080DA304  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #1
	bne _080DA2C2
	mov r0, #91
	mov r1, #0
	bl sub_0812A324
_080DA2C2:
	ldr r1, _080DA308  @ =0x00000F12
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #224
	strb r1, [r0]
	add r0, r4, #0
	bl Sprite3_MoveVert
	ldr r1, _080DA30C  @ =0x00000ED2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #47
	bhi _080DA2F4
	ldr r1, _080DA310  @ =0x000010E2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #66
	strb r1, [r0]
	ldr r0, _080DA314  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080DA2F4:
	add r0, r6, #0
	bl sub_080DA318
	pop {r4-r6}
	pop {r0}
	bx r0
_080DA300:
	.4byte gRam
_080DA304:
	.4byte 0x00000FC2
_080DA308:
	.4byte 0x00000F12
_080DA30C:
	.4byte 0x00000ED2
_080DA310:
	.4byte 0x000010E2
_080DA314:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DA2A4

	THUMB_FUNC_START sub_080DA318
sub_080DA318: @ 0x080DA318
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r4, #1
	neg r4, r4
	ldr r5, _080DA378  @ =gRam
	ldr r1, _080DA37C  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080DA36E
	mov r0, #193
	add r1, r6, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080DA36E
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080DA380  @ =0x00000F92
	add r0, r5, r2
	add r1, r4, r0
	add r0, r6, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080DA384  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	ldr r2, _080DA388  @ =0x00001172
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r2, _080DA38C  @ =0x00000F82
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
_080DA36E:
	add r0, r4, #0
	pop {r4-r6}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080DA378:
	.4byte gRam
_080DA37C:
	.4byte 0x00000996
_080DA380:
	.4byte 0x00000F92
_080DA384:
	.4byte 0x00000FC2
_080DA388:
	.4byte 0x00001172
_080DA38C:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080DA318

	THUMB_FUNC_START sub_080DA390
sub_080DA390: @ 0x080DA390
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r0, #56
	bl sub_080CF370
	ldr r0, _080DA464  @ =gUnknown_08175A9C
	str r0, [sp, #4]
	ldr r5, _080DA468  @ =gRam
	ldr r1, _080DA46C  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	mov r0, #2
	and r0, r0, r1
	cmp r0, #0
	bne _080DA3BE
	ldr r0, _080DA470  @ =gUnknown_08175AD4
	str r0, [sp, #4]
_080DA3BE:
	ldr r1, _080DA474  @ =0x00001052
	add r0, r5, r1
	add r0, r4, r0
	ldrb r3, [r0]
	cmp r3, #0
	beq _080DA452
	ldr r2, _080DA478  @ =gUnknown_08175B1A
	sub r1, r1, #80
	add r0, r5, r1
	add r4, r4, r0
	ldrb r1, [r4]
	add r0, r1, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r0, r0, r2
	ldrb r7, [r0]
	sub r0, r3, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	cmp r8, r1
	beq _080DA452
	mov r9, r5
	mov r10, r4
_080DA3EE:
	ldr r0, _080DA47C  @ =gUnknown_03003E74
	lsr r6, r7, #2
	ldrh r0, [r0]
	add r0, r0, r6
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r9
	ldr r1, [sp, #4]
	add r4, r1, r7
	mov r1, #0
	ldrsb r1, [r4, r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080DA480  @ =0x00000964
	add r2, r2, r9
	ldrh r3, [r2]
	sub r3, r3, #8
	mov r2, #1
	ldrsb r2, [r4, r2]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldrb r3, [r4, #2]
	ldrb r5, [r4, #3]
	mov r4, #49
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	ldr r4, _080DA484  @ =gUnknown_08175B0C
	add r6, r4, r6
	ldrb r4, [r6]
	str r4, [sp]
	bl sub_080C6004
	add r0, r7, #4
	lsl r0, r0, #16
	lsr r7, r0, #16
	mov r0, r8
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	mov r0, r10
	ldrb r0, [r0]
	cmp r8, r0
	bne _080DA3EE
_080DA452:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DA464:
	.4byte gUnknown_08175A9C
_080DA468:
	.4byte gRam
_080DA46C:
	.4byte 0x00000996
_080DA470:
	.4byte gUnknown_08175AD4
_080DA474:
	.4byte 0x00001052
_080DA478:
	.4byte gUnknown_08175B1A
_080DA47C:
	.4byte gUnknown_03003E74
_080DA480:
	.4byte 0x00000964
_080DA484:
	.4byte gUnknown_08175B0C
	THUMB_FUNC_END sub_080DA390

	THUMB_FUNC_START sub_080DA488
sub_080DA488: @ 0x080DA488
	push {r4-r6,lr}
	mov r6, r10
	mov r5, r9
	mov r4, r8
	push {r4-r6}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	mov r0, #8
	bl sub_080CF370
	ldr r3, _080DA534  @ =gRam
	ldr r1, _080DA538  @ =0x00001142
	add r0, r3, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #30
	bls _080DA4B0
	mov r1, #31
_080DA4B0:
	ldr r2, _080DA53C  @ =0x00000ED2
	add r0, r3, r2
	add r0, r4, r0
	ldrb r2, [r0]
	ldr r5, _080DA540  @ =0x00000EF2
	add r0, r3, r5
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r4, _080DA544  @ =0x00000958
	add r0, r3, r4
	ldrh r0, [r0]
	sub r2, r2, r0
	ldr r5, _080DA548  @ =0x00000964
	add r5, r5, r3
	mov r10, r5
	strh r2, [r5]
	ldr r6, _080DA54C  @ =gUnknown_03003E74
	ldrh r0, [r6]
	add r4, r4, #8
	add r4, r4, r3
	mov r8, r4
	ldr r3, _080DA550  @ =gUnknown_08175B48
	lsr r1, r1, #1
	add r1, r1, r3
	ldrb r5, [r1]
	ldrh r1, [r4]
	add r1, r1, r5
	lsl r1, r1, #16
	lsr r1, r1, #16
	add r2, r2, #7
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080DA554  @ =0x000024CC
	mov r9, r3
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	ldrh r0, [r6]
	add r0, r0, #1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, r8
	ldrh r1, [r2]
	sub r1, r1, r5
	lsl r1, r1, #16
	lsr r1, r1, #16
	mov r3, r10
	ldrh r2, [r3]
	add r2, r2, #7
	lsl r2, r2, #16
	lsr r2, r2, #16
	str r4, [sp]
	mov r3, r9
	bl sub_080C6368
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r6}
	pop {r0}
	bx r0
_080DA534:
	.4byte gRam
_080DA538:
	.4byte 0x00001142
_080DA53C:
	.4byte 0x00000ED2
_080DA540:
	.4byte 0x00000EF2
_080DA544:
	.4byte 0x00000958
_080DA548:
	.4byte 0x00000964
_080DA54C:
	.4byte gUnknown_03003E74
_080DA550:
	.4byte gUnknown_08175B48
_080DA554:
	.4byte 0x000024CC
	THUMB_FUNC_END sub_080DA488

	THUMB_FUNC_START sub_080DA558
sub_080DA558: @ 0x080DA558
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DA578  @ =gUnknown_081759F4
	ldr r1, _080DA57C  @ =gRam
	ldr r3, _080DA580  @ =0x00000F62
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080DA578:
	.4byte gUnknown_081759F4
_080DA57C:
	.4byte gRam
_080DA580:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080DA558

	THUMB_FUNC_START sub_080DA584
sub_080DA584: @ 0x080DA584
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080DA5BC  @ =gRam
	ldr r1, _080DA5C0  @ =0x00000FC2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DA5B4
	ldr r0, _080DA5C4  @ =0x00001770
	add r1, r4, r0
	mov r0, #1
	strb r0, [r1]
	mov r0, #160
	lsl r0, r0, #1
	bl sub_080C95C0
	ldr r0, _080DA5C8  @ =0x00000F52
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080DA5B4:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DA5BC:
	.4byte gRam
_080DA5C0:
	.4byte 0x00000FC2
_080DA5C4:
	.4byte 0x00001770
_080DA5C8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DA584

	THUMB_FUNC_START sub_080DA5CC
sub_080DA5CC: @ 0x080DA5CC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080DA5FC  @ =gRam
	ldr r1, _080DA600  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080DA5F6
	ldr r0, _080DA604  @ =0x00000141
	bl sub_080C95C0
	ldr r0, _080DA608  @ =0x00000F52
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #2
	strb r0, [r5]
_080DA5F6:
	pop {r4-r6}
	pop {r0}
	bx r0
_080DA5FC:
	.4byte gRam
_080DA600:
	.4byte 0x00000FC2
_080DA604:
	.4byte 0x00000141
_080DA608:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DA5CC

	THUMB_FUNC_START sub_080DA60C
sub_080DA60C: @ 0x080DA60C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r4, _080DA64C  @ =gRam
	ldr r1, _080DA650  @ =0x000010E2
	add r0, r4, r1
	add r0, r2, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080DA644
	ldr r3, _080DA654  @ =0x00001770
	add r0, r4, r3
	strb r1, [r0]
	ldr r3, _080DA658  @ =0x00000FA2
	add r0, r4, r3
	add r0, r2, r0
	strb r1, [r0]
	add r0, r2, #0
	bl sub_080CB9D4
	ldr r0, _080DA65C  @ =0x00000AA8
	add r2, r4, r0
	ldrh r1, [r2]
	mov r3, #128
	lsl r3, r3, #7
	add r0, r3, #0
	orr r0, r0, r1
	strh r0, [r2]
_080DA644:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DA64C:
	.4byte gRam
_080DA650:
	.4byte 0x000010E2
_080DA654:
	.4byte 0x00001770
_080DA658:
	.4byte 0x00000FA2
_080DA65C:
	.4byte 0x00000AA8
	THUMB_FUNC_END sub_080DA60C

	THUMB_FUNC_START sub_080DA660
sub_080DA660: @ 0x080DA660
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r3, _080DA6B0  @ =gRam
	ldr r1, _080DA6B4  @ =0x000010E2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080DA6AA
	ldr r1, _080DA6B8  @ =0x00000F82
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DA68C
	ldr r1, _080DA6BC  @ =gUnknown_03003E74
	mov r0, #64
	strh r0, [r1]
_080DA68C:
	ldr r1, _080DA6C0  @ =0x00000F92
	add r0, r3, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #5
	ldr r0, _080DA6C4  @ =gUnknown_08175A1C
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #4
	bl sub_080C9480
	add r0, r4, #0
	mov r1, #18
	bl sub_080C57F8
_080DA6AA:
	pop {r4}
	pop {r0}
	bx r0
_080DA6B0:
	.4byte gRam
_080DA6B4:
	.4byte 0x000010E2
_080DA6B8:
	.4byte 0x00000F82
_080DA6BC:
	.4byte gUnknown_03003E74
_080DA6C0:
	.4byte 0x00000F92
_080DA6C4:
	.4byte gUnknown_08175A1C
	THUMB_FUNC_END sub_080DA660

	THUMB_FUNC_START sub_080DA6C8
sub_080DA6C8: @ 0x080DA6C8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080DA6D8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080DA6C8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080DA6D8
sub_080DA6D8: @ 0x080DA6D8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r7, #1
	ldr r6, _080DA73C  @ =gRam
	ldr r1, _080DA740  @ =0x00000FC2
	add r0, r6, r1
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080DA70C
	add r0, r5, #0
	bl sub_080DA750
	ldrb r0, [r4]
	cmp r0, #1
	bne _080DA704
	ldr r1, _080DA744  @ =0x00000FA2
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
_080DA704:
	ldrb r0, [r4]
	cmp r0, #11
	bhi _080DA70C
	mov r7, #0
_080DA70C:
	cmp r7, #0
	beq _080DA734
	mov r0, #8
	bl sub_080CF370
	ldr r0, _080DA73C  @ =gRam
	ldr r1, _080DA748  @ =0x00000F92
	add r0, r0, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080DA74C  @ =gUnknown_08175B28
	add r1, r1, r0
	add r0, r5, #0
	mov r2, #2
	bl sub_080C9480
	add r0, r5, #0
	bl sub_080DA488
_080DA734:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DA73C:
	.4byte gRam
_080DA740:
	.4byte 0x00000FC2
_080DA744:
	.4byte 0x00000FA2
_080DA748:
	.4byte 0x00000F92
_080DA74C:
	.4byte gUnknown_08175B28
	THUMB_FUNC_END sub_080DA6D8

	THUMB_FUNC_START sub_080DA750
sub_080DA750: @ 0x080DA750
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r0, #8
	bl sub_080CF370
	ldr r0, _080DA780  @ =gRam
	ldr r1, _080DA784  @ =0x00000FC2
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsr r1, r1, #2
	lsl r1, r1, #4
	ldr r0, _080DA788  @ =gUnknown_08175B58
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #2
	bl sub_080C9480
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DA780:
	.4byte gRam
_080DA784:
	.4byte 0x00000FC2
_080DA788:
	.4byte gUnknown_08175B58
	THUMB_FUNC_END sub_080DA750

	THUMB_FUNC_START sub_080DA78C
sub_080DA78C: @ 0x080DA78C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080DB1CC
	ldr r6, _080DA804  @ =gRam
	ldr r1, _080DA808  @ =0x000010D2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DA7C6
	ldr r2, _080DA80C  @ =0x00000FC2
	add r0, r6, r2
	add r0, r4, r0
	mov r2, #0
	mov r1, #32
	strb r1, [r0]
	ldr r1, _080DA810  @ =0x00000F92
	add r0, r6, r1
	add r0, r4, r0
	strb r2, [r0]
	ldr r2, _080DA814  @ =0x00000FB2
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
_080DA7C6:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DA7FE
	add r0, r5, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DA7FE
	ldr r1, _080DA818  @ =0x00001172
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080DA81C  @ =gUnknown_08175BAC
	ldr r2, _080DA820  @ =0x00000F52
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
_080DA7FE:
	pop {r4-r6}
	pop {r0}
	bx r0
_080DA804:
	.4byte gRam
_080DA808:
	.4byte 0x000010D2
_080DA80C:
	.4byte 0x00000FC2
_080DA810:
	.4byte 0x00000F92
_080DA814:
	.4byte 0x00000FB2
_080DA818:
	.4byte 0x00001172
_080DA81C:
	.4byte gUnknown_08175BAC
_080DA820:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DA78C

	THUMB_FUNC_START sub_080DA824
sub_080DA824: @ 0x080DA824
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DA8F0  @ =gRam
	ldr r1, _080DA8F4  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r1, [r6]
	cmp r1, #0
	bne _080DA844
	ldr r2, _080DA8F8  @ =0x00000FA2
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	bl sub_08075804
_080DA844:
	ldrb r0, [r6]
	cmp r0, #15
	bhi _080DA884
	ldr r3, _080DA8FC  @ =0x000009D4
	add r1, r5, r3
	mov r0, #127
	strb r0, [r1]
	ldr r0, _080DA900  @ =0x000009B4
	add r1, r5, r0
	mov r0, #6
	strb r0, [r1]
	ldr r2, _080DA904  @ =0x000009B5
	add r1, r5, r2
	mov r0, #16
	strb r0, [r1]
	ldr r3, _080DA908  @ =0x0000051E
	add r1, r5, r3
	mov r0, #64
	strh r0, [r1]
	ldr r0, _080DA90C  @ =0x0000051A
	add r1, r5, r0
	mov r0, #63
	strh r0, [r1]
	ldr r1, _080DA910  @ =0x00000998
	add r0, r5, r1
	mov r1, #7
	strb r1, [r0]
	sub r2, r2, #28
	add r0, r5, r2
	strb r1, [r0]
	bl sub_08133620
_080DA884:
	ldr r3, _080DA914  @ =0x00001152
	add r0, r5, r3
	add r3, r4, r0
	ldrb r1, [r3]
	add r0, r1, #0
	cmp r0, #255
	beq _080DA896
	add r0, r1, #1
	strb r0, [r3]
_080DA896:
	ldr r0, _080DA918  @ =0x00001162
	add r1, r5, r0
	add r1, r4, r1
	ldrb r2, [r1]
	ldrb r0, [r3]
	add r0, r2, r0
	strb r0, [r1]
	ldrb r0, [r3]
	add r2, r2, r0
	mov r0, #128
	lsl r0, r0, #1
	and r2, r2, r0
	cmp r2, #0
	beq _080DA8D2
	ldr r1, _080DA91C  @ =0x00001052
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #7
	bne _080DA8D2
	mov r0, #0
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #106
	bl sub_080CF0AC
_080DA8D2:
	ldr r0, _080DA8F0  @ =gRam
	ldr r2, _080DA920  @ =0x00000F92
	add r1, r0, r2
	add r1, r4, r1
	ldr r2, _080DA924  @ =gUnknown_08175BD8
	ldr r3, _080DA91C  @ =0x00001052
	add r0, r0, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r4-r6}
	pop {r0}
	bx r0
_080DA8F0:
	.4byte gRam
_080DA8F4:
	.4byte 0x00000FC2
_080DA8F8:
	.4byte 0x00000FA2
_080DA8FC:
	.4byte 0x000009D4
_080DA900:
	.4byte 0x000009B4
_080DA904:
	.4byte 0x000009B5
_080DA908:
	.4byte 0x0000051E
_080DA90C:
	.4byte 0x0000051A
_080DA910:
	.4byte 0x00000998
_080DA914:
	.4byte 0x00001152
_080DA918:
	.4byte 0x00001162
_080DA91C:
	.4byte 0x00001052
_080DA920:
	.4byte 0x00000F92
_080DA924:
	.4byte gUnknown_08175BD8
	THUMB_FUNC_END sub_080DA824

	THUMB_FUNC_START sub_080DA928
sub_080DA928: @ 0x080DA928
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DA974  @ =gRam
	ldr r0, _080DA978  @ =0x00001649
	add r1, r5, r0
	mov r6, #0
	mov r0, #2
	strb r0, [r1]
	ldr r1, _080DA97C  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
	sub r1, r1, #192
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #63
	bhi _080DA98C
	cmp r0, #1
	bne _080DA960
	add r0, r4, #0
	bl sub_080DB5C4
	ldr r0, _080DA980  @ =0x00000A3C
	add r1, r5, r0
	mov r0, #27
	strh r0, [r1]
_080DA960:
	ldr r1, _080DA984  @ =0x000010C2
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
	ldr r1, _080DA988  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #17
	b _080DA998
	.byte 0x00
	.byte 0x00
_080DA974:
	.4byte gRam
_080DA978:
	.4byte 0x00001649
_080DA97C:
	.4byte 0x00001082
_080DA980:
	.4byte 0x00000A3C
_080DA984:
	.4byte 0x000010C2
_080DA988:
	.4byte 0x00000F92
_080DA98C:
	ldr r1, _080DA9A0  @ =0x000010C2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r2, #224
	orr r1, r1, r2
_080DA998:
	strb r1, [r0]
	pop {r4-r6}
	pop {r0}
	bx r0
_080DA9A0:
	.4byte 0x000010C2
	THUMB_FUNC_END sub_080DA928

	THUMB_FUNC_START sub_080DA9A4
sub_080DA9A4: @ 0x080DA9A4
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080DAA64  @ =gRam
	ldr r1, _080DAA68  @ =0x00001082
	add r0, r3, r1
	add r0, r4, r0
	mov r6, #0
	strb r6, [r0]
	ldr r2, _080DAA6C  @ =0x00000EE2
	add r0, r3, r2
	ldrb r0, [r0]
	ldr r5, _080DAA70  @ =0x00000968
	add r2, r3, r5
	strb r0, [r2]
	ldr r7, _080DAA74  @ =0x00000F02
	add r0, r3, r7
	ldrb r1, [r0]
	add r5, r5, #1
	add r0, r3, r5
	strb r1, [r0]
	sub r7, r7, #48
	add r0, r3, r7
	ldrb r0, [r0]
	ldr r1, _080DAA78  @ =0x0000096C
	add r5, r3, r1
	strb r0, [r5]
	add r7, r7, #32
	add r0, r3, r7
	ldrb r1, [r0]
	ldr r7, _080DAA7C  @ =0x0000096D
	add r0, r3, r7
	strb r1, [r0]
	ldr r1, _080DAA80  @ =0x00001622
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r7, _080DAA84  @ =0x00001623
	add r0, r3, r7
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r1, r1, r0
	add r1, r1, #4
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #7
	bhi _080DAA2A
	ldr r1, _080DAA88  @ =0x00001624
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r2, _080DAA8C  @ =0x00001625
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r5]
	sub r1, r1, r0
	add r1, r1, #4
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #7
	bhi _080DAA2A
	ldr r5, _080DAA90  @ =0x00000FA2
	add r0, r3, r5
	add r0, r4, r0
	strb r6, [r0]
_080DAA2A:
	add r0, r4, #0
	mov r1, #32
	bl sub_080C2DCC
	ldr r2, _080DAA64  @ =gRam
	ldr r7, _080DAA94  @ =0x00000F12
	add r0, r2, r7
	add r0, r4, r0
	mov r3, #150
	lsl r3, r3, #4
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r5, _080DAA98  @ =0x00000F22
	add r0, r2, r5
	add r0, r4, r0
	ldr r7, _080DAA9C  @ =0x00000961
	add r2, r2, r7
	ldrb r1, [r2]
	strb r1, [r0]
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080DA318
	pop {r4-r7}
	pop {r0}
	bx r0
_080DAA64:
	.4byte gRam
_080DAA68:
	.4byte 0x00001082
_080DAA6C:
	.4byte 0x00000EE2
_080DAA70:
	.4byte 0x00000968
_080DAA74:
	.4byte 0x00000F02
_080DAA78:
	.4byte 0x0000096C
_080DAA7C:
	.4byte 0x0000096D
_080DAA80:
	.4byte 0x00001622
_080DAA84:
	.4byte 0x00001623
_080DAA88:
	.4byte 0x00001624
_080DAA8C:
	.4byte 0x00001625
_080DAA90:
	.4byte 0x00000FA2
_080DAA94:
	.4byte 0x00000F12
_080DAA98:
	.4byte 0x00000F22
_080DAA9C:
	.4byte 0x00000961
	THUMB_FUNC_END sub_080DA9A4

	THUMB_FUNC_START sub_080DAAA0
sub_080DAAA0: @ 0x080DAAA0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r6, r0, #0
	ldr r4, _080DAB1C  @ =gRam
	ldr r1, _080DAB20  @ =0x00000FC2
	add r0, r4, r1
	add r7, r6, r0
	ldrb r5, [r7]
	cmp r5, #0
	bne _080DAB14
	ldr r2, _080DAB24  @ =0x000009AC
	add r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #26
	beq _080DAAC8
	mov r0, #162
	lsl r0, r0, #1
	bl sub_080C95C0
_080DAAC8:
	ldr r0, _080DAB28  @ =0x00000F52
	add r1, r4, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #80
	strb r0, [r7]
	ldr r2, _080DAB2C  @ =0x000009B5
	add r1, r4, r2
	mov r0, #2
	strb r0, [r1]
	ldr r0, _080DAB30  @ =0x000009D4
	add r1, r4, r0
	mov r0, #48
	strb r0, [r1]
	ldr r1, _080DAB34  @ =0x00000CF8
	add r0, r4, r1
	strh r5, [r0]
	ldr r2, _080DAB38  @ =0x00000CFA
	add r0, r4, r2
	strh r5, [r0]
	ldr r0, _080DAB3C  @ =0x0000051E
	add r1, r4, r0
	mov r0, #185
	lsl r0, r0, #6
	strh r0, [r1]
	ldr r2, _080DAB40  @ =0x0000051A
	add r1, r4, r2
	mov r0, #63
	strh r0, [r1]
	ldr r1, _080DAB44  @ =0x00000998
	add r0, r4, r1
	mov r1, #10
	strb r1, [r0]
	ldr r2, _080DAB48  @ =0x00000999
	add r0, r4, r2
	strb r1, [r0]
_080DAB14:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DAB1C:
	.4byte gRam
_080DAB20:
	.4byte 0x00000FC2
_080DAB24:
	.4byte 0x000009AC
_080DAB28:
	.4byte 0x00000F52
_080DAB2C:
	.4byte 0x000009B5
_080DAB30:
	.4byte 0x000009D4
_080DAB34:
	.4byte 0x00000CF8
_080DAB38:
	.4byte 0x00000CFA
_080DAB3C:
	.4byte 0x0000051E
_080DAB40:
	.4byte 0x0000051A
_080DAB44:
	.4byte 0x00000998
_080DAB48:
	.4byte 0x00000999
	THUMB_FUNC_END sub_080DAAA0

	THUMB_FUNC_START sub_080DAB4C
sub_080DAB4C: @ 0x080DAB4C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080DABEC  @ =gRam
	ldr r1, _080DABF0  @ =0x00001092
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DAC10
	ldr r2, _080DABF4  @ =0x00000FC2
	add r2, r2, r4
	mov r9, r2
	add r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DAC08
	cmp r0, #64
	bne _080DAC72
	mov r0, #91
	mov r1, #0
	bl sub_0812A324
	mov r7, #1
	add r6, r4, #0
	ldr r0, _080DABF8  @ =0x00000F52
	add r0, r0, r6
	mov r8, r0
	add r1, r5, #0
	add r1, r1, r8
	mov r10, r1
_080DAB92:
	mov r0, #122
	add r1, r5, #0
	mov r2, #2
	bl sub_080C9AAC
	add r4, r0, #0
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080DABFC  @ =0x00001032
	add r1, r6, r2
	add r1, r4, r1
	ldr r2, _080DAC00  @ =gUnknown_08175BDF
	sub r0, r4, #1
	add r0, r0, r2
	ldrb r2, [r0]
	strb r2, [r1]
	ldr r1, _080DAC04  @ =0x00001122
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #15
	and r1, r1, r2
	strb r1, [r0]
	ldr r2, _080DABF0  @ =0x00001092
	add r0, r6, r2
	add r0, r4, r0
	strb r1, [r0]
	mov r0, r8
	add r1, r4, r0
	mov r2, r10
	ldrb r0, [r2]
	strb r0, [r1]
	add r4, r4, r9
	mov r0, #32
	strb r0, [r4]
	lsl r0, r7, #24
	mov r1, #255
	lsl r1, r1, #24
	add r0, r0, r1
	lsr r7, r0, #24
	cmp r0, #0
	bge _080DAB92
	b _080DAC72
	.byte 0x00
	.byte 0x00
_080DABEC:
	.4byte gRam
_080DABF0:
	.4byte 0x00001092
_080DABF4:
	.4byte 0x00000FC2
_080DABF8:
	.4byte 0x00000F52
_080DABFC:
	.4byte 0x00001032
_080DAC00:
	.4byte gUnknown_08175BDF
_080DAC04:
	.4byte 0x00001122
_080DAC08:
	add r0, r5, #0
	bl sub_080DB59C
	b _080DAC72
_080DAC10:
	ldr r2, _080DAC58  @ =0x00000FC2
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DAC6C
	ldr r0, _080DAC5C  @ =0x00000F22
	add r1, r4, r0
	add r1, r5, r1
	ldr r2, _080DAC60  @ =gUnknown_08175BE1
	sub r0, r5, #1
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080DAC64  @ =0x00000F12
	add r1, r4, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #2
	strb r0, [r1]
	add r0, r5, #0
	bl Sprite3_Move
	add r0, r5, #0
	bl sub_080DA318
	add r2, r0, #0
	cmp r2, #0
	blt _080DAC72
	ldr r1, _080DAC68  @ =0x00001122
	add r0, r4, r1
	add r0, r2, r0
	mov r1, #4
	strb r1, [r0]
	b _080DAC72
	.byte 0x00
	.byte 0x00
_080DAC58:
	.4byte 0x00000FC2
_080DAC5C:
	.4byte 0x00000F22
_080DAC60:
	.4byte gUnknown_08175BE1
_080DAC64:
	.4byte 0x00000F12
_080DAC68:
	.4byte 0x00001122
_080DAC6C:
	add r0, r5, #0
	bl sub_080DB59C
_080DAC72:
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080DAB4C

	THUMB_FUNC_START sub_080DAC80
sub_080DAC80: @ 0x080DAC80
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080DACB0  @ =gRam
	ldr r0, _080DACB4  @ =0x00001642
	add r1, r3, r0
	mov r0, #0
	strb r0, [r1]
	ldr r1, _080DACB8  @ =0x00000FC2
	add r0, r3, r1
	add r4, r2, r0
	ldrb r0, [r4]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DACC4
	ldr r4, _080DACBC  @ =0x00000F92
	add r1, r3, r4
	add r1, r2, r1
	ldr r2, _080DACC0  @ =gUnknown_08175BE5
	lsr r0, r0, #27
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080DACD4
_080DACB0:
	.4byte gRam
_080DACB4:
	.4byte 0x00001642
_080DACB8:
	.4byte 0x00000FC2
_080DACBC:
	.4byte 0x00000F92
_080DACC0:
	.4byte gUnknown_08175BE5
_080DACC4:
	ldr r1, _080DACDC  @ =0x00000F52
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #255
	strb r0, [r4]
_080DACD4:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DACDC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DAC80

	THUMB_FUNC_START sub_080DACE0
sub_080DACE0: @ 0x080DACE0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080DAD20  @ =gRam
	ldr r1, _080DAD24  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #192
	bne _080DACFC
	add r0, r4, #0
	mov r1, #90
	bl sub_080CF140
_080DACFC:
	ldrb r0, [r5]
	sub r0, r0, #16
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #222
	bls _080DAD2C
	add r1, r4, #0
	ldr r2, _080DAD28  @ =0x0000164C
	add r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DAD16
	mov r1, #2
_080DAD16:
	add r0, r1, #0
	bl sub_08132574
	b _080DAD3C
	.byte 0x00
	.byte 0x00
_080DAD20:
	.4byte gRam
_080DAD24:
	.4byte 0x00000FC2
_080DAD28:
	.4byte 0x0000164C
_080DAD2C:
	cmp r4, #0
	bne _080DAD3C
	mov r0, #0
	bl sub_080C5044
	ldr r3, _080DAE08  @ =0x00001172
	add r0, r6, r3
	strb r4, [r0]
_080DAD3C:
	ldr r5, _080DAE0C  @ =gRam
	ldr r1, _080DAE10  @ =0x00000FC2
	add r0, r5, r1
	add r2, r4, r0
	ldrb r0, [r2]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DAE40
	cmp r0, #0
	bge _080DADA0
	add r0, r4, #0
	mov r1, #2
	bl sub_080C35FC
	mov r2, #150
	lsl r2, r2, #4
	add r0, r5, r2
	ldrb r0, [r0]
	add r0, r0, #2
	ldr r3, _080DAE14  @ =0x00000964
	add r1, r5, r3
	strb r0, [r1]
	ldr r2, _080DAE18  @ =0x00000FB2
	add r1, r5, r2
	add r6, r4, r1
	ldr r2, _080DAE1C  @ =gUnknown_08175C10
	lsl r1, r0, #2
	add r0, r0, r1
	sub r3, r3, #3
	add r1, r5, r3
	add r0, r0, #2
	ldrb r1, [r1]
	add r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r6]
	add r0, r4, #0
	mov r1, #32
	bl sub_080C35FC
	ldr r1, _080DAE20  @ =0x00001002
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #4
	bne _080DADA0
	mov r0, #3
	strb r0, [r6]
_080DADA0:
	ldr r6, _080DAE0C  @ =gRam
	ldr r2, _080DAE10  @ =0x00000FC2
	add r0, r6, r2
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #112
	bne _080DADB4
	add r0, r4, #0
	bl sub_080DAF10
_080DADB4:
	ldrb r1, [r5]
	lsr r1, r1, #4
	ldr r3, _080DAE24  @ =0x00000F62
	add r0, r6, r3
	add r5, r4, r0
	ldr r0, _080DAE28  @ =gUnknown_08175BEA
	add r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r5]
	ldr r0, _080DAE2C  @ =gUnknown_08175BFA
	add r1, r1, r0
	ldrb r2, [r1]
	cmp r2, #0
	beq _080DADE4
	ldr r1, _080DAE30  @ =gUnknown_08175C0A
	add r3, r3, #80
	add r0, r6, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r0, [r0]
	add r0, r2, r0
	lsl r0, r0, #24
	lsr r2, r0, #24
_080DADE4:
	ldr r1, _080DAE34  @ =0x00001082
	add r0, r6, r1
	add r0, r4, r0
	strb r2, [r0]
	ldr r3, _080DAE38  @ =0x00000F92
	add r2, r6, r3
	add r2, r4, r2
	ldr r3, _080DAE3C  @ =gUnknown_08175C29
	sub r1, r1, #208
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, r3
	ldrb r0, [r5]
	ldrb r1, [r1]
	add r0, r0, r1
	b _080DAE4E
	.byte 0x00
	.byte 0x00
_080DAE08:
	.4byte 0x00001172
_080DAE0C:
	.4byte gRam
_080DAE10:
	.4byte 0x00000FC2
_080DAE14:
	.4byte 0x00000964
_080DAE18:
	.4byte 0x00000FB2
_080DAE1C:
	.4byte gUnknown_08175C10
_080DAE20:
	.4byte 0x00001002
_080DAE24:
	.4byte 0x00000F62
_080DAE28:
	.4byte gUnknown_08175BEA
_080DAE2C:
	.4byte gUnknown_08175BFA
_080DAE30:
	.4byte gUnknown_08175C0A
_080DAE34:
	.4byte 0x00001082
_080DAE38:
	.4byte 0x00000F92
_080DAE3C:
	.4byte gUnknown_08175C29
_080DAE40:
	ldr r3, _080DAE58  @ =0x00000F52
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #39
_080DAE4E:
	strb r0, [r2]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DAE58:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DACE0

	THUMB_FUNC_START sub_080DAE5C
sub_080DAE5C: @ 0x080DAE5C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	add r5, r3, #0
	ldr r4, _080DAE90  @ =gRam
	ldr r0, _080DAE94  @ =0x00001172
	add r2, r4, r0
	add r2, r3, r2
	ldr r1, _080DAE98  @ =0x00000FC2
	add r0, r4, r1
	add r0, r3, r0
	ldrb r1, [r0]
	strb r1, [r2]
	ldrb r0, [r0]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DAEA4
	ldr r2, _080DAE9C  @ =0x00000F92
	add r1, r4, r2
	add r1, r3, r1
	ldr r2, _080DAEA0  @ =gUnknown_08175C2F
	lsr r0, r0, #27
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080DAEEC
_080DAE90:
	.4byte gRam
_080DAE94:
	.4byte 0x00001172
_080DAE98:
	.4byte 0x00000FC2
_080DAE9C:
	.4byte 0x00000F92
_080DAEA0:
	.4byte gUnknown_08175C2F
_080DAEA4:
	ldr r0, _080DAEF4  @ =0x00000F52
	add r1, r4, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r2, #4
	ldr r1, _080DAEF8  @ =0x00001002
	add r0, r4, r1
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #4
	beq _080DAEC6
	bl GetRandomInt
	mov r2, #15
	and r2, r2, r0
_080DAEC6:
	ldr r0, _080DAEFC  @ =0x00000F82
	add r1, r4, r0
	add r1, r5, r1
	ldr r0, _080DAF00  @ =gUnknown_08175C34
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080DAF04  @ =0x00001062
	add r1, r4, r0
	add r1, r5, r1
	ldr r0, _080DAF08  @ =gUnknown_08175C44
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080DAF0C  @ =0x000010A2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #8
	strb r1, [r0]
_080DAEEC:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DAEF4:
	.4byte 0x00000F52
_080DAEF8:
	.4byte 0x00001002
_080DAEFC:
	.4byte 0x00000F82
_080DAF00:
	.4byte gUnknown_08175C34
_080DAF04:
	.4byte 0x00001062
_080DAF08:
	.4byte gUnknown_08175C44
_080DAF0C:
	.4byte 0x000010A2
	THUMB_FUNC_END sub_080DAE5C

	THUMB_FUNC_START sub_080DAF10
sub_080DAF10: @ 0x080DAF10
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080DB004  @ =gRam
	cmp r5, #0
	bne _080DAF36
	ldr r0, _080DB008  @ =0x00001002
	add r2, r6, r0
	ldrb r0, [r2]
	add r1, r0, #1
	strb r1, [r2]
	ldr r3, _080DB00C  @ =0x0000164C
	add r0, r6, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DAF36
	mov r0, #3
	and r1, r1, r0
	strb r1, [r2]
_080DAF36:
	ldr r1, _080DB008  @ =0x00001002
	add r0, r6, r1
	add r7, r5, r0
	ldrb r0, [r7]
	cmp r0, #5
	bne _080DAF44
	b _080DB044
_080DAF44:
	mov r0, #123
	add r1, r5, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	bge _080DAF54
	b _080DB068
_080DAF54:
	add r0, r5, #0
	mov r1, #92
	bl sub_080CF140
	ldr r3, _080DB010  @ =0x00000FB2
	add r0, r6, r3
	add r0, r5, r0
	ldrb r2, [r0]
	mov r0, #150
	lsl r0, r0, #4
	add r1, r6, r0
	ldr r0, _080DB014  @ =gUnknown_08175C54
	add r0, r2, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080DB018  @ =gUnknown_08175C5A
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r0, _080DB01C  @ =0x00000964
	add r3, r6, r0
	ldr r0, _080DB020  @ =gUnknown_08175C60
	add r2, r2, r0
	ldrb r0, [r2]
	ldrh r2, [r3]
	add r2, r2, r0
	ldr r3, _080DB024  @ =0xFFFFFF00
	add r2, r2, r3
	lsl r0, r2, #16
	mov r12, r0
	ldr r3, _080DB028  @ =0x00000EE2
	add r0, r6, r3
	add r0, r4, r0
	strb r1, [r0]
	add r3, r3, #32
	add r0, r6, r3
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080DB02C  @ =0x00000ED2
	add r0, r6, r1
	add r0, r4, r0
	strb r2, [r0]
	sub r3, r3, #16
	add r0, r6, r3
	add r0, r4, r0
	mov r1, r12
	lsr r3, r1, #24
	strb r3, [r0]
	ldr r1, _080DB030  @ =0x00001172
	add r0, r6, r1
	add r0, r4, r0
	strb r3, [r0]
	ldr r3, _080DB034  @ =0x00000F22
	add r0, r6, r3
	add r1, r4, r0
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080DB038  @ =0x00000F12
	add r0, r6, r1
	add r1, r4, r0
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldrb r0, [r7]
	cmp r0, #1
	bls _080DB068
	bl GetRandomInt
	mov r2, #1
	add r1, r2, #0
	and r1, r1, r0
	cmp r1, #0
	bne _080DB068
	ldr r3, _080DB03C  @ =0x00000F72
	add r0, r6, r3
	add r0, r4, r0
	strb r2, [r0]
	ldr r1, _080DB040  @ =0x00000FC2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	b _080DB068
	.byte 0x00
	.byte 0x00
_080DB004:
	.4byte gRam
_080DB008:
	.4byte 0x00001002
_080DB00C:
	.4byte 0x0000164C
_080DB010:
	.4byte 0x00000FB2
_080DB014:
	.4byte gUnknown_08175C54
_080DB018:
	.4byte gUnknown_08175C5A
_080DB01C:
	.4byte 0x00000964
_080DB020:
	.4byte gUnknown_08175C60
_080DB024:
	.4byte 0xFFFFFF00
_080DB028:
	.4byte 0x00000EE2
_080DB02C:
	.4byte 0x00000ED2
_080DB030:
	.4byte 0x00001172
_080DB034:
	.4byte 0x00000F22
_080DB038:
	.4byte 0x00000F12
_080DB03C:
	.4byte 0x00000F72
_080DB040:
	.4byte 0x00000FC2
_080DB044:
	mov r0, #0
	strb r0, [r7]
	add r0, r5, #0
	mov r1, #44
	bl sub_080CF140
	add r0, r5, #0
	bl sub_080DBD34
	add r0, r5, #0
	bl sub_080DBD34
	add r0, r5, #0
	bl sub_080DBD34
	add r0, r5, #0
	bl sub_080DBD34
_080DB068:
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080DAF10

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080DB070
sub_080DB070: @ 0x080DB070
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080DB154  @ =gRam
	ldr r1, _080DB158  @ =0x00001172
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #1
	strb r1, [r0]
	ldr r2, _080DB15C  @ =0x00000EE2
	add r0, r4, r2
	add r0, r0, r5
	mov r12, r0
	ldrb r0, [r0]
	mov r7, #150
	lsl r7, r7, #4
	add r7, r7, r4
	mov r8, r7
	strb r0, [r7]
	ldr r1, _080DB160  @ =0x00000F02
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r2, _080DB164  @ =0x00000961
	add r2, r2, r4
	mov r10, r2
	strb r1, [r2]
	ldr r7, _080DB168  @ =0x00000969
	add r0, r4, r7
	strb r1, [r0]
	ldr r1, _080DB16C  @ =0x00000ED2
	add r0, r4, r1
	add r0, r5, r0
	str r0, [sp]
	ldrb r0, [r0]
	ldr r2, _080DB170  @ =0x00000964
	add r2, r2, r4
	mov r9, r2
	strb r0, [r2]
	ldr r7, _080DB174  @ =0x00000EF2
	add r0, r4, r7
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r2, _080DB178  @ =0x00000965
	add r0, r4, r2
	strb r1, [r0]
	ldr r7, _080DB17C  @ =0x0000096D
	add r0, r4, r7
	strb r1, [r0]
	ldr r1, _080DB180  @ =0x00000F82
	add r0, r4, r1
	add r6, r5, r0
	ldrb r0, [r6]
	add r2, r2, #3
	add r1, r4, r2
	strb r0, [r1]
	ldr r7, _080DB184  @ =0x00001062
	add r0, r4, r7
	add r2, r5, r0
	ldrb r0, [r2]
	ldr r7, _080DB188  @ =0x0000096C
	add r3, r4, r7
	strb r0, [r3]
	mov r7, r8
	ldrh r0, [r7]
	ldrh r1, [r1]
	sub r0, r0, r1
	add r0, r0, #7
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #13
	bhi _080DB11C
	mov r1, r9
	ldrh r0, [r1]
	ldrh r1, [r3]
	sub r0, r0, r1
	add r0, r0, #7
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #13
	bls _080DB194
_080DB11C:
	ldr r2, _080DB18C  @ =0x000010A2
	add r0, r4, r2
	add r6, r5, r0
	ldrb r1, [r6]
	add r0, r5, #0
	bl sub_080C2DCC
	ldr r7, _080DB190  @ =0x00000F12
	add r0, r4, r7
	add r0, r5, r0
	mov r2, r8
	ldrb r1, [r2]
	strb r1, [r0]
	add r7, r7, #16
	add r0, r4, r7
	add r0, r5, r0
	mov r2, r10
	ldrb r1, [r2]
	strb r1, [r0]
	ldrb r0, [r6]
	cmp r0, #63
	bhi _080DB14C
	add r0, r0, #1
	strb r0, [r6]
_080DB14C:
	add r0, r5, #0
	bl Sprite3_Move
	b _080DB1B4
_080DB154:
	.4byte gRam
_080DB158:
	.4byte 0x00001172
_080DB15C:
	.4byte 0x00000EE2
_080DB160:
	.4byte 0x00000F02
_080DB164:
	.4byte 0x00000961
_080DB168:
	.4byte 0x00000969
_080DB16C:
	.4byte 0x00000ED2
_080DB170:
	.4byte 0x00000964
_080DB174:
	.4byte 0x00000EF2
_080DB178:
	.4byte 0x00000965
_080DB17C:
	.4byte 0x0000096D
_080DB180:
	.4byte 0x00000F82
_080DB184:
	.4byte 0x00001062
_080DB188:
	.4byte 0x0000096C
_080DB18C:
	.4byte 0x000010A2
_080DB190:
	.4byte 0x00000F12
_080DB194:
	ldrb r0, [r6]
	mov r7, r12
	strb r0, [r7]
	ldrb r0, [r2]
	ldr r1, [sp]
	strb r0, [r1]
	ldr r2, _080DB1C4  @ =0x00000F52
	add r0, r4, r2
	add r0, r5, r0
	mov r1, #2
	strb r1, [r0]
	ldr r7, _080DB1C8  @ =0x00000FC2
	add r0, r4, r7
	add r0, r5, r0
	mov r1, #39
	strb r1, [r0]
_080DB1B4:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080DB1C4:
	.4byte 0x00000F52
_080DB1C8:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080DB070

	THUMB_FUNC_START sub_080DB1CC
sub_080DB1CC: @ 0x080DB1CC
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	mov r4, sp
	add r4, r4, #5
	add r0, sp, #4
	add r1, r4, #0
	mov r2, r8
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DB1F4
	b _080DB3F0
_080DB1F4:
	ldr r0, _080DB304  @ =gRam
	ldr r2, _080DB308  @ =0x00000F92
	add r1, r0, r2
	add r1, r1, r8
	ldrb r1, [r1]
	lsl r1, r1, #26
	lsr r1, r1, #24
	mov r10, r1
	mov r7, #3
	add r6, sp, #4
	mov r9, r0
_080DB20A:
	mov r4, r10
	add r0, r4, r7
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	mov r0, #2
	mov r12, r0
	add r0, r5, #0
	sub r0, r0, #64
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #3
	bhi _080DB228
	mov r1, #0
	mov r12, r1
_080DB228:
	ldr r0, _080DB30C  @ =gUnknown_03003E74
	ldrb r1, [r6]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r9
	ldr r1, _080DB310  @ =gUnknown_08175C66
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080DB314  @ =0x00000964
	add r3, r3, r9
	ldr r2, _080DB318  @ =gUnknown_08175CAE
	add r2, r5, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080DB31C  @ =gUnknown_08175CF6
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080DB320  @ =gUnknown_08175D3E
	add r4, r5, r4
	ldrb r4, [r4]
	ldr r5, _080DB324  @ =gUnknown_03002B99
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, r12
	str r4, [sp]
	bl sub_080C6004
	lsl r1, r7, #24
	mov r5, #255
	lsl r5, r5, #24
	add r1, r1, r5
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsr r7, r1, #24
	cmp r1, #0
	bge _080DB20A
	mov r4, r9
	ldr r1, _080DB328  @ =0x00001122
	add r0, r4, r1
	add r0, r0, r8
	ldrb r1, [r0]
	mov r0, #8
	and r0, r0, r1
	cmp r0, #0
	beq _080DB2B4
	mov r0, #4
	bl sub_080C64A0
_080DB2B4:
	ldr r2, _080DB308  @ =0x00000F92
	add r0, r4, r2
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #11
	bhi _080DB2C8
	mov r0, r8
	mov r1, #18
	bl sub_080C57F8
_080DB2C8:
	ldr r5, _080DB32C  @ =0x000009AD
	add r0, r4, r5
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DB2DC
	mov r0, r8
	mov r1, #255
	mov r2, #3
	bl sub_080C6350
_080DB2DC:
	add r0, sp, #4
	mov r1, sp
	add r1, r1, #5
	mov r2, r8
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DB2F0
	b _080DB3F0
_080DB2F0:
	ldr r0, _080DB330  @ =0x00000FB2
	add r0, r0, r9
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DB334
	mov r0, #8
	bl sub_080CF388
	b _080DB33A
_080DB304:
	.4byte gRam
_080DB308:
	.4byte 0x00000F92
_080DB30C:
	.4byte gUnknown_03003E74
_080DB310:
	.4byte gUnknown_08175C66
_080DB314:
	.4byte 0x00000964
_080DB318:
	.4byte gUnknown_08175CAE
_080DB31C:
	.4byte gUnknown_08175CF6
_080DB320:
	.4byte gUnknown_08175D3E
_080DB324:
	.4byte gUnknown_03002B99
_080DB328:
	.4byte 0x00001122
_080DB32C:
	.4byte 0x000009AD
_080DB330:
	.4byte 0x00000FB2
_080DB334:
	mov r0, #8
	bl sub_080CF3A0
_080DB33A:
	ldr r3, _080DB400  @ =gRam
	ldr r1, _080DB404  @ =0x00001082
	add r0, r3, r1
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DB3F0
	sub r0, r0, #1
	lsl r0, r0, #25
	lsr r0, r0, #24
	mov r10, r0
	ldr r2, _080DB408  @ =0x00000996
	add r0, r3, r2
	ldrb r0, [r0]
	lsr r0, r0, #1
	mov r1, #2
	and r0, r0, r1
	add r0, r0, #2
	mov r1, #49
	ldr r4, _080DB40C  @ =0x00000979
	add r2, r3, r4
	orr r0, r0, r1
	strb r0, [r2]
	mov r7, #1
	add r6, sp, #4
	mov r9, r3
_080DB36E:
	mov r5, r10
	add r3, r5, r7
	lsl r3, r3, #24
	lsr r3, r3, #24
	ldr r0, _080DB410  @ =gUnknown_03003E74
	ldrb r1, [r6]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r9
	ldr r1, _080DB414  @ =gUnknown_08175D86
	add r1, r3, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r4, _080DB418  @ =0x00000964
	add r4, r4, r9
	ldr r2, _080DB41C  @ =gUnknown_08175DCE
	add r3, r3, r2
	mov r2, #0
	ldrsb r2, [r3, r2]
	ldrh r4, [r4]
	add r2, r2, r4
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080DB404  @ =0x00001082
	add r3, r3, r9
	add r3, r3, r8
	ldrb r5, [r3]
	sub r5, r5, #1
	ldr r4, _080DB420  @ =gUnknown_08175E16
	add r3, r5, r4
	ldrb r3, [r3]
	ldr r4, _080DB424  @ =gUnknown_03002BA9
	ldrb r4, [r4]
	lsl r4, r4, #24
	asr r4, r4, #24
	lsl r4, r4, #8
	mov r12, r4
	add r3, r3, r12
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080DB428  @ =gUnknown_08175E3A
	add r5, r5, r4
	ldrb r4, [r5]
	str r4, [sp]
	bl sub_080C6004
	lsl r1, r7, #24
	mov r5, #255
	lsl r5, r5, #24
	add r1, r1, r5
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsr r7, r1, #24
	cmp r1, #0
	bge _080DB36E
_080DB3F0:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080DB400:
	.4byte gRam
_080DB404:
	.4byte 0x00001082
_080DB408:
	.4byte 0x00000996
_080DB40C:
	.4byte 0x00000979
_080DB410:
	.4byte gUnknown_03003E74
_080DB414:
	.4byte gUnknown_08175D86
_080DB418:
	.4byte 0x00000964
_080DB41C:
	.4byte gUnknown_08175DCE
_080DB420:
	.4byte gUnknown_08175E16
_080DB424:
	.4byte gUnknown_03002BA9
_080DB428:
	.4byte gUnknown_08175E3A
	THUMB_FUNC_END sub_080DB1CC

	THUMB_FUNC_START sub_080DB42C
sub_080DB42C: @ 0x080DB42C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	bl sub_080CBB34
	ldr r2, _080DB48C  @ =gRam
	ldr r1, _080DB490  @ =0x00000FA2
	add r0, r2, r1
	add r0, r4, r0
	mov r5, #0
	mov r3, #9
	strb r3, [r0]
	ldr r1, _080DB494  @ =0x00001172
	add r0, r2, r1
	add r0, r4, r0
	strb r3, [r0]
	ldr r1, _080DB498  @ =0x0000164C
	add r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DB4A8
	ldr r1, _080DB49C  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r1, _080DB4A0  @ =0x00000F52
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #8
	strb r1, [r0]
	ldr r1, _080DB4A4  @ =0x00000F53
	add r0, r2, r1
	strb r3, [r0]
	add r1, r1, #1
	add r0, r2, r1
	strb r3, [r0]
	add r1, r1, #63
	add r0, r2, r1
	strb r5, [r0]
	add r1, r1, #1
	add r0, r2, r1
	strb r5, [r0]
	add r0, r4, #0
	bl sub_080ED8C8
	b _080DB4CC
	.byte 0x00
	.byte 0x00
_080DB48C:
	.4byte gRam
_080DB490:
	.4byte 0x00000FA2
_080DB494:
	.4byte 0x00001172
_080DB498:
	.4byte 0x0000164C
_080DB49C:
	.4byte 0x00000FC2
_080DB4A0:
	.4byte 0x00000F52
_080DB4A4:
	.4byte 0x00000F53
_080DB4A8:
	ldr r1, _080DB4D4  @ =0x00000F52
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #10
	strb r1, [r0]
	ldr r1, _080DB4D8  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r1, _080DB4DC  @ =0x00001152
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080ED8C8
_080DB4CC:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DB4D4:
	.4byte 0x00000F52
_080DB4D8:
	.4byte 0x00000FC2
_080DB4DC:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080DB42C

	THUMB_FUNC_START sub_080DB4E0
sub_080DB4E0: @ 0x080DB4E0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080ED830
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080DB522
	ldr r4, _080DB528  @ =gRam
	ldr r2, _080DB52C  @ =0x00000F92
	add r0, r4, r2
	add r0, r5, r0
	strb r1, [r0]
	ldr r1, _080DB530  @ =0x00000FB2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #3
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080C35C0
	ldr r2, _080DB534  @ =0x00001122
	add r1, r4, r2
	add r1, r5, r1
	ldr r2, _080DB538  @ =gUnknown_08175BA8
	ldr r0, _080DB53C  @ =0x0000164C
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080DB522:
	pop {r4,r5}
	pop {r0}
	bx r0
_080DB528:
	.4byte gRam
_080DB52C:
	.4byte 0x00000F92
_080DB530:
	.4byte 0x00000FB2
_080DB534:
	.4byte 0x00001122
_080DB538:
	.4byte gUnknown_08175BA8
_080DB53C:
	.4byte 0x0000164C
	THUMB_FUNC_END sub_080DB4E0

	THUMB_FUNC_START sub_080DB540
sub_080DB540: @ 0x080DB540
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080DB55C  @ =gRam
	ldr r3, _080DB560  @ =0x00000F52
	add r2, r1, r3
	add r0, r0, r2
	ldr r2, _080DB564  @ =gUnknown_08175BE3
	ldr r3, _080DB568  @ =0x0000164C
	add r1, r1, r3
	ldrb r1, [r1]
	add r1, r1, r2
	ldrb r1, [r1]
	strb r1, [r0]
	bx lr
_080DB55C:
	.4byte gRam
_080DB560:
	.4byte 0x00000F52
_080DB564:
	.4byte gUnknown_08175BE3
_080DB568:
	.4byte 0x0000164C
	THUMB_FUNC_END sub_080DB540

	THUMB_FUNC_START sub_080DB56C
sub_080DB56C: @ 0x080DB56C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080DB594  @ =gRam
	ldr r1, _080DB598  @ =0x00000FC2
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DB58E
	mov r0, #161
	lsl r0, r0, #1
	bl sub_080C95C0
	add r0, r4, #0
	bl sub_080DB59C
_080DB58E:
	pop {r4}
	pop {r0}
	bx r0
_080DB594:
	.4byte gRam
_080DB598:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080DB56C

	THUMB_FUNC_START sub_080DB59C
sub_080DB59C: @ 0x080DB59C
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080DB5B8  @ =gRam
	ldr r2, _080DB5BC  @ =0x00000F52
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #3
	strb r2, [r1]
	ldr r1, _080DB5C0  @ =0x00000FC2
	add r3, r3, r1
	add r0, r0, r3
	mov r1, #32
	strb r1, [r0]
	bx lr
_080DB5B8:
	.4byte gRam
_080DB5BC:
	.4byte 0x00000F52
_080DB5C0:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080DB59C

	THUMB_FUNC_START sub_080DB5C4
sub_080DB5C4: @ 0x080DB5C4
	push {r4,r5,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #201
	bl sub_080CA538
	add r4, r0, #0
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080DB60C  @ =gRam
	ldr r1, _080DB610  @ =0x00001012
	add r0, r2, r1
	add r0, r4, r0
	mov r3, #0
	mov r1, #2
	strb r1, [r0]
	ldr r5, _080DB614  @ =0x00001172
	add r0, r2, r5
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080DB618  @ =0x00001092
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	sub r5, r5, #80
	add r2, r2, r5
	add r4, r4, r2
	strb r3, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DB60C:
	.4byte gRam
_080DB610:
	.4byte 0x00001012
_080DB614:
	.4byte 0x00001172
_080DB618:
	.4byte 0x00001092
	THUMB_FUNC_END sub_080DB5C4

	THUMB_FUNC_START sub_080DB61C
sub_080DB61C: @ 0x080DB61C
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080DB650  @ =gRam
	ldr r2, _080DB654  @ =0x00000F72
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	add r5, r1, #0
	cmp r0, #0
	bne _080DB65C
	ldr r1, _080DB658  @ =0x00000996
	add r0, r5, r1
	ldrb r0, [r0]
	lsr r0, r0, #1
	mov r1, #2
	and r0, r0, r1
	add r1, r0, #2
	mov r0, #1
	orr r1, r1, r0
	b _080DB672
	.byte 0x00
	.byte 0x00
_080DB650:
	.4byte gRam
_080DB654:
	.4byte 0x00000F72
_080DB658:
	.4byte 0x00000996
_080DB65C:
	ldr r2, _080DB6A4  @ =0x00000FC2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DB670
	add r0, r4, #0
	mov r1, #32
	bl sub_080C35FC
_080DB670:
	mov r1, #5
_080DB672:
	ldr r2, _080DB6A8  @ =0x00001122
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080DB6AC  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DB688
	b _080DB8EC
_080DB688:
	mov r7, #0
	mov r2, #0
	mov r9, r2
	mov r8, r2
	add r1, r1, #32
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DB6B0
	add r0, r4, #0
	bl sub_080C6240
	b _080DB6B6
_080DB6A4:
	.4byte 0x00000FC2
_080DB6A8:
	.4byte 0x00001122
_080DB6AC:
	.4byte 0x00000F52
_080DB6B0:
	add r0, r4, #0
	bl sub_080DBAA4
_080DB6B6:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	beq _080DB6C6
	b _080DB964
_080DB6C6:
	ldr r5, _080DB700  @ =gRam
	ldr r2, _080DB704  @ =0x00001052
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DB718
	ldr r1, _080DB708  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
	ldr r2, _080DB70C  @ =0x00000F72
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DB710
	mov r0, #1
	mov r9, r0
	b _080DB712
_080DB700:
	.4byte gRam
_080DB704:
	.4byte 0x00001052
_080DB708:
	.4byte 0x00000FA2
_080DB70C:
	.4byte 0x00000F72
_080DB710:
	mov r7, #1
_080DB712:
	cmp r7, #0
	bne _080DB718
	b _080DB84E
_080DB718:
	ldr r5, _080DB794  @ =gRam
	ldr r1, _080DB798  @ =0x00000F62
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	beq _080DB730
	ldr r2, _080DB79C  @ =0x00001172
	add r0, r5, r2
	ldrb r7, [r0]
	cmp r7, #0
	beq _080DB7C0
_080DB730:
	add r0, r4, #0
	bl sub_080C4F98
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DB746
	b _080DB84A
_080DB746:
	ldr r1, _080DB7A0  @ =0x00000F72
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DB7B0
	add r0, r4, #0
	mov r1, #113
	bl sub_080CF0AC
	add r0, r4, #0
	mov r1, #92
	bl sub_080CF140
	add r0, r4, #0
	mov r1, #48
	bl sub_080C35FC
	ldr r2, _080DB7A4  @ =0x00000F22
	add r1, r5, r2
	add r1, r4, r1
	ldr r2, _080DB7A8  @ =0x00000961
	add r0, r5, r2
	ldrb r0, [r0]
	neg r0, r0
	strb r0, [r1]
	ldr r0, _080DB7AC  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	sub r2, r2, #1
	add r0, r5, r2
	ldrb r0, [r0]
	neg r0, r0
	strb r0, [r1]
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	b _080DB84A
	.byte 0x00
	.byte 0x00
_080DB794:
	.4byte gRam
_080DB798:
	.4byte 0x00000F62
_080DB79C:
	.4byte 0x00001172
_080DB7A0:
	.4byte 0x00000F72
_080DB7A4:
	.4byte 0x00000F22
_080DB7A8:
	.4byte 0x00000961
_080DB7AC:
	.4byte 0x00000F12
_080DB7B0:
	ldr r1, _080DB7BC  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080DB854
_080DB7BC:
	.4byte 0x00000FA2
_080DB7C0:
	ldr r2, _080DB8B8  @ =0x00000EE2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	mov r1, #150
	lsl r1, r1, #4
	add r6, r5, r1
	strb r0, [r6]
	add r2, r2, #32
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r0]
	mov r2, #151
	lsl r2, r2, #4
	add r0, r5, r2
	strb r1, [r0]
	ldr r1, _080DB8BC  @ =0x00000964
	add r0, r5, r1
	mov r1, #15
	strb r1, [r0]
	sub r2, r2, #11
	add r0, r5, r2
	strb r1, [r0]
	ldr r1, _080DB8C0  @ =0x00000ED2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	sub r2, r2, #4
	add r0, r5, r2
	strb r1, [r0]
	ldr r1, _080DB8C4  @ =0x00000EF2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r2, r2, #16
	add r0, r5, r2
	strb r1, [r0]
	mov r0, #0
	bl sub_080C4574
	bl sub_080C466C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DB84A
	mov r0, #160
	strb r0, [r6]
	mov r0, #0
	mov r1, #16
	bl sub_080C414C
	ldr r1, _080DB8C8  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	strb r7, [r0]
	ldr r2, _080DB8CC  @ =0x00000F22
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r2, _080DB8D0  @ =0x00001112
	add r0, r5, r2
	strb r1, [r0]
	ldr r1, _080DB8D4  @ =0x00000F12
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	sub r2, r2, #16
	add r0, r5, r2
	strb r1, [r0]
_080DB84A:
	mov r0, #1
	mov r8, r0
_080DB84E:
	mov r1, r9
	cmp r1, #0
	beq _080DB862
_080DB854:
	add r0, r4, #0
	mov r1, #95
	bl sub_080CF140
	add r0, r4, #0
	bl sub_080DB990
_080DB862:
	mov r2, r8
	cmp r2, #0
	bne _080DB86A
	b _080DB964
_080DB86A:
	ldr r5, _080DB8D8  @ =gRam
	ldr r1, _080DB8DC  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	ldr r2, _080DB8E0  @ =0x00000F72
	add r7, r5, r2
	add r6, r4, r7
	ldrb r1, [r6]
	orr r0, r0, r1
	cmp r0, #0
	bne _080DB964
	mov r0, #123
	add r1, r4, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080DB964
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r1, _080DB8E4  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #15
	strb r1, [r0]
	ldr r2, _080DB8E8  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	add r1, r4, r7
	ldrb r0, [r6]
	b _080DB962
	.byte 0x00
	.byte 0x00
_080DB8B8:
	.4byte 0x00000EE2
_080DB8BC:
	.4byte 0x00000964
_080DB8C0:
	.4byte 0x00000ED2
_080DB8C4:
	.4byte 0x00000EF2
_080DB8C8:
	.4byte 0x00000FA2
_080DB8CC:
	.4byte 0x00000F22
_080DB8D0:
	.4byte 0x00001112
_080DB8D4:
	.4byte 0x00000F12
_080DB8D8:
	.4byte gRam
_080DB8DC:
	.4byte 0x00000996
_080DB8E0:
	.4byte 0x00000F72
_080DB8E4:
	.4byte 0x00000FC2
_080DB8E8:
	.4byte 0x00000F52
_080DB8EC:
	ldr r1, _080DB900  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #2
	bne _080DB904
	add r0, r4, #0
	bl sub_080C58F0
	b _080DB90A
_080DB900:
	.4byte 0x00000F92
_080DB904:
	add r0, r4, #0
	bl sub_080C6240
_080DB90A:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DB964
	ldr r6, _080DB974  @ =gRam
	ldr r2, _080DB978  @ =0x00001172
	add r0, r6, r2
	add r0, r4, r0
	ldr r2, _080DB97C  @ =0x00000FC2
	add r1, r6, r2
	add r5, r4, r1
	ldrb r1, [r5]
	strb r1, [r0]
	ldrb r1, [r5]
	cmp r1, #0
	bne _080DB936
	sub r2, r2, #32
	add r0, r6, r2
	add r0, r4, r0
	strb r1, [r0]
_080DB936:
	ldrb r0, [r5]
	cmp r0, #6
	bne _080DB954
	ldr r1, _080DB980  @ =0x00000F22
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
	ldr r2, _080DB984  @ =0x00000F12
	add r0, r6, r2
	add r0, r4, r0
	strb r1, [r0]
	add r0, r4, #0
	bl Sprite3_Move
_080DB954:
	ldr r0, _080DB988  @ =0x00000F92
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080DB98C  @ =gUnknown_08175E60
	ldrb r0, [r5]
	add r0, r0, r2
	ldrb r0, [r0]
_080DB962:
	strb r0, [r1]
_080DB964:
	add sp, sp, #4
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DB974:
	.4byte gRam
_080DB978:
	.4byte 0x00001172
_080DB97C:
	.4byte 0x00000FC2
_080DB980:
	.4byte 0x00000F22
_080DB984:
	.4byte 0x00000F12
_080DB988:
	.4byte 0x00000F92
_080DB98C:
	.4byte gUnknown_08175E60
	THUMB_FUNC_END sub_080DB61C

	THUMB_FUNC_START sub_080DB990
sub_080DB990: @ 0x080DB990
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r10, r0
	mov r1, #95
	bl sub_080CF140
	mov r5, #5
	ldr r4, _080DBA6C  @ =gRam
	ldr r1, _080DBA70  @ =0x00000F12
	add r1, r1, r4
	mov r8, r1
	mov r7, #20
_080DB9B2:
	mov r0, #85
	mov r1, r10
	bl sub_080CA538
	add r3, r0, #0
	lsl r5, r5, #24
	cmp r3, #0
	blt _080DBA50
	mov r2, #150
	lsl r2, r2, #4
	add r0, r4, r2
	ldrh r1, [r0]
	add r1, r1, #4
	ldr r6, _080DBA74  @ =0x00000964
	add r0, r4, r6
	ldrh r2, [r0]
	add r2, r2, #4
	ldr r6, _080DBA78  @ =0x00000EE2
	add r0, r4, r6
	add r0, r3, r0
	strb r1, [r0]
	add r6, r6, #32
	add r0, r4, r6
	add r0, r3, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080DBA7C  @ =0x00000ED2
	add r0, r4, r1
	add r0, r3, r0
	strb r2, [r0]
	sub r6, r6, #16
	add r0, r4, r6
	add r0, r3, r0
	lsr r2, r2, #8
	strb r2, [r0]
	ldr r0, _080DBA80  @ =0x00001032
	add r2, r4, r0
	add r2, r3, r2
	ldrb r1, [r2]
	mov r0, #254
	and r0, r0, r1
	mov r1, #64
	orr r0, r0, r1
	strb r0, [r2]
	ldr r1, _080DBA84  @ =0x00001122
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #4
	strb r1, [r0]
	ldr r2, _080DBA88  @ =0x00000FD2
	add r0, r4, r2
	add r0, r3, r0
	strb r1, [r0]
	ldr r6, _080DBA8C  @ =0x00001132
	add r0, r4, r6
	add r0, r3, r0
	strb r7, [r0]
	ldr r1, _080DBA90  @ =0x00000F82
	add r0, r4, r1
	add r0, r3, r0
	strb r7, [r0]
	add r2, r2, #144
	add r0, r4, r2
	add r0, r3, r0
	strb r7, [r0]
	ldr r6, _080DBA94  @ =0x00000F22
	add r2, r4, r6
	add r2, r3, r2
	ldr r0, _080DBA98  @ =gUnknown_08175E70
	asr r1, r5, #24
	add r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r2]
	mov r0, r8
	add r2, r3, r0
	ldr r0, _080DBA9C  @ =gUnknown_08175E76
	add r1, r1, r0
	ldrb r0, [r1]
	strb r0, [r2]
_080DBA50:
	mov r1, #255
	lsl r1, r1, #24
	add r0, r5, r1
	lsr r5, r0, #24
	cmp r0, #0
	bge _080DB9B2
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DBA6C:
	.4byte gRam
_080DBA70:
	.4byte 0x00000F12
_080DBA74:
	.4byte 0x00000964
_080DBA78:
	.4byte 0x00000EE2
_080DBA7C:
	.4byte 0x00000ED2
_080DBA80:
	.4byte 0x00001032
_080DBA84:
	.4byte 0x00001122
_080DBA88:
	.4byte 0x00000FD2
_080DBA8C:
	.4byte 0x00001132
_080DBA90:
	.4byte 0x00000F82
_080DBA94:
	.4byte 0x00000F22
_080DBA98:
	.4byte gUnknown_08175E70
_080DBA9C:
	.4byte gUnknown_08175E76
	THUMB_FUNC_END sub_080DB990

	THUMB_FUNC_START sub_080DBAA0
sub_080DBAA0: @ 0x080DBAA0
	bx lr
	THUMB_FUNC_END sub_080DBAA0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080DBAA4
sub_080DBAA4: @ 0x080DBAA4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080DBACC  @ =gRam
	ldr r2, _080DBAD0  @ =0x00001052
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsr r1, r1, #2
	mov r2, #1
	and r1, r1, r2
	lsl r1, r1, #5
	ldr r2, _080DBAD4  @ =gUnknown_08175E7C
	add r1, r1, r2
	mov r2, #4
	bl sub_080C9480
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DBACC:
	.4byte gRam
_080DBAD0:
	.4byte 0x00001052
_080DBAD4:
	.4byte gUnknown_08175E7C
	THUMB_FUNC_END sub_080DBAA4

	THUMB_FUNC_START sub_080DBAD8
sub_080DBAD8: @ 0x080DBAD8
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r9, r5
	ldr r6, _080DBBE4  @ =gRam
	ldr r0, _080DBBE8  @ =0x00001122
	add r3, r6, r0
	add r3, r5, r3
	ldrb r0, [r3]
	mov r2, #177
	and r2, r2, r0
	ldr r1, _080DBBEC  @ =gUnknown_08175EC4
	ldr r4, _080DBBF0  @ =0x00000F62
	add r0, r6, r4
	add r0, r0, r5
	mov r8, r0
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r0, [r0]
	orr r2, r2, r0
	ldr r1, _080DBBF4  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsl r0, r0, #1
	mov r1, #14
	and r0, r0, r1
	orr r2, r2, r0
	strb r2, [r3]
	ldr r3, _080DBBF8  @ =0x00000F92
	add r0, r6, r3
	add r2, r5, r0
	ldr r1, _080DBBFC  @ =gUnknown_08175EBC
	mov r4, r8
	ldrb r0, [r4]
	add r0, r0, r1
	ldrb r1, [r0]
	strb r1, [r2]
	ldr r3, _080DBC00  @ =0x00000B36
	add r0, r6, r3
	ldrh r0, [r0]
	cmp r0, #32
	bne _080DBB36
	add r0, r1, #4
	strb r0, [r2]
_080DBB36:
	add r0, r5, #0
	bl sub_080C6240
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DBC24
	ldr r4, _080DBC04  @ =0x00000FC2
	add r0, r6, r4
	add r4, r5, r0
	ldrb r7, [r4]
	cmp r7, #0
	bne _080DBC24
	add r0, r5, #0
	bl sub_080DBC34
	mov r0, #2
	strb r0, [r4]
	ldr r0, _080DBC08  @ =0x00000ED2
	add r3, r6, r0
	add r3, r5, r3
	ldrb r1, [r3]
	ldr r4, _080DBC0C  @ =0x00000EF2
	add r2, r6, r4
	add r2, r5, r2
	ldrb r0, [r2]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #16
	strb r1, [r3]
	lsr r1, r1, #8
	strb r1, [r2]
	ldr r1, _080DBC10  @ =0x00000958
	add r0, r6, r1
	ldrb r1, [r0]
	ldrb r0, [r3]
	sub r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #207
	bhi _080DBC1C
	bl GetRandomInt
	mov r1, #7
	and r1, r1, r0
	mov r3, #150
	lsl r3, r3, #4
	add r7, r6, r3
	strb r1, [r7]
	ldr r2, _080DBC14  @ =gUnknown_08175ECC
	mov r4, r8
	ldrb r0, [r4]
	lsl r0, r0, #3
	mov r1, #0
	ldrsb r1, [r7, r1]
	orr r0, r0, r1
	add r0, r0, r2
	ldrb r4, [r0]
	mov r0, #128
	and r0, r0, r4
	cmp r0, #0
	beq _080DBBBE
	mov r1, #255
	lsl r1, r1, #8
	add r0, r1, #0
	orr r4, r4, r0
_080DBBBE:
	ldr r0, _080DBC18  @ =0x00000EE2
	add r3, r6, r0
	add r3, r5, r3
	ldrb r1, [r3]
	add r0, r0, #32
	add r2, r6, r0
	add r2, r5, r2
	ldrb r0, [r2]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r4, r1
	strb r1, [r3]
	lsr r1, r1, #8
	strb r1, [r2]
	ldrb r0, [r7]
	mov r1, r8
	strb r0, [r1]
	b _080DBC24
	.byte 0x00
	.byte 0x00
_080DBBE4:
	.4byte gRam
_080DBBE8:
	.4byte 0x00001122
_080DBBEC:
	.4byte gUnknown_08175EC4
_080DBBF0:
	.4byte 0x00000F62
_080DBBF4:
	.4byte 0x00000996
_080DBBF8:
	.4byte 0x00000F92
_080DBBFC:
	.4byte gUnknown_08175EBC
_080DBC00:
	.4byte 0x00000B36
_080DBC04:
	.4byte 0x00000FC2
_080DBC08:
	.4byte 0x00000ED2
_080DBC0C:
	.4byte 0x00000EF2
_080DBC10:
	.4byte 0x00000958
_080DBC14:
	.4byte gUnknown_08175ECC
_080DBC18:
	.4byte 0x00000EE2
_080DBC1C:
	ldr r3, _080DBC30  @ =0x00000FA2
	add r0, r6, r3
	add r0, r0, r9
	strb r7, [r0]
_080DBC24:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080DBC30:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080DBAD8

	THUMB_FUNC_START sub_080DBC34
sub_080DBC34: @ 0x080DBC34
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r2, #29
	ldr r1, _080DBD00  @ =gRam
	ldr r3, _080DBD04  @ =0x000011EF
	add r0, r1, r3
	ldrb r0, [r0]
	add r3, r1, #0
	cmp r0, #0
	beq _080DBC66
	ldr r5, _080DBD08  @ =0x000011D2
	add r1, r3, r5
_080DBC4E:
	lsl r0, r2, #24
	mov r2, #255
	lsl r2, r2, #24
	add r0, r0, r2
	lsr r2, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	blt _080DBC6C
	add r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DBC4E
_080DBC66:
	lsl r0, r2, #24
	cmp r0, #0
	bge _080DBC84
_080DBC6C:
	ldr r5, _080DBD0C  @ =0x00001642
	add r2, r3, r5
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080DBC82
	mov r0, #29
	strb r0, [r2]
_080DBC82:
	ldrb r2, [r2]
_080DBC84:
	lsl r2, r2, #24
	asr r2, r2, #24
	ldr r1, _080DBD08  @ =0x000011D2
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #9
	strb r1, [r0]
	ldr r5, _080DBD10  @ =0x000015F8
	add r0, r3, r5
	strb r1, [r0]
	ldr r0, _080DBD14  @ =0x0000131C
	add r1, r3, r0
	add r1, r2, r1
	ldr r5, _080DBD18  @ =0x00000F62
	add r0, r3, r5
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080DBD1C  @ =0x0000122C
	add r1, r3, r0
	add r1, r2, r1
	sub r5, r5, #128
	add r0, r3, r5
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080DBD20  @ =0x00001268
	add r1, r3, r0
	add r1, r2, r1
	add r5, r5, #32
	add r0, r3, r5
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080DBD24  @ =0x00000ED2
	add r0, r3, r1
	add r0, r4, r0
	ldrb r1, [r0]
	sub r5, r5, #16
	add r0, r3, r5
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #16
	ldr r4, _080DBD28  @ =0x0000120E
	add r0, r3, r4
	add r0, r2, r0
	strb r1, [r0]
	ldr r5, _080DBD2C  @ =0x0000124A
	add r0, r3, r5
	add r0, r2, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080DBD30  @ =0x000012FE
	add r0, r3, r1
	add r2, r2, r0
	mov r0, #32
	strb r0, [r2]
	pop {r4,r5}
	pop {r0}
	bx r0
_080DBD00:
	.4byte gRam
_080DBD04:
	.4byte 0x000011EF
_080DBD08:
	.4byte 0x000011D2
_080DBD0C:
	.4byte 0x00001642
_080DBD10:
	.4byte 0x000015F8
_080DBD14:
	.4byte 0x0000131C
_080DBD18:
	.4byte 0x00000F62
_080DBD1C:
	.4byte 0x0000122C
_080DBD20:
	.4byte 0x00001268
_080DBD24:
	.4byte 0x00000ED2
_080DBD28:
	.4byte 0x0000120E
_080DBD2C:
	.4byte 0x0000124A
_080DBD30:
	.4byte 0x000012FE
	THUMB_FUNC_END sub_080DBC34

	THUMB_FUNC_START sub_080DBD34
sub_080DBD34: @ 0x080DBD34
	push {r4,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #191
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080DBDC0
	mov r0, #44
	mov r1, #0
	bl sub_0812A324
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	bl GetRandomInt
	ldr r3, _080DBDC8  @ =gRam
	ldr r1, _080DBDCC  @ =0x00000F62
	add r2, r3, r1
	add r2, r4, r2
	mov r1, #7
	and r1, r1, r0
	strb r1, [r2]
	ldrb r2, [r2]
	mov r0, #150
	lsl r0, r0, #4
	add r1, r3, r0
	ldr r0, _080DBDD0  @ =gUnknown_08175F0C
	add r0, r2, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080DBDD4  @ =gUnknown_08175F14
	add r2, r2, r0
	ldrb r0, [r2]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r2, _080DBDD8  @ =0x00000EE2
	add r0, r3, r2
	add r0, r4, r0
	strb r1, [r0]
	add r2, r2, #32
	add r0, r3, r2
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080DBDDC  @ =0x00000ED2
	add r1, r3, r0
	add r1, r4, r1
	ldr r2, _080DBDE0  @ =0x00000964
	add r0, r3, r2
	ldrb r0, [r0]
	add r0, r0, #12
	strb r0, [r1]
	ldr r1, _080DBDE4  @ =0x00000FC2
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r2, _080DBDE8  @ =0x00001646
	add r0, r3, r2
	mov r1, #48
	strb r1, [r0]
	ldr r0, _080DBDEC  @ =0x00001645
	add r3, r3, r0
	strb r1, [r3]
_080DBDC0:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DBDC8:
	.4byte gRam
_080DBDCC:
	.4byte 0x00000F62
_080DBDD0:
	.4byte gUnknown_08175F0C
_080DBDD4:
	.4byte gUnknown_08175F14
_080DBDD8:
	.4byte 0x00000EE2
_080DBDDC:
	.4byte 0x00000ED2
_080DBDE0:
	.4byte 0x00000964
_080DBDE4:
	.4byte 0x00000FC2
_080DBDE8:
	.4byte 0x00001646
_080DBDEC:
	.4byte 0x00001645
	THUMB_FUNC_END sub_080DBD34

	THUMB_FUNC_START sub_080DBDF0
sub_080DBDF0: @ 0x080DBDF0
	bx lr
	THUMB_FUNC_END sub_080DBDF0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080DBDF4
sub_080DBDF4: @ 0x080DBDF4
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080DBE78  @ =gRam
	ldr r1, _080DBE7C  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #3
	and r0, r0, r1
	add r5, r2, #0
	cmp r0, #0
	bne _080DBE30
	ldr r2, _080DBE80  @ =0x00000F92
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #3
	bne _080DBE28
	mov r1, #2
_080DBE28:
	ldr r2, _080DBE84  @ =0x00001082
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
_080DBE30:
	ldr r1, _080DBE88  @ =0x00001122
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #15
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C6340
	add r0, r4, #0
	bl sub_080E67E8
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DBE6E
	add r0, r4, #0
	bl sub_080C5080
	mov r1, #186
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	ldr r2, _080DBE80  @ =0x00000F92
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
_080DBE6E:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DBE78:
	.4byte gRam
_080DBE7C:
	.4byte 0x00000996
_080DBE80:
	.4byte 0x00000F92
_080DBE84:
	.4byte 0x00001082
_080DBE88:
	.4byte 0x00001122
	THUMB_FUNC_END sub_080DBDF4

	THUMB_FUNC_START sub_080DBE8C
sub_080DBE8C: @ 0x080DBE8C
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080DC058
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DBF68
	add r0, r4, #0
	bl sub_080C5080
	ldr r0, _080DBEC0  @ =gRam
	ldr r1, _080DBEC4  @ =0x00000996
	add r0, r0, r1
	ldrb r0, [r0]
	lsl r1, r0, #24
	lsr r0, r1, #24
	cmp r0, #47
	bls _080DBEC8
	lsr r1, r1, #31
	b _080DBECA
_080DBEC0:
	.4byte gRam
_080DBEC4:
	.4byte 0x00000996
_080DBEC8:
	mov r1, #2
_080DBECA:
	ldr r2, _080DBEEC  @ =gRam
	ldr r3, _080DBEF0  @ =0x00000F92
	add r0, r2, r3
	add r6, r4, r0
	strb r1, [r6]
	ldr r1, _080DBEF4  @ =0x00000F52
	add r0, r2, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080DBEF8
	add r0, r4, #0
	mov r1, #166
	mov r2, sp
	bl sub_080C9164
	b _080DBF58
_080DBEEC:
	.4byte gRam
_080DBEF0:
	.4byte 0x00000F92
_080DBEF4:
	.4byte 0x00000F52
_080DBEF8:
	ldr r0, _080DBF34  @ =gUnknown_0200232E
	ldrb r0, [r0]
	cmp r0, #1
	bls _080DBF5E
	ldr r3, _080DBF38  @ =0x00000A4E
	add r0, r2, r3
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #15
	bne _080DBF28
	ldr r1, _080DBF3C  @ =0x00000545
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	beq _080DBF28
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DBF40
_080DBF28:
	add r0, r4, #0
	mov r1, #167
	mov r2, sp
	bl sub_080C9164
	b _080DBF68
_080DBF34:
	.4byte gUnknown_0200232E
_080DBF38:
	.4byte 0x00000A4E
_080DBF3C:
	.4byte 0x00000545
_080DBF40:
	mov r0, #46
	mov r1, #0
	bl sub_0812A324
	add r0, r4, #0
	mov r1, #165
	mov r2, sp
	bl sub_080C9564
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
_080DBF58:
	mov r0, #2
	strb r0, [r6]
	b _080DBF68
_080DBF5E:
	add r0, r4, #0
	mov r1, #164
	mov r2, sp
	bl sub_080C9164
_080DBF68:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080DBE8C

	THUMB_FUNC_START sub_080DBF70
sub_080DBF70: @ 0x080DBF70
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080DBFB0  @ =gRam
	ldr r0, _080DBFB4  @ =0x00001172
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r3, #0
	add r5, r2, #0
	ldr r1, _080DBFB8  @ =0x000009DA
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r2, _080DBFBC  @ =gUnknown_08175F1C
_080DBF90:
	add r0, r3, r2
	ldrb r0, [r0]
	cmp r1, r0
	beq _080DBFA2
	add r0, r3, #1
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r3, #0
	bne _080DBF90
_080DBFA2:
	ldr r1, _080DBFC0  @ =0x00001052
	add r0, r5, r1
	add r0, r4, r0
	strb r3, [r0]
	pop {r4,r5}
	pop {r0}
	bx r0
_080DBFB0:
	.4byte gRam
_080DBFB4:
	.4byte 0x00001172
_080DBFB8:
	.4byte 0x000009DA
_080DBFBC:
	.4byte gUnknown_08175F1C
_080DBFC0:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DBF70

	THUMB_FUNC_START sub_080DBFC4
sub_080DBFC4: @ 0x080DBFC4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DBFE4  @ =gUnknown_08175F20
	ldr r1, _080DBFE8  @ =gRam
	ldr r3, _080DBFEC  @ =0x00001052
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080DBFE4:
	.4byte gUnknown_08175F20
_080DBFE8:
	.4byte gRam
_080DBFEC:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DBFC4

	THUMB_FUNC_START sub_080DBFF0
sub_080DBFF0: @ 0x080DBFF0
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080DC09C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DC040
	add r0, r4, #0
	bl sub_080C5080
	add r0, r4, #0
	bl sub_080C90F4
	ldr r1, _080DC048  @ =0x00000175
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DC040
	ldr r2, _080DC04C  @ =gRam
	ldr r1, _080DC050  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080DC054  @ =0x00001082
	add r2, r2, r0
	add r2, r4, r2
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r2]
_080DC040:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080DC048:
	.4byte 0x00000175
_080DC04C:
	.4byte gRam
_080DC050:
	.4byte 0x00000FB2
_080DC054:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080DBFF0

	THUMB_FUNC_START sub_080DC058
sub_080DC058: @ 0x080DC058
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080DC08C  @ =gRam
	ldr r1, _080DC090  @ =0x0000096C
	add r2, r0, r1
	mov r1, #2
	strh r1, [r2]
	ldr r1, _080DC094  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080DC098  @ =gUnknown_08175F2C
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DC08C:
	.4byte gRam
_080DC090:
	.4byte 0x0000096C
_080DC094:
	.4byte 0x00000F92
_080DC098:
	.4byte gUnknown_08175F2C
	THUMB_FUNC_END sub_080DC058

	THUMB_FUNC_START sub_080DC09C
sub_080DC09C: @ 0x080DC09C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080DC0DC  @ =gRam
	ldr r0, _080DC0E0  @ =0x0000096C
	add r1, r2, r0
	mov r0, #2
	strh r0, [r1]
	ldr r1, _080DC0E4  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080DC0E8  @ =0x00000F92
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #4
	ldr r0, _080DC0EC  @ =gUnknown_08175F5C
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DC0DC:
	.4byte gRam
_080DC0E0:
	.4byte 0x0000096C
_080DC0E4:
	.4byte 0x00000FB2
_080DC0E8:
	.4byte 0x00000F92
_080DC0EC:
	.4byte gUnknown_08175F5C
	THUMB_FUNC_END sub_080DC09C

	THUMB_FUNC_START sub_080DC0F0
sub_080DC0F0: @ 0x080DC0F0
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080F1160
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080DC0F0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080DC100
sub_080DC100: @ 0x080DC100
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080DC144
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DC134
	add r0, r4, #0
	bl sub_080C5080
	ldr r1, _080DC13C  @ =gUnknown_08175FDC
	ldr r0, _080DC140  @ =gUnknown_0200233A
	ldrb r0, [r0]
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r1, [r0]
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
_080DC134:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080DC13C:
	.4byte gUnknown_08175FDC
_080DC140:
	.4byte gUnknown_0200233A
	THUMB_FUNC_END sub_080DC100

	THUMB_FUNC_START sub_080DC144
sub_080DC144: @ 0x080DC144
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080DC16C  @ =gRam
	ldr r1, _080DC170  @ =0x0000096C
	add r0, r0, r1
	mov r1, #2
	strh r1, [r0]
	ldr r1, _080DC174  @ =gUnknown_08175FE0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DC16C:
	.4byte gRam
_080DC170:
	.4byte 0x0000096C
_080DC174:
	.4byte gUnknown_08175FE0
	THUMB_FUNC_END sub_080DC144

	THUMB_FUNC_START sub_080DC178
sub_080DC178: @ 0x080DC178
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	bl sub_0809E3CC
	cmp r0, #0
	bne _080DC1E8
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DC1E8
	ldr r0, _080DC1BC  @ =gUnknown_02002325
	ldr r1, _080DC1C0  @ =gUnknown_0200232B
	ldrb r0, [r0]
	ldrb r1, [r1]
	orr r0, r0, r1
	ldr r1, _080DC1C4  @ =gUnknown_02002331
	ldrb r1, [r1]
	orr r0, r0, r1
	ldr r1, _080DC1C8  @ =gUnknown_02002337
	ldrb r1, [r1]
	orr r0, r0, r1
	cmp r0, #1
	bhi _080DC1D0
	ldr r1, _080DC1CC  @ =0x00000107
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	b _080DC1E8
_080DC1BC:
	.4byte gUnknown_02002325
_080DC1C0:
	.4byte gUnknown_0200232B
_080DC1C4:
	.4byte gUnknown_02002331
_080DC1C8:
	.4byte gUnknown_02002337
_080DC1CC:
	.4byte 0x00000107
_080DC1D0:
	ldr r2, _080DC1F0  @ =gRam
	ldr r0, _080DC1F4  @ =0x00000F52
	add r1, r2, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080DC1F8  @ =0x00001770
	add r2, r2, r0
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
_080DC1E8:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080DC1F0:
	.4byte gRam
_080DC1F4:
	.4byte 0x00000F52
_080DC1F8:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080DC178

	THUMB_FUNC_START sub_080DC1FC
sub_080DC1FC: @ 0x080DC1FC
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	ldr r5, _080DC244  @ =gRam
	ldr r1, _080DC248  @ =0x00000FC2
	add r0, r5, r1
	add r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #0
	bne _080DC270
	ldr r1, _080DC24C  @ =gUnknown_08176000
	ldr r2, _080DC250  @ =0x00000F62
	add r0, r5, r2
	add r2, r4, r0
	ldrb r0, [r2]
	add r0, r0, r1
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080DC258
	mov r1, #132
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080DC254  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080DC270
_080DC244:
	.4byte gRam
_080DC248:
	.4byte 0x00000FC2
_080DC24C:
	.4byte gUnknown_08176000
_080DC250:
	.4byte 0x00000F62
_080DC254:
	.4byte 0x00000F52
_080DC258:
	ldr r4, _080DC278  @ =0x00000F92
	add r0, r5, r4
	add r0, r6, r0
	strb r1, [r0]
	ldr r1, _080DC27C  @ =gUnknown_08176008
	ldrb r0, [r2]
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r3]
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
_080DC270:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080DC278:
	.4byte 0x00000F92
_080DC27C:
	.4byte gUnknown_08176008
	THUMB_FUNC_END sub_080DC1FC

	THUMB_FUNC_START sub_080DC280
sub_080DC280: @ 0x080DC280
	push {r4,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r3, r1, #0
	ldr r0, _080DC2B0  @ =gUnknown_0200232F
	ldrb r0, [r0]
	ldr r2, _080DC2B4  @ =gRam
	cmp r0, #0
	beq _080DC29C
	ldr r4, _080DC2B8  @ =0x00000F52
	add r0, r2, r4
	add r0, r1, r0
	mov r1, #3
	strb r1, [r0]
_080DC29C:
	ldr r0, _080DC2BC  @ =0x00001172
	add r1, r2, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DC2B0:
	.4byte gUnknown_0200232F
_080DC2B4:
	.4byte gRam
_080DC2B8:
	.4byte 0x00000F52
_080DC2BC:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080DC280

	THUMB_FUNC_START sub_080DC2C0
sub_080DC2C0: @ 0x080DC2C0
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080DC374
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DC2F0
	ldr r1, _080DC2F8  @ =gUnknown_08175FF0
	ldr r0, _080DC2FC  @ =gRam
	ldr r2, _080DC300  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080DC2F0:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DC2F8:
	.4byte gUnknown_08175FF0
_080DC2FC:
	.4byte gRam
_080DC300:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DC2C0

	THUMB_FUNC_START sub_080DC304
sub_080DC304: @ 0x080DC304
	push {r4-r6,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080DC334  @ =gRam
	ldr r1, _080DC338  @ =0x00001776
	add r0, r5, r1
	mov r6, #0
	strb r6, [r0]
	mov r0, #33
	bl sub_080A1588
	ldr r1, _080DC33C  @ =0x00000F52
	add r0, r5, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	ldr r0, _080DC340  @ =0x00001770
	add r5, r5, r0
	strb r6, [r5]
	pop {r4-r6}
	pop {r0}
	bx r0
_080DC334:
	.4byte gRam
_080DC338:
	.4byte 0x00001776
_080DC33C:
	.4byte 0x00000F52
_080DC340:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080DC304

	THUMB_FUNC_START sub_080DC344
sub_080DC344: @ 0x080DC344
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080DC368  @ =gRam
	ldr r2, _080DC36C  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	mov r2, #1
	strb r2, [r1]
	ldr r1, _080DC370  @ =0x00000109
	mov r2, sp
	bl sub_080C9164
	add sp, sp, #4
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DC368:
	.4byte gRam
_080DC36C:
	.4byte 0x00000F92
_080DC370:
	.4byte 0x00000109
	THUMB_FUNC_END sub_080DC344

	THUMB_FUNC_START sub_080DC374
sub_080DC374: @ 0x080DC374
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080DC3A0  @ =gRam
	ldr r2, _080DC3A4  @ =0x0000096C
	add r3, r1, r2
	mov r2, #6
	strh r2, [r3]
	ldr r2, _080DC3A8  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r2, [r1]
	lsl r1, r2, #1
	add r1, r1, r2
	lsl r1, r1, #4
	ldr r2, _080DC3AC  @ =gUnknown_08176010
	add r1, r1, r2
	bl sub_080C94D0
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DC3A0:
	.4byte gRam
_080DC3A4:
	.4byte 0x0000096C
_080DC3A8:
	.4byte 0x00000F92
_080DC3AC:
	.4byte gUnknown_08176010
	THUMB_FUNC_END sub_080DC374

	THUMB_FUNC_START sub_080DC3B0
sub_080DC3B0: @ 0x080DC3B0
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	add r0, r4, #0
	bl sub_080DC43C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080DC418
	add r0, r4, #0
	bl sub_080C5080
	bl GetRandomInt
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DC3EA
	ldr r0, _080DC420  @ =gRam
	ldr r1, _080DC424  @ =0x00000FC2
	add r0, r0, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
_080DC3EA:
	ldr r0, _080DC420  @ =gRam
	ldr r2, _080DC428  @ =0x00000F92
	add r1, r0, r2
	add r5, r4, r1
	strb r6, [r5]
	ldr r1, _080DC424  @ =0x00000FC2
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DC404
	mov r0, #1
	strb r0, [r5]
_080DC404:
	mov r1, #188
	lsl r1, r1, #1
	add r0, r7, #0
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DC418
	strb r6, [r5]
_080DC418:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080DC420:
	.4byte gRam
_080DC424:
	.4byte 0x00000FC2
_080DC428:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080DC3B0

	THUMB_FUNC_START sub_080DC42C
sub_080DC42C: @ 0x080DC42C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080C3758
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080DC42C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080DC43C
sub_080DC43C: @ 0x080DC43C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080DC468  @ =gRam
	ldr r2, _080DC46C  @ =0x0000096C
	add r3, r1, r2
	mov r2, #3
	strh r2, [r3]
	ldr r2, _080DC470  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r2, [r1]
	lsl r1, r2, #1
	add r1, r1, r2
	lsl r1, r1, #3
	ldr r2, _080DC474  @ =gUnknown_081760A0
	add r1, r1, r2
	bl sub_080CA918
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DC468:
	.4byte gRam
_080DC46C:
	.4byte 0x0000096C
_080DC470:
	.4byte 0x00000F92
_080DC474:
	.4byte gUnknown_081760A0
	THUMB_FUNC_END sub_080DC43C

	THUMB_FUNC_START sub_080DC478
sub_080DC478: @ 0x080DC478
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080DC5A8  @ =gRam
	ldr r1, _080DC5AC  @ =0x000009B2
	add r0, r6, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bne _080DC498
	b _080DC624
_080DC498:
	ldr r2, _080DC5B0  @ =0x00000F52
	add r0, r6, r2
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DC4A6
	b _080DC5E0
_080DC4A6:
	add r0, r5, #0
	bl sub_080D5954
	ldr r7, _080DC5B4  @ =0x000010D2
	add r0, r6, r7
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DC51A
	ldr r1, _080DC5B8  @ =gUnknown_081760D0
	ldr r2, _080DC5BC  @ =0x00000F92
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r1, [r0]
	mov r7, #150
	lsl r7, r7, #4
	add r0, r6, r7
	strb r1, [r0]
	mov r0, #0
	ldr r1, _080DC5C0  @ =gUnknown_03003E74
	mov r9, r1
	mov r2, #170
	lsl r2, r2, #3
	add r2, r2, r6
	mov r8, r2
	add r6, r6, r7
	ldr r7, _080DC5C4  @ =0x000003FF
	ldr r1, _080DC5C8  @ =0xFFFFFC00
	mov r12, r1
_080DC4E4:
	lsl r4, r0, #24
	asr r2, r4, #26
	mov r0, r9
	ldrh r0, [r0]
	add r2, r2, r0
	lsl r2, r2, #3
	add r2, r2, r8
	ldrb r1, [r6]
	and r1, r1, r7
	ldrh r3, [r2, #4]
	mov r0, r12
	and r0, r0, r3
	orr r0, r0, r1
	strh r0, [r2, #4]
	ldrb r1, [r2, #5]
	mov r0, #15
	and r0, r0, r1
	mov r1, #16
	orr r0, r0, r1
	strb r0, [r2, #5]
	mov r1, #128
	lsl r1, r1, #19
	add r4, r4, r1
	lsr r0, r4, #24
	asr r4, r4, #24
	cmp r4, #19
	ble _080DC4E4
_080DC51A:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DC528
	b _080DC778
_080DC528:
	ldr r4, _080DC5A8  @ =gRam
	ldr r2, _080DC5CC  @ =0x00000FC2
	add r0, r4, r2
	add r0, r5, r0
	ldrb r6, [r0]
	cmp r6, #0
	beq _080DC538
	b _080DC778
_080DC538:
	ldr r7, _080DC5D0  @ =0x00000EA5
	add r0, r4, r7
	add r0, r5, r0
	mov r1, #48
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DC560
	ldr r1, _080DC5D4  @ =0x00000FA2
	add r0, r4, r1
	add r0, r5, r0
	strb r6, [r0]
	ldr r2, _080DC5D8  @ =0x0000188C
	add r1, r4, r2
	mov r0, #128
	lsl r0, r0, #1
	strh r0, [r1]
_080DC560:
	mov r7, #161
	lsl r7, r7, #4
	add r0, r4, r7
	ldr r2, _080DC5DC  @ =0x000010F2
	add r1, r4, r2
	add r1, r5, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080DC57C
	add r0, r5, #0
	mov r1, #16
	bl sub_080C35FC
_080DC57C:
	add r0, r5, #0
	bl Sprite3_Move
	add r0, r5, #0
	bl sub_080C7A48
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DC590
	b _080DC778
_080DC590:
	ldr r7, _080DC5D4  @ =0x00000FA2
	add r0, r4, r7
	add r0, r5, r0
	strb r6, [r0]
	add r0, r5, #0
	bl sub_080CF6C0
	add r0, r5, #0
	mov r1, #21
	bl sub_080CF0AC
	b _080DC778
_080DC5A8:
	.4byte gRam
_080DC5AC:
	.4byte 0x000009B2
_080DC5B0:
	.4byte 0x00000F52
_080DC5B4:
	.4byte 0x000010D2
_080DC5B8:
	.4byte gUnknown_081760D0
_080DC5BC:
	.4byte 0x00000F92
_080DC5C0:
	.4byte gUnknown_03003E74
_080DC5C4:
	.4byte 0x000003FF
_080DC5C8:
	.4byte 0xFFFFFC00
_080DC5CC:
	.4byte 0x00000FC2
_080DC5D0:
	.4byte 0x00000EA5
_080DC5D4:
	.4byte 0x00000FA2
_080DC5D8:
	.4byte 0x0000188C
_080DC5DC:
	.4byte 0x000010F2
_080DC5E0:
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r5, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DC5F4
	b _080DC778
_080DC5F4:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DC602
	b _080DC778
_080DC602:
	add r0, r5, #0
	bl sub_080C7A48
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DC610
	b _080DC778
_080DC610:
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	ldr r1, _080DC620  @ =0x00000FC2
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #128
	b _080DC776
_080DC620:
	.4byte 0x00000FC2
_080DC624:
	ldr r2, _080DC6C8  @ =0x00001032
	add r2, r2, r6
	mov r9, r2
	add r0, r5, r2
	mov r1, #64
	strb r1, [r0]
	ldr r7, _080DC6CC  @ =0x00001172
	add r0, r6, r7
	add r0, r5, r0
	strb r1, [r0]
	ldr r0, _080DC6D0  @ =0x00000F52
	add r0, r0, r6
	mov r8, r0
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DC6F0
	ldr r1, _080DC6D4  @ =0x00000D94
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #48
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080DC7AC
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DC664
	b _080DC778
_080DC664:
	add r0, r5, #0
	bl Sprite3_Move
	ldr r2, _080DC6D8  @ =0x00001052
	add r0, r6, r2
	add r4, r5, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	mov r1, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080DC778
	ldr r7, _080DC6DC  @ =0x00000FB2
	add r0, r6, r7
	add r3, r5, r0
	ldrb r0, [r3]
	mov r2, #1
	and r2, r2, r0
	ldr r0, _080DC6E0  @ =0x00000F22
	add r1, r6, r0
	add r1, r5, r1
	ldr r0, _080DC6E4  @ =gUnknown_081760D6
	add r0, r2, r0
	ldrb r0, [r0]
	ldrb r7, [r1]
	add r0, r0, r7
	strb r0, [r1]
	ldr r1, _080DC6E8  @ =gUnknown_081760DA
	add r2, r2, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r2, [r2]
	cmp r0, r2
	bne _080DC6B0
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
_080DC6B0:
	ldrb r1, [r4]
	mov r0, #31
	and r0, r0, r1
	cmp r0, #0
	bne _080DC778
	ldr r0, _080DC6EC  @ =0x00000F92
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080DC778
_080DC6C8:
	.4byte 0x00001032
_080DC6CC:
	.4byte 0x00001172
_080DC6D0:
	.4byte 0x00000F52
_080DC6D4:
	.4byte 0x00000D94
_080DC6D8:
	.4byte 0x00001052
_080DC6DC:
	.4byte 0x00000FB2
_080DC6E0:
	.4byte 0x00000F22
_080DC6E4:
	.4byte gUnknown_081760D6
_080DC6E8:
	.4byte gUnknown_081760DA
_080DC6EC:
	.4byte 0x00000F92
_080DC6F0:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DC778
	ldr r1, _080DC788  @ =0x00000FC2
	add r0, r6, r1
	add r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080DC778
	mov r7, #67
	strb r7, [r1]
	mov r0, #209
	add r1, r5, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080DC778
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080DC78C  @ =0x00000EE2
	add r1, r6, r2
	add r1, r4, r1
	mov r2, #150
	lsl r2, r2, #4
	add r0, r6, r2
	ldrb r0, [r0]
	add r0, r0, #8
	strb r0, [r1]
	ldr r0, _080DC790  @ =0x00000ED2
	add r1, r6, r0
	add r1, r4, r1
	add r2, r2, #4
	add r0, r6, r2
	ldrb r0, [r0]
	add r0, r0, #4
	strb r0, [r1]
	ldr r1, _080DC794  @ =0x00001122
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	mov r2, r8
	add r0, r4, r2
	strb r1, [r0]
	ldr r1, _080DC798  @ =0x00001012
	add r0, r6, r1
	add r0, r4, r0
	strb r7, [r0]
	mov r2, r9
	add r0, r4, r2
	strb r7, [r0]
	ldr r7, _080DC79C  @ =0x00000F22
	add r0, r6, r7
	add r0, r4, r0
	ldr r1, _080DC7A0  @ =gUnknown_081760DA
	ldrb r1, [r1, #1]
	strb r1, [r0]
	ldr r1, _080DC7A4  @ =0x00000F12
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #250
_080DC776:
	strb r1, [r0]
_080DC778:
	add sp, sp, #4
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DC788:
	.4byte 0x00000FC2
_080DC78C:
	.4byte 0x00000EE2
_080DC790:
	.4byte 0x00000ED2
_080DC794:
	.4byte 0x00001122
_080DC798:
	.4byte 0x00001012
_080DC79C:
	.4byte 0x00000F22
_080DC7A0:
	.4byte gUnknown_081760DA
_080DC7A4:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080DC478

	THUMB_FUNC_START sub_080DC7A8
sub_080DC7A8: @ 0x080DC7A8
	bx lr
	THUMB_FUNC_END sub_080DC7A8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080DC7AC
sub_080DC7AC: @ 0x080DC7AC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080DC7D0  @ =gRam
	ldr r2, _080DC7D4  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r2, [r1]
	mov r1, #1
	and r1, r1, r2
	lsl r1, r1, #5
	ldr r2, _080DC7D8  @ =gUnknown_081760DC
	add r1, r1, r2
	mov r2, #4
	bl sub_080C9480
	pop {r0}
	bx r0
_080DC7D0:
	.4byte gRam
_080DC7D4:
	.4byte 0x00000F92
_080DC7D8:
	.4byte gUnknown_081760DC
	THUMB_FUNC_END sub_080DC7AC

	THUMB_FUNC_START sub_080DC7DC
sub_080DC7DC: @ 0x080DC7DC
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	ldr r6, _080DC834  @ =gRam
	ldr r1, _080DC838  @ =0x00001082
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DC844
	ldr r2, _080DC83C  @ =0x00000F52
	add r0, r6, r2
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080DC808
	add r0, r4, #0
	bl sub_080C6240
_080DC808:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DC816
	b _080DC928
_080DC816:
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r0, _080DC840  @ =gUnknown_0817611C
	ldrb r1, [r5]
	lsl r1, r1, #2
	add r1, r1, r0
	ldr r1, [r1]
	add r0, r4, #0
	bl _call_via_r1
	b _080DC928
_080DC834:
	.4byte gRam
_080DC838:
	.4byte 0x00001082
_080DC83C:
	.4byte 0x00000F52
_080DC840:
	.4byte gUnknown_0817611C
_080DC844:
	ldr r1, _080DC8F4  @ =0x00001052
	add r0, r6, r1
	add r7, r4, r0
	ldrb r1, [r7]
	mov r0, #16
	and r0, r0, r1
	cmp r0, #0
	beq _080DC85A
	mov r0, #4
	bl sub_080CF388
_080DC85A:
	add r0, r4, #0
	bl sub_080C58F0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DC928
	ldr r2, _080DC8F8  @ =0x00000F52
	add r0, r6, r2
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080DC910
	add r0, r0, #1
	strb r0, [r5]
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080DC88C
	add r2, r2, #80
	add r0, r6, r2
	add r0, r4, r0
	strb r1, [r0]
_080DC88C:
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	mov r5, #7
	mov r1, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080DC8A4
	mov r0, #94
	mov r1, #0
	bl sub_0812A324
_080DC8A4:
	ldrb r0, [r7]
	lsr r0, r0, #2
	and r0, r0, r5
	ldr r1, _080DC8FC  @ =0x000016C4
	add r2, r6, r1
	ldr r1, _080DC900  @ =gUnknown_08176130
	add r0, r0, r1
	ldrb r0, [r0]
	ldrh r1, [r2]
	add r1, r1, r0
	ldr r2, _080DC904  @ =0x00000EE2
	add r0, r6, r2
	add r0, r4, r0
	strb r1, [r0]
	add r2, r2, #32
	add r0, r6, r2
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldrb r0, [r7]
	lsr r0, r0, #4
	and r0, r0, r5
	mov r1, #182
	lsl r1, r1, #5
	add r2, r6, r1
	ldr r1, _080DC908  @ =gUnknown_08176138
	add r0, r0, r1
	ldrb r0, [r0]
	ldrh r1, [r2]
	add r1, r1, r0
	ldr r2, _080DC90C  @ =0x00000ED2
	add r0, r6, r2
	add r0, r4, r0
	strb r1, [r0]
	add r2, r2, #32
	add r0, r6, r2
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	b _080DC928
_080DC8F4:
	.4byte 0x00001052
_080DC8F8:
	.4byte 0x00000F52
_080DC8FC:
	.4byte 0x000016C4
_080DC900:
	.4byte gUnknown_08176130
_080DC904:
	.4byte 0x00000EE2
_080DC908:
	.4byte gUnknown_08176138
_080DC90C:
	.4byte 0x00000ED2
_080DC910:
	mov r0, r8
	bl Sprite3_Move
	ldr r1, _080DC934  @ =0x00000FC2
	add r0, r6, r1
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DC928
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
_080DC928:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DC934:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080DC7DC

	THUMB_FUNC_START sub_080DC938
sub_080DC938: @ 0x080DC938
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080DC9B0  @ =gUnknown_0200235B
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DC9D6
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DC9D6
	mov r1, #4
	ldr r5, _080DC9B4  @ =gRam
	ldr r2, _080DC9B8  @ =0x00000F52
	add r0, r5, r2
	add r6, r4, r0
	mov r0, #0
	mov r9, r0
	ldr r2, _080DC9BC  @ =0x00001122
	add r0, r5, r2
	add r7, r4, r0
	ldr r2, _080DC9C0  @ =0x00000F62
	add r0, r5, r2
	add r0, r0, r4
	mov r8, r0
_080DC974:
	lsl r0, r1, #24
	asr r1, r0, #24
	ldr r2, _080DC9C4  @ =0x00000E15
	add r0, r5, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #26
	bne _080DC9CC
	add r0, r4, #0
	bl sub_080CBBEC
	add r0, r4, #0
	mov r1, #63
	bl sub_080CF018
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	mov r0, #20
	mov r1, r8
	strb r0, [r1]
	ldr r2, _080DC9C8  @ =0x00001770
	add r1, r5, r2
	mov r0, #1
	strb r0, [r1]
	ldrb r0, [r7]
	mov r1, #32
	orr r0, r0, r1
	strb r0, [r7]
	b _080DC9D6
_080DC9B0:
	.4byte gUnknown_0200235B
_080DC9B4:
	.4byte gRam
_080DC9B8:
	.4byte 0x00000F52
_080DC9BC:
	.4byte 0x00001122
_080DC9C0:
	.4byte 0x00000F62
_080DC9C4:
	.4byte 0x00000E15
_080DC9C8:
	.4byte 0x00001770
_080DC9CC:
	sub r0, r1, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bge _080DC974
_080DC9D6:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080DC938

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080DC9E4
sub_080DC9E4: @ 0x080DC9E4
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r6, _080DCA50  @ =gRam
	ldr r1, _080DCA54  @ =0x00000FC2
	add r0, r6, r1
	add r0, r0, r4
	mov r8, r0
	ldrb r5, [r0]
	cmp r5, #0
	bne _080DCAA0
	ldr r2, _080DCA58  @ =0x00000F62
	add r0, r6, r2
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	mov r3, r8
	strb r0, [r3]
	lsl r1, r0, #24
	lsr r0, r1, #24
	cmp r0, #1
	bne _080DCA70
	ldr r1, _080DCA5C  @ =0x00000113
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080DCA60  @ =0x00000F52
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080DCA64  @ =0x00000F92
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	ldr r2, _080DCA68  @ =0x00001152
	add r0, r6, r2
	add r0, r4, r0
	strb r5, [r0]
	ldr r3, _080DCA6C  @ =0x00000F22
	add r0, r6, r3
	add r0, r4, r0
	strb r5, [r0]
	mov r0, #255
	mov r1, r8
	b _080DCA9E
	.byte 0x00
	.byte 0x00
_080DCA50:
	.4byte gRam
_080DCA54:
	.4byte 0x00000FC2
_080DCA58:
	.4byte 0x00000F62
_080DCA5C:
	.4byte 0x00000113
_080DCA60:
	.4byte 0x00000F52
_080DCA64:
	.4byte 0x00000F92
_080DCA68:
	.4byte 0x00001152
_080DCA6C:
	.4byte 0x00000F22
_080DCA70:
	ldr r3, _080DCAAC  @ =0x00001152
	add r0, r6, r3
	add r0, r7, r0
	lsr r1, r1, #26
	strb r1, [r0]
	ldr r0, _080DCAB0  @ =0x00000F22
	add r1, r6, r0
	add r1, r7, r1
	ldr r3, _080DCAB4  @ =gUnknown_08176140
	ldrb r2, [r2]
	mov r4, #1
	mov r0, #1
	and r0, r0, r2
	add r0, r0, r3
	ldrb r0, [r0]
	ldrb r2, [r1]
	add r0, r0, r2
	strb r0, [r1]
	ldr r3, _080DCAB8  @ =0x00000F92
	add r1, r6, r3
	add r1, r7, r1
	ldrb r0, [r1]
	eor r0, r0, r4
_080DCA9E:
	strb r0, [r1]
_080DCAA0:
	add sp, sp, #4
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080DCAAC:
	.4byte 0x00001152
_080DCAB0:
	.4byte 0x00000F22
_080DCAB4:
	.4byte gUnknown_08176140
_080DCAB8:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080DC9E4

	THUMB_FUNC_START sub_080DCABC
sub_080DCABC: @ 0x080DCABC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r1, _080DCB10  @ =gRam
	ldr r2, _080DCB14  @ =0x00000FC2
	add r0, r1, r2
	add r2, r5, r0
	ldrb r0, [r2]
	add r6, r1, #0
	cmp r0, #0
	bne _080DCAE8
	ldr r0, _080DCB18  @ =0x00000F52
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080DCB1C  @ =0x00000FD2
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #64
	strb r1, [r0]
_080DCAE8:
	ldrb r0, [r2]
	lsl r1, r0, #24
	lsr r0, r1, #24
	cmp r0, #240
	bls _080DCB28
	ldr r2, _080DCB20  @ =0x00001122
	add r3, r6, r2
	add r3, r5, r3
	ldrb r0, [r3]
	mov r2, #241
	and r2, r2, r0
	ldr r4, _080DCB24  @ =gUnknown_08176142
	lsr r0, r1, #25
	mov r1, #7
	and r0, r0, r1
	add r0, r0, r4
	ldrb r0, [r0]
	orr r2, r2, r0
	strb r2, [r3]
	b _080DCB3A
_080DCB10:
	.4byte gRam
_080DCB14:
	.4byte 0x00000FC2
_080DCB18:
	.4byte 0x00000F52
_080DCB1C:
	.4byte 0x00000FD2
_080DCB20:
	.4byte 0x00001122
_080DCB24:
	.4byte gUnknown_08176142
_080DCB28:
	ldr r0, _080DCB54  @ =0x00001122
	add r2, r6, r0
	add r2, r5, r2
	ldrb r1, [r2]
	mov r0, #241
	and r0, r0, r1
	mov r1, #10
	orr r0, r0, r1
	strb r0, [r2]
_080DCB3A:
	ldr r1, _080DCB58  @ =0x00000FC2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #240
	bne _080DCB4C
	add r0, r5, #0
	bl sub_080DCD64
_080DCB4C:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DCB54:
	.4byte 0x00001122
_080DCB58:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080DCABC

	THUMB_FUNC_START sub_080DCB5C
sub_080DCB5C: @ 0x080DCB5C
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DCB80  @ =gRam
	ldr r1, _080DCB84  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r0, r1, #0
	cmp r0, #0
	beq _080DCB8C
	cmp r0, #16
	bne _080DCBB8
	ldr r2, _080DCB88  @ =0x00001643
	add r0, r5, r2
	strb r1, [r0]
	b _080DCBB8
_080DCB80:
	.4byte gRam
_080DCB84:
	.4byte 0x00000FD2
_080DCB88:
	.4byte 0x00001643
_080DCB8C:
	mov r1, #138
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	bl sub_08132448
	ldr r1, _080DCBC0  @ =0x0000099B
	add r0, r5, r1
	mov r2, #1
	strb r2, [r0]
	ldr r0, _080DCBC4  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080DCBC8  @ =gUnknown_0200235B
	strb r2, [r0]
	bl sub_080AA724
_080DCBB8:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080DCBC0:
	.4byte 0x0000099B
_080DCBC4:
	.4byte 0x00000F52
_080DCBC8:
	.4byte gUnknown_0200235B
	THUMB_FUNC_END sub_080DCB5C

	THUMB_FUNC_START sub_080DCBCC
sub_080DCBCC: @ 0x080DCBCC
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r7, r0, #24
	mov r0, #58
	add r1, r7, #0
	bl sub_080CA538
	add r6, r0, #0
	cmp r6, #0
	blt _080DCCC6
	add r0, r7, #0
	mov r1, #42
	bl sub_080CF140
	lsl r0, r6, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080DCCCC  @ =gRam
	mov r0, #150
	lsl r0, r0, #4
	add r1, r2, r0
	ldrh r0, [r1]
	add r0, r0, #4
	mov r5, #0
	strh r0, [r1]
	ldr r3, _080DCCD0  @ =0x00000EE2
	add r0, r2, r3
	add r0, r6, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DCCD4  @ =0x00000F02
	add r0, r2, r1
	add r0, r6, r0
	ldr r3, _080DCCD8  @ =0x00000961
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080DCCDC  @ =0x00000964
	add r3, r2, r0
	ldr r1, _080DCCE0  @ =0x00001142
	add r4, r2, r1
	add r0, r7, r4
	ldrb r1, [r0]
	sub r1, r1, #12
	ldrh r0, [r3]
	sub r0, r0, r1
	strh r0, [r3]
	ldr r1, _080DCCE4  @ =0x00000ED2
	add r0, r2, r1
	add r0, r6, r0
	ldrb r1, [r3]
	strb r1, [r0]
	ldr r3, _080DCCE8  @ =0x00000EF2
	add r0, r2, r3
	add r0, r6, r0
	ldr r3, _080DCCEC  @ =0x00000965
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	add r4, r6, r4
	strb r5, [r4]
	ldr r1, _080DCCF0  @ =0x00000F12
	add r0, r2, r1
	add r0, r6, r0
	mov r1, #24
	strb r1, [r0]
	ldr r3, _080DCCF4  @ =0x00001082
	add r0, r2, r3
	add r0, r6, r0
	strb r1, [r0]
	add r3, r3, #240
	add r0, r2, r3
	add r0, r6, r0
	strb r1, [r0]
	ldr r1, _080DCCF8  @ =0x00001012
	add r0, r2, r1
	add r0, r6, r0
	mov r1, #128
	strb r1, [r0]
	ldr r3, _080DCCFC  @ =0x00001032
	add r0, r2, r3
	add r0, r6, r0
	mov r1, #3
	strb r1, [r0]
	add r3, r3, #240
	add r0, r2, r3
	add r0, r6, r0
	strb r1, [r0]
	ldr r1, _080DCD00  @ =0x00000FC2
	add r0, r2, r1
	add r0, r6, r0
	mov r1, #32
	strb r1, [r0]
	ldr r3, _080DCD04  @ =0x00000F92
	add r0, r2, r3
	add r0, r6, r0
	mov r5, #2
	strb r5, [r0]
	ldr r0, _080DCD08  @ =0x00000F22
	add r1, r2, r0
	add r1, r6, r1
	ldr r3, _080DCD0C  @ =gUnknown_0817614A
	ldr r0, _080DCD10  @ =0x000010A2
	add r4, r2, r0
	add r4, r7, r4
	ldrb r0, [r4]
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r3, _080DCD14  @ =0x00001052
	add r1, r2, r3
	add r1, r6, r1
	ldr r3, _080DCD18  @ =gUnknown_0817614E
	ldrb r0, [r4]
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080DCD1C  @ =0x000010F2
	add r2, r2, r0
	add r2, r6, r2
	strb r5, [r2]
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
_080DCCC6:
	pop {r4-r7}
	pop {r0}
	bx r0
_080DCCCC:
	.4byte gRam
_080DCCD0:
	.4byte 0x00000EE2
_080DCCD4:
	.4byte 0x00000F02
_080DCCD8:
	.4byte 0x00000961
_080DCCDC:
	.4byte 0x00000964
_080DCCE0:
	.4byte 0x00001142
_080DCCE4:
	.4byte 0x00000ED2
_080DCCE8:
	.4byte 0x00000EF2
_080DCCEC:
	.4byte 0x00000965
_080DCCF0:
	.4byte 0x00000F12
_080DCCF4:
	.4byte 0x00001082
_080DCCF8:
	.4byte 0x00001012
_080DCCFC:
	.4byte 0x00001032
_080DCD00:
	.4byte 0x00000FC2
_080DCD04:
	.4byte 0x00000F92
_080DCD08:
	.4byte 0x00000F22
_080DCD0C:
	.4byte gUnknown_0817614A
_080DCD10:
	.4byte 0x000010A2
_080DCD14:
	.4byte 0x00001052
_080DCD18:
	.4byte gUnknown_0817614E
_080DCD1C:
	.4byte 0x000010F2
	THUMB_FUNC_END sub_080DCBCC

	THUMB_FUNC_START sub_080DCD20
sub_080DCD20: @ 0x080DCD20
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080C3734
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080DCD20

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080DCD30
sub_080DCD30: @ 0x080DCD30
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080CBCE8
	ldr r1, _080DCD58  @ =gRam
	ldr r2, _080DCD5C  @ =0x00000FA2
	add r0, r1, r2
	add r4, r4, r0
	mov r0, #0
	strb r0, [r4]
	ldr r2, _080DCD60  @ =0x00001770
	add r1, r1, r2
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DCD58:
	.4byte gRam
_080DCD5C:
	.4byte 0x00000FA2
_080DCD60:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080DCD30

	THUMB_FUNC_START sub_080DCD64
sub_080DCD64: @ 0x080DCD64
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080DCBCC
	add r0, r4, #0
	bl sub_080DCBCC
	add r0, r4, #0
	bl sub_080DCBCC
	add r0, r4, #0
	bl sub_080DCBCC
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080DCD64

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080DCD8C
sub_080DCD8C: @ 0x080DCD8C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080DCDC4  @ =gRam
	ldr r0, _080DCDC8  @ =0x00001172
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080DCDCC  @ =0x000009DA
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #228
	beq _080DCE00
	ldr r0, _080DCDD0  @ =0x00001663
	add r5, r3, r0
	ldrb r4, [r5]
	cmp r4, #0
	beq _080DCDD8
	ldr r1, _080DCDD4  @ =0x00000FA2
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #0
	strb r1, [r0]
	bl sub_0812F9A8
	b _080DCE0A
_080DCDC4:
	.4byte gRam
_080DCDC8:
	.4byte 0x00001172
_080DCDCC:
	.4byte 0x000009DA
_080DCDD0:
	.4byte 0x00001663
_080DCDD4:
	.4byte 0x00000FA2
_080DCDD8:
	ldr r0, _080DCDEC  @ =gUnknown_02002336
	ldrb r0, [r0]
	cmp r0, #2
	beq _080DCDF0
	mov r0, #4
	strb r0, [r5]
	bl sub_0812F9A8
	strb r4, [r5]
	b _080DCE0A
_080DCDEC:
	.4byte gUnknown_02002336
_080DCDF0:
	ldr r1, _080DCDFC  @ =0x00000FA2
	add r0, r3, r1
	add r0, r2, r0
	strb r4, [r0]
	b _080DCE0A
	.byte 0x00
	.byte 0x00
_080DCDFC:
	.4byte 0x00000FA2
_080DCE00:
	ldr r1, _080DCE10  @ =0x00001052
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #2
	strb r1, [r0]
_080DCE0A:
	pop {r4,r5}
	pop {r0}
	bx r0
_080DCE10:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DCD8C

	THUMB_FUNC_START sub_080DCE14
sub_080DCE14: @ 0x080DCE14
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C90F4
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r5, _080DCE6C  @ =gRam
	ldr r2, _080DCE70  @ =0x00001082
	add r1, r5, r2
	add r6, r4, r1
	mov r1, #3
	eor r0, r0, r1
	strb r0, [r6]
	add r0, r4, #0
	mov r1, #159
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DCE64
	ldr r1, _080DCE74  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r6]
	ldr r2, _080DCE78  @ =0x00000F52
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080DCE64:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080DCE6C:
	.4byte gRam
_080DCE70:
	.4byte 0x00001082
_080DCE74:
	.4byte 0x00000FB2
_080DCE78:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DCE14

	THUMB_FUNC_START sub_080DCE7C
sub_080DCE7C: @ 0x080DCE7C
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080DCEE4  @ =gRam
	ldr r0, _080DCEE8  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	mov r2, #0
	strb r0, [r1]
	ldr r1, _080DCEEC  @ =0x00001776
	add r0, r5, r1
	strb r2, [r0]
	mov r0, #26
	bl sub_080A1588
	mov r0, #1
	bl sub_080BE9A0
	add r0, r4, #0
	bl sub_080DD3D4
	ldr r1, _080DCEF0  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #48
	strb r1, [r0]
	ldr r1, _080DCEF4  @ =0x00000F22
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #8
	strb r1, [r0]
	ldr r1, _080DCEF8  @ =0x00000F12
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	ldr r1, _080DCEFC  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	ldr r0, _080DCF00  @ =0x00000FB2
	add r5, r5, r0
	add r4, r4, r5
	strb r1, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DCEE4:
	.4byte gRam
_080DCEE8:
	.4byte 0x00000F52
_080DCEEC:
	.4byte 0x00001776
_080DCEF0:
	.4byte 0x00000FC2
_080DCEF4:
	.4byte 0x00000F22
_080DCEF8:
	.4byte 0x00000F12
_080DCEFC:
	.4byte 0x00001082
_080DCF00:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080DCE7C

	THUMB_FUNC_START sub_080DCF04
sub_080DCF04: @ 0x080DCF04
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080DCFF4  @ =gRam
	ldr r1, _080DCFF8  @ =0x00001082
	add r0, r4, r1
	add r0, r5, r0
	mov r6, #0
	strb r6, [r0]
	ldr r2, _080DCFFC  @ =0x00000FB2
	add r0, r4, r2
	add r0, r5, r0
	strb r6, [r0]
	ldr r7, _080DD000  @ =0x00001628
	add r3, r4, r7
	ldrb r0, [r3]
	ldr r1, _080DD004  @ =0x00000D33
	add r1, r1, r4
	mov r8, r1
	add r0, r0, r8
	ldrb r0, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r4
	mov r10, r2
	strb r0, [r2]
	ldrb r0, [r3]
	ldr r7, _080DD008  @ =0x00000D3B
	add r7, r7, r4
	mov r12, r7
	add r0, r0, r12
	ldrb r0, [r0]
	ldr r1, _080DD00C  @ =0x00000961
	add r1, r1, r4
	mov r9, r1
	strb r0, [r1]
	ldr r2, _080DD010  @ =0x00000ED2
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	ldr r7, _080DD014  @ =0x00000964
	add r2, r4, r7
	strb r0, [r2]
	ldr r1, _080DD018  @ =0x00000EF2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r7, r7, #1
	add r0, r4, r7
	strb r1, [r0]
	mov r1, r10
	ldrh r0, [r1]
	ldrh r2, [r2]
	cmp r0, r2
	bcs _080DD034
	ldr r2, _080DD01C  @ =0x00000D23
	add r0, r4, r2
	ldrb r7, [r3]
	add r0, r0, r7
	ldrb r1, [r0]
	ldr r2, _080DD020  @ =0x00000968
	add r0, r4, r2
	strb r1, [r0]
	ldr r7, _080DD024  @ =0x00000D2B
	add r0, r4, r7
	ldrb r1, [r3]
	add r0, r0, r1
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r4, r2
	strb r1, [r0]
	ldrb r0, [r3]
	add r0, r0, r8
	ldrb r1, [r0]
	ldr r7, _080DD028  @ =0x0000096C
	add r0, r4, r7
	strb r1, [r0]
	ldrb r0, [r3]
	add r0, r0, r12
	ldrb r1, [r0]
	add r2, r2, #4
	add r0, r4, r2
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #8
	bl sub_080C2DCC
	ldr r7, _080DD02C  @ =0x00000F12
	add r0, r4, r7
	add r0, r5, r0
	mov r2, r10
	ldrb r1, [r2]
	strb r1, [r0]
	add r7, r7, #16
	add r0, r4, r7
	add r0, r5, r0
	mov r2, r9
	ldrb r1, [r2]
	strb r1, [r0]
	add r7, r7, #112
	add r2, r4, r7
	add r2, r5, r2
	ldr r1, _080DD030  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	add r0, r5, #0
	eor r0, r0, r1
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	add r0, r5, #0
	bl sub_080DD3D4
	b _080DD050
	.byte 0x00
	.byte 0x00
_080DCFF4:
	.4byte gRam
_080DCFF8:
	.4byte 0x00001082
_080DCFFC:
	.4byte 0x00000FB2
_080DD000:
	.4byte 0x00001628
_080DD004:
	.4byte 0x00000D33
_080DD008:
	.4byte 0x00000D3B
_080DD00C:
	.4byte 0x00000961
_080DD010:
	.4byte 0x00000ED2
_080DD014:
	.4byte 0x00000964
_080DD018:
	.4byte 0x00000EF2
_080DD01C:
	.4byte 0x00000D23
_080DD020:
	.4byte 0x00000968
_080DD024:
	.4byte 0x00000D2B
_080DD028:
	.4byte 0x0000096C
_080DD02C:
	.4byte 0x00000F12
_080DD030:
	.4byte 0x00000996
_080DD034:
	ldr r2, _080DD060  @ =0x00000F52
	add r1, r4, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r7, _080DD064  @ =0x00000F22
	add r0, r4, r7
	add r0, r5, r0
	strb r6, [r0]
	ldr r1, _080DD068  @ =0x00000F12
	add r0, r4, r1
	add r0, r5, r0
	strb r6, [r0]
_080DD050:
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DD060:
	.4byte 0x00000F52
_080DD064:
	.4byte 0x00000F22
_080DD068:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080DCF04

	THUMB_FUNC_START sub_080DD06C
sub_080DD06C: @ 0x080DD06C
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	bl sub_080C5080
	ldr r3, _080DD0C8  @ =gRam
	ldr r1, _080DD0CC  @ =0x00000F52
	add r0, r3, r1
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080DD092
	ldr r0, _080DD0D0  @ =gUnknown_02002352
	mov r1, #160
	strb r1, [r0]
	mov r0, #0
	strb r0, [r4]
_080DD092:
	mov r2, #2
	ldr r1, _080DD0D4  @ =0x0000165E
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080DD0A2
	ldr r0, _080DD0D8  @ =gUnknown_0200233B
	ldrb r2, [r0]
_080DD0A2:
	ldr r1, _080DD0DC  @ =gUnknown_08176178
	lsl r0, r2, #1
	add r0, r0, r1
	ldrh r1, [r0]
	add r0, r5, #0
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DD0BE
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
_080DD0BE:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DD0C8:
	.4byte gRam
_080DD0CC:
	.4byte 0x00000F52
_080DD0D0:
	.4byte gUnknown_02002352
_080DD0D4:
	.4byte 0x0000165E
_080DD0D8:
	.4byte gUnknown_0200233B
_080DD0DC:
	.4byte gUnknown_08176178
	THUMB_FUNC_END sub_080DD06C

	THUMB_FUNC_START sub_080DD0E0
sub_080DD0E0: @ 0x080DD0E0
	push {r4-r6,lr}
	add r5, r0, #0
	lsl r5, r5, #24
	lsr r5, r5, #24
	mov r0, #173
	mov r1, #0
	bl sub_080CA538
	ldr r4, _080DD190  @ =gRam
	ldr r1, _080DD194  @ =0x00001082
	add r3, r4, r1
	add r3, r0, r3
	ldr r2, _080DD198  @ =gUnknown_0200EC04
	add r1, r5, r2
	ldrb r1, [r1]
	mov r2, #3
	and r2, r2, r1
	mov r6, #0
	strb r2, [r3]
	ldr r3, _080DD19C  @ =0x00000FB2
	add r1, r4, r3
	add r1, r0, r1
	strb r2, [r1]
	ldr r2, _080DD1A0  @ =gUnknown_0200EBA0
	add r1, r5, r2
	ldrb r2, [r1]
	ldr r3, _080DD1A4  @ =gUnknown_0200EBB4
	add r1, r5, r3
	ldrb r1, [r1]
	lsl r1, r1, #8
	add r2, r2, r1
	add r2, r2, #2
	ldr r3, _080DD1A8  @ =0x00000ED2
	add r1, r4, r3
	add r1, r0, r1
	strb r2, [r1]
	add r3, r3, #32
	add r1, r4, r3
	add r1, r0, r1
	lsr r2, r2, #8
	strb r2, [r1]
	ldr r2, _080DD1AC  @ =gUnknown_0200EBC8
	add r1, r5, r2
	ldrb r2, [r1]
	ldr r3, _080DD1B0  @ =gUnknown_0200EBDC
	add r1, r5, r3
	ldrb r1, [r1]
	lsl r1, r1, #8
	add r2, r2, r1
	add r2, r2, #2
	ldr r3, _080DD1B4  @ =0x00000EE2
	add r1, r4, r3
	add r1, r0, r1
	strb r2, [r1]
	add r3, r3, #32
	add r1, r4, r3
	add r1, r0, r1
	lsr r2, r2, #8
	strb r2, [r1]
	ldr r2, _080DD1B8  @ =0x000010F2
	add r1, r4, r2
	add r1, r0, r1
	mov r3, #161
	lsl r3, r3, #4
	add r2, r4, r3
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080DD1BC  @ =0x00001172
	add r1, r4, r2
	add r1, r0, r1
	mov r2, #1
	strb r2, [r1]
	ldr r3, _080DD1C0  @ =0x00001052
	add r1, r4, r3
	add r0, r0, r1
	strb r2, [r0]
	add r0, r5, #0
	bl sub_080DD3D4
	ldr r1, _080DD1C4  @ =0x00001663
	add r0, r4, r1
	strb r6, [r0]
	ldr r2, _080DD1C8  @ =0x00001719
	add r4, r4, r2
	strb r6, [r4]
	pop {r4-r6}
	pop {r0}
	bx r0
_080DD190:
	.4byte gRam
_080DD194:
	.4byte 0x00001082
_080DD198:
	.4byte gUnknown_0200EC04
_080DD19C:
	.4byte 0x00000FB2
_080DD1A0:
	.4byte gUnknown_0200EBA0
_080DD1A4:
	.4byte gUnknown_0200EBB4
_080DD1A8:
	.4byte 0x00000ED2
_080DD1AC:
	.4byte gUnknown_0200EBC8
_080DD1B0:
	.4byte gUnknown_0200EBDC
_080DD1B4:
	.4byte 0x00000EE2
_080DD1B8:
	.4byte 0x000010F2
_080DD1BC:
	.4byte 0x00001172
_080DD1C0:
	.4byte 0x00001052
_080DD1C4:
	.4byte 0x00001663
_080DD1C8:
	.4byte 0x00001719
	THUMB_FUNC_END sub_080DD0E0

	THUMB_FUNC_START sub_080DD1CC
sub_080DD1CC: @ 0x080DD1CC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080DD1F0  @ =gRam
	ldr r1, _080DD1F4  @ =0x00001052
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	cmp r1, #2
	bne _080DD200
	ldr r2, _080DD1F8  @ =0x0000096C
	add r0, r4, r2
	strh r1, [r0]
	ldr r1, _080DD1FC  @ =gUnknown_08176180
	add r0, r5, #0
	bl sub_080C94D0
	b _080DD246
_080DD1F0:
	.4byte gRam
_080DD1F4:
	.4byte 0x00001052
_080DD1F8:
	.4byte 0x0000096C
_080DD1FC:
	.4byte gUnknown_08176180
_080DD200:
	ldr r3, _080DD24C  @ =0x00000FB2
	add r0, r4, r3
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r6, _080DD250  @ =0x00000F92
	add r0, r4, r6
	add r0, r5, r0
	lsl r1, r1, #1
	ldrb r0, [r0]
	add r1, r1, r0
	lsl r1, r1, #25
	lsr r1, r1, #24
	ldr r0, _080DD254  @ =0x0000096C
	add r2, r4, r0
	mov r0, #2
	strh r0, [r2]
	ldr r3, _080DD258  @ =gUnknown_08176210
	add r0, r1, r3
	ldrb r2, [r0]
	ldr r6, _080DD25C  @ =0x00000CDE
	add r0, r4, r6
	strh r2, [r0]
	add r0, r1, #1
	add r0, r0, r3
	ldrb r2, [r0]
	mov r3, #206
	lsl r3, r3, #4
	add r0, r4, r3
	strh r2, [r0]
	lsl r1, r1, #3
	ldr r0, _080DD260  @ =gUnknown_08176190
	add r1, r1, r0
	add r0, r5, #0
	bl sub_080C94D0
_080DD246:
	pop {r4-r6}
	pop {r0}
	bx r0
_080DD24C:
	.4byte 0x00000FB2
_080DD250:
	.4byte 0x00000F92
_080DD254:
	.4byte 0x0000096C
_080DD258:
	.4byte gUnknown_08176210
_080DD25C:
	.4byte 0x00000CDE
_080DD260:
	.4byte gUnknown_08176190
	THUMB_FUNC_END sub_080DD1CC

	THUMB_FUNC_START sub_080DD264
sub_080DD264: @ 0x080DD264
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080DD1CC
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DD294
	ldr r1, _080DD29C  @ =gUnknown_08176154
	ldr r0, _080DD2A0  @ =gRam
	ldr r2, _080DD2A4  @ =0x00001052
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080DD294:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DD29C:
	.4byte gUnknown_08176154
_080DD2A0:
	.4byte gRam
_080DD2A4:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DD264

	THUMB_FUNC_START sub_080DD2A8
sub_080DD2A8: @ 0x080DD2A8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DD2C8  @ =gUnknown_08176160
	ldr r1, _080DD2CC  @ =gRam
	ldr r3, _080DD2D0  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080DD2C8:
	.4byte gUnknown_08176160
_080DD2CC:
	.4byte gRam
_080DD2D0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DD2A8

	THUMB_FUNC_START sub_080DD2D4
sub_080DD2D4: @ 0x080DD2D4
	push {r4-r6,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080DD308  @ =gRam
	ldr r0, _080DD30C  @ =0x00001663
	add r1, r5, r0
	mov r6, #0
	mov r0, #4
	strb r0, [r1]
	add r0, r4, #0
	bl sub_081146A4
	mov r0, #5
	bl sub_080BE9A0
	ldr r0, _080DD310  @ =0x00000FA2
	add r5, r5, r0
	add r4, r4, r5
	strb r6, [r4]
	bl sub_0808B1FC
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DD308:
	.4byte gRam
_080DD30C:
	.4byte 0x00001663
_080DD310:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080DD2D4

	THUMB_FUNC_START sub_080DD314
sub_080DD314: @ 0x080DD314
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080DD340  @ =gUnknown_08176168
	ldr r0, _080DD344  @ =gRam
	ldr r2, _080DD348  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
_080DD340:
	.4byte gUnknown_08176168
_080DD344:
	.4byte gRam
_080DD348:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DD314

	THUMB_FUNC_START sub_080DD34C
sub_080DD34C: @ 0x080DD34C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080DD3D4
	ldr r3, _080DD390  @ =gRam
	ldr r1, _080DD394  @ =0x00000FC2
	add r0, r3, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DD374
	ldr r0, _080DD398  @ =0x00000F52
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080DD374:
	ldr r1, _080DD39C  @ =0x00000F92
	add r2, r3, r1
	add r2, r5, r2
	ldr r1, _080DD3A0  @ =0x00000996
	add r0, r3, r1
	ldrb r0, [r0]
	eor r5, r5, r0
	lsr r0, r5, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	pop {r4,r5}
	pop {r0}
	bx r0
_080DD390:
	.4byte gRam
_080DD394:
	.4byte 0x00000FC2
_080DD398:
	.4byte 0x00000F52
_080DD39C:
	.4byte 0x00000F92
_080DD3A0:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080DD34C

	THUMB_FUNC_START sub_080DD3A4
sub_080DD3A4: @ 0x080DD3A4
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DD3C4  @ =gRam
	ldr r3, _080DD3C8  @ =0x00000FA2
	add r1, r2, r3
	add r0, r0, r1
	mov r1, #0
	strb r1, [r0]
	ldr r3, _080DD3CC  @ =0x00001770
	add r0, r2, r3
	strb r1, [r0]
	ldr r0, _080DD3D0  @ =0x0000180D
	add r2, r2, r0
	strb r1, [r2]
	bx lr
	.byte 0x00
	.byte 0x00
_080DD3C4:
	.4byte gRam
_080DD3C8:
	.4byte 0x00000FA2
_080DD3CC:
	.4byte 0x00001770
_080DD3D0:
	.4byte 0x0000180D
	THUMB_FUNC_END sub_080DD3A4

	THUMB_FUNC_START sub_080DD3D4
sub_080DD3D4: @ 0x080DD3D4
	ldr r0, _080DD3E8  @ =gRam
	ldr r2, _080DD3EC  @ =0x00001770
	add r1, r0, r2
	mov r2, #1
	strb r2, [r1]
	ldr r1, _080DD3F0  @ =0x0000180D
	add r0, r0, r1
	strb r2, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080DD3E8:
	.4byte gRam
_080DD3EC:
	.4byte 0x00001770
_080DD3F0:
	.4byte 0x0000180D
	THUMB_FUNC_END sub_080DD3D4

	THUMB_FUNC_START sub_080DD3F4
sub_080DD3F4: @ 0x080DD3F4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r4, #15
_080DD3FC:
	add r0, r5, #0
	bl sub_080DDA2C
	lsl r0, r4, #24
	mov r1, #255
	lsl r1, r1, #24
	add r0, r0, r1
	lsr r4, r0, #24
	cmp r0, #0
	bne _080DD3FC
	mov r4, #15
	ldr r2, _080DD460  @ =gUnknown_03003222
	add r6, r2, #0
	sub r6, r6, #80
	mov r3, #0
_080DD41A:
	lsl r0, r4, #24
	asr r1, r0, #24
	add r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #43
	bne _080DD42A
	add r0, r1, r6
	strb r3, [r0]
_080DD42A:
	sub r0, r1, #1
	lsl r0, r0, #24
	lsr r4, r0, #24
	cmp r0, #0
	bne _080DD41A
	add r0, r5, #0
	bl sub_080DD7A0
	ldr r2, _080DD464  @ =gRam
	ldr r1, _080DD468  @ =0x00001662
	add r0, r2, r1
	ldrb r1, [r0]
	mov r3, #1
	add r0, r3, #0
	and r0, r0, r1
	cmp r0, #0
	beq _080DD454
	ldr r0, _080DD46C  @ =0x00000F52
	add r1, r2, r0
	mov r0, #3
	strb r0, [r1]
_080DD454:
	ldr r1, _080DD470  @ =0x00001172
	add r0, r2, r1
	strb r3, [r0]
	pop {r4-r6}
	pop {r0}
	bx r0
_080DD460:
	.4byte gUnknown_03003222
_080DD464:
	.4byte gRam
_080DD468:
	.4byte 0x00001662
_080DD46C:
	.4byte 0x00000F52
_080DD470:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080DD3F4

	THUMB_FUNC_START sub_080DD474
sub_080DD474: @ 0x080DD474
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DD4F4  @ =gRam
	ldr r1, _080DD4F8  @ =0x00001132
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #7
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DD4CE
	ldr r1, _080DD4FC  @ =gUnknown_03003E70
	mov r0, #1
	strb r0, [r1]
	ldr r2, _080DD500  @ =0x00000546
	add r0, r5, r2
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	beq _080DD4CE
	ldr r0, _080DD504  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080DD508  @ =0x00001062
	add r0, r5, r1
	add r0, r4, r0
	ldr r2, _080DD50C  @ =0x00000FC2
	add r1, r5, r2
	ldrb r0, [r0]
	add r1, r1, r0
	mov r0, #4
	strb r0, [r1]
	ldr r0, _080DD510  @ =0x00001770
	add r1, r5, r0
	mov r0, #1
	strb r0, [r1]
_080DD4CE:
	ldr r5, _080DD4F4  @ =gRam
	ldr r1, _080DD514  @ =0x00000FE2
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080DD4EE
	mov r0, #160
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080DD6A0
	ldr r2, _080DD508  @ =0x00001062
	add r1, r5, r2
	add r1, r4, r1
	strb r0, [r1]
_080DD4EE:
	pop {r4,r5}
	pop {r0}
	bx r0
_080DD4F4:
	.4byte gRam
_080DD4F8:
	.4byte 0x00001132
_080DD4FC:
	.4byte gUnknown_03003E70
_080DD500:
	.4byte 0x00000546
_080DD504:
	.4byte 0x00000F52
_080DD508:
	.4byte 0x00001062
_080DD50C:
	.4byte 0x00000FC2
_080DD510:
	.4byte 0x00001770
_080DD514:
	.4byte 0x00000FE2
	THUMB_FUNC_END sub_080DD474

	THUMB_FUNC_START sub_080DD518
sub_080DD518: @ 0x080DD518
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	ldr r5, _080DD560  @ =gRam
	ldr r1, _080DD564  @ =0x00000FC2
	add r0, r5, r1
	add r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #0
	bne _080DD58C
	ldr r1, _080DD568  @ =gUnknown_08176240
	ldr r2, _080DD56C  @ =0x00000F62
	add r0, r5, r2
	add r2, r4, r0
	ldrb r0, [r2]
	add r0, r0, r1
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080DD574
	add r0, r4, #0
	mov r1, #218
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080DD570  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080DD58C
	.byte 0x00
	.byte 0x00
_080DD560:
	.4byte gRam
_080DD564:
	.4byte 0x00000FC2
_080DD568:
	.4byte gUnknown_08176240
_080DD56C:
	.4byte 0x00000F62
_080DD570:
	.4byte 0x00000F52
_080DD574:
	ldr r4, _080DD594  @ =0x00000F92
	add r0, r5, r4
	add r0, r6, r0
	strb r1, [r0]
	ldr r1, _080DD598  @ =gUnknown_08176248
	ldrb r0, [r2]
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r3]
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
_080DD58C:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080DD594:
	.4byte 0x00000F92
_080DD598:
	.4byte gUnknown_08176248
	THUMB_FUNC_END sub_080DD518

	THUMB_FUNC_START sub_080DD59C
sub_080DD59C: @ 0x080DD59C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r4, _080DD5EC  @ =gRam
	ldr r1, _080DD5F0  @ =0x00000F52
	add r2, r4, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	mov r3, #0
	strb r1, [r2]
	ldr r2, _080DD5F4  @ =0x00000F92
	add r1, r4, r2
	add r0, r0, r1
	mov r5, #1
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080DD5F8  @ =0x000009C6
	add r0, r4, r1
	ldrh r1, [r0]
	ldr r2, _080DD5FC  @ =gUnknown_02002280
	add r1, r1, r2
	ldrb r0, [r1]
	mov r2, #32
	orr r0, r0, r2
	strb r0, [r1]
	ldr r1, _080DD600  @ =0x00001776
	add r0, r4, r1
	strb r3, [r0]
	mov r0, #22
	bl sub_080A1588
	ldr r2, _080DD604  @ =0x00001662
	add r4, r4, r2
	ldrb r0, [r4]
	orr r5, r5, r0
	strb r5, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
_080DD5EC:
	.4byte gRam
_080DD5F0:
	.4byte 0x00000F52
_080DD5F4:
	.4byte 0x00000F92
_080DD5F8:
	.4byte 0x000009C6
_080DD5FC:
	.4byte gUnknown_02002280
_080DD600:
	.4byte 0x00001776
_080DD604:
	.4byte 0x00001662
	THUMB_FUNC_END sub_080DD59C

	THUMB_FUNC_START sub_080DD608
sub_080DD608: @ 0x080DD608
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r0, #4
	bl sub_080CF3A0
	add r0, r4, #0
	bl sub_080C58F0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DD680
	ldr r5, _080DD688  @ =gRam
	ldr r1, _080DD68C  @ =0x00000F92
	add r0, r5, r1
	add r2, r4, r0
	ldr r3, _080DD690  @ =0x00000996
	add r0, r5, r3
	ldrb r0, [r0]
	lsr r1, r0, #4
	mov r0, #1
	and r1, r1, r0
	add r0, r1, #2
	strb r0, [r2]
	ldr r3, _080DD694  @ =0x00000FD2
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DD668
	add r0, r1, #3
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r1, _080DD698  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080DD668
	ldr r2, _080DD69C  @ =0x00000FA2
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
_080DD668:
	ldr r1, _080DD688  @ =gRam
	ldr r3, _080DD698  @ =0x00000FC2
	add r0, r1, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #3
	bhi _080DD680
	ldr r2, _080DD68C  @ =0x00000F92
	add r0, r1, r2
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
_080DD680:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DD688:
	.4byte gRam
_080DD68C:
	.4byte 0x00000F92
_080DD690:
	.4byte 0x00000996
_080DD694:
	.4byte 0x00000FD2
_080DD698:
	.4byte 0x00000FC2
_080DD69C:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080DD608

	THUMB_FUNC_START sub_080DD6A0
sub_080DD6A0: @ 0x080DD6A0
	push {r4,r5,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #43
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080DD6F8
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080DD700  @ =gRam
	ldr r1, _080DD704  @ =0x00001052
	add r0, r2, r1
	add r0, r4, r0
	mov r3, #0
	mov r1, #1
	strb r1, [r0]
	ldr r5, _080DD708  @ =0x00001152
	add r0, r2, r5
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080DD70C  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #96
	strb r1, [r0]
	ldr r5, _080DD710  @ =0x00000FD2
	add r0, r2, r5
	add r0, r4, r0
	mov r1, #48
	strb r1, [r0]
	ldr r5, _080DD714  @ =0x00001172
	add r0, r2, r5
	add r0, r4, r0
	strb r1, [r0]
	ldr r0, _080DD718  @ =0x00001012
	add r2, r2, r0
	add r2, r4, r2
	strb r3, [r2]
_080DD6F8:
	add r0, r4, #0
	pop {r4,r5}
	pop {r1}
	bx r1
_080DD700:
	.4byte gRam
_080DD704:
	.4byte 0x00001052
_080DD708:
	.4byte 0x00001152
_080DD70C:
	.4byte 0x00000FC2
_080DD710:
	.4byte 0x00000FD2
_080DD714:
	.4byte 0x00001172
_080DD718:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080DD6A0

	THUMB_FUNC_START sub_080DD71C
sub_080DD71C: @ 0x080DD71C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r0, r6, #0
	bl sub_080C58F0
	add r0, r6, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DD784
	ldr r4, _080DD78C  @ =gRam
	ldr r1, _080DD790  @ =0x00000996
	add r0, r4, r1
	ldrb r2, [r0]
	lsr r2, r2, #3
	mov r0, #3
	and r2, r2, r0
	mov r0, #150
	lsl r0, r0, #4
	add r5, r4, r0
	strb r2, [r5]
	ldr r0, _080DD794  @ =0x00000F92
	add r1, r4, r0
	add r1, r6, r1
	mov r0, #1
	and r0, r0, r2
	strb r0, [r1]
	ldr r1, _080DD798  @ =0x00001122
	add r3, r4, r1
	add r3, r6, r3
	ldrb r0, [r3]
	mov r2, #191
	and r2, r2, r0
	ldrb r0, [r5]
	lsl r0, r0, #4
	mov r1, #64
	and r0, r0, r1
	orr r2, r2, r0
	strb r2, [r3]
	ldr r0, _080DD79C  @ =0x00000FC2
	add r4, r4, r0
	add r4, r6, r4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080DD784
	add r0, r6, #0
	bl sub_080DD8AC
	mov r0, #47
	strb r0, [r4]
_080DD784:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DD78C:
	.4byte gRam
_080DD790:
	.4byte 0x00000996
_080DD794:
	.4byte 0x00000F92
_080DD798:
	.4byte 0x00001122
_080DD79C:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080DD71C

	THUMB_FUNC_START sub_080DD7A0
sub_080DD7A0: @ 0x080DD7A0
	push {r4-r6,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #43
	bl sub_080CA538
	ldr r3, _080DD80C  @ =gRam
	ldr r2, _080DD810  @ =0x00000EE2
	add r1, r3, r2
	add r1, r0, r1
	mov r5, #0
	mov r2, #148
	strb r2, [r1]
	ldr r6, _080DD814  @ =0x00000F02
	add r1, r3, r6
	add r1, r0, r1
	mov r2, #1
	strb r2, [r1]
	ldr r2, _080DD818  @ =0x00000ED2
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #63
	strb r2, [r1]
	sub r6, r6, #16
	add r1, r3, r6
	add r1, r0, r1
	strb r5, [r1]
	ldr r2, _080DD81C  @ =0x00001052
	add r1, r3, r2
	add r1, r0, r1
	mov r4, #2
	mov r2, #2
	strb r2, [r1]
	ldr r6, _080DD820  @ =0x00001172
	add r1, r3, r6
	add r1, r0, r1
	strb r2, [r1]
	ldr r2, _080DD824  @ =0x00001012
	add r1, r3, r2
	add r1, r0, r1
	strb r5, [r1]
	sub r6, r6, #80
	add r3, r3, r6
	add r0, r0, r3
	ldrb r2, [r0]
	mov r1, #241
	and r1, r1, r2
	orr r1, r1, r4
	strb r1, [r0]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DD80C:
	.4byte gRam
_080DD810:
	.4byte 0x00000EE2
_080DD814:
	.4byte 0x00000F02
_080DD818:
	.4byte 0x00000ED2
_080DD81C:
	.4byte 0x00001052
_080DD820:
	.4byte 0x00001172
_080DD824:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080DD7A0

	THUMB_FUNC_START sub_080DD828
sub_080DD828: @ 0x080DD828
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080DD894  @ =gRam
	ldr r1, _080DD898  @ =0x00000F92
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #6
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080C58F0
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DD88E
	add r0, r5, #0
	bl Sprite3_Move
	add r0, r5, #0
	bl sub_080C2C4C
	ldr r2, _080DD89C  @ =0x00001122
	add r3, r6, r2
	add r3, r5, r3
	ldrb r0, [r3]
	mov r2, #63
	and r2, r2, r0
	ldr r4, _080DD8A0  @ =gUnknown_0817624F
	ldr r1, _080DD8A4  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #4
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r4
	ldrb r0, [r0]
	orr r2, r2, r0
	strb r2, [r3]
	ldr r2, _080DD8A8  @ =0x00000FC2
	add r0, r6, r2
	add r0, r5, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080DD88E
	sub r2, r2, #32
	add r0, r6, r2
	add r0, r5, r0
	strb r1, [r0]
_080DD88E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080DD894:
	.4byte gRam
_080DD898:
	.4byte 0x00000F92
_080DD89C:
	.4byte 0x00001122
_080DD8A0:
	.4byte gUnknown_0817624F
_080DD8A4:
	.4byte 0x00000996
_080DD8A8:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080DD828

	THUMB_FUNC_START sub_080DD8AC
sub_080DD8AC: @ 0x080DD8AC
	push {r4,r5,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #43
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080DD91C
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080DD924  @ =gRam
	ldr r0, _080DD928  @ =0x00000964
	add r1, r2, r0
	ldrh r0, [r1]
	add r0, r0, #4
	mov r3, #0
	strh r0, [r1]
	ldr r5, _080DD92C  @ =0x00000ED2
	add r0, r2, r5
	add r0, r4, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DD930  @ =0x00000EF2
	add r0, r2, r1
	add r0, r4, r0
	ldr r5, _080DD934  @ =0x00000965
	add r1, r2, r5
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DD938  @ =0x00001052
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	ldr r5, _080DD93C  @ =0x00001152
	add r0, r2, r5
	add r0, r4, r0
	mov r1, #7
	strb r1, [r0]
	ldr r1, _080DD940  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #96
	strb r1, [r0]
	add r5, r5, #32
	add r0, r2, r5
	add r0, r4, r0
	strb r1, [r0]
	ldr r0, _080DD944  @ =0x00001012
	add r2, r2, r0
	add r2, r4, r2
	strb r3, [r2]
_080DD91C:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DD924:
	.4byte gRam
_080DD928:
	.4byte 0x00000964
_080DD92C:
	.4byte 0x00000ED2
_080DD930:
	.4byte 0x00000EF2
_080DD934:
	.4byte 0x00000965
_080DD938:
	.4byte 0x00001052
_080DD93C:
	.4byte 0x00001152
_080DD940:
	.4byte 0x00000FC2
_080DD944:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080DD8AC

	THUMB_FUNC_START sub_080DD948
sub_080DD948: @ 0x080DD948
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DD968  @ =gUnknown_08176220
	ldr r1, _080DD96C  @ =gRam
	ldr r3, _080DD970  @ =0x00001052
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080DD968:
	.4byte gUnknown_08176220
_080DD96C:
	.4byte gRam
_080DD970:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DD948

	THUMB_FUNC_START sub_080DD974
sub_080DD974: @ 0x080DD974
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	add r0, r4, #0
	bl sub_080DDA70
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080DD9CC
	ldr r5, _080DD9D4  @ =gRam
	ldr r1, _080DD9D8  @ =0x00001132
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DD9B6
	bl sub_080AF16C
	ldr r2, _080DD9DC  @ =0x00001719
	add r0, r5, r2
	strb r6, [r0]
	bl sub_08093078
_080DD9B6:
	ldr r1, _080DD9E0  @ =gUnknown_08176230
	ldr r2, _080DD9E4  @ =0x00000F52
	add r0, r5, r2
	add r0, r7, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r7, #0
	bl _call_via_r1
_080DD9CC:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DD9D4:
	.4byte gRam
_080DD9D8:
	.4byte 0x00001132
_080DD9DC:
	.4byte 0x00001719
_080DD9E0:
	.4byte gUnknown_08176230
_080DD9E4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DD974

	THUMB_FUNC_START sub_080DD9E8
sub_080DD9E8: @ 0x080DD9E8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r1, _080DDA1C  @ =gRam
	ldr r2, _080DDA20  @ =0x00001770
	add r0, r1, r2
	mov r2, #0
	strb r2, [r0]
	ldr r4, _080DDA24  @ =0x00000F92
	add r0, r1, r4
	add r0, r3, r0
	strb r2, [r0]
	ldr r0, _080DDA28  @ =0x00000FC2
	add r1, r1, r0
	add r1, r3, r1
	ldrb r0, [r1]
	cmp r0, #0
	bne _080DDA16
	mov r0, #160
	strb r0, [r1]
	add r0, r3, #0
	bl sub_080DD6A0
_080DDA16:
	pop {r4}
	pop {r0}
	bx r0
_080DDA1C:
	.4byte gRam
_080DDA20:
	.4byte 0x00001770
_080DDA24:
	.4byte 0x00000F92
_080DDA28:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080DD9E8

	THUMB_FUNC_START sub_080DDA2C
sub_080DDA2C: @ 0x080DDA2C
	push {r4,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #43
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080DDA5C
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r1, _080DDA64  @ =gRam
	ldr r2, _080DDA68  @ =0x00001052
	add r0, r1, r2
	add r0, r4, r0
	mov r2, #0
	strb r2, [r0]
	ldr r0, _080DDA6C  @ =0x00001172
	add r1, r1, r0
	add r1, r4, r1
	strb r2, [r1]
_080DDA5C:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DDA64:
	.4byte gRam
_080DDA68:
	.4byte 0x00001052
_080DDA6C:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080DDA2C

	THUMB_FUNC_START sub_080DDA70
sub_080DDA70: @ 0x080DDA70
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080DDA98  @ =gRam
	ldr r2, _080DDA9C  @ =0x0000096C
	add r3, r1, r2
	mov r2, #4
	strh r2, [r3]
	ldr r2, _080DDAA0  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #5
	ldr r2, _080DDAA4  @ =gUnknown_08176254
	add r1, r1, r2
	bl sub_080C94D0
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DDA98:
	.4byte gRam
_080DDA9C:
	.4byte 0x0000096C
_080DDAA0:
	.4byte 0x00000F92
_080DDAA4:
	.4byte gUnknown_08176254
	THUMB_FUNC_END sub_080DDA70

	THUMB_FUNC_START sub_080DDAA8
sub_080DDAA8: @ 0x080DDAA8
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080DDB18  @ =gRam
	ldr r1, _080DDB1C  @ =0x00001082
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DDB2C
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r5, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DDBBA
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DDBBA
	ldr r2, _080DDB20  @ =0x00001052
	add r4, r6, r2
	add r4, r5, r4
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080DDDA4
	ldrb r1, [r4]
	mov r0, #31
	and r0, r0, r1
	cmp r0, #0
	bne _080DDB00
	add r0, r5, #0
	mov r1, #39
	bl sub_080CF140
_080DDB00:
	ldr r1, _080DDB24  @ =gUnknown_081762B4
	ldr r3, _080DDB28  @ =0x00000F52
	add r0, r6, r3
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
	b _080DDBBA
_080DDB18:
	.4byte gRam
_080DDB1C:
	.4byte 0x00001082
_080DDB20:
	.4byte 0x00001052
_080DDB24:
	.4byte gUnknown_081762B4
_080DDB28:
	.4byte 0x00000F52
_080DDB2C:
	ldr r1, _080DDBC4  @ =0x00000FE2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	mov r2, #0
	sub r0, r1, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #62
	bhi _080DDB5C
	add r1, r0, #0
	cmp r1, #0
	bne _080DDB4E
	ldr r3, _080DDBC8  @ =0x00000FA2
	add r0, r6, r3
	add r0, r5, r0
	strb r2, [r0]
_080DDB4E:
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080DDB58
	mov r2, #1
_080DDB58:
	cmp r2, #0
	beq _080DDBBA
_080DDB5C:
	add r0, r5, #0
	bl sub_080DDEC8
	ldr r4, _080DDBCC  @ =gRam
	ldr r1, _080DDBD0  @ =0x000010A2
	add r0, r4, r1
	add r2, r5, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080DDB8C
	mov r0, #5
	strb r0, [r2]
	ldr r3, _080DDBD4  @ =0x00000F92
	add r2, r4, r3
	add r2, r5, r2
	ldrb r0, [r2]
	add r0, r0, #1
	mov r1, #3
	and r0, r0, r1
	strb r0, [r2]
_080DDB8C:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DDBBA
	ldr r0, _080DDBD8  @ =0x00001052
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080DDBDC  @ =gUnknown_081762C0
	ldr r2, _080DDBE0  @ =0x00000F52
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
_080DDBBA:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DDBC4:
	.4byte 0x00000FE2
_080DDBC8:
	.4byte 0x00000FA2
_080DDBCC:
	.4byte gRam
_080DDBD0:
	.4byte 0x000010A2
_080DDBD4:
	.4byte 0x00000F92
_080DDBD8:
	.4byte 0x00001052
_080DDBDC:
	.4byte gUnknown_081762C0
_080DDBE0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DDAA8

	THUMB_FUNC_START sub_080DDBE4
sub_080DDBE4: @ 0x080DDBE4
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080DDC6C  @ =gRam
	ldr r1, _080DDC70  @ =0x00000F62
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #8
	bl sub_080C35FC
	add r0, r5, #0
	bl Sprite3_Move
	add r0, r5, #0
	bl sub_080C1F70
	ldr r3, _080DDC74  @ =0x000016C4
	add r2, r4, r3
	ldr r1, _080DDC78  @ =0x00001622
	add r0, r4, r1
	ldrb r1, [r0]
	sub r3, r3, #161
	add r0, r4, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	add r0, r0, #3
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #5
	bhi _080DDC64
	mov r0, #182
	lsl r0, r0, #5
	add r2, r4, r0
	ldr r1, _080DDC7C  @ =0x00001624
	add r0, r4, r1
	ldrb r1, [r0]
	add r3, r3, #2
	add r0, r4, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	add r0, r0, #11
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #5
	bhi _080DDC64
	ldr r1, _080DDC80  @ =gUnknown_02002352
	ldrb r0, [r1]
	add r0, r0, #160
	strb r0, [r1]
	ldr r0, _080DDC84  @ =0x00000F52
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080DDC64:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DDC6C:
	.4byte gRam
_080DDC70:
	.4byte 0x00000F62
_080DDC74:
	.4byte 0x000016C4
_080DDC78:
	.4byte 0x00001622
_080DDC7C:
	.4byte 0x00001624
_080DDC80:
	.4byte gUnknown_02002352
_080DDC84:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DDBE4

	THUMB_FUNC_START sub_080DDC88
sub_080DDC88: @ 0x080DDC88
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DDCDC  @ =gRam
	ldr r1, _080DDCE0  @ =0x00001052
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080DDCD6
	ldr r1, _080DDCE4  @ =0x00000F62
	add r0, r5, r1
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r3, #0
	bne _080DDCD6
	lsl r1, r1, #1
	mov r0, #1
	orr r1, r1, r0
	strb r1, [r2]
	lsl r0, r1, #24
	cmp r0, #0
	bge _080DDCD6
	mov r0, #255
	orr r1, r1, r0
	strb r1, [r2]
	ldr r1, _080DDCE8  @ =0x00001770
	add r0, r5, r1
	strb r3, [r0]
	ldr r1, _080DDCEC  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	strb r3, [r0]
_080DDCD6:
	pop {r4,r5}
	pop {r0}
	bx r0
_080DDCDC:
	.4byte gRam
_080DDCE0:
	.4byte 0x00001052
_080DDCE4:
	.4byte 0x00000F62
_080DDCE8:
	.4byte 0x00001770
_080DDCEC:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080DDC88

	THUMB_FUNC_START sub_080DDCF0
sub_080DDCF0: @ 0x080DDCF0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r0, r6, #0
	bl sub_080DDDA4
	ldr r5, _080DDD84  @ =gRam
	ldr r1, _080DDD88  @ =0x00000F62
	add r0, r5, r1
	add r0, r6, r0
	mov r7, #1
	strb r7, [r0]
	add r0, r6, #0
	bl sub_080C2FA8
	ldr r1, _080DDD8C  @ =0x0000097D
	add r0, r5, r1
	ldrb r0, [r0]
	add r0, r0, #48
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #95
	bhi _080DDD7E
	sub r1, r1, #1
	add r0, r5, r1
	ldrb r0, [r0]
	add r0, r0, #48
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #95
	bhi _080DDD7E
	bl sub_08093078
	ldr r0, _080DDD90  @ =0x00000F52
	add r1, r5, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080DDD94  @ =0x0000015D
	bl sub_080C95C0
	ldr r1, _080DDD98  @ =0x00001770
	add r0, r5, r1
	strb r7, [r0]
	mov r0, #200
	add r1, r6, #0
	bl sub_080CA538
	add r4, r0, #0
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r1, _080DDD9C  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	strb r7, [r0]
	ldr r0, _080DDDA0  @ =0x00000ED2
	add r2, r5, r0
	add r2, r4, r2
	add r1, r1, #192
	add r3, r5, r1
	add r1, r6, r3
	ldrb r0, [r2]
	ldrb r1, [r1]
	sub r0, r0, r1
	strb r0, [r2]
	add r4, r4, r3
	mov r0, #0
	strb r0, [r4]
_080DDD7E:
	pop {r4-r7}
	pop {r0}
	bx r0
_080DDD84:
	.4byte gRam
_080DDD88:
	.4byte 0x00000F62
_080DDD8C:
	.4byte 0x0000097D
_080DDD90:
	.4byte 0x00000F52
_080DDD94:
	.4byte 0x0000015D
_080DDD98:
	.4byte 0x00001770
_080DDD9C:
	.4byte 0x00001082
_080DDDA0:
	.4byte 0x00000ED2
	THUMB_FUNC_END sub_080DDCF0

	THUMB_FUNC_START sub_080DDDA4
sub_080DDDA4: @ 0x080DDDA4
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r0, _080DDE30  @ =gRam
	mov r9, r0
	ldr r0, _080DDE34  @ =0x00000F62
	add r0, r0, r9
	add r0, r7, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080DDE22
	ldr r0, _080DDE38  @ =0x00001052
	add r0, r0, r9
	add r0, r7, r0
	ldrb r0, [r0]
	and r0, r0, r1
	cmp r0, #0
	bne _080DDE22
	ldr r0, _080DDE3C  @ =gUnknown_08176360
	mov r8, r0
	bl GetRandomInt
	mov r4, #7
	add r1, r4, #0
	and r1, r1, r0
	add r1, r1, r8
	ldrb r1, [r1]
	ldr r5, _080DDE40  @ =gUnknown_08176348
	add r0, r1, r5
	ldrb r2, [r0]
	mov r0, #150
	lsl r0, r0, #4
	add r0, r0, r9
	strb r2, [r0]
	ldr r6, _080DDE44  @ =gUnknown_08176354
	add r1, r1, r6
	ldrb r1, [r1]
	ldr r0, _080DDE48  @ =0x00000961
	add r0, r0, r9
	strb r1, [r0]
	bl GetRandomInt
	and r4, r4, r0
	add r4, r4, r8
	ldrb r1, [r4]
	add r5, r1, r5
	ldrb r2, [r5]
	ldr r0, _080DDE4C  @ =0x00000964
	add r0, r0, r9
	strb r2, [r0]
	add r1, r1, r6
	ldrb r1, [r1]
	ldr r0, _080DDE50  @ =0x00000965
	add r0, r0, r9
	strb r1, [r0]
	add r0, r7, #0
	bl sub_080C9A58
_080DDE22:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DDE30:
	.4byte gRam
_080DDE34:
	.4byte 0x00000F62
_080DDE38:
	.4byte 0x00001052
_080DDE3C:
	.4byte gUnknown_08176360
_080DDE40:
	.4byte gUnknown_08176348
_080DDE44:
	.4byte gUnknown_08176354
_080DDE48:
	.4byte 0x00000961
_080DDE4C:
	.4byte 0x00000964
_080DDE50:
	.4byte 0x00000965
	THUMB_FUNC_END sub_080DDDA4

	THUMB_FUNC_START sub_080DDE54
sub_080DDE54: @ 0x080DDE54
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080DDE7C  @ =gRam
	ldr r1, _080DDE80  @ =0x00001142
	add r0, r0, r1
	add r0, r4, r0
	mov r1, #24
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C35C0
	add r0, r4, #0
	bl sub_080C3758
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DDE7C:
	.4byte gRam
_080DDE80:
	.4byte 0x00001142
	THUMB_FUNC_END sub_080DDE54

	THUMB_FUNC_START sub_080DDE84
sub_080DDE84: @ 0x080DDE84
	push {lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r0, _080DDEB0  @ =gUnknown_0200234D
	ldr r1, _080DDEB4  @ =gUnknown_0200234C
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080DDEAC
	ldr r2, _080DDEB8  @ =gRam
	ldr r0, _080DDEBC  @ =0x00000F52
	add r1, r2, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080DDEC0  @ =0x00000FE2
	add r2, r2, r0
	mov r0, #112
	strb r0, [r2]
_080DDEAC:
	pop {r0}
	bx r0
_080DDEB0:
	.4byte gUnknown_0200234D
_080DDEB4:
	.4byte gUnknown_0200234C
_080DDEB8:
	.4byte gRam
_080DDEBC:
	.4byte 0x00000F52
_080DDEC0:
	.4byte 0x00000FE2
	THUMB_FUNC_END sub_080DDE84

	THUMB_FUNC_START sub_080DDEC4
sub_080DDEC4: @ 0x080DDEC4
	bx lr
	THUMB_FUNC_END sub_080DDEC4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080DDEC8
sub_080DDEC8: @ 0x080DDEC8
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080DDEF4  @ =gRam
	ldr r1, _080DDEF8  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #5
	ldr r0, _080DDEFC  @ =gUnknown_081762C8
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #4
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
_080DDEF4:
	.4byte gRam
_080DDEF8:
	.4byte 0x00000F92
_080DDEFC:
	.4byte gUnknown_081762C8
	THUMB_FUNC_END sub_080DDEC8

	THUMB_FUNC_START sub_080DDF00
sub_080DDF00: @ 0x080DDF00
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080DDF58  @ =gRam
	ldr r0, _080DDF5C  @ =0x00001172
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r3, #0
	add r5, r2, #0
	ldr r1, _080DDF60  @ =0x000009DA
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r2, _080DDF64  @ =gUnknown_08176370
_080DDF20:
	add r0, r3, r2
	ldrb r0, [r0]
	cmp r1, r0
	beq _080DDF32
	add r0, r3, #1
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r3, #0
	bne _080DDF20
_080DDF32:
	ldr r1, _080DDF68  @ =0x00001052
	add r0, r5, r1
	add r2, r4, r0
	strb r3, [r2]
	cmp r3, #0
	bne _080DDF52
	ldr r1, _080DDF6C  @ =0x00000F02
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	beq _080DDF52
	add r0, r3, #1
	strb r0, [r2]
_080DDF52:
	pop {r4,r5}
	pop {r0}
	bx r0
_080DDF58:
	.4byte gRam
_080DDF5C:
	.4byte 0x00001172
_080DDF60:
	.4byte 0x000009DA
_080DDF64:
	.4byte gUnknown_08176370
_080DDF68:
	.4byte 0x00001052
_080DDF6C:
	.4byte 0x00000F02
	THUMB_FUNC_END sub_080DDF00

	THUMB_FUNC_START sub_080DDF70
sub_080DDF70: @ 0x080DDF70
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080DDFC4  @ =gRam
	ldr r1, _080DDFC8  @ =0x00000FC2
	add r0, r2, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080DDFB0
	ldr r1, _080DDFCC  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #63
	and r0, r0, r1
	cmp r0, #0
	bne _080DDFA2
	ldr r1, _080DDFD0  @ =0x00001122
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r2, #64
	eor r1, r1, r2
	strb r1, [r0]
_080DDFA2:
	bl GetRandomInt
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DDFB0
	mov r0, #32
	strb r0, [r5]
_080DDFB0:
	mov r1, #166
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080DDFC4:
	.4byte gRam
_080DDFC8:
	.4byte 0x00000FC2
_080DDFCC:
	.4byte 0x00000996
_080DDFD0:
	.4byte 0x00001122
	THUMB_FUNC_END sub_080DDF70

	THUMB_FUNC_START sub_080DDFD4
sub_080DDFD4: @ 0x080DDFD4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	ldr r5, _080DE044  @ =gRam
	ldr r0, _080DE048  @ =0x00000F92
	add r2, r5, r0
	add r2, r4, r2
	ldr r1, _080DE04C  @ =0x00000996
	add r0, r5, r1
	ldrb r0, [r0]
	lsr r0, r0, #1
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r2, _080DE050  @ =0x00001142
	add r0, r5, r2
	add r3, r4, r0
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080DE00C
	mov r0, #0
	strb r0, [r3]
_080DE00C:
	ldr r1, _080DE054  @ =0x00001152
	add r0, r5, r1
	add r2, r4, r0
	ldr r4, _080DE058  @ =gUnknown_081763B0
	mov r1, #0
	ldrb r0, [r3]
	cmp r0, #3
	bls _080DE01E
	mov r1, #1
_080DE01E:
	add r0, r1, r4
	ldrb r0, [r0]
	ldrb r1, [r2]
	add r0, r0, r1
	strb r0, [r2]
	ldr r1, _080DE05C  @ =gUnknown_081763B4
	ldr r2, _080DE060  @ =0x00000F52
	add r0, r5, r2
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r6, #0
	bl _call_via_r1
	pop {r4-r6}
	pop {r0}
	bx r0
_080DE044:
	.4byte gRam
_080DE048:
	.4byte 0x00000F92
_080DE04C:
	.4byte 0x00000996
_080DE050:
	.4byte 0x00001142
_080DE054:
	.4byte 0x00001152
_080DE058:
	.4byte gUnknown_081763B0
_080DE05C:
	.4byte gUnknown_081763B4
_080DE060:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DDFD4

	THUMB_FUNC_START sub_080DE064
sub_080DE064: @ 0x080DE064
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080DE380
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DE0BC
	add r0, r4, #0
	bl sub_080C5080
	ldr r3, _080DE0C4  @ =gRam
	ldr r1, _080DE0C8  @ =0x00000FC2
	add r0, r3, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DE0A6
	ldr r0, _080DE0CC  @ =0x00000F92
	add r2, r3, r0
	add r2, r4, r2
	ldr r1, _080DE0D0  @ =0x00000996
	add r0, r3, r1
	ldrb r0, [r0]
	lsr r0, r0, #4
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
_080DE0A6:
	ldr r1, _080DE0D4  @ =gUnknown_08176378
	ldr r2, _080DE0D8  @ =0x00001052
	add r0, r3, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
_080DE0BC:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DE0C4:
	.4byte gRam
_080DE0C8:
	.4byte 0x00000FC2
_080DE0CC:
	.4byte 0x00000F92
_080DE0D0:
	.4byte 0x00000996
_080DE0D4:
	.4byte gUnknown_08176378
_080DE0D8:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DE064

	THUMB_FUNC_START sub_080DE0DC
sub_080DE0DC: @ 0x080DE0DC
	push {lr}
	bl sub_080AA868
	cmp r0, #19
	bgt _080DE0EA
	mov r0, #0
	b _080DE0F4
_080DE0EA:
	mov r0, #20
	neg r0, r0
	bl sub_080AA83C
	mov r0, #1
_080DE0F4:
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080DE0DC

	THUMB_FUNC_START sub_080DE0F8
sub_080DE0F8: @ 0x080DE0F8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DE118  @ =gUnknown_0817638C
	ldr r1, _080DE11C  @ =gRam
	ldr r3, _080DE120  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080DE118:
	.4byte gUnknown_0817638C
_080DE11C:
	.4byte gRam
_080DE120:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE0F8

	THUMB_FUNC_START sub_080DE124
sub_080DE124: @ 0x080DE124
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DE144  @ =gUnknown_08176398
	ldr r1, _080DE148  @ =gRam
	ldr r3, _080DE14C  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080DE144:
	.4byte gUnknown_08176398
_080DE148:
	.4byte gRam
_080DE14C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE124

	THUMB_FUNC_START sub_080DE150
sub_080DE150: @ 0x080DE150
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DE170  @ =gUnknown_081763A4
	ldr r1, _080DE174  @ =gRam
	ldr r3, _080DE178  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080DE170:
	.4byte gUnknown_081763A4
_080DE174:
	.4byte gRam
_080DE178:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE150

	THUMB_FUNC_START sub_080DE17C
sub_080DE17C: @ 0x080DE17C
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080DE1AC  @ =0x00000101
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DE1A2
	ldr r1, _080DE1B0  @ =gRam
	ldr r0, _080DE1B4  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080DE1A2:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DE1AC:
	.4byte 0x00000101
_080DE1B0:
	.4byte gRam
_080DE1B4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE17C

	THUMB_FUNC_START sub_080DE1B8
sub_080DE1B8: @ 0x080DE1B8
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DE1EC  @ =gRam
	ldr r1, _080DE1F0  @ =0x00001AE2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DE1D4
	bl sub_080DE0DC
	cmp r0, #0
	bne _080DE1FC
_080DE1D4:
	ldr r1, _080DE1F4  @ =0x00000103
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080DE1F8  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080DE214
	.byte 0x00
	.byte 0x00
_080DE1EC:
	.4byte gRam
_080DE1F0:
	.4byte 0x00001AE2
_080DE1F4:
	.4byte 0x00000103
_080DE1F8:
	.4byte 0x00000F52
_080DE1FC:
	mov r1, #129
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080DE21C  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080DE214:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080DE21C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE1B8

	THUMB_FUNC_START sub_080DE220
sub_080DE220: @ 0x080DE220
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DE238  @ =gUnknown_02002352
	mov r1, #160
	strb r1, [r2]
	ldr r1, _080DE23C  @ =gRam
	ldr r2, _080DE240  @ =0x00000F52
	add r1, r1, r2
	add r0, r0, r1
	mov r1, #0
	strb r1, [r0]
	bx lr
_080DE238:
	.4byte gUnknown_02002352
_080DE23C:
	.4byte gRam
_080DE240:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE220

	THUMB_FUNC_START sub_080DE244
sub_080DE244: @ 0x080DE244
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DE278  @ =gRam
	ldr r1, _080DE27C  @ =0x00001AE2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DE260
	bl sub_080DE0DC
	cmp r0, #0
	bne _080DE288
_080DE260:
	ldr r1, _080DE280  @ =0x00000103
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080DE284  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080DE2A0
	.byte 0x00
	.byte 0x00
_080DE278:
	.4byte gRam
_080DE27C:
	.4byte 0x00001AE2
_080DE280:
	.4byte 0x00000103
_080DE284:
	.4byte 0x00000F52
_080DE288:
	mov r1, #130
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080DE2A8  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080DE2A0:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080DE2A8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE244

	THUMB_FUNC_START sub_080DE2AC
sub_080DE2AC: @ 0x080DE2AC
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DE2E0  @ =gRam
	ldr r1, _080DE2E4  @ =0x00001AE2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DE2C8
	bl sub_080DE0DC
	cmp r0, #0
	bne _080DE2F0
_080DE2C8:
	ldr r1, _080DE2E8  @ =0x00000103
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080DE2EC  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080DE306
	.byte 0x00
	.byte 0x00
_080DE2E0:
	.4byte gRam
_080DE2E4:
	.4byte 0x00001AE2
_080DE2E8:
	.4byte 0x00000103
_080DE2EC:
	.4byte 0x00000F52
_080DE2F0:
	ldr r1, _080DE310  @ =0x00000105
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080DE314  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080DE306:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DE310:
	.4byte 0x00000105
_080DE314:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE2AC

	THUMB_FUNC_START sub_080DE318
sub_080DE318: @ 0x080DE318
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DE34C  @ =gRam
	ldr r1, _080DE350  @ =0x00001AE2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DE334
	bl sub_080DE0DC
	cmp r0, #0
	bne _080DE35C
_080DE334:
	ldr r1, _080DE354  @ =0x00000103
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080DE358  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080DE374
	.byte 0x00
	.byte 0x00
_080DE34C:
	.4byte gRam
_080DE350:
	.4byte 0x00001AE2
_080DE354:
	.4byte 0x00000103
_080DE358:
	.4byte 0x00000F52
_080DE35C:
	mov r1, #131
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080DE37C  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080DE374:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080DE37C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE318

	THUMB_FUNC_START sub_080DE380
sub_080DE380: @ 0x080DE380
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080DE3C0  @ =gRam
	ldr r0, _080DE3C4  @ =0x0000096C
	add r1, r2, r0
	mov r0, #1
	strh r0, [r1]
	ldr r1, _080DE3C8  @ =0x00001052
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080DE3CC  @ =0x00000F92
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #3
	ldr r0, _080DE3D0  @ =gUnknown_081763C0
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DE3C0:
	.4byte gRam
_080DE3C4:
	.4byte 0x0000096C
_080DE3C8:
	.4byte 0x00001052
_080DE3CC:
	.4byte 0x00000F92
_080DE3D0:
	.4byte gUnknown_081763C0
	THUMB_FUNC_END sub_080DE380

	THUMB_FUNC_START sub_080DE3D4
sub_080DE3D4: @ 0x080DE3D4
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080DE40C  @ =gRam
	ldr r0, _080DE410  @ =0x00001172
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080DE414  @ =0x000009DA
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #10
	bne _080DE408
	ldr r0, _080DE418  @ =0x00001052
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080DE41C  @ =0x00001122
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #11
	strb r1, [r0]
_080DE408:
	pop {r0}
	bx r0
_080DE40C:
	.4byte gRam
_080DE410:
	.4byte 0x00001172
_080DE414:
	.4byte 0x000009DA
_080DE418:
	.4byte 0x00001052
_080DE41C:
	.4byte 0x00001122
	THUMB_FUNC_END sub_080DE3D4

	THUMB_FUNC_START sub_080DE420
sub_080DE420: @ 0x080DE420
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080DE474  @ =gRam
	ldr r1, _080DE478  @ =0x0000165F
	add r5, r0, r1
	ldrb r1, [r5]
	mov r6, #32
	mov r0, #32
	and r0, r0, r1
	cmp r0, #0
	beq _080DE45E
	ldr r0, _080DE47C  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080DE4A4
	ldr r0, _080DE480  @ =gUnknown_02002354
	ldrb r0, [r0]
	mov r1, #7
	and r1, r1, r0
	cmp r1, #7
	beq _080DE494
	mov r0, #2
	and r1, r1, r0
	cmp r1, #0
	bne _080DE48E
	ldr r0, _080DE484  @ =gUnknown_02002330
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DE488
_080DE45E:
	mov r1, #148
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	ldrb r0, [r5]
	orr r0, r0, r6
	strb r0, [r5]
	b _080DE4AE
	.byte 0x00
	.byte 0x00
_080DE474:
	.4byte gRam
_080DE478:
	.4byte 0x0000165F
_080DE47C:
	.4byte gUnknown_0200233D
_080DE480:
	.4byte gUnknown_02002354
_080DE484:
	.4byte gUnknown_02002330
_080DE488:
	mov r1, #149
	lsl r1, r1, #1
	b _080DE496
_080DE48E:
	mov r1, #150
	lsl r1, r1, #1
	b _080DE496
_080DE494:
	ldr r1, _080DE4A0  @ =0x00000129
_080DE496:
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	b _080DE4AE
_080DE4A0:
	.4byte 0x00000129
_080DE4A4:
	ldr r1, _080DE4BC  @ =0x0000012B
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
_080DE4AE:
	add r0, r4, #0
	bl sub_080DE60C
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080DE4BC:
	.4byte 0x0000012B
	THUMB_FUNC_END sub_080DE420

	THUMB_FUNC_START sub_080DE4C0
sub_080DE4C0: @ 0x080DE4C0
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080DE4FC  @ =gUnknown_02002354
	ldrb r1, [r0]
	mov r0, #4
	and r0, r0, r1
	cmp r0, #0
	beq _080DE564
	ldr r0, _080DE500  @ =gUnknown_02002339
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DE524
	ldr r0, _080DE504  @ =gUnknown_02002327
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DE518
	mov r0, #7
	and r0, r0, r1
	cmp r0, #7
	bne _080DE512
	ldr r0, _080DE508  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #1
	bls _080DE50C
	add r0, r4, #0
	mov r1, #52
	b _080DE51C
	.byte 0x00
	.byte 0x00
_080DE4FC:
	.4byte gUnknown_02002354
_080DE500:
	.4byte gUnknown_02002339
_080DE504:
	.4byte gUnknown_02002327
_080DE508:
	.4byte gUnknown_0200233D
_080DE50C:
	add r0, r4, #0
	mov r1, #51
	b _080DE51C
_080DE512:
	add r0, r4, #0
	mov r1, #55
	b _080DE51C
_080DE518:
	add r0, r4, #0
	mov r1, #58
_080DE51C:
	mov r2, sp
	bl sub_080C9164
	b _080DE582
_080DE524:
	ldr r2, _080DE558  @ =gUnknown_08176428
	ldr r5, _080DE55C  @ =gRam
	mov r1, #179
	lsl r1, r1, #5
	add r0, r5, r1
	ldrb r0, [r0]
	mov r1, #0
	cmp r0, #2
	bls _080DE538
	mov r1, #2
_080DE538:
	add r0, r1, r2
	ldrh r1, [r0]
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DE582
	ldr r0, _080DE560  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #2
	b _080DE580
	.byte 0x00
	.byte 0x00
_080DE558:
	.4byte gUnknown_08176428
_080DE55C:
	.4byte gRam
_080DE560:
	.4byte 0x00000F52
_080DE564:
	add r0, r4, #0
	mov r1, #53
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DE582
	ldr r1, _080DE590  @ =gRam
	ldr r0, _080DE594  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
_080DE580:
	strb r0, [r1]
_080DE582:
	add r0, r4, #0
	bl sub_080DE60C
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080DE590:
	.4byte gRam
_080DE594:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE4C0

	THUMB_FUNC_START sub_080DE598
sub_080DE598: @ 0x080DE598
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080DE6E0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DE5CE
	add r0, r4, #0
	bl sub_080C5080
	ldr r1, _080DE5D4  @ =gUnknown_08176410
	ldr r0, _080DE5D8  @ =gRam
	ldr r2, _080DE5DC  @ =0x00001052
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080DE5CE:
	pop {r4}
	pop {r0}
	bx r0
_080DE5D4:
	.4byte gUnknown_08176410
_080DE5D8:
	.4byte gRam
_080DE5DC:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DE598

	THUMB_FUNC_START sub_080DE5E0
sub_080DE5E0: @ 0x080DE5E0
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DE600  @ =gUnknown_08176418
	ldr r1, _080DE604  @ =gRam
	ldr r3, _080DE608  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080DE600:
	.4byte gUnknown_08176418
_080DE604:
	.4byte gRam
_080DE608:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE5E0

	THUMB_FUNC_START sub_080DE60C
sub_080DE60C: @ 0x080DE60C
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080DE628  @ =gRam
	ldr r3, _080DE62C  @ =0x00000F92
	add r2, r1, r3
	add r0, r0, r2
	ldr r2, _080DE630  @ =0x00000996
	add r1, r1, r2
	ldrb r1, [r1]
	lsr r1, r1, #5
	mov r2, #1
	and r1, r1, r2
	strb r1, [r0]
	bx lr
_080DE628:
	.4byte gRam
_080DE62C:
	.4byte 0x00000F92
_080DE630:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080DE60C

	THUMB_FUNC_START sub_080DE634
sub_080DE634: @ 0x080DE634
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #54
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080DE668  @ =gRam
	ldr r2, _080DE66C  @ =0x00000F52
	add r0, r1, r2
	add r4, r4, r0
	mov r0, #0
	strb r0, [r4]
	mov r0, #179
	lsl r0, r0, #5
	add r1, r1, r0
	mov r0, #3
	strb r0, [r1]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DE668:
	.4byte gRam
_080DE66C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE634

	THUMB_FUNC_START sub_080DE670
sub_080DE670: @ 0x080DE670
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080DE6A4  @ =gRam
	ldr r0, _080DE6A8  @ =0x00001776
	add r1, r5, r0
	mov r0, #0
	strb r0, [r1]
	mov r0, #75
	bl sub_080A1588
	ldr r1, _080DE6AC  @ =0x00000F52
	add r0, r5, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	mov r0, #179
	lsl r0, r0, #5
	add r5, r5, r0
	mov r0, #3
	strb r0, [r5]
	pop {r4,r5}
	pop {r0}
	bx r0
_080DE6A4:
	.4byte gRam
_080DE6A8:
	.4byte 0x00001776
_080DE6AC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE670

	THUMB_FUNC_START sub_080DE6B0
sub_080DE6B0: @ 0x080DE6B0
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #58
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080DE6D8  @ =gRam
	ldr r1, _080DE6DC  @ =0x00000F52
	add r0, r0, r1
	add r4, r4, r0
	mov r0, #0
	strb r0, [r4]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080DE6D8:
	.4byte gRam
_080DE6DC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DE6B0

	THUMB_FUNC_START sub_080DE6E0
sub_080DE6E0: @ 0x080DE6E0
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080DE714  @ =gRam
	ldr r1, _080DE718  @ =0x0000096C
	add r2, r0, r1
	mov r1, #2
	strh r1, [r2]
	ldr r1, _080DE71C  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080DE720  @ =gUnknown_0817642C
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DE714:
	.4byte gRam
_080DE718:
	.4byte 0x0000096C
_080DE71C:
	.4byte 0x00000F92
_080DE720:
	.4byte gUnknown_0817642C
	THUMB_FUNC_END sub_080DE6E0

	THUMB_FUNC_START sub_080DE724
sub_080DE724: @ 0x080DE724
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	ldr r4, _080DE820  @ =gRam
	ldr r0, _080DE824  @ =0x00001172
	add r6, r4, r0
	add r1, r5, r6
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #181
	add r1, r5, #0
	bl sub_080CA538
	add r2, r0, #0
	cmp r2, #0
	blt _080DE79C
	mov r3, #150
	lsl r3, r3, #4
	add r1, r4, r3
	ldrh r0, [r1]
	sub r0, r0, #24
	strh r0, [r1]
	ldr r3, _080DE828  @ =0x00000EE2
	add r0, r4, r3
	add r0, r2, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DE82C  @ =0x00000F02
	add r0, r4, r1
	add r0, r2, r0
	ldr r3, _080DE830  @ =0x00000961
	add r1, r4, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080DE834  @ =0x00000964
	add r1, r4, r0
	ldrh r0, [r1]
	sub r0, r0, #24
	strh r0, [r1]
	ldr r3, _080DE838  @ =0x00000ED2
	add r0, r4, r3
	add r0, r2, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DE83C  @ =0x00000EF2
	add r0, r4, r1
	add r0, r2, r0
	ldr r3, _080DE840  @ =0x00000965
	add r1, r4, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DE844  @ =0x00001052
	add r0, r4, r1
	add r0, r2, r0
	mov r1, #1
	strb r1, [r0]
	add r0, r2, r6
	strb r1, [r0]
_080DE79C:
	ldr r0, _080DE848  @ =gUnknown_0200235A
	ldrb r1, [r0]
	mov r0, #5
	and r0, r0, r1
	cmp r0, #5
	bne _080DE818
	ldr r3, _080DE84C  @ =0x00001662
	add r0, r4, r3
	ldrb r1, [r0]
	mov r0, #32
	and r0, r0, r1
	cmp r0, #0
	beq _080DE818
	mov r0, #181
	add r1, r5, #0
	bl sub_080CA538
	add r2, r0, #0
	cmp r2, #0
	blt _080DE818
	mov r0, #150
	lsl r0, r0, #4
	add r1, r4, r0
	ldrh r0, [r1]
	sub r0, r0, #56
	strh r0, [r1]
	ldr r3, _080DE828  @ =0x00000EE2
	add r0, r4, r3
	add r0, r2, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DE82C  @ =0x00000F02
	add r0, r4, r1
	add r0, r2, r0
	ldr r3, _080DE830  @ =0x00000961
	add r1, r4, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080DE834  @ =0x00000964
	add r1, r4, r0
	ldrh r0, [r1]
	sub r0, r0, #24
	strh r0, [r1]
	ldr r3, _080DE838  @ =0x00000ED2
	add r0, r4, r3
	add r0, r2, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DE83C  @ =0x00000EF2
	add r0, r4, r1
	add r0, r2, r0
	ldr r3, _080DE840  @ =0x00000965
	add r1, r4, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DE844  @ =0x00001052
	add r0, r4, r1
	add r0, r2, r0
	mov r1, #2
	strb r1, [r0]
	add r0, r2, r6
	strb r1, [r0]
_080DE818:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DE820:
	.4byte gRam
_080DE824:
	.4byte 0x00001172
_080DE828:
	.4byte 0x00000EE2
_080DE82C:
	.4byte 0x00000F02
_080DE830:
	.4byte 0x00000961
_080DE834:
	.4byte 0x00000964
_080DE838:
	.4byte 0x00000ED2
_080DE83C:
	.4byte 0x00000EF2
_080DE840:
	.4byte 0x00000965
_080DE844:
	.4byte 0x00001052
_080DE848:
	.4byte gUnknown_0200235A
_080DE84C:
	.4byte 0x00001662
	THUMB_FUNC_END sub_080DE724

	THUMB_FUNC_START sub_080DE850
sub_080DE850: @ 0x080DE850
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080DEBF4
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DE90A
	ldr r5, _080DE8AC  @ =gRam
	ldr r1, _080DE8B0  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080DE8D2
	ldr r0, _080DE8B4  @ =0x00001062
	add r2, r5, r0
	add r2, r4, r2
	ldrb r3, [r2]
	add r0, r3, #1
	mov r1, #7
	and r0, r0, r1
	strb r0, [r2]
	ldr r0, _080DE8B8  @ =gUnknown_08176460
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r6]
	ldr r0, _080DE8BC  @ =0x00000F92
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080DE8C0  @ =gUnknown_08176468
	add r3, r3, r0
	ldrb r0, [r3]
	strb r0, [r1]
	cmp r0, #0
	beq _080DE8C4
	add r0, r4, #0
	mov r1, #68
	bl sub_080CF140
	b _080DE8D2
_080DE8AC:
	.4byte gRam
_080DE8B0:
	.4byte 0x00000FC2
_080DE8B4:
	.4byte 0x00001062
_080DE8B8:
	.4byte gUnknown_08176460
_080DE8BC:
	.4byte 0x00000F92
_080DE8C0:
	.4byte gUnknown_08176468
_080DE8C4:
	add r0, r4, #0
	mov r1, #67
	bl sub_080CF140
	add r0, r4, #0
	bl sub_080DEA74
_080DE8D2:
	mov r2, #0
	ldr r0, _080DE914  @ =gUnknown_0200235A
	ldrb r1, [r0]
	mov r0, #5
	and r0, r0, r1
	cmp r0, #5
	bne _080DE8F4
	ldr r0, _080DE918  @ =gRam
	ldr r1, _080DE91C  @ =0x00001662
	add r0, r0, r1
	ldrb r1, [r0]
	mov r0, #32
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	neg r0, r0
	lsr r2, r0, #31
_080DE8F4:
	ldr r0, _080DE920  @ =gUnknown_0817645C
	lsl r1, r2, #1
	add r1, r1, r0
	ldrh r1, [r1]
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	add r0, r4, #0
	bl sub_080C5080
_080DE90A:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DE914:
	.4byte gUnknown_0200235A
_080DE918:
	.4byte gRam
_080DE91C:
	.4byte 0x00001662
_080DE920:
	.4byte gUnknown_0817645C
	THUMB_FUNC_END sub_080DE850

	THUMB_FUNC_START sub_080DE924
sub_080DE924: @ 0x080DE924
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080DEBF4
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080DE9BE
	add r0, r4, #0
	bl sub_080C5080
	add r0, r4, #0
	bl sub_0810EFC0
	cmp r0, #0
	beq _080DE9BE
	ldr r1, _080DE978  @ =gUnknown_0816B588
	ldr r0, _080DE97C  @ =gUnknown_02002350
	ldrb r0, [r0]
	add r0, r0, r1
	ldr r1, _080DE980  @ =gUnknown_02002323
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080DE988
	ldr r1, _080DE984  @ =0x00000171
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	add r0, r4, #0
	mov r1, #64
	bl sub_080CF0AC
	b _080DE9BE
_080DE978:
	.4byte gUnknown_0816B588
_080DE97C:
	.4byte gUnknown_02002350
_080DE980:
	.4byte gUnknown_02002323
_080DE984:
	.4byte 0x00000171
_080DE988:
	mov r0, #100
	bl sub_0810EF98
	cmp r0, #0
	bne _080DE99A
	add r0, r4, #0
	bl sub_0810F000
	b _080DE9BE
_080DE99A:
	ldr r1, _080DE9C8  @ =gUnknown_02002355
	mov r0, #27
	strb r0, [r1]
	ldr r0, _080DE9CC  @ =gRam
	ldr r1, _080DE9D0  @ =0x00000FA2
	add r0, r0, r1
	add r0, r5, r0
	strb r6, [r0]
	mov r1, #142
	lsl r1, r1, #1
	add r0, r5, #0
	mov r2, sp
	bl sub_080C9564
	add r0, r5, #0
	mov r1, #40
	bl sub_0810EF44
_080DE9BE:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DE9C8:
	.4byte gUnknown_02002355
_080DE9CC:
	.4byte gRam
_080DE9D0:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080DE924

	THUMB_FUNC_START sub_080DE9D4
sub_080DE9D4: @ 0x080DE9D4
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	mov r0, #4
	bl sub_080CF3A0
	add r0, r4, #0
	bl sub_080C58F0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DEA4E
	ldr r5, _080DEA54  @ =gRam
	ldr r0, _080DEA58  @ =0x00001122
	add r2, r5, r0
	add r2, r4, r2
	ldrb r0, [r2]
	mov r1, #48
	and r1, r1, r0
	strb r1, [r2]
	ldr r3, _080DEA5C  @ =gUnknown_08176470
	ldr r6, _080DEA60  @ =0x00000996
	add r0, r5, r6
	ldrb r0, [r0]
	lsr r0, r0, #2
	mov r6, #3
	and r0, r0, r6
	add r0, r0, r3
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
	ldr r0, _080DEA64  @ =0x00001152
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r1, _080DEA68  @ =0x00000FC2
	add r0, r5, r1
	add r2, r4, r0
	ldrb r1, [r2]
	cmp r1, #0
	bne _080DEA40
	ldr r3, _080DEA6C  @ =0x00000FA2
	add r0, r5, r3
	add r0, r4, r0
	strb r1, [r0]
_080DEA40:
	ldr r0, _080DEA70  @ =0x00000F92
	add r1, r5, r0
	add r1, r7, r1
	ldrb r0, [r2]
	lsr r0, r0, #3
	and r0, r0, r6
	strb r0, [r1]
_080DEA4E:
	pop {r4-r7}
	pop {r0}
	bx r0
_080DEA54:
	.4byte gRam
_080DEA58:
	.4byte 0x00001122
_080DEA5C:
	.4byte gUnknown_08176470
_080DEA60:
	.4byte 0x00000996
_080DEA64:
	.4byte 0x00001152
_080DEA68:
	.4byte 0x00000FC2
_080DEA6C:
	.4byte 0x00000FA2
_080DEA70:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080DE9D4

	THUMB_FUNC_START sub_080DEA74
sub_080DEA74: @ 0x080DEA74
	push {r4,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #181
	bl sub_080CA538
	ldr r3, _080DEB10  @ =gRam
	ldr r2, _080DEB14  @ =0x00001052
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #3
	strb r2, [r1]
	ldr r4, _080DEB18  @ =0x00001172
	add r1, r3, r4
	add r1, r0, r1
	strb r2, [r1]
	mov r1, #150
	lsl r1, r1, #4
	add r2, r3, r1
	ldrh r1, [r2]
	add r1, r1, #4
	strh r1, [r2]
	ldr r4, _080DEB1C  @ =0x00000EE2
	add r1, r3, r4
	add r1, r0, r1
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080DEB20  @ =0x00000F02
	add r1, r3, r2
	add r1, r0, r1
	ldr r4, _080DEB24  @ =0x00000961
	add r2, r3, r4
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r1, _080DEB28  @ =0x00000964
	add r2, r3, r1
	ldrh r1, [r2]
	add r1, r1, #16
	strh r1, [r2]
	ldr r4, _080DEB2C  @ =0x00000ED2
	add r1, r3, r4
	add r1, r0, r1
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080DEB30  @ =0x00000EF2
	add r1, r3, r2
	add r1, r0, r1
	ldr r4, _080DEB34  @ =0x00000965
	add r2, r3, r4
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080DEB38  @ =0x00001142
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #4
	strb r2, [r1]
	ldr r4, _080DEB3C  @ =0x00001152
	add r1, r3, r4
	add r1, r0, r1
	mov r2, #244
	strb r2, [r1]
	ldr r2, _080DEB40  @ =0x00000FC2
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #23
	strb r2, [r1]
	ldr r4, _080DEB44  @ =0x00001032
	add r3, r3, r4
	add r0, r0, r3
	ldrb r2, [r0]
	mov r1, #238
	and r1, r1, r2
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DEB10:
	.4byte gRam
_080DEB14:
	.4byte 0x00001052
_080DEB18:
	.4byte 0x00001172
_080DEB1C:
	.4byte 0x00000EE2
_080DEB20:
	.4byte 0x00000F02
_080DEB24:
	.4byte 0x00000961
_080DEB28:
	.4byte 0x00000964
_080DEB2C:
	.4byte 0x00000ED2
_080DEB30:
	.4byte 0x00000EF2
_080DEB34:
	.4byte 0x00000965
_080DEB38:
	.4byte 0x00001142
_080DEB3C:
	.4byte 0x00001152
_080DEB40:
	.4byte 0x00000FC2
_080DEB44:
	.4byte 0x00001032
	THUMB_FUNC_END sub_080DEA74

	THUMB_FUNC_START sub_080DEB48
sub_080DEB48: @ 0x080DEB48
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DEB68  @ =gUnknown_0817644C
	ldr r1, _080DEB6C  @ =gRam
	ldr r3, _080DEB70  @ =0x00001052
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080DEB68:
	.4byte gUnknown_0817644C
_080DEB6C:
	.4byte gRam
_080DEB70:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DEB48

	THUMB_FUNC_START sub_080DEB74
sub_080DEB74: @ 0x080DEB74
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080DEBF4
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080DEBDA
	add r0, r4, #0
	bl sub_080C5080
	add r0, r4, #0
	bl sub_0810EFC0
	cmp r0, #0
	beq _080DEBDA
	mov r0, #100
	bl sub_0810EF98
	cmp r0, #0
	bne _080DEBB4
	add r0, r4, #0
	bl sub_0810F000
	b _080DEBDA
_080DEBB4:
	ldr r4, _080DEBE4  @ =gRam
	ldr r0, _080DEBE8  @ =0x00001663
	add r1, r4, r0
	mov r0, #13
	strb r0, [r1]
	bl sub_0812F9A8
	add r0, r5, #0
	bl sub_081146A4
	ldr r0, _080DEBEC  @ =0x00000FA2
	add r4, r4, r0
	add r4, r5, r4
	strb r6, [r4]
	ldr r1, _080DEBF0  @ =0x0000011D
	add r0, r5, #0
	mov r2, sp
	bl sub_080C9564
_080DEBDA:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DEBE4:
	.4byte gRam
_080DEBE8:
	.4byte 0x00001663
_080DEBEC:
	.4byte 0x00000FA2
_080DEBF0:
	.4byte 0x0000011D
	THUMB_FUNC_END sub_080DEB74

	THUMB_FUNC_START sub_080DEBF4
sub_080DEBF4: @ 0x080DEBF4
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080DEC34  @ =gRam
	ldr r0, _080DEC38  @ =0x0000096C
	add r1, r2, r0
	mov r0, #1
	strh r0, [r1]
	ldr r1, _080DEC3C  @ =0x00001052
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080DEC40  @ =0x00000F92
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #3
	ldr r0, _080DEC44  @ =gUnknown_08176474
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DEC34:
	.4byte gRam
_080DEC38:
	.4byte 0x0000096C
_080DEC3C:
	.4byte 0x00001052
_080DEC40:
	.4byte 0x00000F92
_080DEC44:
	.4byte gUnknown_08176474
	THUMB_FUNC_END sub_080DEBF4

	THUMB_FUNC_START sub_080DEC48
sub_080DEC48: @ 0x080DEC48
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C6340
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DEC68
	b _080DEF0A
_080DEC68:
	add r0, r4, #0
	bl sub_080DF1D0
	ldr r5, _080DECAC  @ =gRam
	ldr r0, _080DECB0  @ =0x00001122
	add r2, r5, r0
	add r2, r4, r2
	ldrb r0, [r2]
	mov r1, #127
	and r1, r1, r0
	ldr r3, _080DECB4  @ =0x00001082
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
	add r0, r4, #0
	bl sub_080C99DC
	add r0, r4, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	beq _080DED00
	mov r6, #0
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	beq _080DECB8
	mov r6, #1
	b _080DECC6
	.byte 0x00
	.byte 0x00
_080DECAC:
	.4byte gRam
_080DECB0:
	.4byte 0x00001122
_080DECB4:
	.4byte 0x00001082
_080DECB8:
	ldr r0, _080DED98  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
_080DECC6:
	ldr r0, _080DED9C  @ =gRam
	ldr r1, _080DEDA0  @ =0x00001062
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DECDE
	add r0, r4, #0
	bl sub_080DF3EC
	cmp r6, #0
	beq _080DED00
_080DECDE:
	ldr r2, _080DED9C  @ =gRam
	ldr r3, _080DEDA4  @ =0x00000F22
	add r1, r2, r3
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	ldr r6, _080DEDA0  @ =0x00001062
	add r2, r2, r6
	add r2, r4, r2
	ldrb r0, [r2]
	cmp r0, #0
	beq _080DED00
	add r0, r4, #0
	bl sub_080DF3EC
_080DED00:
	ldr r1, _080DED9C  @ =gRam
	ldr r2, _080DEDA8  @ =0x00001152
	add r0, r1, r2
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	ldr r3, _080DEDAC  @ =0x00001142
	add r1, r1, r3
	add r3, r4, r1
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080DED44
	mov r0, #0
	strb r0, [r3]
	ldrb r0, [r2]
	mvn r0, r0
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r0, r0, #1
	asr r0, r0, #2
	strb r0, [r2]
	mov r1, #252
	and r0, r0, r1
	cmp r0, #0
	beq _080DED3E
	add r0, r4, #0
	bl sub_080DF3EC
_080DED3E:
	add r0, r4, #0
	bl sub_080DEF1C
_080DED44:
	ldr r5, _080DED9C  @ =gRam
	ldr r6, _080DEDA0  @ =0x00001062
	add r0, r5, r6
	add r2, r4, r0
	ldrb r6, [r2]
	cmp r6, #0
	beq _080DEDBC
	ldr r0, _080DEDA4  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r3, _080DED98  @ =0x00000F12
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	orr r0, r0, r1
	cmp r0, #0
	bne _080DED6A
	b _080DEE8C
_080DED6A:
	ldr r6, _080DEDB0  @ =0x00000996
	add r0, r5, r6
	ldrb r0, [r0]
	add r1, r4, #0
	eor r1, r1, r0
	lsl r1, r1, #24
	ldr r0, _080DEDB4  @ =0x00000F92
	add r3, r5, r0
	add r3, r4, r3
	lsr r0, r1, #26
	mov r2, #1
	and r0, r0, r2
	strb r0, [r3]
	ldr r3, _080DEDB8  @ =0x00001082
	add r2, r5, r3
	add r2, r4, r2
	lsr r1, r1, #22
	mov r6, #128
	neg r6, r6
	add r0, r6, #0
	and r1, r1, r0
	strb r1, [r2]
	b _080DEF0A
_080DED98:
	.4byte 0x00000F12
_080DED9C:
	.4byte gRam
_080DEDA0:
	.4byte 0x00001062
_080DEDA4:
	.4byte 0x00000F22
_080DEDA8:
	.4byte 0x00001152
_080DEDAC:
	.4byte 0x00001142
_080DEDB0:
	.4byte 0x00000996
_080DEDB4:
	.4byte 0x00000F92
_080DEDB8:
	.4byte 0x00001082
_080DEDBC:
	ldr r1, _080DEE90  @ =0x00001082
	add r0, r5, r1
	add r7, r4, r0
	ldrb r0, [r7]
	cmp r0, #0
	beq _080DEDCA
	b _080DEECC
_080DEDCA:
	add r0, r4, #0
	bl sub_080DF340
	ldr r2, _080DEE94  @ =0x00000996
	add r0, r5, r2
	ldrb r0, [r0]
	add r3, r4, #0
	eor r3, r3, r0
	lsl r3, r3, #24
	ldr r6, _080DEE98  @ =0x00000F92
	add r2, r5, r6
	add r2, r4, r2
	lsr r0, r3, #27
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	mov r0, #252
	lsl r0, r0, #22
	and r0, r0, r3
	cmp r0, #0
	bne _080DEE6C
	bl GetRandomInt
	ldr r2, _080DEE9C  @ =0x00000968
	add r1, r5, r2
	strb r0, [r1]
	ldr r3, _080DEEA0  @ =0x000016C5
	add r0, r5, r3
	ldrb r1, [r0]
	ldr r6, _080DEEA4  @ =0x00000969
	add r0, r5, r6
	strb r1, [r0]
	bl GetRandomInt
	ldr r2, _080DEEA8  @ =0x0000096C
	add r1, r5, r2
	strb r0, [r1]
	ldr r3, _080DEEAC  @ =0x000016C1
	add r0, r5, r3
	ldrb r1, [r0]
	add r6, r6, #4
	add r0, r5, r6
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #8
	bl sub_080C2DCC
	ldr r1, _080DEEB0  @ =0x00000F72
	add r0, r5, r1
	add r0, r4, r0
	ldr r2, _080DEEB4  @ =0x00000961
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r3, _080DEEB8  @ =0x00000F62
	add r1, r5, r3
	add r1, r4, r1
	sub r6, r6, #13
	add r0, r5, r6
	ldrb r0, [r0]
	strb r0, [r1]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DEE6C
	ldr r0, _080DEEBC  @ =0x00001122
	add r2, r5, r0
	add r2, r4, r2
	ldrb r1, [r2]
	mov r3, #64
	orr r1, r1, r3
	mov r0, #0
	orr r1, r1, r0
	strb r1, [r2]
	ldr r6, _080DEEC0  @ =0x00000F22
	add r0, r5, r6
	add r0, r4, r0
	ldrb r0, [r0]
	lsr r0, r0, #1
	and r0, r0, r3
	eor r1, r1, r0
	strb r1, [r2]
_080DEE6C:
	ldr r1, _080DEEC4  @ =gRam
	ldr r0, _080DEEC0  @ =0x00000F22
	add r2, r1, r0
	add r2, r4, r2
	ldr r3, _080DEEB0  @ =0x00000F72
	add r0, r1, r3
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r6, _080DEEC8  @ =0x00000F12
	add r2, r1, r6
	add r2, r4, r2
	ldr r0, _080DEEB8  @ =0x00000F62
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
_080DEE8C:
	strb r0, [r2]
	b _080DEF0A
_080DEE90:
	.4byte 0x00001082
_080DEE94:
	.4byte 0x00000996
_080DEE98:
	.4byte 0x00000F92
_080DEE9C:
	.4byte 0x00000968
_080DEEA0:
	.4byte 0x000016C5
_080DEEA4:
	.4byte 0x00000969
_080DEEA8:
	.4byte 0x0000096C
_080DEEAC:
	.4byte 0x000016C1
_080DEEB0:
	.4byte 0x00000F72
_080DEEB4:
	.4byte 0x00000961
_080DEEB8:
	.4byte 0x00000F62
_080DEEBC:
	.4byte 0x00001122
_080DEEC0:
	.4byte 0x00000F22
_080DEEC4:
	.4byte gRam
_080DEEC8:
	.4byte 0x00000F12
_080DEECC:
	add r0, r4, #0
	bl sub_080DF340
	ldr r1, _080DEEE8  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DEEEC
	strb r6, [r7]
	b _080DEF0A
	.byte 0x00
	.byte 0x00
_080DEEE8:
	.4byte 0x00000996
_080DEEEC:
	ldr r3, _080DEF10  @ =0x00000F92
	add r2, r5, r3
	add r2, r4, r2
	lsr r0, r0, #26
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldr r1, _080DEF14  @ =0x00000F22
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
	ldr r2, _080DEF18  @ =0x00000F12
	add r0, r5, r2
	add r0, r4, r0
	strb r6, [r0]
_080DEF0A:
	pop {r4-r7}
	pop {r0}
	bx r0
_080DEF10:
	.4byte 0x00000F92
_080DEF14:
	.4byte 0x00000F22
_080DEF18:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080DEC48

	THUMB_FUNC_START sub_080DEF1C
sub_080DEF1C: @ 0x080DEF1C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	ldr r5, _080DEF60  @ =gRam
	ldr r1, _080DEF64  @ =0x00000F22
	add r0, r5, r1
	add r3, r4, r0
	ldrb r2, [r3]
	lsl r1, r2, #24
	cmp r1, #0
	beq _080DEF40
	ldr r0, _080DEF68  @ =gUnknown_081764B0
	lsr r1, r1, #31
	add r1, r1, r0
	ldrb r0, [r1]
	add r0, r2, r0
	strb r0, [r3]
_080DEF40:
	ldr r1, _080DEF6C  @ =0x00000F12
	add r0, r5, r1
	add r3, r4, r0
	ldrb r2, [r3]
	lsl r1, r2, #24
	cmp r1, #0
	beq _080DEF5A
	ldr r0, _080DEF68  @ =gUnknown_081764B0
	lsr r1, r1, #31
	add r1, r1, r0
	ldrb r0, [r1]
	add r0, r2, r0
	strb r0, [r3]
_080DEF5A:
	pop {r4,r5}
	pop {r0}
	bx r0
_080DEF60:
	.4byte gRam
_080DEF64:
	.4byte 0x00000F22
_080DEF68:
	.4byte gUnknown_081764B0
_080DEF6C:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080DEF1C

	THUMB_FUNC_START sub_080DEF70
sub_080DEF70: @ 0x080DEF70
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080DF398
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DEFE4
	add r0, r4, #0
	bl sub_080DF268
	add r0, r4, #0
	bl sub_080C99DC
	add r0, r4, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	beq _080DEFCC
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	beq _080DEFBC
	ldr r1, _080DEFB4  @ =gRam
	ldr r0, _080DEFB8  @ =0x00000F22
	add r1, r1, r0
	b _080DEFC2
	.byte 0x00
	.byte 0x00
_080DEFB4:
	.4byte gRam
_080DEFB8:
	.4byte 0x00000F22
_080DEFBC:
	ldr r1, _080DEFEC  @ =gRam
	ldr r2, _080DEFF0  @ =0x00000F12
	add r1, r1, r2
_080DEFC2:
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
_080DEFCC:
	ldr r1, _080DEFF4  @ =gUnknown_081764B4
	ldr r0, _080DEFEC  @ =gRam
	ldr r2, _080DEFF8  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080DEFE4:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DEFEC:
	.4byte gRam
_080DEFF0:
	.4byte 0x00000F12
_080DEFF4:
	.4byte gUnknown_081764B4
_080DEFF8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DEF70

	THUMB_FUNC_START sub_080DEFFC
sub_080DEFFC: @ 0x080DEFFC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080DF100  @ =gRam
	ldr r1, _080DF104  @ =0x00000996
	add r0, r4, r1
	ldrb r0, [r0]
	add r2, r5, #0
	eor r2, r2, r0
	lsl r2, r2, #24
	ldr r3, _080DF108  @ =0x00000F92
	add r1, r4, r3
	add r1, r5, r1
	lsr r0, r2, #27
	mov r6, #1
	and r0, r0, r6
	strb r0, [r1]
	mov r0, #248
	lsl r0, r0, #21
	and r0, r0, r2
	cmp r0, #0
	bne _080DF0A0
	ldr r1, _080DF10C  @ =0x00001082
	add r0, r4, r1
	add r0, r5, r0
	ldrb r2, [r0]
	sub r3, r3, #176
	add r0, r4, r3
	add r0, r2, r0
	ldrb r1, [r0]
	ldr r3, _080DF110  @ =0x00000968
	add r0, r4, r3
	strb r1, [r0]
	ldr r1, _080DF114  @ =0x00000F02
	add r0, r4, r1
	add r0, r2, r0
	ldrb r1, [r0]
	add r3, r3, #1
	add r0, r4, r3
	strb r1, [r0]
	ldr r1, _080DF118  @ =0x00000ED2
	add r0, r4, r1
	add r0, r2, r0
	ldrb r1, [r0]
	add r3, r3, #3
	add r0, r4, r3
	strb r1, [r0]
	ldr r1, _080DF11C  @ =0x00000EF2
	add r0, r4, r1
	add r0, r2, r0
	ldrb r1, [r0]
	ldr r2, _080DF120  @ =0x0000096D
	add r0, r4, r2
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #14
	bl sub_080C2DCC
	ldr r3, _080DF124  @ =0x00000F12
	add r0, r4, r3
	add r0, r5, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r4, r2
	ldrb r1, [r1]
	strb r1, [r0]
	add r3, r3, #16
	add r0, r4, r3
	add r0, r5, r0
	add r2, r2, #1
	add r1, r4, r2
	ldrb r1, [r1]
	strb r1, [r0]
	lsl r0, r1, #24
	cmp r0, #0
	beq _080DF0A0
	add r3, r3, #144
	add r1, r4, r3
	add r1, r5, r1
	lsr r0, r0, #31
	and r0, r0, r6
	strb r0, [r1]
_080DF0A0:
	ldr r3, _080DF100  @ =gRam
	ldr r1, _080DF10C  @ =0x00001082
	add r0, r3, r1
	add r0, r5, r0
	ldrb r2, [r0]
	add r1, r1, #192
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DF0F8
	ldr r0, _080DF128  @ =0x00000EE2
	add r1, r3, r0
	add r0, r5, r1
	add r1, r2, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	sub r0, r0, r1
	add r0, r0, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #15
	bhi _080DF0F8
	ldr r0, _080DF118  @ =0x00000ED2
	add r1, r3, r0
	add r0, r5, r1
	add r1, r2, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	sub r0, r0, r1
	add r0, r0, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #15
	bhi _080DF0F8
	ldr r2, _080DF12C  @ =0x00000F52
	add r1, r3, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r5, #0
	bl sub_080DF3EC
_080DF0F8:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DF100:
	.4byte gRam
_080DF104:
	.4byte 0x00000996
_080DF108:
	.4byte 0x00000F92
_080DF10C:
	.4byte 0x00001082
_080DF110:
	.4byte 0x00000968
_080DF114:
	.4byte 0x00000F02
_080DF118:
	.4byte 0x00000ED2
_080DF11C:
	.4byte 0x00000EF2
_080DF120:
	.4byte 0x0000096D
_080DF124:
	.4byte 0x00000F12
_080DF128:
	.4byte 0x00000EE2
_080DF12C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DEFFC

	THUMB_FUNC_START sub_080DF130
sub_080DF130: @ 0x080DF130
	push {r4-r6,lr}
	mov r6, r8
	push {r6}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080DF1B0  @ =gRam
	ldr r0, _080DF1B4  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	mov r2, #0
	mov r8, r2
	strb r0, [r1]
	ldr r1, _080DF1B8  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	ldrb r6, [r0]
	ldr r0, _080DF1BC  @ =0x00000F22
	add r2, r5, r0
	add r1, r6, r2
	add r2, r4, r2
	ldrb r0, [r2]
	lsl r0, r0, #1
	strb r0, [r1]
	ldr r0, _080DF1C0  @ =0x00000F12
	add r1, r5, r0
	add r3, r6, r1
	add r1, r4, r1
	ldrb r0, [r1]
	lsl r0, r0, #1
	strb r0, [r3]
	mov r0, r8
	strb r0, [r2]
	strb r0, [r1]
	bl GetRandomInt
	ldr r1, _080DF1C4  @ =0x00001152
	add r2, r5, r1
	add r2, r6, r2
	mov r1, #31
	and r1, r1, r0
	strb r1, [r2]
	ldr r2, _080DF1C8  @ =0x00000FC2
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #96
	strb r1, [r0]
	ldr r1, _080DF1CC  @ =0x00000F92
	add r0, r5, r1
	add r4, r4, r0
	mov r0, #1
	strb r0, [r4]
	add r2, r2, #160
	add r5, r5, r2
	add r6, r6, r5
	strb r0, [r6]
	pop {r3}
	mov r8, r3
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DF1B0:
	.4byte gRam
_080DF1B4:
	.4byte 0x00000F52
_080DF1B8:
	.4byte 0x00001082
_080DF1BC:
	.4byte 0x00000F22
_080DF1C0:
	.4byte 0x00000F12
_080DF1C4:
	.4byte 0x00001152
_080DF1C8:
	.4byte 0x00000FC2
_080DF1CC:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080DF130

	THUMB_FUNC_START sub_080DF1D0
sub_080DF1D0: @ 0x080DF1D0
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DF248  @ =gRam
	ldr r1, _080DF24C  @ =0x000010E2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080DF23E
	ldr r1, _080DF250  @ =0x000009AC
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #26
	beq _080DF23E
	ldr r2, _080DF254  @ =gUnknown_08176500
	ldr r0, _080DF258  @ =gUnknown_0200233B
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	lsl r0, r0, #1
	add r0, r0, r2
	ldrh r1, [r0]
	add r0, r4, #0
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DF23E
	ldr r0, _080DF25C  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	strb r0, [r1]
	ldr r0, _080DF260  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	strb r0, [r1]
	ldr r1, _080DF264  @ =0x00001062
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DF23A
	add r0, r4, #0
	mov r1, #121
	bl sub_080CF140
_080DF23A:
	mov r0, #64
	strb r0, [r6]
_080DF23E:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DF248:
	.4byte gRam
_080DF24C:
	.4byte 0x000010E2
_080DF250:
	.4byte 0x000009AC
_080DF254:
	.4byte gUnknown_08176500
_080DF258:
	.4byte gUnknown_0200233B
_080DF25C:
	.4byte 0x00000F22
_080DF260:
	.4byte 0x00000F12
_080DF264:
	.4byte 0x00001062
	THUMB_FUNC_END sub_080DF1D0

	THUMB_FUNC_START sub_080DF268
sub_080DF268: @ 0x080DF268
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DF2CC  @ =gRam
	ldr r1, _080DF2D0  @ =0x000010E2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080DF2C2
	ldr r1, _080DF2D4  @ =0x000009AC
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #26
	beq _080DF2C2
	ldr r2, _080DF2D8  @ =gUnknown_08176504
	ldr r0, _080DF2DC  @ =gUnknown_0200233B
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	lsl r0, r0, #1
	add r0, r0, r2
	ldrh r1, [r0]
	add r0, r4, #0
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DF2C2
	ldr r0, _080DF2E0  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	strb r0, [r1]
	ldr r0, _080DF2E4  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	strb r0, [r1]
	mov r0, #64
	strb r0, [r6]
_080DF2C2:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DF2CC:
	.4byte gRam
_080DF2D0:
	.4byte 0x000010E2
_080DF2D4:
	.4byte 0x000009AC
_080DF2D8:
	.4byte gUnknown_08176504
_080DF2DC:
	.4byte gUnknown_0200233B
_080DF2E0:
	.4byte 0x00000F22
_080DF2E4:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080DF268

	THUMB_FUNC_START sub_080DF2E8
sub_080DF2E8: @ 0x080DF2E8
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080DF3FC
	ldr r0, _080DF30C  @ =gRam
	ldr r1, _080DF310  @ =0x00001172
	add r0, r0, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DF30C:
	.4byte gRam
_080DF310:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080DF2E8

	THUMB_FUNC_START sub_080DF314
sub_080DF314: @ 0x080DF314
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080DF334  @ =gUnknown_081764A4
	ldr r1, _080DF338  @ =gRam
	ldr r3, _080DF33C  @ =0x00001052
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080DF334:
	.4byte gUnknown_081764A4
_080DF338:
	.4byte gRam
_080DF33C:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DF314

	THUMB_FUNC_START sub_080DF340
sub_080DF340: @ 0x080DF340
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DF360
	add r0, r4, #0
	bl sub_080EAAF0
_080DF360:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080DF340

	THUMB_FUNC_START sub_080DF368
sub_080DF368: @ 0x080DF368
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080DF38C  @ =gRam
	ldr r1, _080DF390  @ =0x00000FC2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080DF384
	ldr r4, _080DF394  @ =0x00000F52
	add r0, r3, r4
	add r0, r2, r0
	strb r1, [r0]
_080DF384:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DF38C:
	.4byte gRam
_080DF390:
	.4byte 0x00000FC2
_080DF394:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DF368

	THUMB_FUNC_START sub_080DF398
sub_080DF398: @ 0x080DF398
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080DF3D8  @ =gRam
	ldr r0, _080DF3DC  @ =0x0000096C
	add r1, r2, r0
	mov r0, #2
	strh r0, [r1]
	ldr r1, _080DF3E0  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080DF3E4  @ =0x00000F92
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #4
	ldr r0, _080DF3E8  @ =gUnknown_081764C0
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DF3D8:
	.4byte gRam
_080DF3DC:
	.4byte 0x0000096C
_080DF3E0:
	.4byte 0x00000FB2
_080DF3E4:
	.4byte 0x00000F92
_080DF3E8:
	.4byte gUnknown_081764C0
	THUMB_FUNC_END sub_080DF398

	THUMB_FUNC_START sub_080DF3EC
sub_080DF3EC: @ 0x080DF3EC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #121
	bl sub_080CF140
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080DF3EC

	THUMB_FUNC_START sub_080DF3FC
sub_080DF3FC: @ 0x080DF3FC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r0, #185
	add r1, r5, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080DF436
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r1, _080DF43C  @ =gRam
	ldr r2, _080DF440  @ =0x00001052
	add r0, r1, r2
	add r0, r4, r0
	mov r2, #2
	strb r2, [r0]
	ldr r2, _080DF444  @ =0x00001082
	add r0, r1, r2
	add r0, r4, r0
	strb r5, [r0]
	ldr r0, _080DF448  @ =0x00001172
	add r1, r1, r0
	add r1, r4, r1
	mov r0, #1
	strb r0, [r1]
_080DF436:
	pop {r4,r5}
	pop {r0}
	bx r0
_080DF43C:
	.4byte gRam
_080DF440:
	.4byte 0x00001052
_080DF444:
	.4byte 0x00001082
_080DF448:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080DF3FC

	THUMB_FUNC_START sub_080DF44C
sub_080DF44C: @ 0x080DF44C
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	ldr r6, _080DF4A0  @ =gRam
	ldr r0, _080DF4A4  @ =0x00000F62
	add r7, r6, r0
	add r0, r4, r7
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DF4B4
	ldr r1, _080DF4A8  @ =0x00000F82
	add r0, r6, r1
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080DF484
	ldr r3, _080DF4AC  @ =0x00000FA2
	add r0, r6, r3
	add r0, r4, r0
	strb r1, [r0]
_080DF484:
	ldr r0, _080DF4B0  @ =0x00000F92
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r2]
	lsr r0, r0, #3
	strb r0, [r1]
	mov r0, #4
	bl sub_080CF3A0
	add r0, r4, #0
	bl sub_080C58F0
	b _080DF632
	.byte 0x00
	.byte 0x00
_080DF4A0:
	.4byte gRam
_080DF4A4:
	.4byte 0x00000F62
_080DF4A8:
	.4byte 0x00000F82
_080DF4AC:
	.4byte 0x00000FA2
_080DF4B0:
	.4byte 0x00000F92
_080DF4B4:
	ldr r1, _080DF58C  @ =0x00000F72
	add r1, r1, r6
	mov r8, r1
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DF4C4
	b _080DF5C8
_080DF4C4:
	add r0, r4, #0
	bl sub_080E0254
	ldr r3, _080DF590  @ =0x00000F92
	add r2, r6, r3
	add r2, r4, r2
	ldr r0, _080DF594  @ =0x00000996
	add r3, r6, r0
	ldrb r0, [r3]
	lsr r0, r0, #4
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldrb r1, [r3]
	mov r0, #15
	and r0, r0, r1
	cmp r0, #0
	beq _080DF4EA
	b _080DF632
_080DF4EA:
	mov r0, #114
	add r1, r4, #0
	bl sub_080CA538
	add r5, r0, #0
	cmp r5, #0
	bge _080DF4FA
	b _080DF632
_080DF4FA:
	bl GetRandomInt
	mov r3, #7
	and r3, r3, r0
	mov r1, #150
	lsl r1, r1, #4
	add r2, r6, r1
	ldr r0, _080DF598  @ =gUnknown_081765BC
	add r0, r3, r0
	ldrh r1, [r2]
	ldrb r0, [r0]
	add r1, r1, r0
	mov r4, #0
	strh r1, [r2]
	ldr r1, _080DF59C  @ =0x00000EE2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r2]
	strb r1, [r0]
	ldr r2, _080DF5A0  @ =0x00000F02
	add r0, r6, r2
	add r0, r5, r0
	ldr r2, _080DF5A4  @ =0x00000961
	add r1, r6, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080DF5A8  @ =0x00000964
	add r1, r6, r0
	ldr r0, _080DF5AC  @ =gUnknown_081765C4
	add r3, r3, r0
	ldrh r0, [r1]
	ldrb r3, [r3]
	add r0, r0, r3
	strh r0, [r1]
	ldr r2, _080DF5B0  @ =0x00000ED2
	add r0, r6, r2
	add r0, r5, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r3, _080DF5B4  @ =0x00000EF2
	add r0, r6, r3
	add r0, r5, r0
	ldr r2, _080DF5B8  @ =0x00000965
	add r1, r6, r2
	ldrb r1, [r1]
	strb r1, [r0]
	add r3, r3, #144
	add r0, r6, r3
	add r0, r5, r0
	mov r1, #31
	strb r1, [r0]
	add r0, r5, r7
	strb r1, [r0]
	ldr r1, _080DF5BC  @ =0x00001012
	add r0, r6, r1
	add r0, r5, r0
	strb r4, [r0]
	ldr r2, _080DF5C0  @ =0x00001032
	add r0, r6, r2
	add r0, r5, r0
	mov r1, #72
	strb r1, [r0]
	ldr r3, _080DF5C4  @ =0x00001122
	add r0, r6, r3
	add r0, r5, r0
	mov r1, #8
	strb r1, [r0]
	mov r0, r8
	add r1, r5, r0
	mov r0, #1
	strb r0, [r1]
	b _080DF632
	.byte 0x00
	.byte 0x00
_080DF58C:
	.4byte 0x00000F72
_080DF590:
	.4byte 0x00000F92
_080DF594:
	.4byte 0x00000996
_080DF598:
	.4byte gUnknown_081765BC
_080DF59C:
	.4byte 0x00000EE2
_080DF5A0:
	.4byte 0x00000F02
_080DF5A4:
	.4byte 0x00000961
_080DF5A8:
	.4byte 0x00000964
_080DF5AC:
	.4byte gUnknown_081765C4
_080DF5B0:
	.4byte 0x00000ED2
_080DF5B4:
	.4byte 0x00000EF2
_080DF5B8:
	.4byte 0x00000965
_080DF5BC:
	.4byte 0x00001012
_080DF5C0:
	.4byte 0x00001032
_080DF5C4:
	.4byte 0x00001122
_080DF5C8:
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C631C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DF632
	add r0, r4, #0
	bl sub_080DF648
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080DF632
	ldr r1, _080DF610  @ =0x000009DA
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #21
	bne _080DF61C
	ldr r1, _080DF614  @ =gUnknown_081765CC
	ldr r2, _080DF618  @ =0x00000F52
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	b _080DF632
	.byte 0x00
	.byte 0x00
_080DF610:
	.4byte 0x000009DA
_080DF614:
	.4byte gUnknown_081765CC
_080DF618:
	.4byte 0x00000F52
_080DF61C:
	ldr r1, _080DF640  @ =gUnknown_08176608
	ldr r3, _080DF644  @ =0x00000F52
	add r0, r6, r3
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
_080DF632:
	add sp, sp, #4
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DF640:
	.4byte gUnknown_08176608
_080DF644:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DF44C

	THUMB_FUNC_START sub_080DF648
sub_080DF648: @ 0x080DF648
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r1, _080DF6EC  @ =gRam
	ldr r2, _080DF6F0  @ =0x000009DA
	add r0, r1, r2
	ldrb r0, [r0]
	add r6, r1, #0
	cmp r0, #21
	beq _080DF750
	ldr r3, _080DF6F4  @ =0x00000F52
	add r0, r6, r3
	add r0, r7, r0
	ldrb r1, [r0]
	sub r0, r1, #5
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #1
	bls _080DF67E
	add r0, r1, #0
	cmp r0, #11
	beq _080DF67E
	cmp r0, #12
	bne _080DF750
_080DF67E:
	ldr r1, _080DF6F8  @ =gUnknown_0816E2EC
	ldr r2, _080DF6FC  @ =0x00000F92
	add r0, r6, r2
	add r0, r7, r0
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r3, [r0]
	ldr r1, _080DF700  @ =0x00001624
	add r0, r6, r1
	ldrb r0, [r0]
	mov r9, r0
	ldr r2, _080DF704  @ =0x00001625
	add r0, r6, r2
	ldrb r0, [r0]
	mov r8, r0
	ldr r2, _080DF708  @ =gUnknown_08173F38
	ldr r0, _080DF70C  @ =0x00000996
	add r0, r0, r6
	mov r12, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	mov r1, #255
	and r0, r0, r1
	lsl r0, r0, #1
	add r0, r0, r2
	ldrh r0, [r0]
	lsr r0, r0, #5
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	mov r1, r8
	lsl r0, r1, #8
	mov r2, r9
	orr r0, r0, r2
	sub r0, r0, #4
	lsl r0, r0, #16
	lsr r2, r0, #16
	cmp r3, #255
	bne _080DF6CE
	mov r3, #5
_080DF6CE:
	ldr r0, _080DF710  @ =0x00001122
	add r1, r6, r0
	add r1, r7, r1
	mov r0, #7
	and r3, r3, r0
	lsl r0, r3, #1
	strb r0, [r1]
	mov r3, r12
	ldrb r1, [r3]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	beq _080DF714
	sub r0, r2, r4
	b _080DF716
_080DF6EC:
	.4byte gRam
_080DF6F0:
	.4byte 0x000009DA
_080DF6F4:
	.4byte 0x00000F52
_080DF6F8:
	.4byte gUnknown_0816E2EC
_080DF6FC:
	.4byte 0x00000F92
_080DF700:
	.4byte 0x00001624
_080DF704:
	.4byte 0x00001625
_080DF708:
	.4byte gUnknown_08173F38
_080DF70C:
	.4byte 0x00000996
_080DF710:
	.4byte 0x00001122
_080DF714:
	add r0, r2, r5
_080DF716:
	lsl r0, r0, #16
	lsr r2, r0, #16
	ldr r0, _080DF75C  @ =0x00001624
	add r5, r6, r0
	strb r2, [r5]
	lsr r0, r2, #8
	ldr r1, _080DF760  @ =0x00001625
	add r4, r6, r1
	strb r0, [r4]
	ldr r2, _080DF764  @ =gUnknown_08176680
	ldr r1, _080DF768  @ =gUnknown_0816E294
	ldr r3, _080DF76C  @ =0x00000F92
	add r0, r6, r3
	add r0, r7, r0
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r0, [r0]
	lsr r0, r0, #1
	lsl r0, r0, #2
	add r0, r0, r2
	ldr r1, [r0]
	add r0, r7, #0
	mov r2, #4
	bl sub_080C9480
	mov r0, r9
	strb r0, [r5]
	mov r1, r8
	strb r1, [r4]
_080DF750:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080DF75C:
	.4byte 0x00001624
_080DF760:
	.4byte 0x00001625
_080DF764:
	.4byte gUnknown_08176680
_080DF768:
	.4byte gUnknown_0816E294
_080DF76C:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080DF648

	THUMB_FUNC_START sub_080DF770
sub_080DF770: @ 0x080DF770
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DF7D4  @ =gRam
	ldr r0, _080DF7D8  @ =0x00001770
	add r1, r5, r0
	mov r0, #0
	strb r0, [r1]
	ldr r1, _080DF7DC  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DF7CC
	bl sub_0809E3CC
	add r6, r0, #0
	cmp r6, #0
	bne _080DF7CC
	add r0, r4, #0
	mov r1, #140
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DF7CC
	ldr r0, _080DF7E0  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080DF7E4  @ =0x00001052
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	bl sub_08092E50
	bl sub_080AE75C
	ldr r1, _080DF7E8  @ =0x000016D5
	add r0, r5, r1
	strb r6, [r0]
_080DF7CC:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080DF7D4:
	.4byte gRam
_080DF7D8:
	.4byte 0x00001770
_080DF7DC:
	.4byte 0x00000FC2
_080DF7E0:
	.4byte 0x00000F52
_080DF7E4:
	.4byte 0x00001052
_080DF7E8:
	.4byte 0x000016D5
	THUMB_FUNC_END sub_080DF770

	THUMB_FUNC_START sub_080DF7EC
sub_080DF7EC: @ 0x080DF7EC
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r4, r1, #0
	ldr r5, _080DF80C  @ =gRam
	ldr r2, _080DF810  @ =0x00001AE2
	add r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DF814
	add r0, r1, #0
	bl sub_080E03B4
	b _080DF864
	.byte 0x00
	.byte 0x00
_080DF80C:
	.4byte gRam
_080DF810:
	.4byte 0x00001AE2
_080DF814:
	ldr r0, _080DF86C  @ =gUnknown_02002350
	ldr r1, _080DF870  @ =gUnknown_02002351
	ldrb r2, [r0]
	ldrb r0, [r1]
	add r3, r0, #0
	orr r3, r3, r2
	cmp r3, #0
	beq _080DF826
	mov r3, #2
_080DF826:
	ldr r6, _080DF874  @ =0x00000F92
	add r0, r5, r6
	add r0, r4, r0
	strb r3, [r0]
	ldr r2, _080DF878  @ =gUnknown_08176688
	add r0, r3, r2
	ldrb r1, [r0]
	ldr r6, _080DF87C  @ =0x00001AEC
	add r0, r5, r6
	strb r1, [r0]
	add r0, r3, #1
	add r0, r0, r2
	ldrb r1, [r0]
	ldr r2, _080DF880  @ =0x00001AED
	add r0, r5, r2
	strb r1, [r0]
	ldr r1, _080DF884  @ =0x00000151
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r6, _080DF888  @ =0x00000F52
	add r1, r5, r6
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080DF88C  @ =0x00001770
	add r1, r5, r0
	mov r0, #1
	strb r0, [r1]
_080DF864:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080DF86C:
	.4byte gUnknown_02002350
_080DF870:
	.4byte gUnknown_02002351
_080DF874:
	.4byte 0x00000F92
_080DF878:
	.4byte gUnknown_08176688
_080DF87C:
	.4byte 0x00001AEC
_080DF880:
	.4byte 0x00001AED
_080DF884:
	.4byte 0x00000151
_080DF888:
	.4byte 0x00000F52
_080DF88C:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080DF7EC

	THUMB_FUNC_START sub_080DF890
sub_080DF890: @ 0x080DF890
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080DF8F4  @ =gRam
	ldr r0, _080DF8F8  @ =0x00001AE2
	add r1, r6, r0
	ldr r2, _080DF8FC  @ =0x00000F92
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	ldrb r1, [r1]
	add r0, r0, r1
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r0, _080DF900  @ =gUnknown_08176688
	add r0, r7, r0
	ldrb r1, [r0]
	ldr r2, _080DF904  @ =0x00001AED
	add r0, r6, r2
	strb r1, [r0]
	ldr r0, _080DF908  @ =gUnknown_0817668C
	add r0, r7, r0
	ldrb r0, [r0]
	mov r1, #150
	lsl r1, r1, #4
	add r5, r6, r1
	strh r0, [r5]
	bl sub_080AA868
	mov r2, #0
	ldrsh r1, [r5, r2]
	cmp r0, r1
	bge _080DF918
	add r0, r4, #0
	ldr r1, _080DF90C  @ =0x0000014F
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080DF910  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r2, _080DF914  @ =0x00000FC2
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	b _080DF936
_080DF8F4:
	.4byte gRam
_080DF8F8:
	.4byte 0x00001AE2
_080DF8FC:
	.4byte 0x00000F92
_080DF900:
	.4byte gUnknown_08176688
_080DF904:
	.4byte 0x00001AED
_080DF908:
	.4byte gUnknown_0817668C
_080DF90C:
	.4byte 0x0000014F
_080DF910:
	.4byte 0x00000F52
_080DF914:
	.4byte 0x00000FC2
_080DF918:
	ldr r1, _080DF940  @ =0x00000FB2
	add r0, r6, r1
	add r0, r4, r0
	ldrh r1, [r5]
	strb r1, [r0]
	ldr r2, _080DF944  @ =0x00001082
	add r0, r6, r2
	add r0, r4, r0
	strb r7, [r0]
	ldr r0, _080DF948  @ =0x00000F52
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080DF936:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DF940:
	.4byte 0x00000FB2
_080DF944:
	.4byte 0x00001082
_080DF948:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DF890

	THUMB_FUNC_START sub_080DF94C
sub_080DF94C: @ 0x080DF94C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r6, _080DF9D8  @ =gRam
	ldr r1, _080DF9DC  @ =0x00000FC2
	add r0, r6, r1
	add r0, r7, r0
	mov r1, #80
	strb r1, [r0]
	ldr r3, _080DF9E0  @ =0x00000FB2
	add r0, r6, r3
	add r0, r7, r0
	ldrb r0, [r0]
	mov r1, #150
	lsl r1, r1, #4
	add r4, r6, r1
	strh r0, [r4]
	mov r3, #0
	ldrsh r0, [r4, r3]
	neg r0, r0
	bl sub_080AA83C
	ldr r5, _080DF9E4  @ =gUnknown_0200234A
	ldrb r0, [r4]
	ldrb r1, [r5]
	add r0, r0, r1
	strb r0, [r5]
	ldr r3, _080DF9E8  @ =0x00001082
	add r0, r6, r3
	add r0, r7, r0
	ldrb r0, [r0]
	bl sub_080AE35C
	ldrb r0, [r5]
	cmp r0, #99
	bhi _080DF9F8
	ldrb r2, [r5]
	ldr r0, _080DF9EC  @ =0x00000964
	add r3, r6, r0
	mov r0, #0
	strb r0, [r3]
	add r1, r6, #0
	cmp r2, #9
	bls _080DF9BA
	add r4, r3, #0
	mov r3, #0
_080DF9A8:
	add r0, r2, #0
	sub r0, r0, #10
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r0, r3, #1
	add r3, r0, #0
	cmp r2, #9
	bhi _080DF9A8
	strb r0, [r4]
_080DF9BA:
	ldr r3, _080DF9EC  @ =0x00000964
	add r0, r1, r3
	ldrb r0, [r0]
	lsl r0, r0, #4
	orr r2, r2, r0
	ldr r3, _080DF9F0  @ =0x00001AEC
	add r0, r1, r3
	strb r2, [r0]
	ldr r0, _080DF9F4  @ =0x00000F52
	add r1, r1, r0
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080DFA06
_080DF9D8:
	.4byte gRam
_080DF9DC:
	.4byte 0x00000FC2
_080DF9E0:
	.4byte 0x00000FB2
_080DF9E4:
	.4byte gUnknown_0200234A
_080DF9E8:
	.4byte 0x00001082
_080DF9EC:
	.4byte 0x00000964
_080DF9F0:
	.4byte 0x00001AEC
_080DF9F4:
	.4byte 0x00000F52
_080DF9F8:
	sub r0, r0, #100
	strb r0, [r5]
	ldr r1, _080DFA0C  @ =0x00000F52
	add r0, r6, r1
	add r0, r7, r0
	mov r1, #5
	strb r1, [r0]
_080DFA06:
	pop {r4-r7}
	pop {r0}
	bx r0
_080DFA0C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080DF94C

	THUMB_FUNC_START sub_080DFA10
sub_080DFA10: @ 0x080DFA10
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r5, _080DFAB0  @ =gRam
	ldr r1, _080DFAB4  @ =0x00000FC2
	add r0, r5, r1
	add r7, r6, r0
	ldrb r0, [r7]
	cmp r0, #0
	bne _080DFAA8
	mov r0, #114
	add r1, r6, #0
	bl sub_080CA538
	add r4, r0, #0
	ldr r2, _080DFAB8  @ =0x00000A3C
	add r1, r5, r2
	mov r2, #0
	mov r0, #20
	strh r0, [r1]
	ldr r1, _080DFABC  @ =0x00000A48
	add r0, r5, r1
	strb r2, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	ldr r2, _080DFAC0  @ =0x00000EE2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DFAC4  @ =0x00000F02
	add r0, r5, r1
	add r0, r4, r0
	ldr r2, _080DFAC8  @ =0x00000961
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080DFACC  @ =0x00000964
	add r1, r5, r0
	ldrh r0, [r1]
	sub r0, r0, #70
	strh r0, [r1]
	ldr r2, _080DFAD0  @ =0x00000ED2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DFAD4  @ =0x00000EF2
	add r0, r5, r1
	add r0, r4, r0
	ldr r2, _080DFAD8  @ =0x00000965
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DFADC  @ =0x00000F72
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r2, _080DFAE0  @ =0x00000F52
	add r1, r5, r2
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #255
	strb r0, [r7]
	bl sub_081335FC
	bl sub_08131D74
	ldr r1, _080DFAE4  @ =0x00001062
	add r0, r5, r1
	add r0, r6, r0
	strb r4, [r0]
_080DFAA8:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DFAB0:
	.4byte gRam
_080DFAB4:
	.4byte 0x00000FC2
_080DFAB8:
	.4byte 0x00000A3C
_080DFABC:
	.4byte 0x00000A48
_080DFAC0:
	.4byte 0x00000EE2
_080DFAC4:
	.4byte 0x00000F02
_080DFAC8:
	.4byte 0x00000961
_080DFACC:
	.4byte 0x00000964
_080DFAD0:
	.4byte 0x00000ED2
_080DFAD4:
	.4byte 0x00000EF2
_080DFAD8:
	.4byte 0x00000965
_080DFADC:
	.4byte 0x00000F72
_080DFAE0:
	.4byte 0x00000F52
_080DFAE4:
	.4byte 0x00001062
	THUMB_FUNC_END sub_080DFA10

	THUMB_FUNC_START sub_080DFAE8
sub_080DFAE8: @ 0x080DFAE8
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r4, _080DFB4C  @ =gRam
	ldr r1, _080DFB50  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080DFB44
	bl sub_08133620
	ldr r1, _080DFB54  @ =0x00000CF8
	add r0, r4, r1
	ldrh r5, [r0]
	cmp r5, #0
	bne _080DFB44
	ldr r0, _080DFB58  @ =0x00000F52
	add r1, r4, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r6, #0
	mov r1, #152
	mov r2, sp
	bl sub_080C9564
	bl sub_08133600
	ldr r1, _080DFB5C  @ =0x000009B5
	add r0, r4, r1
	strb r5, [r0]
	ldr r0, _080DFB60  @ =0x000009D4
	add r1, r4, r0
	mov r0, #32
	strb r0, [r1]
	ldr r0, _080DFB64  @ =0x0000099B
	add r1, r4, r0
	mov r0, #1
	strb r0, [r1]
	ldr r1, _080DFB68  @ =0x0000051E
	add r0, r4, r1
	strh r5, [r0]
_080DFB44:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080DFB4C:
	.4byte gRam
_080DFB50:
	.4byte 0x00000996
_080DFB54:
	.4byte 0x00000CF8
_080DFB58:
	.4byte 0x00000F52
_080DFB5C:
	.4byte 0x000009B5
_080DFB60:
	.4byte 0x000009D4
_080DFB64:
	.4byte 0x0000099B
_080DFB68:
	.4byte 0x0000051E
	THUMB_FUNC_END sub_080DFAE8

	THUMB_FUNC_START sub_080DFB6C
sub_080DFB6C: @ 0x080DFB6C
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DFB9C  @ =gRam
	ldr r0, _080DFBA0  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r3, _080DFBA4  @ =gUnknown_02002350
	ldrb r0, [r3]
	cmp r0, #7
	bne _080DFBA8
	add r0, r4, #0
	mov r1, #155
	mov r2, sp
	bl sub_080C9564
	add r0, r4, #0
	bl sub_080E04D4
	b _080DFBD8
_080DFB9C:
	.4byte gRam
_080DFBA0:
	.4byte 0x00000F52
_080DFBA4:
	.4byte gUnknown_02002350
_080DFBA8:
	add r0, r0, #1
	strb r0, [r3]
	ldr r2, _080DFBE0  @ =gUnknown_0816B590
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r1, [r0]
	ldr r6, _080DFBE4  @ =0x00001AEC
	add r0, r5, r6
	strb r1, [r0]
	ldr r1, _080DFBE8  @ =gUnknown_02002355
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080DFBEC  @ =0x00001052
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #39
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #153
	mov r2, sp
	bl sub_080C9564
_080DFBD8:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080DFBE0:
	.4byte gUnknown_0816B590
_080DFBE4:
	.4byte 0x00001AEC
_080DFBE8:
	.4byte gUnknown_02002355
_080DFBEC:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DFB6C

	THUMB_FUNC_START sub_080DFBF0
sub_080DFBF0: @ 0x080DFBF0
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r4, _080DFC48  @ =gRam
	ldr r2, _080DFC4C  @ =0x00000F52
	add r1, r4, r2
	add r0, r0, r1
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	bl sub_081335FC
	ldr r0, _080DFC50  @ =0x000009B5
	add r1, r4, r0
	mov r0, #2
	strb r0, [r1]
	ldr r2, _080DFC54  @ =0x000009D4
	add r1, r4, r2
	mov r0, #48
	strb r0, [r1]
	ldr r0, _080DFC58  @ =0x0000099B
	add r1, r4, r0
	mov r0, #1
	strb r0, [r1]
	ldr r2, _080DFC5C  @ =0x0000051E
	add r1, r4, r2
	mov r0, #185
	lsl r0, r0, #6
	strh r0, [r1]
	ldr r0, _080DFC60  @ =0x0000051A
	add r1, r4, r0
	mov r0, #63
	strh r0, [r1]
	ldr r1, _080DFC64  @ =0x00000998
	add r0, r4, r1
	mov r1, #15
	strb r1, [r0]
	ldr r2, _080DFC68  @ =0x00000999
	add r4, r4, r2
	strb r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DFC48:
	.4byte gRam
_080DFC4C:
	.4byte 0x00000F52
_080DFC50:
	.4byte 0x000009B5
_080DFC54:
	.4byte 0x000009D4
_080DFC58:
	.4byte 0x0000099B
_080DFC5C:
	.4byte 0x0000051E
_080DFC60:
	.4byte 0x0000051A
_080DFC64:
	.4byte 0x00000998
_080DFC68:
	.4byte 0x00000999
	THUMB_FUNC_END sub_080DFBF0

	THUMB_FUNC_START sub_080DFC6C
sub_080DFC6C: @ 0x080DFC6C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r7, r6, #0
	ldr r5, _080DFCA4  @ =gRam
	ldr r1, _080DFCA8  @ =0x00000996
	add r0, r5, r1
	ldrb r0, [r0]
	mov r4, #7
	and r4, r4, r0
	cmp r4, #0
	bne _080DFCC4
	bl sub_08133620
	ldr r2, _080DFCAC  @ =0x00000CF8
	add r0, r5, r2
	ldrh r0, [r0]
	cmp r0, #30
	beq _080DFCB4
	cmp r0, #0
	bne _080DFCC4
	ldr r0, _080DFCB0  @ =0x00000F52
	add r1, r5, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080DFCC4
_080DFCA4:
	.4byte gRam
_080DFCA8:
	.4byte 0x00000996
_080DFCAC:
	.4byte 0x00000CF8
_080DFCB0:
	.4byte 0x00000F52
_080DFCB4:
	ldr r2, _080DFCCC  @ =0x00001062
	add r1, r5, r2
	add r1, r7, r1
	sub r2, r2, #192
	add r0, r5, r2
	ldrb r1, [r1]
	add r0, r0, r1
	strb r4, [r0]
_080DFCC4:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DFCCC:
	.4byte 0x00001062
	THUMB_FUNC_END sub_080DFC6C

	THUMB_FUNC_START sub_080DFCD0
sub_080DFCD0: @ 0x080DFCD0
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DFD00  @ =gRam
	ldr r1, _080DFD04  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #9
	strb r1, [r0]
	ldr r3, _080DFD08  @ =gUnknown_02002351
	ldrb r0, [r3]
	cmp r0, #7
	bne _080DFD0C
	add r0, r4, #0
	mov r1, #155
	mov r2, sp
	bl sub_080C9564
	add r0, r4, #0
	bl sub_080E04D4
	b _080DFD3C
	.byte 0x00
	.byte 0x00
_080DFD00:
	.4byte gRam
_080DFD04:
	.4byte 0x00000F52
_080DFD08:
	.4byte gUnknown_02002351
_080DFD0C:
	add r0, r0, #1
	strb r0, [r3]
	ldr r2, _080DFD44  @ =gUnknown_0816B5A0
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r1, [r0]
	ldr r6, _080DFD48  @ =0x00001AEC
	add r0, r5, r6
	strb r1, [r0]
	ldr r1, _080DFD4C  @ =gUnknown_02002356
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080DFD50  @ =0x00001052
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #67
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #154
	mov r2, sp
	bl sub_080C9564
_080DFD3C:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080DFD44:
	.4byte gUnknown_0816B5A0
_080DFD48:
	.4byte 0x00001AEC
_080DFD4C:
	.4byte gUnknown_02002356
_080DFD50:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080DFCD0

	THUMB_FUNC_START sub_080DFD54
sub_080DFD54: @ 0x080DFD54
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080DFDB4  @ =gRam
	ldr r0, _080DFDB8  @ =0x00001770
	add r1, r6, r0
	mov r0, #0
	strb r0, [r1]
	ldr r1, _080DFDBC  @ =0x00000FC2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080DFDAA
	bl sub_0809E3CC
	add r4, r0, #0
	cmp r4, #0
	bne _080DFDAA
	ldr r1, _080DFDC0  @ =0x0000014D
	add r0, r5, #0
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080DFDAA
	ldr r0, _080DFDC4  @ =0x00000F52
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	bl sub_08092E50
	ldr r1, _080DFDC8  @ =0x000016D5
	add r0, r6, r1
	strb r4, [r0]
	ldr r1, _080DFDCC  @ =0x00001082
	add r0, r6, r1
	add r0, r5, r0
	strb r4, [r0]
_080DFDAA:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DFDB4:
	.4byte gRam
_080DFDB8:
	.4byte 0x00001770
_080DFDBC:
	.4byte 0x00000FC2
_080DFDC0:
	.4byte 0x0000014D
_080DFDC4:
	.4byte 0x00000F52
_080DFDC8:
	.4byte 0x000016D5
_080DFDCC:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080DFD54

	THUMB_FUNC_START sub_080DFDD0
sub_080DFDD0: @ 0x080DFDD0
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080DFE08  @ =gRam
	ldr r1, _080DFE0C  @ =0x00001AE2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080DFE18
	mov r1, #167
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080DFE10  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r1, _080DFE14  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	b _080DFE36
	.byte 0x00
	.byte 0x00
_080DFE08:
	.4byte gRam
_080DFE0C:
	.4byte 0x00001AE2
_080DFE10:
	.4byte 0x00000F52
_080DFE14:
	.4byte 0x00000FC2
_080DFE18:
	add r0, r4, #0
	mov r1, #141
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080DFE40  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080DFE44  @ =0x00001770
	add r1, r5, r0
	mov r0, #1
	strb r0, [r1]
_080DFE36:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DFE40:
	.4byte 0x00000F52
_080DFE44:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080DFDD0

	THUMB_FUNC_START sub_080DFE48
sub_080DFE48: @ 0x080DFE48
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r3, _080DFECC  @ =gRam
	ldr r0, _080DFED0  @ =0x00000F52
	add r1, r3, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r2, _080DFED4  @ =0x00000F82
	add r1, r3, r2
	add r1, r5, r1
	ldr r2, _080DFED8  @ =0x00001AE2
	add r0, r3, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080DFEDC  @ =gUnknown_0817653C
	ldrb r1, [r1]
	lsl r0, r1, #2
	add r0, r0, r2
	ldr r4, [r0]
	ldr r2, _080DFEE0  @ =gUnknown_02002320
	add r0, r1, r2
	ldrb r7, [r0]
	add r2, r7, #0
	add r6, r3, #0
	cmp r1, #32
	beq _080DFE86
	cmp r1, #3
	bne _080DFE88
_080DFE86:
	mov r2, #1
_080DFE88:
	ldr r1, _080DFED4  @ =0x00000F82
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	ldr r1, _080DFEE0  @ =gUnknown_02002320
	add r0, r0, r1
	mov r1, #0
	strb r1, [r0]
	add r0, r2, r4
	sub r0, r0, #1
	ldrb r4, [r0]
	mov r0, #4
	mov r1, #40
	add r2, r4, #0
	bl sub_080AE1F8
	bl sub_080AA724
	ldr r2, _080DFEE4  @ =0x00000F92
	add r0, r6, r2
	add r0, r5, r0
	strb r4, [r0]
	ldr r1, _080DFEE8  @ =0x00000FB2
	add r0, r6, r1
	add r0, r5, r0
	strb r7, [r0]
	add r2, r2, #48
	add r0, r6, r2
	add r0, r5, r0
	mov r1, #255
	strb r1, [r0]
	pop {r4-r7}
	pop {r0}
	bx r0
_080DFECC:
	.4byte gRam
_080DFED0:
	.4byte 0x00000F52
_080DFED4:
	.4byte 0x00000F82
_080DFED8:
	.4byte 0x00001AE2
_080DFEDC:
	.4byte gUnknown_0817653C
_080DFEE0:
	.4byte gUnknown_02002320
_080DFEE4:
	.4byte 0x00000F92
_080DFEE8:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080DFE48

	THUMB_FUNC_START sub_080DFEEC
sub_080DFEEC: @ 0x080DFEEC
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r5, _080DFF90  @ =gRam
	ldr r1, _080DFF94  @ =0x00000FC2
	add r0, r5, r1
	add r7, r6, r0
	ldrb r0, [r7]
	cmp r0, #0
	bne _080DFF88
	mov r0, #114
	add r1, r6, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080DFF88
	ldr r2, _080DFF98  @ =0x00000A3C
	add r1, r5, r2
	mov r2, #0
	mov r0, #20
	strh r0, [r1]
	ldr r1, _080DFF9C  @ =0x00000A48
	add r0, r5, r1
	strb r2, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	ldr r2, _080DFFA0  @ =0x00000EE2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DFFA4  @ =0x00000F02
	add r0, r5, r1
	add r0, r4, r0
	ldr r2, _080DFFA8  @ =0x00000961
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080DFFAC  @ =0x00000964
	add r1, r5, r0
	ldrh r0, [r1]
	sub r0, r0, #70
	strh r0, [r1]
	ldr r2, _080DFFB0  @ =0x00000ED2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DFFB4  @ =0x00000EF2
	add r0, r5, r1
	add r0, r4, r0
	ldr r2, _080DFFB8  @ =0x00000965
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080DFFBC  @ =0x00000F72
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r2, _080DFFC0  @ =0x00000F52
	add r1, r5, r2
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #255
	strb r0, [r7]
	bl sub_081335FC
	bl sub_08131D74
	ldr r1, _080DFFC4  @ =0x00001062
	add r0, r5, r1
	add r0, r6, r0
	strb r4, [r0]
_080DFF88:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080DFF90:
	.4byte gRam
_080DFF94:
	.4byte 0x00000FC2
_080DFF98:
	.4byte 0x00000A3C
_080DFF9C:
	.4byte 0x00000A48
_080DFFA0:
	.4byte 0x00000EE2
_080DFFA4:
	.4byte 0x00000F02
_080DFFA8:
	.4byte 0x00000961
_080DFFAC:
	.4byte 0x00000964
_080DFFB0:
	.4byte 0x00000ED2
_080DFFB4:
	.4byte 0x00000EF2
_080DFFB8:
	.4byte 0x00000965
_080DFFBC:
	.4byte 0x00000F72
_080DFFC0:
	.4byte 0x00000F52
_080DFFC4:
	.4byte 0x00001062
	THUMB_FUNC_END sub_080DFEEC

	THUMB_FUNC_START sub_080DFFC8
sub_080DFFC8: @ 0x080DFFC8
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r4, _080E002C  @ =gRam
	ldr r1, _080E0030  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080E0024
	bl sub_08133620
	ldr r1, _080E0034  @ =0x00000CF8
	add r0, r4, r1
	ldrh r5, [r0]
	cmp r5, #0
	bne _080E0024
	ldr r0, _080E0038  @ =0x00000F52
	add r1, r4, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r6, #0
	mov r1, #142
	mov r2, sp
	bl sub_080C9564
	bl sub_08133600
	ldr r1, _080E003C  @ =0x000009B5
	add r0, r4, r1
	strb r5, [r0]
	ldr r0, _080E0040  @ =0x000009D4
	add r1, r4, r0
	mov r0, #32
	strb r0, [r1]
	ldr r0, _080E0044  @ =0x0000099B
	add r1, r4, r0
	mov r0, #1
	strb r0, [r1]
	ldr r1, _080E0048  @ =0x0000051E
	add r0, r4, r1
	strh r5, [r0]
_080E0024:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080E002C:
	.4byte gRam
_080E0030:
	.4byte 0x00000996
_080E0034:
	.4byte 0x00000CF8
_080E0038:
	.4byte 0x00000F52
_080E003C:
	.4byte 0x000009B5
_080E0040:
	.4byte 0x000009D4
_080E0044:
	.4byte 0x0000099B
_080E0048:
	.4byte 0x0000051E
	THUMB_FUNC_END sub_080DFFC8

	THUMB_FUNC_START sub_080E004C
sub_080E004C: @ 0x080E004C
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r6, #0
	mov r5, #0
	ldr r2, _080E0088  @ =gRam
	ldr r0, _080E008C  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E0090  @ =0x0000165C
	add r0, r2, r1
	ldrh r0, [r0]
	cmp r0, #0
	beq _080E00CC
	ldr r1, _080E0094  @ =0x00000F92
	add r0, r2, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #58
	beq _080E00AC
	cmp r0, #2
	beq _080E0098
	cmp r0, #22
	bne _080E00E0
	b _080E00E8
	.byte 0x00
	.byte 0x00
_080E0088:
	.4byte gRam
_080E008C:
	.4byte 0x00000F52
_080E0090:
	.4byte 0x0000165C
_080E0094:
	.4byte 0x00000F92
_080E0098:
	mov r0, #3
	strb r0, [r1]
	ldr r1, _080E00A8  @ =0x00001082
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #5
	strb r1, [r0]
	b _080E0124
_080E00A8:
	.4byte 0x00001082
_080E00AC:
	mov r0, #59
	strb r0, [r1]
	ldr r1, _080E00C8  @ =0x00001082
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	mov r1, #169
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	b _080E0120
_080E00C8:
	.4byte 0x00001082
_080E00CC:
	ldr r1, _080E00E4  @ =0x00000F92
	add r0, r2, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #12
	beq _080E0110
	cmp r0, #4
	beq _080E00FC
	cmp r0, #22
	beq _080E00E8
_080E00E0:
	mov r5, #1
	b _080E0120
_080E00E4:
	.4byte 0x00000F92
_080E00E8:
	mov r0, #44
	strb r0, [r1]
	ldr r1, _080E00F8  @ =0x00001082
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	b _080E0124
_080E00F8:
	.4byte 0x00001082
_080E00FC:
	mov r0, #5
	strb r0, [r1]
	ldr r1, _080E010C  @ =0x00001082
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	b _080E0124
_080E010C:
	.4byte 0x00001082
_080E0110:
	mov r0, #42
	strb r0, [r1]
	ldr r1, _080E0148  @ =0x00001082
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	mov r6, #1
_080E0120:
	cmp r6, #0
	beq _080E012E
_080E0124:
	add r0, r4, #0
	mov r1, #143
	mov r2, sp
	bl sub_080C9564
_080E012E:
	cmp r5, #0
	beq _080E013E
	mov r1, #168
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
_080E013E:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E0148:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080E004C

	THUMB_FUNC_START sub_080E014C
sub_080E014C: @ 0x080E014C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r3, r2, #0
	ldr r4, _080E01C0  @ =gRam
	ldr r1, _080E01C4  @ =0x00000F82
	add r0, r4, r1
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #3
	bne _080E0170
	ldr r5, _080E01C8  @ =gUnknown_02002320
	add r0, r0, r5
	ldr r5, _080E01CC  @ =0x00000FB2
	add r1, r4, r5
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r0]
_080E0170:
	ldr r0, _080E01D0  @ =0x00000F52
	add r1, r4, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	bl sub_081335FC
	ldr r2, _080E01D4  @ =0x000009B5
	add r1, r4, r2
	mov r0, #2
	strb r0, [r1]
	ldr r5, _080E01D8  @ =0x000009D4
	add r1, r4, r5
	mov r0, #48
	strb r0, [r1]
	ldr r0, _080E01DC  @ =0x0000099B
	add r1, r4, r0
	mov r0, #1
	strb r0, [r1]
	ldr r2, _080E01E0  @ =0x0000051E
	add r1, r4, r2
	mov r0, #185
	lsl r0, r0, #6
	strh r0, [r1]
	ldr r5, _080E01E4  @ =0x0000051A
	add r1, r4, r5
	mov r0, #63
	strh r0, [r1]
	ldr r1, _080E01E8  @ =0x00000998
	add r0, r4, r1
	mov r1, #15
	strb r1, [r0]
	ldr r2, _080E01EC  @ =0x00000999
	add r0, r4, r2
	strb r1, [r0]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E01C0:
	.4byte gRam
_080E01C4:
	.4byte 0x00000F82
_080E01C8:
	.4byte gUnknown_02002320
_080E01CC:
	.4byte 0x00000FB2
_080E01D0:
	.4byte 0x00000F52
_080E01D4:
	.4byte 0x000009B5
_080E01D8:
	.4byte 0x000009D4
_080E01DC:
	.4byte 0x0000099B
_080E01E0:
	.4byte 0x0000051E
_080E01E4:
	.4byte 0x0000051A
_080E01E8:
	.4byte 0x00000998
_080E01EC:
	.4byte 0x00000999
	THUMB_FUNC_END sub_080E014C

	THUMB_FUNC_START sub_080E01F0
sub_080E01F0: @ 0x080E01F0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r7, r6, #0
	ldr r5, _080E0228  @ =gRam
	ldr r1, _080E022C  @ =0x00000996
	add r0, r5, r1
	ldrb r0, [r0]
	mov r4, #7
	and r4, r4, r0
	cmp r4, #0
	bne _080E0248
	bl sub_08133620
	ldr r2, _080E0230  @ =0x00000CF8
	add r0, r5, r2
	ldrh r0, [r0]
	cmp r0, #30
	beq _080E0238
	cmp r0, #0
	bne _080E0248
	ldr r0, _080E0234  @ =0x00000F52
	add r1, r5, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080E0248
_080E0228:
	.4byte gRam
_080E022C:
	.4byte 0x00000996
_080E0230:
	.4byte 0x00000CF8
_080E0234:
	.4byte 0x00000F52
_080E0238:
	ldr r2, _080E0250  @ =0x00001062
	add r1, r5, r2
	add r1, r7, r1
	sub r2, r2, #192
	add r0, r5, r2
	ldrb r1, [r1]
	add r0, r0, r1
	strb r4, [r0]
_080E0248:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E0250:
	.4byte 0x00001062
	THUMB_FUNC_END sub_080E01F0

	THUMB_FUNC_START sub_080E0254
sub_080E0254: @ 0x080E0254
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	ldr r4, _080E029C  @ =gRam
	ldr r1, _080E02A0  @ =0x0000165C
	add r0, r4, r1
	ldrh r0, [r0]
	cmp r0, #0
	beq _080E02B0
	ldr r5, _080E02A4  @ =0x0000096C
	add r1, r4, r5
	mov r0, #10
	strh r0, [r1]
	ldr r1, _080E02A8  @ =0x00000F92
	add r0, r4, r1
	add r0, r0, r9
	ldrb r0, [r0]
	lsl r1, r0, #2
	add r1, r1, r0
	lsl r1, r1, #4
	ldr r0, _080E02AC  @ =gUnknown_081766A8
	add r1, r1, r0
	mov r0, r9
	bl sub_080C94AC
	mov r0, #10
	bl sub_080C64A0
	b _080E0370
	.byte 0x00
	.byte 0x00
_080E029C:
	.4byte gRam
_080E02A0:
	.4byte 0x0000165C
_080E02A4:
	.4byte 0x0000096C
_080E02A8:
	.4byte 0x00000F92
_080E02AC:
	.4byte gUnknown_081766A8
_080E02B0:
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r9
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E0370
	ldr r5, _080E0380  @ =0x00000F92
	add r0, r4, r5
	add r0, r0, r9
	ldrb r1, [r0]
	lsl r0, r1, #1
	add r0, r0, r1
	lsl r0, r0, #26
	lsr r0, r0, #24
	str r0, [sp, #8]
	mov r0, #11
	mov r8, r0
	add r7, sp, #4
	mov r10, r4
_080E02DC:
	ldr r6, [sp, #8]
	add r6, r6, r8
	lsl r6, r6, #24
	lsr r6, r6, #24
	ldr r0, _080E0384  @ =gUnknown_03003E74
	ldrb r1, [r7]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r10
	ldr r1, _080E0388  @ =gUnknown_08176748
	add r1, r6, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080E038C  @ =0x00000964
	add r3, r3, r10
	ldr r2, _080E0390  @ =gUnknown_08176760
	add r2, r6, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E0394  @ =gUnknown_08176778
	add r3, r6, r3
	ldrb r3, [r3]
	ldr r4, _080E0398  @ =gUnknown_08176790
	add r4, r6, r4
	ldrb r4, [r4]
	ldr r5, _080E039C  @ =gUnknown_03002B99
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080E03A0  @ =gUnknown_081767A8
	add r6, r6, r4
	ldrb r4, [r6]
	str r4, [sp]
	bl sub_080C6004
	mov r0, r8
	lsl r1, r0, #24
	mov r5, #255
	lsl r5, r5, #24
	add r1, r1, r5
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsr r0, r1, #24
	mov r8, r0
	cmp r1, #0
	bge _080E02DC
	mov r0, r9
	mov r1, #255
	mov r2, #11
	bl sub_080C5DA0
	mov r0, #12
	bl sub_080C64A0
_080E0370:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080E0380:
	.4byte 0x00000F92
_080E0384:
	.4byte gUnknown_03003E74
_080E0388:
	.4byte gUnknown_08176748
_080E038C:
	.4byte 0x00000964
_080E0390:
	.4byte gUnknown_08176760
_080E0394:
	.4byte gUnknown_08176778
_080E0398:
	.4byte gUnknown_08176790
_080E039C:
	.4byte gUnknown_03002B99
_080E03A0:
	.4byte gUnknown_081767A8
	THUMB_FUNC_END sub_080E0254

	THUMB_FUNC_START sub_080E03A4
sub_080E03A4: @ 0x080E03A4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080C3758
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E03A4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E03B4
sub_080E03B4: @ 0x080E03B4
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r1, _080E03E8  @ =0x0000014F
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r2, _080E03EC  @ =gRam
	ldr r1, _080E03F0  @ =0x00000F52
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r0, _080E03F4  @ =0x00000FC2
	add r2, r2, r0
	add r4, r4, r2
	mov r0, #255
	strb r0, [r4]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E03E8:
	.4byte 0x0000014F
_080E03EC:
	.4byte gRam
_080E03F0:
	.4byte 0x00000F52
_080E03F4:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E03B4

	THUMB_FUNC_START sub_080E03F8
sub_080E03F8: @ 0x080E03F8
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E042C  @ =gRam
	ldr r1, _080E0430  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E0422
	add r0, r4, #0
	mov r1, #151
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080E0434  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #13
	strb r1, [r0]
_080E0422:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E042C:
	.4byte gRam
_080E0430:
	.4byte 0x00000FC2
_080E0434:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E03F8

	THUMB_FUNC_START sub_080E0438
sub_080E0438: @ 0x080E0438
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080E0458  @ =gRam
	ldr r3, _080E045C  @ =0x00001AE2
	add r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E0464
	ldr r3, _080E0460  @ =0x00000F52
	add r0, r1, r3
	add r0, r2, r0
	mov r1, #12
	strb r1, [r0]
	b _080E0470
	.byte 0x00
	.byte 0x00
_080E0458:
	.4byte gRam
_080E045C:
	.4byte 0x00001AE2
_080E0460:
	.4byte 0x00000F52
_080E0464:
	ldr r0, _080E0474  @ =0x00000F52
	add r1, r1, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080E0470:
	pop {r0}
	bx r0
_080E0474:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E0438

	THUMB_FUNC_START sub_080E0478
sub_080E0478: @ 0x080E0478
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	bl sub_08131E24
	bl sub_08133600
	ldr r5, _080E04C0  @ =gRam
	ldr r1, _080E04C4  @ =0x00001052
	add r0, r5, r1
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #255
	beq _080E04A4
	ldr r1, _080E04C8  @ =0x00001776
	add r0, r5, r1
	mov r1, #2
	strb r1, [r0]
	ldrb r0, [r2]
	bl sub_080A1588
_080E04A4:
	ldr r1, _080E04CC  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r1, _080E04D0  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E04C0:
	.4byte gRam
_080E04C4:
	.4byte 0x00001052
_080E04C8:
	.4byte 0x00001776
_080E04CC:
	.4byte 0x00000F52
_080E04D0:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E0478

	THUMB_FUNC_START sub_080E04D4
sub_080E04D4: @ 0x080E04D4
	push {lr}
	mov r0, #100
	bl sub_080AA858
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E04D4

	THUMB_FUNC_START sub_080E04E0
sub_080E04E0: @ 0x080E04E0
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r1, _080E050C  @ =0x00000157
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080E0510  @ =gRam
	ldr r1, _080E0514  @ =0x00000F52
	add r0, r0, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E050C:
	.4byte 0x00000157
_080E0510:
	.4byte gRam
_080E0514:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E04E0

	THUMB_FUNC_START sub_080E0518
sub_080E0518: @ 0x080E0518
	push {r4-r6,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	bl GetRandomInt
	mov r1, #3
	and r1, r1, r0
	ldr r5, _080E056C  @ =gRam
	ldr r0, _080E0570  @ =gUnknown_08176698
	add r0, r1, r0
	ldrb r2, [r0]
	ldr r3, _080E0574  @ =0x00000ECB
	add r0, r5, r3
	mov r6, #0
	strb r2, [r0]
	ldr r2, _080E0578  @ =0x00000ECC
	add r0, r5, r2
	strb r6, [r0]
	ldr r0, _080E057C  @ =gUnknown_08176690
	lsl r1, r1, #1
	add r1, r1, r0
	ldrh r1, [r1]
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r3, _080E0580  @ =0x00000F52
	add r0, r5, r3
	add r0, r4, r0
	strb r6, [r0]
	ldr r0, _080E0584  @ =0x00000FC2
	add r5, r5, r0
	add r4, r4, r5
	mov r0, #255
	strb r0, [r4]
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E056C:
	.4byte gRam
_080E0570:
	.4byte gUnknown_08176698
_080E0574:
	.4byte 0x00000ECB
_080E0578:
	.4byte 0x00000ECC
_080E057C:
	.4byte gUnknown_08176690
_080E0580:
	.4byte 0x00000F52
_080E0584:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E0518

	THUMB_FUNC_START sub_080E0588
sub_080E0588: @ 0x080E0588
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080E05A8  @ =gRam
	ldr r3, _080E05AC  @ =0x00001AE2
	add r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E05B4
	ldr r3, _080E05B0  @ =0x00000F52
	add r0, r1, r3
	add r0, r2, r0
	mov r1, #11
	strb r1, [r0]
	b _080E05C0
	.byte 0x00
	.byte 0x00
_080E05A8:
	.4byte gRam
_080E05AC:
	.4byte 0x00001AE2
_080E05B0:
	.4byte 0x00000F52
_080E05B4:
	ldr r0, _080E05C4  @ =0x00000F52
	add r1, r1, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080E05C0:
	pop {r0}
	bx r0
_080E05C4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E0588

	THUMB_FUNC_START sub_080E05C8
sub_080E05C8: @ 0x080E05C8
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080E0600  @ =gRam
	ldr r0, _080E0604  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	bl sub_08131E24
	bl sub_08133600
	ldr r0, _080E0608  @ =0x00001776
	add r1, r5, r0
	mov r0, #2
	strb r0, [r1]
	ldr r0, _080E060C  @ =0x00000F92
	add r5, r5, r0
	add r4, r4, r5
	ldrb r0, [r4]
	bl sub_080A1588
	pop {r4,r5}
	pop {r0}
	bx r0
_080E0600:
	.4byte gRam
_080E0604:
	.4byte 0x00000F52
_080E0608:
	.4byte 0x00001776
_080E060C:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080E05C8

	THUMB_FUNC_START sub_080E0610
sub_080E0610: @ 0x080E0610
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r5, r2, #0
	ldr r4, _080E0658  @ =gRam
	ldr r1, _080E065C  @ =0x00001082
	add r0, r4, r1
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080E063C
	ldr r0, _080E0660  @ =gUnknown_0817669C
	ldrb r1, [r1]
	sub r1, r1, #1
	lsl r1, r1, #1
	add r1, r1, r0
	ldrh r1, [r1]
	add r0, r2, #0
	mov r2, sp
	bl sub_080C9564
_080E063C:
	ldr r1, _080E0664  @ =0x00000F52
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	ldr r1, _080E0668  @ =0x00000FC2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #255
	strb r1, [r0]
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080E0658:
	.4byte gRam
_080E065C:
	.4byte 0x00001082
_080E0660:
	.4byte gUnknown_0817669C
_080E0664:
	.4byte 0x00000F52
_080E0668:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E0610

	THUMB_FUNC_START sub_080E066C
sub_080E066C: @ 0x080E066C
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E0690  @ =gRam
	ldr r1, _080E0694  @ =0x00000F52
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	mov r1, #144
	mov r2, sp
	bl sub_080C9564
	add sp, sp, #4
	pop {r0}
	bx r0
_080E0690:
	.4byte gRam
_080E0694:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E066C

	THUMB_FUNC_START sub_080E0698
sub_080E0698: @ 0x080E0698
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080E06B8  @ =gRam
	ldr r3, _080E06BC  @ =0x00001AE2
	add r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E06C4
	ldr r3, _080E06C0  @ =0x00000F52
	add r0, r1, r3
	add r0, r2, r0
	mov r1, #6
	strb r1, [r0]
	b _080E06D0
	.byte 0x00
	.byte 0x00
_080E06B8:
	.4byte gRam
_080E06BC:
	.4byte 0x00001AE2
_080E06C0:
	.4byte 0x00000F52
_080E06C4:
	ldr r0, _080E06D4  @ =0x00000F52
	add r1, r1, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080E06D0:
	pop {r0}
	bx r0
_080E06D4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E0698

	THUMB_FUNC_START sub_080E06D8
sub_080E06D8: @ 0x080E06D8
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #145
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080E0700  @ =gRam
	ldr r1, _080E0704  @ =0x00000F52
	add r0, r0, r1
	add r4, r4, r0
	mov r0, #7
	strb r0, [r4]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080E0700:
	.4byte gRam
_080E0704:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E06D8

	THUMB_FUNC_START sub_080E0708
sub_080E0708: @ 0x080E0708
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r2, _080E0814  @ =gRam
	ldr r0, _080E0818  @ =0x00000DB4
	add r1, r2, r0
	mov r0, #0
	strb r0, [r1]
	ldr r0, _080E081C  @ =0x00000ED2
	add r1, r2, r0
	add r1, r6, r1
	ldrb r0, [r1]
	sub r0, r0, #8
	strb r0, [r1]
	mov r0, #7
	add r5, r2, #0
	ldr r1, _080E0820  @ =0x00001052
	add r1, r1, r5
	mov r8, r1
_080E0732:
	lsl r0, r0, #24
	asr r4, r0, #24
	ldr r2, _080E0824  @ =0x00000FF2
	add r7, r5, r2
	add r2, r4, r7
	mov r1, #101
	strb r1, [r2]
	ldr r2, _080E0828  @ =0x00000FA2
	add r1, r5, r2
	add r1, r4, r1
	mov r2, #9
	strb r2, [r1]
	lsr r0, r0, #24
	bl sub_080CEB84
	ldr r0, _080E082C  @ =0x00000F02
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080E0830  @ =0x000016C5
	add r0, r5, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E0834  @ =0x00000EE2
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080E0838  @ =gUnknown_081767C0
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080E083C  @ =0x00000EF2
	add r1, r5, r2
	add r1, r4, r1
	ldr r2, _080E0840  @ =0x000016C1
	add r0, r5, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E081C  @ =0x00000ED2
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080E0844  @ =gUnknown_081767C8
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080E0848  @ =0x00000F62
	add r1, r5, r2
	add r1, r4, r1
	ldr r0, _080E084C  @ =gUnknown_081767D0
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E0850  @ =0x00000F92
	add r3, r5, r1
	add r3, r4, r3
	sub r0, r0, #1
	strb r0, [r3]
	sub r2, r2, #64
	add r1, r5, r2
	add r1, r4, r1
	ldr r2, _080E0854  @ =gUnknown_081767D8
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E0858  @ =0x00001132
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080E085C  @ =gUnknown_081767DA
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E0860  @ =0x00001122
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #13
	strb r1, [r0]
	ldr r2, _080E0864  @ =0x000010F2
	add r1, r5, r2
	add r1, r4, r1
	mov r2, #161
	lsl r2, r2, #4
	add r0, r5, r2
	ldrb r0, [r0]
	strb r0, [r1]
	bl GetRandomInt
	mov r2, r8
	add r1, r4, r2
	strb r0, [r1]
	sub r4, r4, #1
	lsl r4, r4, #24
	lsr r0, r4, #24
	cmp r4, #0
	bne _080E0732
	mov r0, #192
	lsl r0, r0, #1
	add r1, r7, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r7, #0
	add r0, r0, #16
	add r0, r6, r0
	ldr r1, _080E0868  @ =gUnknown_02002357
	ldrb r1, [r1]
	strb r1, [r0]
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E0814:
	.4byte gRam
_080E0818:
	.4byte 0x00000DB4
_080E081C:
	.4byte 0x00000ED2
_080E0820:
	.4byte 0x00001052
_080E0824:
	.4byte 0x00000FF2
_080E0828:
	.4byte 0x00000FA2
_080E082C:
	.4byte 0x00000F02
_080E0830:
	.4byte 0x000016C5
_080E0834:
	.4byte 0x00000EE2
_080E0838:
	.4byte gUnknown_081767C0
_080E083C:
	.4byte 0x00000EF2
_080E0840:
	.4byte 0x000016C1
_080E0844:
	.4byte gUnknown_081767C8
_080E0848:
	.4byte 0x00000F62
_080E084C:
	.4byte gUnknown_081767D0
_080E0850:
	.4byte 0x00000F92
_080E0854:
	.4byte gUnknown_081767D8
_080E0858:
	.4byte 0x00001132
_080E085C:
	.4byte gUnknown_081767DA
_080E0860:
	.4byte 0x00001122
_080E0864:
	.4byte 0x000010F2
_080E0868:
	.4byte gUnknown_02002357
	THUMB_FUNC_END sub_080E0708

	THUMB_FUNC_START sub_080E086C
sub_080E086C: @ 0x080E086C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r0, #0
	str r0, [sp, #8]
	mov r10, r0
	ldr r4, _080E08F0  @ =gRam
	ldr r1, _080E08F4  @ =0x00000DB5
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E0898
	ldr r2, _080E08F8  @ =0x00000DB6
	add r1, r4, r2
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080E0898:
	add r0, r6, #0
	bl sub_080E0F0C
	add r0, r6, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E08AC
	b _080E0C04
_080E08AC:
	ldr r3, _080E08FC  @ =0x00001132
	add r0, r4, r3
	add r0, r6, r0
	mov r1, r10
	strb r1, [r0]
	add r0, r6, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E08D2
	bl sub_080AF16C
	ldr r2, _080E0900  @ =0x00001719
	add r0, r4, r2
	mov r3, r10
	strb r3, [r0]
	bl sub_08093078
_080E08D2:
	ldr r1, _080E0904  @ =0x00000FC2
	add r0, r4, r1
	add r5, r6, r0
	ldrb r1, [r5]
	cmp r1, #0
	bne _080E0928
	ldr r2, _080E0908  @ =0x00000F52
	add r0, r4, r2
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E090C
	mov r1, #0
	b _080E0918
	.byte 0x00
	.byte 0x00
_080E08F0:
	.4byte gRam
_080E08F4:
	.4byte 0x00000DB5
_080E08F8:
	.4byte 0x00000DB6
_080E08FC:
	.4byte 0x00001132
_080E0900:
	.4byte 0x00001719
_080E0904:
	.4byte 0x00000FC2
_080E0908:
	.4byte 0x00000F52
_080E090C:
	ldr r3, _080E0920  @ =0x00000996
	add r0, r4, r3
	ldrb r0, [r0]
	lsr r1, r0, #5
	mov r0, #3
	and r1, r1, r0
_080E0918:
	ldr r0, _080E0924  @ =gUnknown_081767E8
	add r0, r1, r0
	ldrb r1, [r0]
	b _080E0942
_080E0920:
	.4byte 0x00000996
_080E0924:
	.4byte gUnknown_081767E8
_080E0928:
	mov r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080E0938
	add r0, r6, #0
	mov r1, #34
	bl sub_080CF0AC
_080E0938:
	ldrb r1, [r5]
	mov r0, #4
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r1, r0, #26
_080E0942:
	ldr r0, _080E0ACC  @ =gRam
	mov r8, r0
	ldr r0, _080E0AD0  @ =0x00000F92
	add r0, r0, r8
	add r0, r6, r0
	strb r1, [r0]
	ldr r0, _080E0AD4  @ =0x00000F52
	add r0, r0, r8
	add r4, r6, r0
	ldrb r0, [r4]
	cmp r0, #2
	beq _080E095C
	b _080E0B18
_080E095C:
	ldr r0, _080E0AD8  @ =0x00001082
	add r0, r0, r8
	add r4, r6, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E098E
	ldr r1, _080E0ADC  @ =0x00000DB5
	add r1, r1, r8
	mov r0, #5
	strb r0, [r1]
	mov r0, #2
	bl sub_080AF5F8
	ldr r0, _080E0AE0  @ =0x00000FD2
	add r0, r0, r8
	add r0, r6, r0
	mov r1, #39
	strb r1, [r0]
	mov r0, #20
	neg r0, r0
	bl sub_080AA83C
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
_080E098E:
	mov r0, #52
	bl sub_080CF370
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r6, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E09A8
	b _080E0C04
_080E09A8:
	ldr r0, _080E0ADC  @ =0x00000DB5
	add r0, r0, r8
	ldrb r0, [r0]
	ldr r2, _080E0AE4  @ =0x00000979
	add r2, r2, r8
	strb r0, [r2]
	ldr r0, _080E0AE0  @ =0x00000FD2
	add r0, r0, r8
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r1, r0, #24
	cmp r1, #0
	beq _080E09CC
	ldr r0, _080E0AE8  @ =gUnknown_081767EC
	lsr r1, r1, #27
	add r1, r1, r0
	ldrb r0, [r1]
	strb r0, [r2]
_080E09CC:
	ldrb r0, [r2]
	lsl r0, r0, #25
	mov r1, #224
	lsl r1, r1, #19
	add r5, r0, r1
	cmp r5, #0
	blt _080E0A46
	add r7, sp, #4
	ldr r2, _080E0AEC  @ =0x00000964
	add r2, r2, r8
	mov r9, r2
_080E09E2:
	ldr r0, _080E0AF0  @ =gUnknown_03003E74
	ldrb r1, [r7]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r1, #150
	lsl r1, r1, #4
	add r1, r1, r8
	ldrh r2, [r1]
	sub r2, r2, #20
	ldr r1, _080E0AF4  @ =gUnknown_081767F2
	asr r5, r5, #24
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	mov r2, r9
	ldrh r3, [r2]
	sub r3, r3, #48
	ldr r2, _080E0AF8  @ =gUnknown_08176804
	add r2, r5, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E0AFC  @ =gUnknown_08176816
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080E0B00  @ =gUnknown_08176828
	add r4, r5, r4
	ldrb r4, [r4]
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r4, #0
	str r4, [sp]
	bl sub_080C6004
	sub r5, r5, #1
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsl r5, r5, #24
	cmp r5, #0
	bge _080E09E2
_080E0A46:
	ldr r4, _080E0ACC  @ =gRam
	ldr r3, _080E0ADC  @ =0x00000DB5
	add r1, r4, r3
	ldr r2, _080E0B04  @ =0x000010E2
	add r0, r4, r2
	add r0, r6, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	orr r1, r1, r0
	add r3, r3, #96
	add r0, r4, r3
	ldrb r0, [r0]
	orr r1, r1, r0
	ldr r2, _080E0B08  @ =0x00000E16
	add r0, r4, r2
	ldrb r0, [r0]
	orr r1, r1, r0
	add r3, r3, #2
	add r0, r4, r3
	ldrb r0, [r0]
	orr r1, r1, r0
	add r2, r2, #2
	add r0, r4, r2
	ldrb r0, [r0]
	orr r1, r1, r0
	add r3, r3, #2
	add r0, r4, r3
	ldrb r0, [r0]
	orr r1, r1, r0
	cmp r1, #0
	beq _080E0A86
	b _080E0B98
_080E0A86:
	ldr r1, _080E0B0C  @ =0x00001132
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #10
	strb r1, [r0]
	add r0, r6, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E0A9E
	b _080E0B98
_080E0A9E:
	ldr r1, _080E0B10  @ =gUnknown_03003E70
	mov r0, #1
	strb r0, [r1]
	ldr r2, _080E0B14  @ =0x00000546
	add r0, r4, r2
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	beq _080E0B98
	add r0, r6, #0
	mov r1, #139
	bl sub_080E1058
	ldr r3, _080E0AD4  @ =0x00000F52
	add r1, r4, r3
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080E0B98
	.byte 0x00
	.byte 0x00
_080E0ACC:
	.4byte gRam
_080E0AD0:
	.4byte 0x00000F92
_080E0AD4:
	.4byte 0x00000F52
_080E0AD8:
	.4byte 0x00001082
_080E0ADC:
	.4byte 0x00000DB5
_080E0AE0:
	.4byte 0x00000FD2
_080E0AE4:
	.4byte 0x00000979
_080E0AE8:
	.4byte gUnknown_081767EC
_080E0AEC:
	.4byte 0x00000964
_080E0AF0:
	.4byte gUnknown_03003E74
_080E0AF4:
	.4byte gUnknown_081767F2
_080E0AF8:
	.4byte gUnknown_08176804
_080E0AFC:
	.4byte gUnknown_08176816
_080E0B00:
	.4byte gUnknown_08176828
_080E0B04:
	.4byte 0x000010E2
_080E0B08:
	.4byte 0x00000E16
_080E0B0C:
	.4byte 0x00001132
_080E0B10:
	.4byte gUnknown_03003E70
_080E0B14:
	.4byte 0x00000546
_080E0B18:
	cmp r0, #1
	bne _080E0B30
	ldr r0, _080E0B2C  @ =0x00001AE2
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E0B9E
	mov r0, #1
	mov r10, r0
	b _080E0B98
_080E0B2C:
	.4byte 0x00001AE2
_080E0B30:
	cmp r0, #3
	beq _080E0B7C
	ldr r0, _080E0B70  @ =0x00001132
	add r0, r0, r8
	add r0, r6, r0
	mov r1, #10
	strb r1, [r0]
	add r0, r6, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E0B98
	ldr r1, _080E0B74  @ =gUnknown_03003E70
	mov r0, #1
	strb r0, [r1]
	ldr r0, _080E0B78  @ =0x00000546
	add r0, r0, r8
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	beq _080E0B98
	add r0, r6, #0
	mov r1, #136
	bl sub_080E1058
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	b _080E0B98
_080E0B70:
	.4byte 0x00001132
_080E0B74:
	.4byte gUnknown_03003E70
_080E0B78:
	.4byte 0x00000546
_080E0B7C:
	ldr r0, _080E0B8C  @ =0x00001AE2
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E0B90
	mov r1, #1
	mov r10, r1
	b _080E0B98
_080E0B8C:
	.4byte 0x00001AE2
_080E0B90:
	mov r0, #1
	strb r0, [r4]
	mov r2, #1
	str r2, [sp, #8]
_080E0B98:
	ldr r3, [sp, #8]
	cmp r3, #0
	beq _080E0BEA
_080E0B9E:
	bl sub_080AA868
	cmp r0, #19
	bgt _080E0BC4
	ldr r0, _080E0BBC  @ =gRam
	ldr r1, _080E0BC0  @ =0x00000F52
	add r0, r0, r1
	add r0, r6, r0
	mov r1, #0
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #138
	bl sub_080E1058
	b _080E0BEA
_080E0BBC:
	.4byte gRam
_080E0BC0:
	.4byte 0x00000F52
_080E0BC4:
	ldr r1, _080E0C14  @ =gRam
	ldr r2, _080E0C18  @ =0x00001082
	add r0, r1, r2
	add r0, r6, r0
	mov r2, #0
	strb r2, [r0]
	ldr r3, _080E0C1C  @ =0x00000DB4
	add r0, r1, r3
	strb r2, [r0]
	ldr r0, _080E0C20  @ =0x00000F52
	add r1, r1, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r6, #0
	mov r1, #137
	bl sub_080E1058
_080E0BEA:
	mov r1, r10
	cmp r1, #0
	beq _080E0C04
	ldr r0, _080E0C14  @ =gRam
	ldr r2, _080E0C20  @ =0x00000F52
	add r0, r0, r2
	add r0, r6, r0
	mov r1, #0
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #138
	bl sub_080E1058
_080E0C04:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080E0C14:
	.4byte gRam
_080E0C18:
	.4byte 0x00001082
_080E0C1C:
	.4byte 0x00000DB4
_080E0C20:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E086C

	THUMB_FUNC_START sub_080E0C24
sub_080E0C24: @ 0x080E0C24
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080E0CD8  @ =gRam
	ldr r1, _080E0CDC  @ =0x000010A2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #4
	bls _080E0C42
	ldr r2, _080E0CE0  @ =0x00000F72
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #6
	strb r1, [r0]
_080E0C42:
	ldr r1, _080E0CE4  @ =0x00001012
	add r0, r6, r1
	add r5, r4, r0
	ldrb r1, [r5]
	mov r0, #224
	and r0, r0, r1
	strb r0, [r5]
	ldr r2, _080E0CE8  @ =0x00000FE2
	add r0, r6, r2
	add r7, r4, r0
	ldrb r3, [r7]
	cmp r3, #0
	bne _080E0C66
	ldr r1, _080E0CEC  @ =0x00001052
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsr r3, r0, #3
_080E0C66:
	ldr r0, _080E0CF0  @ =0x00001122
	add r2, r6, r0
	add r2, r4, r2
	ldrb r1, [r2]
	mov r0, #191
	and r0, r0, r1
	mov r1, #4
	and r3, r3, r1
	lsl r1, r3, #4
	orr r0, r0, r1
	strb r0, [r2]
	ldr r2, _080E0CF4  @ =0x00001624
	add r1, r6, r2
	ldrb r0, [r1]
	sub r0, r0, #3
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C6240
	ldrb r0, [r7]
	cmp r0, #0
	beq _080E0CCC
	ldrb r0, [r5]
	mov r1, #5
	orr r0, r0, r1
	strb r0, [r5]
	ldrb r0, [r7]
	cmp r0, #96
	bne _080E0CC6
	ldr r1, _080E0CF8  @ =0x000009AD
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E0CC6
	ldr r2, _080E0CFC  @ =0x00000FC2
	add r1, r6, r2
	mov r0, #112
	strb r0, [r1]
	ldr r1, _080E0D00  @ =gUnknown_0817683A
	sub r2, r2, #80
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	sub r0, r0, #1
	add r0, r0, r1
	ldrb r0, [r0]
	bl sub_080AA83C
_080E0CC6:
	add r0, r4, #0
	bl sub_080E0DF8
_080E0CCC:
	add r0, r4, #0
	bl sub_080E0D04
	pop {r4-r7}
	pop {r0}
	bx r0
_080E0CD8:
	.4byte gRam
_080E0CDC:
	.4byte 0x000010A2
_080E0CE0:
	.4byte 0x00000F72
_080E0CE4:
	.4byte 0x00001012
_080E0CE8:
	.4byte 0x00000FE2
_080E0CEC:
	.4byte 0x00001052
_080E0CF0:
	.4byte 0x00001122
_080E0CF4:
	.4byte 0x00001624
_080E0CF8:
	.4byte 0x000009AD
_080E0CFC:
	.4byte 0x00000FC2
_080E0D00:
	.4byte gUnknown_0817683A
	THUMB_FUNC_END sub_080E0C24

	THUMB_FUNC_START sub_080E0D04
sub_080E0D04: @ 0x080E0D04
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E0DE8
	ldr r6, _080E0DA4  @ =gRam
	ldr r1, _080E0DA8  @ =0x000010B2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #1
	bne _080E0D32
	mov r0, #64
	mov r1, #0
	bl sub_0812A324
_080E0D32:
	ldr r2, _080E0DAC  @ =0x00001052
	add r0, r6, r2
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	add r0, r4, #0
	bl Sprite3_MoveHoriz
	ldr r5, _080E0DB0  @ =0x00000FD2
	add r0, r6, r5
	add r3, r4, r0
	ldrb r0, [r3]
	mov r12, r0
	cmp r0, #0
	bne _080E0DE8
	ldr r2, _080E0DB4  @ =0x00001172
	add r1, r6, r2
	add r1, r4, r1
	sub r5, r5, #16
	add r0, r6, r5
	add r7, r4, r0
	ldrb r0, [r7]
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r5, r0, #24
	cmp r5, #0
	beq _080E0DD0
	cmp r5, #1
	bne _080E0DE8
	ldr r0, _080E0DB8  @ =0x00000EE2
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E0DBC  @ =gUnknown_08176844
	ldr r5, _080E0DC0  @ =0x00000F92
	add r0, r6, r5
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E0DC4  @ =0x00000F02
	add r0, r6, r1
	add r0, r4, r0
	ldr r2, _080E0DC8  @ =0x000016C5
	add r1, r6, r2
	ldrb r1, [r1]
	strb r1, [r0]
	mov r0, #32
	strb r0, [r3]
	ldr r5, _080E0DCC  @ =0x000010A2
	add r0, r6, r5
	add r0, r4, r0
	mov r1, r12
	strb r1, [r0]
	b _080E0DE8
	.byte 0x00
	.byte 0x00
_080E0DA4:
	.4byte gRam
_080E0DA8:
	.4byte 0x000010B2
_080E0DAC:
	.4byte 0x00001052
_080E0DB0:
	.4byte 0x00000FD2
_080E0DB4:
	.4byte 0x00001172
_080E0DB8:
	.4byte 0x00000EE2
_080E0DBC:
	.4byte gUnknown_08176844
_080E0DC0:
	.4byte 0x00000F92
_080E0DC4:
	.4byte 0x00000F02
_080E0DC8:
	.4byte 0x000016C5
_080E0DCC:
	.4byte 0x000010A2
_080E0DD0:
	mov r0, r8
	bl sub_080C79F8
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E0DE8
	mov r0, #16
	strb r0, [r7]
	ldr r2, _080E0DF4  @ =0x00000FE2
	add r0, r6, r2
	add r0, r0, r8
	strb r5, [r0]
_080E0DE8:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E0DF4:
	.4byte 0x00000FE2
	THUMB_FUNC_END sub_080E0D04

	THUMB_FUNC_START sub_080E0DF8
sub_080E0DF8: @ 0x080E0DF8
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #16
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r8
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E0EE8
	add r0, sp, #4
	mov r1, #1
	strb r1, [r0]
	mov r2, #4
	ldr r0, _080E0E50  @ =gRam
	mov r9, r0
	ldr r0, _080E0E54  @ =0x00000F72
	add r0, r0, r9
	add r0, r0, r8
	str r0, [sp, #8]
	ldr r3, _080E0E58  @ =0x00000964
	add r3, r3, r9
	mov r10, r3
	mov r6, sp
	add r6, r6, #4
	str r6, [sp, #12]
_080E0E3C:
	lsl r0, r2, #24
	asr r1, r0, #24
	add r2, r0, #0
	cmp r1, #4
	beq _080E0E6C
	cmp r1, #3
	beq _080E0E60
	ldr r0, _080E0E5C  @ =gUnknown_08176850
	add r0, r1, r0
	b _080E0E76
_080E0E50:
	.4byte gRam
_080E0E54:
	.4byte 0x00000F72
_080E0E58:
	.4byte 0x00000964
_080E0E5C:
	.4byte gUnknown_08176850
_080E0E60:
	ldr r1, _080E0E68  @ =gUnknown_0817685A
	ldr r7, [sp, #8]
	ldrb r0, [r7]
	b _080E0E72
_080E0E68:
	.4byte gUnknown_0817685A
_080E0E6C:
	ldr r1, _080E0EF8  @ =gUnknown_08176860
	ldr r3, [sp, #8]
	ldrb r0, [r3]
_080E0E72:
	sub r0, r0, #1
	add r0, r0, r1
_080E0E76:
	ldrb r4, [r0]
	ldr r0, _080E0EFC  @ =gUnknown_08176855
	asr r5, r2, #24
	add r0, r5, r0
	ldrb r3, [r0]
	cmp r4, #235
	bls _080E0E88
	mov r0, #254
	and r3, r3, r0
_080E0E88:
	ldr r0, _080E0F00  @ =gUnknown_03003E74
	ldr r6, [sp, #12]
	ldrb r1, [r6]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r9
	ldr r1, _080E0F04  @ =gUnknown_08176846
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080E0F08  @ =gUnknown_0817684B
	add r2, r5, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	mov r7, r10
	ldrh r7, [r7]
	add r2, r2, r7
	lsl r2, r2, #16
	lsr r2, r2, #16
	lsl r3, r3, #8
	add r3, r4, r3
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #0
	str r4, [sp]
	bl sub_080C6004
	sub r1, r5, #1
	lsl r1, r1, #24
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsr r2, r1, #24
	cmp r1, #0
	bge _080E0E3C
	mov r0, r8
	bl sub_080EAAF0
_080E0EE8:
	add sp, sp, #16
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080E0EF8:
	.4byte gUnknown_08176860
_080E0EFC:
	.4byte gUnknown_08176855
_080E0F00:
	.4byte gUnknown_03003E74
_080E0F04:
	.4byte gUnknown_08176846
_080E0F08:
	.4byte gUnknown_0817684B
	THUMB_FUNC_END sub_080E0DF8

	THUMB_FUNC_START sub_080E0F0C
sub_080E0F0C: @ 0x080E0F0C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	bl sub_080C6340
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r9
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E0FDA
	ldr r2, _080E0FEC  @ =gRam
	ldr r1, _080E0FF0  @ =0x00000F92
	add r0, r2, r1
	add r0, r0, r9
	ldrb r1, [r0]
	lsl r0, r1, #1
	add r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #8]
	mov r5, #2
	mov r8, r5
	add r7, sp, #4
	mov r10, r2
_080E0F50:
	ldr r6, [sp, #8]
	add r6, r6, r8
	lsl r6, r6, #24
	lsr r6, r6, #24
	ldr r0, _080E0FF4  @ =gUnknown_03003E74
	ldrb r1, [r7]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r10
	ldr r1, _080E0FF8  @ =gUnknown_08176866
	add r1, r6, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080E0FFC  @ =0x00000964
	add r3, r3, r10
	ldr r2, _080E1000  @ =gUnknown_08176875
	add r2, r6, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E1004  @ =gUnknown_08176884
	add r3, r6, r3
	ldrb r3, [r3]
	ldr r4, _080E1008  @ =gUnknown_08176893
	add r4, r6, r4
	ldrb r4, [r4]
	ldr r5, _080E100C  @ =gUnknown_03002B99
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080E1010  @ =gUnknown_081768A2
	add r6, r6, r4
	ldrb r4, [r6]
	str r4, [sp]
	bl sub_080C6004
	mov r0, r8
	lsl r1, r0, #24
	mov r5, #255
	lsl r5, r5, #24
	add r1, r1, r5
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsr r0, r1, #24
	mov r8, r0
	cmp r1, #0
	bge _080E0F50
	mov r0, r9
	bl sub_080C6230
_080E0FDA:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E0FEC:
	.4byte gRam
_080E0FF0:
	.4byte 0x00000F92
_080E0FF4:
	.4byte gUnknown_03003E74
_080E0FF8:
	.4byte gUnknown_08176866
_080E0FFC:
	.4byte 0x00000964
_080E1000:
	.4byte gUnknown_08176875
_080E1004:
	.4byte gUnknown_08176884
_080E1008:
	.4byte gUnknown_08176893
_080E100C:
	.4byte gUnknown_03002B99
_080E1010:
	.4byte gUnknown_081768A2
	THUMB_FUNC_END sub_080E0F0C

	THUMB_FUNC_START sub_080E1014
sub_080E1014: @ 0x080E1014
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080E1044  @ =gUnknown_02002357
	ldr r2, _080E1048  @ =gRam
	ldr r4, _080E104C  @ =0x00001002
	add r1, r2, r4
	add r1, r0, r1
	ldrb r1, [r1]
	strb r1, [r3]
	ldr r3, _080E1050  @ =gUnknown_081767DC
	ldr r1, _080E1054  @ =0x00000F62
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	lsl r1, r1, #2
	add r1, r1, r3
	ldr r1, [r1]
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E1044:
	.4byte gUnknown_02002357
_080E1048:
	.4byte gRam
_080E104C:
	.4byte 0x00001002
_080E1050:
	.4byte gUnknown_081767DC
_080E1054:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080E1014

	THUMB_FUNC_START sub_080E1058
sub_080E1058: @ 0x080E1058
	push {r4,lr}
	add r4, r0, #0
	add r0, r1, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	lsl r0, r0, #16
	lsr r0, r0, #16
	bl sub_080C95C0
	ldr r0, _080E107C  @ =gRam
	ldr r1, _080E1080  @ =0x00000FC2
	add r0, r0, r1
	add r4, r4, r0
	mov r0, #0
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
_080E107C:
	.4byte gRam
_080E1080:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E1058

	THUMB_FUNC_START sub_080E1084
sub_080E1084: @ 0x080E1084
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080E10B8  @ =gRam
	ldr r0, _080E10BC  @ =0x00001012
	add r1, r2, r0
	add r1, r4, r1
	ldrb r3, [r1]
	mov r0, #224
	and r0, r0, r3
	strb r0, [r1]
	ldr r0, _080E10C0  @ =0x00001624
	add r2, r2, r0
	ldrb r0, [r2]
	add r0, r0, #3
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl sub_080E0D04
	pop {r4}
	pop {r0}
	bx r0
_080E10B8:
	.4byte gRam
_080E10BC:
	.4byte 0x00001012
_080E10C0:
	.4byte 0x00001624
	THUMB_FUNC_END sub_080E1084

	THUMB_FUNC_START sub_080E10C4
sub_080E10C4: @ 0x080E10C4
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r7, #0
	ldr r6, _080E10F4  @ =gRam
	ldr r1, _080E10F8  @ =0x00000F82
	add r0, r6, r1
	add r0, r0, r5
	mov r8, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080E1108
	ldr r1, _080E10FC  @ =0x00000F92
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080E1100
	add r0, r5, #0
	bl sub_080E1544
	b _080E116E
_080E10F4:
	.4byte gRam
_080E10F8:
	.4byte 0x00000F82
_080E10FC:
	.4byte 0x00000F92
_080E1100:
	add r0, r5, #0
	bl sub_080C6240
	b _080E116E
_080E1108:
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080E1118
	add r0, r5, #0
	bl sub_080C58F0
	b _080E116E
_080E1118:
	ldr r1, _080E112C  @ =0x00001082
	add r0, r6, r1
	add r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #16
	beq _080E1130
	add r0, r0, #1
	strb r0, [r1]
	b _080E116A
	.byte 0x00
	.byte 0x00
_080E112C:
	.4byte 0x00001082
_080E1130:
	ldr r1, _080E1180  @ =0x00000F22
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #255
	strb r1, [r0]
	ldr r0, _080E1184  @ =0x00001002
	add r4, r6, r0
	add r4, r5, r4
	mov r0, #1
	neg r0, r0
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080C6F48
	strb r7, [r4]
	ldr r1, _080E1188  @ =0x000015E2
	add r0, r6, r1
	ldrh r0, [r0]
	cmp r0, #0
	bne _080E116A
	mov r0, r8
	strb r7, [r0]
	ldr r1, _080E118C  @ =0x00001172
	add r0, r6, r1
	add r0, r5, r0
	strb r7, [r0]
	add r0, r5, #0
	bl sub_080E157C
_080E116A:
	cmp r7, #0
	beq _080E1174
_080E116E:
	add r0, r5, #0
	bl sub_080E15E0
_080E1174:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E1180:
	.4byte 0x00000F22
_080E1184:
	.4byte 0x00001002
_080E1188:
	.4byte 0x000015E2
_080E118C:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080E10C4

	THUMB_FUNC_START sub_080E1190
sub_080E1190: @ 0x080E1190
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C5044
	ldr r5, _080E1230  @ =gRam
	ldr r1, _080E1234  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080E11E0
	ldr r0, _080E1238  @ =0x00000F62
	add r2, r5, r0
	add r2, r4, r2
	ldr r3, _080E123C  @ =gUnknown_081768D4
	ldr r1, _080E1240  @ =0x00000F72
	add r0, r5, r1
	add r5, r4, r0
	ldrb r1, [r5]
	mov r0, #1
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	ldrb r1, [r2]
	add r0, r0, r1
	strb r0, [r2]
	bl GetRandomInt
	mov r1, #3
	and r1, r1, r0
	cmp r1, #0
	bne _080E11E0
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
_080E11E0:
	ldr r3, _080E1230  @ =gRam
	ldr r1, _080E1238  @ =0x00000F62
	add r0, r3, r1
	add r0, r4, r0
	ldrb r0, [r0]
	mov r2, #15
	and r2, r2, r0
	ldr r0, _080E1244  @ =0x00000F22
	add r1, r3, r0
	add r1, r4, r1
	ldr r0, _080E1248  @ =gUnknown_081768B4
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E124C  @ =0x00000F12
	add r1, r3, r0
	add r1, r4, r1
	ldr r0, _080E1250  @ =gUnknown_081768C4
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r1, _080E1234  @ =0x00000996
	add r0, r3, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	ldr r1, _080E1254  @ =0x00000FC2
	add r3, r3, r1
	add r3, r4, r3
	ldrb r1, [r3]
	orr r0, r0, r1
	cmp r0, #0
	beq _080E1258
	add r0, r4, #0
	bl sub_080E12DC
	b _080E125E
	.byte 0x00
	.byte 0x00
_080E1230:
	.4byte gRam
_080E1234:
	.4byte 0x00000996
_080E1238:
	.4byte 0x00000F62
_080E123C:
	.4byte gUnknown_081768D4
_080E1240:
	.4byte 0x00000F72
_080E1244:
	.4byte 0x00000F22
_080E1248:
	.4byte gUnknown_081768B4
_080E124C:
	.4byte 0x00000F12
_080E1250:
	.4byte gUnknown_081768C4
_080E1254:
	.4byte 0x00000FC2
_080E1258:
	add r0, r4, #0
	bl sub_080E15A8
_080E125E:
	pop {r4,r5}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E1190

	THUMB_FUNC_START sub_080E1264
sub_080E1264: @ 0x080E1264
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080E12BC  @ =gRam
	ldr r0, _080E12C0  @ =0x00001172
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E12C4  @ =0x00000F52
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E12C8  @ =0x00000F22
	add r2, r6, r0
	add r2, r4, r2
	ldr r3, _080E12CC  @ =gUnknown_081768D6
	ldr r1, _080E12D0  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #1
	mov r1, #1
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	add r0, r4, #0
	bl Sprite3_MoveHoriz
	ldr r2, _080E12D4  @ =0x00000FC2
	add r0, r6, r2
	add r0, r4, r0
	ldrb r5, [r0]
	cmp r5, #0
	bne _080E12B6
	add r0, r4, #0
	bl sub_080E13B0
	ldr r1, _080E12D8  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
_080E12B6:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E12BC:
	.4byte gRam
_080E12C0:
	.4byte 0x00001172
_080E12C4:
	.4byte 0x00000F52
_080E12C8:
	.4byte 0x00000F22
_080E12CC:
	.4byte gUnknown_081768D6
_080E12D0:
	.4byte 0x00000996
_080E12D4:
	.4byte 0x00000FC2
_080E12D8:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080E1264

	THUMB_FUNC_START sub_080E12DC
sub_080E12DC: @ 0x080E12DC
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r6, _080E1340  @ =gRam
	ldr r1, _080E1344  @ =0x00000F92
	add r0, r6, r1
	add r3, r4, r0
	ldr r2, _080E1348  @ =0x00000996
	add r2, r2, r6
	mov r12, r2
	ldrb r1, [r2]
	lsr r1, r1, #3
	mov r0, #1
	and r1, r1, r0
	ldr r0, _080E134C  @ =gUnknown_081768D8
	mov r8, r0
	ldr r2, _080E1350  @ =0x00000F82
	add r0, r6, r2
	add r2, r4, r0
	ldrb r0, [r2]
	add r0, r0, r8
	ldrb r0, [r0]
	add r0, r0, r1
	strb r0, [r3]
	ldr r1, _080E1354  @ =0x00000F52
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E1374
	ldr r2, _080E1358  @ =0x00000FD2
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E13A4
	bl GetRandomInt
	mov r1, #1
	and r1, r1, r0
	cmp r1, #0
	beq _080E135C
	add r0, r4, #0
	bl sub_080E157C
	b _080E13A4
	.byte 0x00
	.byte 0x00
_080E1340:
	.4byte gRam
_080E1344:
	.4byte 0x00000F92
_080E1348:
	.4byte 0x00000996
_080E134C:
	.4byte gUnknown_081768D8
_080E1350:
	.4byte 0x00000F82
_080E1354:
	.4byte 0x00000F52
_080E1358:
	.4byte 0x00000FD2
_080E135C:
	ldr r1, _080E1370  @ =0x00000FC2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #128
	strb r1, [r0]
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
	b _080E13A4
	.byte 0x00
	.byte 0x00
_080E1370:
	.4byte 0x00000FC2
_080E1374:
	ldr r1, _080E1398  @ =0x00000FC2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E139C
	mov r0, r12
	ldrb r1, [r0]
	lsr r1, r1, #1
	mov r0, #2
	and r1, r1, r0
	ldrb r0, [r2]
	add r0, r0, r8
	ldrb r0, [r0]
	add r0, r0, r1
	strb r0, [r3]
	b _080E13A4
	.byte 0x00
	.byte 0x00
_080E1398:
	.4byte 0x00000FC2
_080E139C:
	strb r0, [r5]
	add r0, r7, #0
	bl sub_080E157C
_080E13A4:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E12DC

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E13B0
sub_080E13B0: @ 0x080E13B0
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	mov r6, #1
	ldr r5, _080E146C  @ =gRam
	mov r0, #150
	lsl r0, r0, #4
	add r7, r5, r0
	ldr r1, _080E1470  @ =0x00000FD2
	add r1, r1, r5
	mov r9, r1
_080E13CE:
	mov r0, #35
	mov r1, r8
	bl sub_080CA538
	add r4, r0, #0
	lsl r6, r6, #24
	cmp r4, #0
	blt _080E1452
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080E1474  @ =0x00001032
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #51
	strb r1, [r0]
	ldr r3, _080E1478  @ =0x00001122
	add r0, r5, r3
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	ldr r1, _080E147C  @ =0x00001132
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	sub r2, r2, #176
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080E1480  @ =gUnknown_081768DA
	asr r2, r6, #24
	add r1, r2, r1
	ldrh r0, [r7]
	ldrb r1, [r1]
	add r0, r0, r1
	strh r0, [r7]
	ldr r3, _080E1484  @ =0x00000EE2
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r7]
	strb r1, [r0]
	ldr r0, _080E1488  @ =0x00000F02
	add r1, r5, r0
	add r1, r4, r1
	ldr r3, _080E148C  @ =0x00000961
	add r0, r5, r3
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E1490  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080E1494  @ =gUnknown_081768DC
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r1, _080E1498  @ =0x00000FE2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #8
	strb r1, [r0]
	mov r2, r9
	add r1, r4, r2
	mov r0, #64
	strb r0, [r1]
_080E1452:
	mov r3, #255
	lsl r3, r3, #24
	add r0, r6, r3
	lsr r6, r0, #24
	cmp r0, #0
	bge _080E13CE
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E146C:
	.4byte gRam
_080E1470:
	.4byte 0x00000FD2
_080E1474:
	.4byte 0x00001032
_080E1478:
	.4byte 0x00001122
_080E147C:
	.4byte 0x00001132
_080E1480:
	.4byte gUnknown_081768DA
_080E1484:
	.4byte 0x00000EE2
_080E1488:
	.4byte 0x00000F02
_080E148C:
	.4byte 0x00000961
_080E1490:
	.4byte 0x00000F22
_080E1494:
	.4byte gUnknown_081768DC
_080E1498:
	.4byte 0x00000FE2
	THUMB_FUNC_END sub_080E13B0

	THUMB_FUNC_START sub_080E149C
sub_080E149C: @ 0x080E149C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r3, _080E14D4  @ =gRam
	ldr r1, _080E14D8  @ =0x00001142
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #6
	strb r1, [r0]
	ldr r1, _080E14DC  @ =0x00000B36
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #206
	bne _080E14C6
	ldr r0, _080E14E0  @ =0x00000F82
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
_080E14C6:
	add r0, r4, #0
	bl sub_080E157C
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E14D4:
	.4byte gRam
_080E14D8:
	.4byte 0x00001142
_080E14DC:
	.4byte 0x00000B36
_080E14E0:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080E149C

	THUMB_FUNC_START sub_080E14E4
sub_080E14E4: @ 0x080E14E4
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080E1500  @ =gRam
	ldr r1, _080E1504  @ =0x00000F82
	add r0, r3, r1
	add r0, r2, r0
	ldrb r4, [r0]
	cmp r4, #0
	beq _080E1508
	add r0, r2, #0
	bl sub_080C24B0
	b _080E152E
_080E1500:
	.4byte gRam
_080E1504:
	.4byte 0x00000F82
_080E1508:
	ldr r1, _080E1534  @ =0x00000F52
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080E1538  @ =0x00000FC2
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #32
	strb r1, [r0]
	ldr r1, _080E153C  @ =0x00000FA2
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #9
	strb r1, [r0]
	ldr r1, _080E1540  @ =0x000010C2
	add r0, r3, r1
	add r0, r2, r0
	strb r4, [r0]
_080E152E:
	pop {r4}
	pop {r0}
	bx r0
_080E1534:
	.4byte 0x00000F52
_080E1538:
	.4byte 0x00000FC2
_080E153C:
	.4byte 0x00000FA2
_080E1540:
	.4byte 0x000010C2
	THUMB_FUNC_END sub_080E14E4

	THUMB_FUNC_START sub_080E1544
sub_080E1544: @ 0x080E1544
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080E1570  @ =gRam
	ldr r1, _080E1574  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080E1578  @ =gUnknown_081768E0
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #2
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
_080E1570:
	.4byte gRam
_080E1574:
	.4byte 0x00000F92
_080E1578:
	.4byte gUnknown_081768E0
	THUMB_FUNC_END sub_080E1544

	THUMB_FUNC_START sub_080E157C
sub_080E157C: @ 0x080E157C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	bl GetRandomInt
	ldr r1, _080E15A0  @ =gRam
	ldr r2, _080E15A4  @ =0x00000FD2
	add r1, r1, r2
	add r4, r4, r1
	mov r1, #63
	and r1, r1, r0
	add r1, r1, #128
	strb r1, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E15A0:
	.4byte gRam
_080E15A4:
	.4byte 0x00000FD2
	THUMB_FUNC_END sub_080E157C

	THUMB_FUNC_START sub_080E15A8
sub_080E15A8: @ 0x080E15A8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r4, r1, #0
	ldr r0, _080E15D8  @ =gRam
	ldr r2, _080E15DC  @ =0x00001042
	add r0, r0, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E15C4
	add r0, r1, #0
	bl Sprite3_Move
_080E15C4:
	add r0, r4, #0
	bl sub_080C6F48
	add r0, r4, #0
	bl sub_080E12DC
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E15D8:
	.4byte gRam
_080E15DC:
	.4byte 0x00001042
	THUMB_FUNC_END sub_080E15A8

	THUMB_FUNC_START sub_080E15E0
sub_080E15E0: @ 0x080E15E0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E163E
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E163E
	ldr r1, _080E1618  @ =gRam
	ldr r2, _080E161C  @ =0x00000FE2
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E1620
	add r0, r4, #0
	bl sub_080E15A8
	b _080E163E
	.byte 0x00
	.byte 0x00
_080E1618:
	.4byte gRam
_080E161C:
	.4byte 0x00000FE2
_080E1620:
	ldr r2, _080E1634  @ =0x00000F52
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #2
	beq _080E1638
	add r0, r4, #0
	bl sub_080E1190
	b _080E163E
_080E1634:
	.4byte 0x00000F52
_080E1638:
	add r0, r5, #0
	bl sub_080E1264
_080E163E:
	pop {r4,r5}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E15E0

	THUMB_FUNC_START sub_080E1644
sub_080E1644: @ 0x080E1644
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r1, _080E169C  @ =gRam
	ldr r2, _080E16A0  @ =0x00001002
	add r0, r1, r2
	add r0, r5, r0
	ldrb r4, [r0]
	add r2, r4, #0
	add r6, r1, #0
	cmp r4, #0
	beq _080E16BE
	mov r0, #7
	and r4, r4, r0
	cmp r4, #4
	bls _080E16B0
	mov r0, #5
	eor r0, r0, r4
	neg r1, r0
	orr r1, r1, r0
	asr r1, r1, #31
	mov r0, #4
	and r1, r1, r0
	ldr r0, _080E16A4  @ =0x00000F72
	add r3, r6, r0
	add r3, r5, r3
	ldr r4, _080E16A8  @ =gUnknown_081769A8
	lsr r0, r2, #3
	mov r2, #3
	and r0, r0, r2
	orr r1, r1, r0
	add r1, r1, r4
	ldrb r0, [r1]
	strb r0, [r3]
	ldr r1, _080E16AC  @ =0x00000D84
	add r2, r6, r1
	add r2, r5, r2
	ldrb r1, [r2]
	mov r0, #15
	and r0, r0, r1
	mov r1, #80
	orr r0, r0, r1
	strb r0, [r2]
	b _080E171E
_080E169C:
	.4byte gRam
_080E16A0:
	.4byte 0x00001002
_080E16A4:
	.4byte 0x00000F72
_080E16A8:
	.4byte gUnknown_081769A8
_080E16AC:
	.4byte 0x00000D84
_080E16B0:
	ldr r2, _080E16E4  @ =0x00000FB2
	add r0, r6, r2
	add r0, r5, r0
	sub r1, r4, #1
	mov r2, #1
	eor r1, r1, r2
	strb r1, [r0]
_080E16BE:
	mov r0, #0
	cmp r0, #0
	bne _080E171E
	ldr r1, _080E16E8  @ =0x000009B2
	add r0, r6, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	beq _080E16F0
	ldr r2, _080E16EC  @ =0x000011B2
	add r0, r6, r2
	add r0, r5, r0
	ldrb r2, [r0]
	mov r1, #127
	and r1, r1, r2
	strb r1, [r0]
	b _080E171E
	.byte 0x00
	.byte 0x00
_080E16E4:
	.4byte 0x00000FB2
_080E16E8:
	.4byte 0x000009B2
_080E16EC:
	.4byte 0x000011B2
_080E16F0:
	ldr r1, _080E172C  @ =0x00000F52
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #1
	strb r1, [r0]
	ldr r2, _080E1730  @ =0x00000FC2
	add r0, r6, r2
	add r0, r5, r0
	mov r1, #112
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E1734  @ =0x00000FB2
	add r1, r6, r2
	add r1, r5, r1
	strb r0, [r1]
	add r2, r2, #208
	add r1, r6, r2
	add r1, r5, r1
	strb r0, [r1]
_080E171E:
	add r0, r5, #0
	bl sub_080E25A8
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E172C:
	.4byte 0x00000F52
_080E1730:
	.4byte 0x00000FC2
_080E1734:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E1644

	THUMB_FUNC_START sub_080E1738
sub_080E1738: @ 0x080E1738
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r9, r4
	ldr r0, _080E1800  @ =gRam
	mov r8, r0
	ldr r0, _080E1804  @ =0x00000F82
	add r0, r0, r8
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080E175C
	b _080E1A18
_080E175C:
	mov r5, #0
	mov r10, r5
	mov r7, #1
	ldr r0, _080E1808  @ =0x00000F22
	add r0, r0, r8
	add r1, r4, r0
	mov r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bge _080E1772
	mov r5, #255
_080E1772:
	ldrb r1, [r1]
	ldr r3, _080E180C  @ =0x00000EE2
	add r3, r3, r8
	add r3, r4, r3
	ldrb r0, [r3]
	add r1, r1, r0
	ldr r2, _080E1810  @ =0x00000F02
	add r2, r2, r8
	add r2, r4, r2
	ldrb r0, [r2]
	lsl r0, r0, #8
	add r1, r1, r0
	lsl r0, r5, #8
	add r1, r1, r0
	strb r1, [r3]
	lsr r1, r1, #8
	strb r1, [r2]
	mov r5, #0
	ldr r0, _080E1814  @ =0x00000F12
	add r0, r0, r8
	add r1, r4, r0
	mov r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bge _080E17A6
	mov r5, #255
_080E17A6:
	ldrb r1, [r1]
	ldr r3, _080E1818  @ =0x00000ED2
	add r3, r3, r8
	add r3, r4, r3
	ldrb r0, [r3]
	add r1, r1, r0
	ldr r2, _080E181C  @ =0x00000EF2
	add r2, r2, r8
	add r2, r4, r2
	ldrb r0, [r2]
	lsl r0, r0, #8
	add r1, r1, r0
	lsl r0, r5, #8
	add r1, r1, r0
	strb r1, [r3]
	lsr r1, r1, #8
	strb r1, [r2]
	ldrb r0, [r6]
	add r0, r0, r8
	ldr r1, _080E1820  @ =0x00000FF1
	add r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #206
	bne _080E17D8
	b _080E18E4
_080E17D8:
	mov r5, #0
	add r0, r4, #0
	bl sub_080E2210
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E1834
	ldr r0, _080E1824  @ =0x000015E2
	add r0, r0, r8
	ldrh r0, [r0]
	cmp r0, #9
	beq _080E182C
	ldr r0, _080E1828  @ =0x00000FA2
	add r0, r0, r8
	add r0, r4, r0
	mov r2, r10
	strb r2, [r0]
	mov r7, #0
	b _080E182E
	.byte 0x00
	.byte 0x00
_080E1800:
	.4byte gRam
_080E1804:
	.4byte 0x00000F82
_080E1808:
	.4byte 0x00000F22
_080E180C:
	.4byte 0x00000EE2
_080E1810:
	.4byte 0x00000F02
_080E1814:
	.4byte 0x00000F12
_080E1818:
	.4byte 0x00000ED2
_080E181C:
	.4byte 0x00000EF2
_080E1820:
	.4byte 0x00000FF1
_080E1824:
	.4byte 0x000015E2
_080E1828:
	.4byte 0x00000FA2
_080E182C:
	mov r5, #1
_080E182E:
	cmp r5, #0
	bne _080E1834
	b _080E194A
_080E1834:
	ldr r3, _080E1850  @ =gRam
	ldr r4, _080E1854  @ =0x00001710
	add r0, r3, r4
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E185C
	ldr r1, _080E1858  @ =0x00000FA2
	add r0, r3, r1
	add r0, r0, r9
	mov r1, #0
	strb r1, [r0]
	mov r7, #0
	b _080E194A
	.byte 0x00
	.byte 0x00
_080E1850:
	.4byte gRam
_080E1854:
	.4byte 0x00001710
_080E1858:
	.4byte 0x00000FA2
_080E185C:
	ldr r2, _080E18D0  @ =0x00001622
	add r0, r3, r2
	ldrb r1, [r0]
	ldr r4, _080E18D4  @ =0x00001623
	add r0, r3, r4
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r2, r2, #162
	add r0, r3, r2
	ldrb r2, [r0]
	add r4, r4, #162
	add r0, r3, r4
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #15
	bhi _080E194A
	ldr r1, _080E18D8  @ =0x00001624
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r2, _080E18DC  @ =0x00001625
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r4, r4, #5
	add r0, r3, r4
	ldrb r2, [r0]
	add r4, r4, #1
	add r0, r3, r4
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #15
	bhi _080E194A
	ldr r1, _080E18E0  @ =0x000010F2
	add r0, r3, r1
	add r0, r0, r9
	mov r2, #161
	lsl r2, r2, #4
	add r1, r3, r2
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080E194A
	b _080E1950
	.byte 0x00
	.byte 0x00
_080E18D0:
	.4byte 0x00001622
_080E18D4:
	.4byte 0x00001623
_080E18D8:
	.4byte 0x00001624
_080E18DC:
	.4byte 0x00001625
_080E18E0:
	.4byte 0x000010F2
_080E18E4:
	ldr r0, _080E19DC  @ =0x00001622
	add r0, r0, r8
	ldrb r1, [r0]
	ldr r0, _080E19E0  @ =0x00001623
	add r0, r0, r8
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r0, _080E19E4  @ =0x000016C4
	add r0, r0, r8
	ldrb r2, [r0]
	ldr r0, _080E19E8  @ =0x000016C5
	add r0, r0, r8
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #16
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #31
	bhi _080E194A
	ldr r0, _080E19EC  @ =0x00001624
	add r0, r0, r8
	ldrb r1, [r0]
	ldr r0, _080E19F0  @ =0x00001625
	add r0, r0, r8
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	mov r0, #182
	lsl r0, r0, #5
	add r0, r0, r8
	ldrb r2, [r0]
	ldr r0, _080E19F4  @ =0x000016C1
	add r0, r0, r8
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #24
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #31
	bhi _080E194A
	mov r3, #1
	mov r10, r3
_080E194A:
	mov r4, r10
	cmp r4, #0
	beq _080E199E
_080E1950:
	ldr r1, _080E19F8  @ =gRam
	ldr r2, _080E19FC  @ =0x00000F82
	add r0, r1, r2
	add r0, r0, r9
	ldrb r0, [r0]
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080E1A00  @ =0x00000F52
	add r0, r1, r3
	add r3, r2, r0
	ldrb r0, [r3]
	add r4, r1, #0
	cmp r0, #3
	beq _080E1992
	mov r0, #3
	strb r0, [r3]
	ldr r1, _080E1A04  @ =0x00000FF2
	add r0, r4, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #206
	beq _080E1992
	ldr r3, _080E1A08  @ =0x00000FC2
	add r0, r4, r3
	add r0, r2, r0
	mov r1, #16
	strb r1, [r0]
	ldr r1, _080E1A0C  @ =0x00001052
	add r0, r4, r1
	add r0, r2, r0
	mov r1, #0
	strb r1, [r0]
_080E1992:
	ldr r2, _080E1A10  @ =0x00000FA2
	add r0, r4, r2
	add r0, r0, r9
	mov r1, #0
	strb r1, [r0]
	mov r7, #0
_080E199E:
	cmp r7, #0
	bne _080E19A4
	b _080E1BA2
_080E19A4:
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	mov r2, r9
	bl sub_080C5ACC
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r3, #0
	beq _080E19BA
	b _080E1BA2
_080E19BA:
	ldr r2, _080E19F8  @ =gRam
	ldr r4, _080E1A14  @ =0x00000961
	add r0, r2, r4
	add r4, r4, #4
	add r1, r2, r4
	ldrb r0, [r0]
	ldrb r1, [r1]
	orr r0, r0, r1
	cmp r0, #0
	bne _080E19D0
	b _080E1BA2
_080E19D0:
	ldr r1, _080E1A10  @ =0x00000FA2
	add r0, r2, r1
	add r0, r0, r9
	strb r3, [r0]
	b _080E1BA2
	.byte 0x00
	.byte 0x00
_080E19DC:
	.4byte 0x00001622
_080E19E0:
	.4byte 0x00001623
_080E19E4:
	.4byte 0x000016C4
_080E19E8:
	.4byte 0x000016C5
_080E19EC:
	.4byte 0x00001624
_080E19F0:
	.4byte 0x00001625
_080E19F4:
	.4byte 0x000016C1
_080E19F8:
	.4byte gRam
_080E19FC:
	.4byte 0x00000F82
_080E1A00:
	.4byte 0x00000F52
_080E1A04:
	.4byte 0x00000FF2
_080E1A08:
	.4byte 0x00000FC2
_080E1A0C:
	.4byte 0x00001052
_080E1A10:
	.4byte 0x00000FA2
_080E1A14:
	.4byte 0x00000961
_080E1A18:
	ldr r0, _080E1A94  @ =0x00000F92
	add r0, r0, r8
	add r7, r4, r0
	ldrb r2, [r7]
	mov r10, r2
	ldr r0, _080E1A98  @ =0x00000FB2
	add r0, r0, r8
	add r6, r4, r0
	ldrb r5, [r6]
	ldr r0, _080E1A9C  @ =0x00000FD2
	add r0, r0, r8
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E1A46
	ldr r0, _080E1AA0  @ =gUnknown_08176908
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r6]
	ldr r0, _080E1AA4  @ =gUnknown_0817690C
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r7]
_080E1A46:
	add r0, r4, #0
	bl sub_080E26E4
	strb r5, [r6]
	mov r3, r10
	strb r3, [r7]
	ldr r0, _080E1AA8  @ =0x00000FA2
	add r0, r0, r8
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #5
	bne _080E1A60
	b _080E1B8C
_080E1A60:
	mov r5, #0
	mov r6, #0
	mov r7, #0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E1A74
	b _080E1BA2
_080E1A74:
	add r0, r4, #0
	bl sub_080C3964
	add r0, r4, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E1AB6
	ldr r0, _080E1AAC  @ =0x00001626
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E1AB0
	mov r6, #1
	b _080E1AB2
_080E1A94:
	.4byte 0x00000F92
_080E1A98:
	.4byte 0x00000FB2
_080E1A9C:
	.4byte 0x00000FD2
_080E1AA0:
	.4byte gUnknown_08176908
_080E1AA4:
	.4byte gUnknown_0817690C
_080E1AA8:
	.4byte 0x00000FA2
_080E1AAC:
	.4byte 0x00001626
_080E1AB0:
	mov r5, #1
_080E1AB2:
	cmp r5, #0
	beq _080E1AD2
_080E1AB6:
	ldr r0, _080E1B1C  @ =gRam
	ldr r4, _080E1B20  @ =0x00000F52
	add r0, r0, r4
	mov r2, r9
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #2
	bhi _080E1AD6
	mov r0, #3
	strb r0, [r1]
	mov r0, r9
	mov r1, #32
	bl sub_080E2814
_080E1AD2:
	cmp r6, #0
	beq _080E1AF6
_080E1AD6:
	ldr r1, _080E1B1C  @ =gRam
	ldr r3, _080E1B24  @ =0x00001072
	add r0, r1, r3
	add r0, r0, r9
	ldrb r0, [r0]
	cmp r0, #3
	bls _080E1AF6
	ldr r4, _080E1B20  @ =0x00000F52
	add r0, r1, r4
	add r0, r0, r9
	mov r1, #4
	strb r1, [r0]
	mov r0, r9
	mov r1, #128
	bl sub_080E2814
_080E1AF6:
	mov r0, r9
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E1BA2
	ldr r2, _080E1B1C  @ =gRam
	ldr r1, _080E1B28  @ =0x00001002
	add r0, r2, r1
	add r0, r0, r9
	ldrb r1, [r0]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #4
	bls _080E1B2C
	mov r0, r9
	bl Sprite3_Move
	b _080E1B40
_080E1B1C:
	.4byte gRam
_080E1B20:
	.4byte 0x00000F52
_080E1B24:
	.4byte 0x00001072
_080E1B28:
	.4byte 0x00001002
_080E1B2C:
	ldr r3, _080E1B78  @ =0x00001042
	add r0, r2, r3
	add r0, r0, r9
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E1B44
	mov r0, r9
	bl Sprite3_Move
	mov r7, #1
_080E1B40:
	cmp r7, #0
	beq _080E1B4A
_080E1B44:
	mov r0, r9
	bl sub_080C79F8
_080E1B4A:
	ldr r1, _080E1B7C  @ =gRam
	ldr r4, _080E1B80  @ =0x00000F52
	add r0, r1, r4
	mov r3, r9
	add r2, r3, r0
	ldrb r0, [r2]
	cmp r0, #4
	beq _080E1B64
	ldr r4, _080E1B84  @ =0x000010A2
	add r0, r1, r4
	add r0, r0, r9
	mov r1, #0
	strb r1, [r0]
_080E1B64:
	ldr r0, _080E1B88  @ =gUnknown_081769B0
	ldrb r1, [r2]
	lsl r1, r1, #2
	add r1, r1, r0
	ldr r1, [r1]
	mov r0, r9
	bl _call_via_r1
	b _080E1BA2
	.byte 0x00
	.byte 0x00
_080E1B78:
	.4byte 0x00001042
_080E1B7C:
	.4byte gRam
_080E1B80:
	.4byte 0x00000F52
_080E1B84:
	.4byte 0x000010A2
_080E1B88:
	.4byte gUnknown_081769B0
_080E1B8C:
	ldr r0, _080E1BB4  @ =0x000009AD
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E1BA2
	mov r0, r9
	bl sub_080E2858
	mov r0, r9
	bl sub_080E2858
_080E1BA2:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E1BB4:
	.4byte 0x000009AD
	THUMB_FUNC_END sub_080E1738

	THUMB_FUNC_START sub_080E1BB8
sub_080E1BB8: @ 0x080E1BB8
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r0, r6, #0
	bl sub_080E2614
	ldr r4, _080E1C28  @ =gRam
	ldr r1, _080E1C2C  @ =0x00000FC2
	add r0, r4, r1
	add r5, r6, r0
	ldrb r3, [r5]
	cmp r3, #0
	bne _080E1C62
	sub r1, r1, #112
	add r0, r4, r1
	add r0, r6, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	ldr r1, _080E1C30  @ =0x00001002
	add r0, r4, r1
	add r0, r6, r0
	ldrb r1, [r0]
	lsl r2, r1, #24
	cmp r2, #0
	beq _080E1BF4
	mov r0, #7
	and r0, r0, r1
	cmp r0, #4
	bls _080E1C38
_080E1BF4:
	bl GetRandomInt
	mov r1, #63
	and r1, r1, r0
	add r1, r1, #40
	strb r1, [r5]
	ldr r0, _080E1C34  @ =0x00000FB2
	add r4, r4, r0
	add r4, r6, r4
	ldrb r5, [r4]
	bl GetRandomInt
	mov r1, #3
	and r1, r1, r0
	strb r1, [r4]
	cmp r5, r1
	beq _080E1C62
	eor r5, r5, r1
	mov r0, #2
	and r5, r5, r0
	cmp r5, #0
	bne _080E1C62
	add r0, r6, #0
	bl sub_080E26C8
	b _080E1C62
_080E1C28:
	.4byte gRam
_080E1C2C:
	.4byte 0x00000FC2
_080E1C30:
	.4byte 0x00001002
_080E1C34:
	.4byte 0x00000FB2
_080E1C38:
	lsr r0, r2, #27
	mov r1, #3
	and r0, r0, r1
	ldr r1, _080E1C68  @ =gUnknown_081769C4
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r5]
	ldr r0, _080E1C6C  @ =0x00000FB2
	add r1, r4, r0
	add r1, r6, r1
	ldrb r0, [r1]
	mov r2, #1
	eor r0, r0, r2
	strb r0, [r1]
	ldr r1, _080E1C70  @ =0x00001052
	add r0, r4, r1
	add r0, r6, r0
	strb r3, [r0]
	add r0, r6, #0
	bl sub_080E26C8
_080E1C62:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E1C68:
	.4byte gUnknown_081769C4
_080E1C6C:
	.4byte 0x00000FB2
_080E1C70:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080E1BB8

	THUMB_FUNC_START sub_080E1C74
sub_080E1C74: @ 0x080E1C74
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E263C
	ldr r6, _080E1D14  @ =gRam
	ldr r1, _080E1D18  @ =0x00001002
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #4
	bhi _080E1D4C
	ldr r3, _080E1D1C  @ =0x00000FC2
	add r0, r6, r3
	add r3, r4, r0
	ldrb r2, [r3]
	cmp r2, #0
	beq _080E1D44
	ldr r1, _080E1D20  @ =0x00001052
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080E1CB2
	add r0, r2, #1
	strb r0, [r3]
_080E1CB2:
	ldr r3, _080E1D24  @ =0x00001042
	add r0, r6, r3
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #15
	and r0, r0, r1
	cmp r0, #0
	beq _080E1CDA
	ldr r0, _080E1D28  @ =0x00000FB2
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mov r2, #1
	eor r0, r0, r2
	strb r0, [r1]
	ldr r1, _080E1D2C  @ =0x00000FD2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #12
	strb r1, [r0]
_080E1CDA:
	ldr r3, _080E1D30  @ =0x00000F22
	add r1, r6, r3
	add r1, r4, r1
	ldr r2, _080E1D34  @ =gUnknown_08176910
	ldr r0, _080E1D28  @ =0x00000FB2
	add r3, r6, r0
	add r3, r4, r3
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E1D38  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E1D3C  @ =gUnknown_08176914
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E1D40  @ =0x00001082
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r3]
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080E1E70
	b _080E1E34
	.byte 0x00
	.byte 0x00
_080E1D14:
	.4byte gRam
_080E1D18:
	.4byte 0x00001002
_080E1D1C:
	.4byte 0x00000FC2
_080E1D20:
	.4byte 0x00001052
_080E1D24:
	.4byte 0x00001042
_080E1D28:
	.4byte 0x00000FB2
_080E1D2C:
	.4byte 0x00000FD2
_080E1D30:
	.4byte 0x00000F22
_080E1D34:
	.4byte gUnknown_08176910
_080E1D38:
	.4byte 0x00000F12
_080E1D3C:
	.4byte gUnknown_08176914
_080E1D40:
	.4byte 0x00001082
_080E1D44:
	add r0, r4, #0
	bl sub_080E264C
	b _080E1E34
_080E1D4C:
	ldr r3, _080E1DA0  @ =0x00000F22
	add r1, r6, r3
	add r1, r4, r1
	ldr r2, _080E1DA4  @ =gUnknown_08176960
	add r3, r3, #80
	add r0, r6, r3
	add r5, r4, r0
	ldrb r0, [r5]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E1DA8  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E1DAC  @ =gUnknown_08176968
	ldrb r0, [r5]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C79F8
	ldr r1, _080E1DB0  @ =0x00000FE2
	add r0, r6, r1
	add r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #0
	bne _080E1DBC
	ldr r0, _080E1DB4  @ =0x00001042
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E1DB8  @ =gUnknown_08176990
	ldrb r0, [r5]
	add r0, r0, r2
	ldrb r1, [r1]
	ldrb r0, [r0]
	and r0, r0, r1
	cmp r0, #0
	bne _080E1DCA
	mov r0, #88
	strb r0, [r3]
	b _080E1DCA
_080E1DA0:
	.4byte 0x00000F22
_080E1DA4:
	.4byte gUnknown_08176960
_080E1DA8:
	.4byte 0x00000F12
_080E1DAC:
	.4byte gUnknown_08176968
_080E1DB0:
	.4byte 0x00000FE2
_080E1DB4:
	.4byte 0x00001042
_080E1DB8:
	.4byte gUnknown_08176990
_080E1DBC:
	cmp r0, #44
	bne _080E1DCA
	ldr r0, _080E1E3C  @ =gUnknown_081769A0
	ldrb r1, [r5]
	add r1, r1, r0
	ldrb r0, [r1]
	strb r0, [r5]
_080E1DCA:
	ldr r6, _080E1E40  @ =gRam
	ldr r1, _080E1E44  @ =0x00001042
	add r2, r6, r1
	add r2, r4, r2
	ldr r1, _080E1E48  @ =gUnknown_08176988
	ldr r3, _080E1E4C  @ =0x00000F72
	add r0, r6, r3
	add r3, r4, r0
	ldrb r5, [r3]
	add r1, r5, r1
	ldrb r2, [r2]
	ldrb r0, [r1]
	and r0, r0, r2
	cmp r0, #0
	beq _080E1DF0
	ldr r0, _080E1E50  @ =gUnknown_08176998
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r3]
_080E1DF0:
	ldr r0, _080E1E54  @ =0x00000F22
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E1E58  @ =gUnknown_08176970
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E1E5C  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E1E60  @ =gUnknown_08176978
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E1E64  @ =0x00000FB2
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E1E68  @ =gUnknown_08176980
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E1E6C  @ =0x00001082
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080E1E70
_080E1E34:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E1E3C:
	.4byte gUnknown_081769A0
_080E1E40:
	.4byte gRam
_080E1E44:
	.4byte 0x00001042
_080E1E48:
	.4byte gUnknown_08176988
_080E1E4C:
	.4byte 0x00000F72
_080E1E50:
	.4byte gUnknown_08176998
_080E1E54:
	.4byte 0x00000F22
_080E1E58:
	.4byte gUnknown_08176970
_080E1E5C:
	.4byte 0x00000F12
_080E1E60:
	.4byte gUnknown_08176978
_080E1E64:
	.4byte 0x00000FB2
_080E1E68:
	.4byte gUnknown_08176980
_080E1E6C:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080E1C74

	THUMB_FUNC_START sub_080E1E70
sub_080E1E70: @ 0x080E1E70
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r4, _080E1EBC  @ =gRam
	ldr r1, _080E1EC0  @ =0x00001052
	add r3, r4, r1
	add r3, r0, r3
	ldrb r1, [r3]
	add r1, r1, #1
	strb r1, [r3]
	lsl r1, r1, #24
	lsr r1, r1, #27
	mov r5, #3
	and r1, r1, r5
	mov r6, #150
	lsl r6, r6, #4
	add r2, r4, r6
	strb r1, [r2]
	ldr r1, _080E1EC4  @ =0x00000F92
	add r2, r4, r1
	add r2, r0, r2
	ldr r6, _080E1EC8  @ =gUnknown_08176918
	ldrb r1, [r3]
	lsr r1, r1, #3
	and r1, r1, r5
	ldr r3, _080E1ECC  @ =0x00000FB2
	add r4, r4, r3
	add r0, r0, r4
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r1, r1, r0
	add r1, r1, r6
	ldrb r0, [r1]
	strb r0, [r2]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E1EBC:
	.4byte gRam
_080E1EC0:
	.4byte 0x00001052
_080E1EC4:
	.4byte 0x00000F92
_080E1EC8:
	.4byte gUnknown_08176918
_080E1ECC:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E1E70

	THUMB_FUNC_START sub_080E1ED0
sub_080E1ED0: @ 0x080E1ED0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E2614
	add r0, r4, #0
	bl sub_080E2094
	ldr r5, _080E1F28  @ =gRam
	ldr r1, _080E1F2C  @ =0x00000FC2
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	beq _080E1F38
	cmp r0, #0
	blt _080E1F44
	lsr r0, r0, #27
	mov r1, #7
	and r0, r0, r1
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	strb r0, [r1]
	ldr r6, _080E1F30  @ =0x00001082
	add r2, r5, r6
	add r2, r4, r2
	ldr r3, _080E1F34  @ =gUnknown_08176938
	sub r6, r6, #208
	add r0, r5, r6
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #3
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	orr r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	b _080E1F44
_080E1F28:
	.4byte gRam
_080E1F2C:
	.4byte 0x00000FC2
_080E1F30:
	.4byte 0x00001082
_080E1F34:
	.4byte gUnknown_08176938
_080E1F38:
	mov r0, #32
	strb r0, [r1]
	ldr r1, _080E1F4C  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
_080E1F44:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E1F4C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E1ED0

	THUMB_FUNC_START sub_080E1F50
sub_080E1F50: @ 0x080E1F50
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080E1FC8  @ =gRam
	ldr r1, _080E1FCC  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080E1FE4
	ldr r2, _080E1FD0  @ =0x00000996
	add r0, r6, r2
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #31
	and r0, r0, r1
	cmp r0, #0
	bne _080E1FBA
	ldr r3, _080E1FD4  @ =0x000010A2
	add r0, r6, r3
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E1F90
	add r0, r4, #0
	mov r1, #81
	bl sub_080CF140
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
_080E1F90:
	mov r0, #3
	and r0, r0, r4
	ldr r1, _080E1FD8  @ =gUnknown_081769C8
	add r0, r0, r1
	ldrb r1, [r0]
	add r0, r4, #0
	bl sub_080C35FC
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E1FDC  @ =0x00000FB2
	add r1, r6, r2
	add r1, r4, r1
	strb r0, [r1]
	ldr r3, _080E1FE0  @ =0x00001082
	add r1, r6, r3
	add r1, r4, r1
	strb r0, [r1]
_080E1FBA:
	add r0, r4, #0
	bl sub_080E2024
	add r0, r4, #0
	bl sub_080E2858
	b _080E200E
_080E1FC8:
	.4byte gRam
_080E1FCC:
	.4byte 0x00000FC2
_080E1FD0:
	.4byte 0x00000996
_080E1FD4:
	.4byte 0x000010A2
_080E1FD8:
	.4byte gUnknown_081769C8
_080E1FDC:
	.4byte 0x00000FB2
_080E1FE0:
	.4byte 0x00001082
_080E1FE4:
	ldr r0, _080E2014  @ =0x00001092
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E2018  @ =gUnknown_081769CC
	ldr r3, _080E201C  @ =0x00000FB2
	add r0, r6, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080E2614
	ldr r1, _080E2020  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	mov r0, #160
	strb r0, [r5]
_080E200E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E2014:
	.4byte 0x00001092
_080E2018:
	.4byte gUnknown_081769CC
_080E201C:
	.4byte 0x00000FB2
_080E2020:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E1F50

	THUMB_FUNC_START sub_080E2024
sub_080E2024: @ 0x080E2024
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080E2048  @ =gRam
	ldr r1, _080E204C  @ =0x00001042
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	beq _080E207A
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080E2050
	add r0, r4, #0
	bl sub_080C36D8
	b _080E2058
_080E2048:
	.4byte gRam
_080E204C:
	.4byte 0x00001042
_080E2050:
	add r0, r4, #0
	bl sub_080C3028
	add r0, r0, #2
_080E2058:
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080E2080  @ =gRam
	ldr r0, _080E2084  @ =0x00000F22
	add r1, r2, r0
	add r1, r4, r1
	ldr r0, _080E2088  @ =gUnknown_08176900
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E208C  @ =0x00000F12
	add r2, r2, r1
	add r2, r4, r2
	ldr r0, _080E2090  @ =gUnknown_08176904
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r2]
_080E207A:
	pop {r4}
	pop {r0}
	bx r0
_080E2080:
	.4byte gRam
_080E2084:
	.4byte 0x00000F22
_080E2088:
	.4byte gUnknown_08176900
_080E208C:
	.4byte 0x00000F12
_080E2090:
	.4byte gUnknown_08176904
	THUMB_FUNC_END sub_080E2024

	THUMB_FUNC_START sub_080E2094
sub_080E2094: @ 0x080E2094
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E20F0  @ =gRam
	ldr r1, _080E20F4  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	add r1, r4, r1
	ldr r2, _080E20F8  @ =0x0000097D
	add r6, r5, r2
	strb r1, [r6]
	mov r0, #3
	and r1, r1, r0
	ldr r7, _080E20FC  @ =0x000010D2
	add r0, r5, r7
	add r0, r4, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	cmp r1, #0
	bne _080E20E8
	ldr r1, _080E2100  @ =0x00001092
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r2, r1, #1
	strb r2, [r0]
	mov r3, #31
	ldr r2, _080E2104  @ =gUnknown_081769D0
	ldr r7, _080E2108  @ =0x00000FB2
	add r0, r5, r7
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r2
	and r1, r1, r3
	ldrb r0, [r0]
	add r1, r1, r0
	mov r0, #63
	and r1, r1, r0
	strb r1, [r6]
	add r0, r4, #0
	bl sub_080E210C
_080E20E8:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E20F0:
	.4byte gRam
_080E20F4:
	.4byte 0x00000996
_080E20F8:
	.4byte 0x0000097D
_080E20FC:
	.4byte 0x000010D2
_080E2100:
	.4byte 0x00001092
_080E2104:
	.4byte gUnknown_081769D0
_080E2108:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E2094

	THUMB_FUNC_START sub_080E210C
sub_080E210C: @ 0x080E210C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r0, #65
	add r1, r6, #0
	mov r2, #10
	bl sub_080C9AAC
	add r5, r0, #0
	cmp r5, #0
	blt _080E21CC
	ldr r3, _080E21D4  @ =gRam
	mov r1, #150
	lsl r1, r1, #4
	add r0, r3, r1
	ldrh r1, [r0]
	add r1, r1, #8
	ldr r2, _080E21D8  @ =0x00000964
	add r0, r3, r2
	ldrh r2, [r0]
	add r2, r2, #4
	ldr r4, _080E21DC  @ =0x00000EE2
	add r0, r3, r4
	add r0, r5, r0
	strb r1, [r0]
	add r4, r4, #32
	add r0, r3, r4
	add r0, r5, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080E21E0  @ =0x00000ED2
	add r0, r3, r1
	add r0, r5, r0
	strb r2, [r0]
	sub r4, r4, #16
	add r0, r3, r4
	add r0, r5, r0
	lsr r2, r2, #8
	strb r2, [r0]
	add r1, r1, #224
	add r0, r3, r1
	add r0, r5, r0
	ldr r2, _080E21E4  @ =0x0000097D
	add r4, r3, r2
	ldrb r1, [r4]
	strb r1, [r0]
	ldr r0, _080E21E8  @ =0x00000F22
	add r1, r3, r0
	add r1, r5, r1
	ldr r2, _080E21EC  @ =gUnknown_081769D4
	mov r0, #0
	ldrsb r0, [r4, r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080E21F0  @ =0x00000F12
	add r1, r3, r2
	add r1, r5, r1
	ldr r2, _080E21F4  @ =gUnknown_08176A14
	mov r0, #0
	ldrsb r0, [r4, r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r4, _080E21F8  @ =0x00001012
	add r2, r3, r4
	add r2, r5, r2
	ldrb r1, [r2]
	mov r0, #240
	and r0, r0, r1
	mov r1, #96
	orr r0, r0, r1
	strb r0, [r2]
	ldr r1, _080E21FC  @ =0x00000F82
	add r0, r3, r1
	add r0, r5, r0
	add r1, r6, #1
	strb r1, [r0]
	ldr r2, _080E2200  @ =0x00001172
	add r0, r3, r2
	add r0, r5, r0
	strb r1, [r0]
	ldr r4, _080E2204  @ =0x00001132
	add r0, r3, r4
	add r0, r5, r0
	mov r1, #64
	strb r1, [r0]
	ldr r2, _080E2208  @ =0x00001032
	add r0, r3, r2
	add r0, r5, r0
	strb r1, [r0]
	ldr r4, _080E220C  @ =0x00000E75
	add r3, r3, r4
	add r3, r5, r3
	mov r0, #2
	strb r0, [r3]
_080E21CC:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E21D4:
	.4byte gRam
_080E21D8:
	.4byte 0x00000964
_080E21DC:
	.4byte 0x00000EE2
_080E21E0:
	.4byte 0x00000ED2
_080E21E4:
	.4byte 0x0000097D
_080E21E8:
	.4byte 0x00000F22
_080E21EC:
	.4byte gUnknown_081769D4
_080E21F0:
	.4byte 0x00000F12
_080E21F4:
	.4byte gUnknown_08176A14
_080E21F8:
	.4byte 0x00001012
_080E21FC:
	.4byte 0x00000F82
_080E2200:
	.4byte 0x00001172
_080E2204:
	.4byte 0x00001132
_080E2208:
	.4byte 0x00001032
_080E220C:
	.4byte 0x00000E75
	THUMB_FUNC_END sub_080E210C

	THUMB_FUNC_START sub_080E2210
sub_080E2210: @ 0x080E2210
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E2254  @ =gRam
	ldr r3, _080E2258  @ =0x000010F2
	add r1, r2, r3
	add r4, r0, r1
	ldr r5, _080E225C  @ =0x000009B2
	add r0, r2, r5
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bne _080E226C
	ldr r1, _080E2260  @ =0x00001622
	add r0, r2, r1
	ldrb r0, [r0]
	ldr r3, _080E2264  @ =0x00001623
	add r1, r2, r3
	ldrb r1, [r1]
	lsl r1, r1, #8
	orr r0, r0, r1
	ldr r5, _080E2268  @ =0x00001624
	add r1, r2, r5
	ldrb r1, [r1]
	add r3, r3, #2
	add r2, r2, r3
	ldrb r2, [r2]
	lsl r2, r2, #8
	orr r1, r1, r2
	bl sub_080C8F6C
	b _080E2298
	.byte 0x00
	.byte 0x00
_080E2254:
	.4byte gRam
_080E2258:
	.4byte 0x000010F2
_080E225C:
	.4byte 0x000009B2
_080E2260:
	.4byte 0x00001622
_080E2264:
	.4byte 0x00001623
_080E2268:
	.4byte 0x00001624
_080E226C:
	ldr r5, _080E22B8  @ =0x00001622
	add r0, r2, r5
	ldrb r0, [r0]
	ldr r3, _080E22BC  @ =0x00001623
	add r1, r2, r3
	ldrb r1, [r1]
	lsl r1, r1, #8
	add r0, r0, r1
	ldr r3, _080E22C0  @ =0x000001FF
	and r0, r0, r3
	add r5, r5, #2
	add r1, r2, r5
	ldrb r1, [r1]
	add r5, r5, #1
	add r2, r2, r5
	ldrb r2, [r2]
	lsl r2, r2, #8
	add r1, r1, r2
	and r1, r1, r3
	ldrb r2, [r4]
	bl sub_080928A4
_080E2298:
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r0, _080E22C4  @ =gRam
	ldr r2, _080E22C8  @ =0x000015E2
	add r0, r0, r2
	strh r1, [r0]
	ldr r0, _080E22CC  @ =gUnknown_08172370
	add r0, r1, r0
	ldrb r1, [r0]
	neg r0, r1
	orr r0, r0, r1
	lsr r0, r0, #31
	pop {r4,r5}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080E22B8:
	.4byte 0x00001622
_080E22BC:
	.4byte 0x00001623
_080E22C0:
	.4byte 0x000001FF
_080E22C4:
	.4byte gRam
_080E22C8:
	.4byte 0x000015E2
_080E22CC:
	.4byte gUnknown_08172370
	THUMB_FUNC_END sub_080E2210

	THUMB_FUNC_START sub_080E22D0
sub_080E22D0: @ 0x080E22D0
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	lsr r1, r1, #26
	mov r10, r1
	mov r2, #3
	ldr r3, _080E230C  @ =gRam
	ldr r4, _080E2310  @ =0x00000F92
	add r1, r3, r4
	add r1, r1, r0
	mov r9, r1
	ldr r5, _080E2314  @ =0x00000FF2
	add r1, r3, r5
	add r0, r0, r1
	str r0, [sp, #4]
_080E22FA:
	mov r5, #0
	ldr r7, [sp, #4]
	ldrb r0, [r7]
	cmp r0, #69
	bhi _080E2318
	lsl r2, r2, #24
	mov r8, r2
	b _080E2346
	.byte 0x00
	.byte 0x00
_080E230C:
	.4byte gRam
_080E2310:
	.4byte 0x00000F92
_080E2314:
	.4byte 0x00000FF2
_080E2318:
	ldr r1, _080E238C  @ =gUnknown_08176D00
	lsl r2, r2, #24
	asr r3, r2, #24
	mov r4, r9
	ldrb r0, [r4]
	lsl r4, r0, #2
	add r0, r3, r4
	add r0, r0, r1
	ldrb r0, [r0]
	mov r8, r2
	cmp r0, #0
	beq _080E2342
	cmp r3, #3
	bne _080E2346
	ldr r0, _080E2390  @ =gUnknown_08176C30
	add r1, r4, #3
	add r1, r1, r0
	ldrb r0, [r1]
	cmp r0, #64
	beq _080E2342
	mov r5, #1
_080E2342:
	cmp r5, #0
	beq _080E2426
_080E2346:
	ldr r5, _080E2394  @ =gRam
	ldr r7, _080E2398  @ =0x00000964
	add r4, r5, r7
	ldr r3, _080E239C  @ =gUnknown_08176B60
	mov r0, r8
	asr r5, r0, #24
	lsl r1, r5, #1
	mov r7, r9
	ldrb r2, [r7]
	lsl r0, r2, #3
	add r1, r1, r0
	add r1, r1, r3
	ldrh r0, [r1]
	ldrh r4, [r4]
	add r0, r0, r4
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r12, r0
	mov r4, #8
	mov r3, #0
	ldr r1, _080E2390  @ =gUnknown_08176C30
	lsl r2, r2, #2
	add r5, r5, r2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #64
	bne _080E23A0
	mov r4, #2
	ldr r1, [sp, #4]
	ldrb r0, [r1]
	cmp r0, #70
	bne _080E23AC
	mov r5, #240
	mov r12, r5
	b _080E23AC
_080E238C:
	.4byte gUnknown_08176D00
_080E2390:
	.4byte gUnknown_08176C30
_080E2394:
	.4byte gRam
_080E2398:
	.4byte 0x00000964
_080E239C:
	.4byte gUnknown_08176B60
_080E23A0:
	ldr r7, _080E2444  @ =gUnknown_08176D00
	add r0, r5, r7
	ldrb r1, [r0]
	neg r0, r1
	orr r0, r0, r1
	lsr r3, r0, #31
_080E23AC:
	ldr r1, _080E2448  @ =gUnknown_08176C98
	mov r0, r8
	asr r0, r0, #24
	str r0, [sp, #8]
	mov r5, r9
	ldrb r2, [r5]
	lsl r0, r2, #2
	ldr r7, [sp, #8]
	add r6, r7, r0
	add r1, r6, r1
	ldr r5, _080E244C  @ =gRam
	ldr r7, _080E2450  @ =0x00000969
	add r0, r5, r7
	ldrb r1, [r1]
	ldrb r0, [r0]
	add r5, r0, #0
	orr r5, r5, r1
	cmp r3, #0
	bne _080E23D8
	mov r0, #241
	and r5, r5, r0
	orr r5, r5, r4
_080E23D8:
	ldr r0, _080E2454  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r10
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r1, _080E244C  @ =gRam
	mov r3, #150
	lsl r3, r3, #4
	add r4, r1, r3
	ldr r3, _080E2458  @ =gUnknown_08176A90
	ldr r7, [sp, #8]
	lsl r1, r7, #1
	lsl r2, r2, #3
	add r1, r1, r2
	add r1, r1, r3
	ldrh r1, [r1]
	ldrh r4, [r4]
	add r1, r1, r4
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080E245C  @ =gUnknown_08176C30
	add r2, r6, r3
	ldrb r3, [r2]
	lsl r2, r5, #8
	add r3, r3, r2
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080E2444  @ =gUnknown_08176D00
	add r2, r6, r4
	ldrb r2, [r2]
	str r2, [sp]
	mov r2, r12
	bl sub_080C6368
	mov r0, r10
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r10, r0
_080E2426:
	mov r0, #255
	lsl r0, r0, #24
	add r0, r0, r8
	lsr r2, r0, #24
	cmp r0, #0
	blt _080E2434
	b _080E22FA
_080E2434:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080E2444:
	.4byte gUnknown_08176D00
_080E2448:
	.4byte gUnknown_08176C98
_080E244C:
	.4byte gRam
_080E2450:
	.4byte 0x00000969
_080E2454:
	.4byte gUnknown_03003E74
_080E2458:
	.4byte gUnknown_08176A90
_080E245C:
	.4byte gUnknown_08176C30
	THUMB_FUNC_END sub_080E22D0

	THUMB_FUNC_START sub_080E2460
sub_080E2460: @ 0x080E2460
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #16
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r4, _080E2570  @ =gRam
	ldr r2, _080E2574  @ =0x00000FF2
	add r1, r4, r2
	add r1, r0, r1
	ldrb r1, [r1]
	sub r1, r1, #65
	lsl r1, r1, #24
	lsr r1, r1, #24
	str r1, [sp, #4]
	ldr r5, _080E2578  @ =0x00000F92
	add r3, r4, r5
	add r3, r0, r3
	ldrb r1, [r3]
	lsl r1, r1, #1
	ldr r5, _080E257C  @ =0x0000096C
	add r2, r4, r5
	strb r1, [r2]
	ldr r2, _080E2580  @ =gUnknown_08176D68
	ldr r5, _080E2584  @ =0x00000FB2
	add r1, r4, r5
	add r0, r0, r1
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	lsr r0, r0, #2
	mov r9, r0
	mov r0, #1
	add r7, r4, #0
	mov r8, r3
	ldr r1, _080E2588  @ =gUnknown_08176DA4
	mov r10, r1
_080E24AE:
	lsl r0, r0, #24
	asr r6, r0, #24
	lsl r2, r6, #1
	mov r3, r8
	ldrb r0, [r3]
	lsl r0, r0, #2
	add r0, r2, r0
	ldr r5, _080E258C  @ =gUnknown_08176D6C
	add r0, r0, r5
	ldrh r1, [r0]
	ldr r3, _080E2590  @ =0x000015ED
	add r0, r7, r3
	strb r1, [r0]
	mov r5, r8
	ldrb r0, [r5]
	lsl r0, r0, #2
	add r0, r2, r0
	add r0, r0, r10
	ldrh r1, [r0]
	sub r3, r3, #1
	add r0, r7, r3
	strb r1, [r0]
	ldr r1, _080E2594  @ =gUnknown_08176DDC
	ldrb r3, [r5]
	lsl r0, r3, #1
	add r4, r6, r0
	add r1, r4, r1
	ldrb r5, [r1]
	ldr r0, [sp, #4]
	cmp r0, #1
	bhi _080E24EE
	add r5, r5, #3
_080E24EE:
	ldr r0, _080E2598  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r9
	lsl r0, r0, #16
	lsr r0, r0, #16
	str r0, [sp, #8]
	lsl r3, r3, #2
	add r3, r2, r3
	ldr r1, _080E258C  @ =gUnknown_08176D6C
	add r1, r1, r3
	mov r12, r1
	mov r2, #150
	lsl r2, r2, #4
	add r1, r7, r2
	ldrh r1, [r1]
	mov r0, r12
	ldrh r0, [r0]
	add r1, r1, r0
	lsl r1, r1, #16
	lsr r1, r1, #16
	str r1, [sp, #12]
	add r3, r3, r10
	ldr r1, _080E259C  @ =0x00000964
	add r2, r7, r1
	ldrh r2, [r2]
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E25A0  @ =gUnknown_08176DF8
	add r3, r4, r3
	ldrb r3, [r3]
	ldr r0, _080E25A4  @ =gUnknown_03002B99
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	orr r3, r3, r0
	lsl r3, r3, #8
	add r3, r5, r3
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r1, #0
	str r1, [sp]
	ldr r0, [sp, #8]
	ldr r1, [sp, #12]
	bl sub_080C6368
	sub r1, r6, #1
	lsl r1, r1, #24
	mov r0, r9
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	lsr r0, r1, #24
	cmp r1, #0
	bge _080E24AE
	add sp, sp, #16
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080E2570:
	.4byte gRam
_080E2574:
	.4byte 0x00000FF2
_080E2578:
	.4byte 0x00000F92
_080E257C:
	.4byte 0x0000096C
_080E2580:
	.4byte gUnknown_08176D68
_080E2584:
	.4byte 0x00000FB2
_080E2588:
	.4byte gUnknown_08176DA4
_080E258C:
	.4byte gUnknown_08176D6C
_080E2590:
	.4byte 0x000015ED
_080E2594:
	.4byte gUnknown_08176DDC
_080E2598:
	.4byte gUnknown_03003E74
_080E259C:
	.4byte 0x00000964
_080E25A0:
	.4byte gUnknown_08176DF8
_080E25A4:
	.4byte gUnknown_03002B99
	THUMB_FUNC_END sub_080E2460

	THUMB_FUNC_START sub_080E25A8
sub_080E25A8: @ 0x080E25A8
	push {r4-r6,lr}
	mov r6, r9
	mov r5, r8
	push {r5,r6}
	add r5, r0, #0
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r4, _080E25F8  @ =gRam
	ldr r0, _080E25FC  @ =0x000009AD
	add r6, r4, r0
	ldrb r1, [r6]
	mov r9, r1
	ldr r0, _080E2600  @ =0x00000E75
	add r4, r4, r0
	add r4, r5, r4
	ldrb r1, [r4]
	mov r8, r1
	mov r0, #0
	strb r0, [r6]
	lsr r0, r1, #1
	mov r1, #128
	orr r0, r0, r1
	strb r0, [r4]
	add r0, r5, #0
	bl SpriteActive_Main
	add r0, r5, #0
	bl SpriteActive_Main
	mov r0, r8
	strb r0, [r4]
	mov r1, r9
	strb r1, [r6]
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E25F8:
	.4byte gRam
_080E25FC:
	.4byte 0x000009AD
_080E2600:
	.4byte 0x00000E75
	THUMB_FUNC_END sub_080E25A8

	THUMB_FUNC_START sub_080E2604
sub_080E2604: @ 0x080E2604
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E1738
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E2604

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E2614
sub_080E2614: @ 0x080E2614
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E2630  @ =gRam
	ldr r3, _080E2634  @ =0x00000F22
	add r1, r2, r3
	add r1, r0, r1
	mov r3, #0
	strb r3, [r1]
	ldr r1, _080E2638  @ =0x00000F12
	add r2, r2, r1
	add r0, r0, r2
	strb r3, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080E2630:
	.4byte gRam
_080E2634:
	.4byte 0x00000F22
_080E2638:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080E2614

	THUMB_FUNC_START sub_080E263C
sub_080E263C: @ 0x080E263C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E2094
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E263C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E264C
sub_080E264C: @ 0x080E264C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080E2614
	ldr r2, _080E2678  @ =gRam
	ldr r1, _080E267C  @ =0x00000F52
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r0, _080E2680  @ =0x00000FC2
	add r2, r2, r0
	add r4, r4, r2
	mov r0, #160
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E2678:
	.4byte gRam
_080E267C:
	.4byte 0x00000F52
_080E2680:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E264C

	THUMB_FUNC_START sub_080E2684
sub_080E2684: @ 0x080E2684
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080E26B8  @ =gRam
	ldr r1, _080E26BC  @ =0x00001032
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	mov r0, #16
	and r0, r0, r1
	cmp r0, #0
	beq _080E26B0
	ldr r1, _080E26C0  @ =gUnknown_08176A54
	ldr r4, _080E26C4  @ =0x00000FB2
	add r0, r3, r4
	add r0, r2, r0
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r1, [r0]
	add r0, r2, #0
	bl sub_080C57F8
_080E26B0:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E26B8:
	.4byte gRam
_080E26BC:
	.4byte 0x00001032
_080E26C0:
	.4byte gUnknown_08176A54
_080E26C4:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E2684

	THUMB_FUNC_START sub_080E26C8
sub_080E26C8: @ 0x080E26C8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080E26DC  @ =gRam
	ldr r2, _080E26E0  @ =0x00000FD2
	add r1, r1, r2
	add r0, r0, r1
	mov r1, #12
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080E26DC:
	.4byte gRam
_080E26E0:
	.4byte 0x00000FD2
	THUMB_FUNC_END sub_080E26C8

	THUMB_FUNC_START sub_080E26E4
sub_080E26E4: @ 0x080E26E4
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E2716
	add r0, r4, #0
	bl sub_080E287C
	add r0, r4, #0
	bl sub_080E288C
	add r0, r4, #0
	bl sub_080E2460
	add r0, r4, #0
	bl sub_080E2684
_080E2716:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E26E4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E2720
sub_080E2720: @ 0x080E2720
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	sub sp, sp, #4
	add r6, r1, #0
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r6, r6, #24
	ldr r1, _080E27A4  @ =gUnknown_03003E74
	lsr r6, r6, #26
	ldrh r1, [r1]
	add r6, r6, r1
	lsl r6, r6, #16
	lsr r6, r6, #16
	ldr r5, _080E27A8  @ =gRam
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	ldrh r1, [r1]
	ldr r3, _080E27AC  @ =0x00000964
	add r3, r3, r5
	mov r8, r3
	ldr r4, _080E27B0  @ =gUnknown_08176A58
	ldr r7, _080E27B4  @ =0x00000F92
	add r2, r5, r7
	add r2, r0, r2
	ldrb r3, [r2]
	lsl r3, r3, #1
	add r3, r3, r4
	mov r4, r8
	ldrh r2, [r4]
	ldrh r3, [r3]
	sub r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r4, _080E27B8  @ =gUnknown_08176958
	add r7, r7, #240
	add r3, r5, r7
	add r0, r0, r3
	ldrb r0, [r0]
	add r4, r0, r4
	ldrb r3, [r4]
	ldr r4, _080E27BC  @ =gUnknown_0817695C
	add r0, r0, r4
	ldrb r0, [r0]
	ldr r4, _080E27C0  @ =0x00000969
	add r5, r5, r4
	mov r4, #0
	ldrsb r4, [r5, r4]
	orr r0, r0, r4
	lsl r0, r0, #8
	add r3, r3, r0
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r0, #2
	str r0, [sp]
	add r0, r6, #0
	bl sub_080C6368
	add sp, sp, #4
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E27A4:
	.4byte gUnknown_03003E74
_080E27A8:
	.4byte gRam
_080E27AC:
	.4byte 0x00000964
_080E27B0:
	.4byte gUnknown_08176A58
_080E27B4:
	.4byte 0x00000F92
_080E27B8:
	.4byte gUnknown_08176958
_080E27BC:
	.4byte gUnknown_0817695C
_080E27C0:
	.4byte 0x00000969
	THUMB_FUNC_END sub_080E2720

	THUMB_FUNC_START sub_080E27C4
sub_080E27C4: @ 0x080E27C4
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E2614
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r2, _080E2804  @ =gRam
	ldr r3, _080E2808  @ =0x00001082
	add r1, r2, r3
	add r1, r4, r1
	strb r0, [r1]
	ldr r1, _080E280C  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E27FE
	ldr r3, _080E2810  @ =0x00000F52
	add r0, r2, r3
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #255
	bl sub_080E2814
_080E27FE:
	pop {r4}
	pop {r0}
	bx r0
_080E2804:
	.4byte gRam
_080E2808:
	.4byte 0x00001082
_080E280C:
	.4byte 0x00000FC2
_080E2810:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E27C4

	THUMB_FUNC_START sub_080E2814
sub_080E2814: @ 0x080E2814
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080E2848  @ =gRam
	ldr r4, _080E284C  @ =0x00000FC2
	add r2, r3, r4
	add r2, r0, r2
	mov r4, #0
	strb r1, [r2]
	ldr r2, _080E2850  @ =0x00001002
	add r1, r3, r2
	add r1, r0, r1
	strb r4, [r1]
	ldr r4, _080E2854  @ =0x00000D84
	add r3, r3, r4
	add r0, r0, r3
	ldrb r2, [r0]
	mov r1, #15
	and r1, r1, r2
	mov r2, #96
	orr r1, r1, r2
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E2848:
	.4byte gRam
_080E284C:
	.4byte 0x00000FC2
_080E2850:
	.4byte 0x00001002
_080E2854:
	.4byte 0x00000D84
	THUMB_FUNC_END sub_080E2814

	THUMB_FUNC_START sub_080E2858
sub_080E2858: @ 0x080E2858
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E2874  @ =gRam
	ldr r1, _080E2878  @ =0x00001052
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	bl sub_080E1E70
	pop {r0}
	bx r0
_080E2874:
	.4byte gRam
_080E2878:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080E2858

	THUMB_FUNC_START sub_080E287C
sub_080E287C: @ 0x080E287C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #0
	bl sub_080E2720
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E287C

	THUMB_FUNC_START sub_080E288C
sub_080E288C: @ 0x080E288C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E28AC  @ =gUnknown_08176A8C
	ldr r1, _080E28B0  @ =gRam
	ldr r3, _080E28B4  @ =0x00000FB2
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	add r1, r1, r2
	ldrb r1, [r1]
	bl sub_080E22D0
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E28AC:
	.4byte gUnknown_08176A8C
_080E28B0:
	.4byte gRam
_080E28B4:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E288C

	THUMB_FUNC_START sub_080E28B8
sub_080E28B8: @ 0x080E28B8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E1644
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E28B8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E28C8
sub_080E28C8: @ 0x080E28C8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E1738
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E28C8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E28D8
sub_080E28D8: @ 0x080E28D8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E1644
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E28D8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E28E8
sub_080E28E8: @ 0x080E28E8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E1738
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E28E8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E28F8
sub_080E28F8: @ 0x080E28F8
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080E2BC8
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E2A02
	add r0, r5, #0
	bl sub_080E2A2C
	add r0, r5, #0
	bl sub_080C3964
	add r0, r5, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E2A02
	add r0, r5, #0
	bl sub_080E3D00
	add r0, r5, #0
	bl sub_080C79F8
	add r0, r5, #0
	bl sub_080C4F98
	ldr r4, _080E2994  @ =gRam
	ldr r1, _080E2998  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	add r0, r5, #0
	eor r0, r0, r1
	mov r1, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080E29D2
	add r0, r5, #0
	bl sub_080C2FA8
	ldr r2, _080E299C  @ =0x00001082
	add r1, r4, r2
	add r1, r5, r1
	strb r0, [r1]
	sub r2, r2, #208
	add r1, r4, r2
	add r1, r5, r1
	strb r0, [r1]
	ldr r1, _080E29A0  @ =gUnknown_08176E14
	mov r6, #3
	add r0, r5, #0
	and r0, r0, r6
	add r0, r0, r1
	ldrb r1, [r0]
	add r0, r5, #0
	bl sub_080C35FC
	ldr r1, _080E29A4  @ =0x00001042
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	cmp r1, #0
	beq _080E29D2
	add r0, r6, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080E29A8
	add r0, r5, #0
	bl sub_080C36D8
	b _080E29B0
	.byte 0x00
	.byte 0x00
_080E2994:
	.4byte gRam
_080E2998:
	.4byte 0x00000996
_080E299C:
	.4byte 0x00001082
_080E29A0:
	.4byte gUnknown_08176E14
_080E29A4:
	.4byte 0x00001042
_080E29A8:
	add r0, r5, #0
	bl sub_080C3028
	add r0, r0, #2
_080E29B0:
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080E2A08  @ =gRam
	ldr r0, _080E2A0C  @ =0x00000F22
	add r1, r2, r0
	add r1, r5, r1
	ldr r0, _080E2A10  @ =gUnknown_08176900
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E2A14  @ =0x00000F12
	add r2, r2, r1
	add r2, r5, r2
	ldr r0, _080E2A18  @ =gUnknown_08176904
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r2]
_080E29D2:
	ldr r2, _080E2A08  @ =gRam
	ldr r1, _080E2A1C  @ =0x00001052
	add r0, r2, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	ldr r0, _080E2A20  @ =0x00000F92
	add r3, r2, r0
	add r3, r5, r3
	ldr r4, _080E2A24  @ =gUnknown_08176E78
	lsl r1, r1, #24
	lsr r1, r1, #25
	mov r0, #7
	and r1, r1, r0
	ldr r0, _080E2A28  @ =0x00000FB2
	add r2, r2, r0
	add r2, r5, r2
	ldrb r0, [r2]
	lsl r0, r0, #3
	orr r1, r1, r0
	add r1, r1, r4
	ldrb r0, [r1]
	strb r0, [r3]
_080E2A02:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E2A08:
	.4byte gRam
_080E2A0C:
	.4byte 0x00000F22
_080E2A10:
	.4byte gUnknown_08176900
_080E2A14:
	.4byte 0x00000F12
_080E2A18:
	.4byte gUnknown_08176904
_080E2A1C:
	.4byte 0x00001052
_080E2A20:
	.4byte 0x00000F92
_080E2A24:
	.4byte gUnknown_08176E78
_080E2A28:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E28F8

	THUMB_FUNC_START sub_080E2A2C
sub_080E2A2C: @ 0x080E2A2C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r4, _080E2A78  @ =gRam
	ldr r1, _080E2A7C  @ =0x000010A2
	add r0, r4, r1
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #16
	beq _080E2A72
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #15
	bne _080E2A72
	add r0, r2, #0
	mov r1, #81
	bl sub_080CF140
	ldr r1, _080E2A80  @ =0x0000165E
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #2
	bne _080E2A72
	mov r1, #171
	lsl r1, r1, #4
	add r0, r4, r1
	ldrh r0, [r0]
	cmp r0, #24
	bne _080E2A72
	ldr r0, _080E2A84  @ =0x00000A3C
	add r1, r4, r0
	mov r0, #22
	strh r0, [r1]
_080E2A72:
	pop {r4}
	pop {r0}
	bx r0
_080E2A78:
	.4byte gRam
_080E2A7C:
	.4byte 0x000010A2
_080E2A80:
	.4byte 0x0000165E
_080E2A84:
	.4byte 0x00000A3C
	THUMB_FUNC_END sub_080E2A2C

	THUMB_FUNC_START sub_080E2A88
sub_080E2A88: @ 0x080E2A88
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	lsl r1, r1, #24
	lsr r1, r1, #24
	lsl r2, r2, #24
	lsr r2, r2, #26
	str r2, [sp, #4]
	mov r0, #1
	eor r1, r1, r0
	lsl r1, r1, #1
	mov r0, #2
	and r1, r1, r0
	ldr r2, _080E2B7C  @ =gRam
	ldr r3, _080E2B80  @ =0x00000FB2
	add r0, r2, r3
	add r0, r0, r9
	ldrb r0, [r0]
	lsl r0, r0, #2
	orr r1, r1, r0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r10, r1
	mov r4, #1
	mov r8, r4
	add r6, r2, #0
_080E2AC8:
	mov r0, r10
	add r0, r0, r8
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	ldr r0, _080E2B84  @ =gUnknown_08176E18
	lsl r1, r4, #1
	add r0, r1, r0
	ldrh r0, [r0]
	add r2, r0, #0
	ldr r0, _080E2B88  @ =gUnknown_08176E38
	add r1, r1, r0
	ldrh r0, [r1]
	add r3, r0, #0
	ldr r7, _080E2B8C  @ =0x000015ED
	add r0, r6, r7
	strb r2, [r0]
	ldr r1, _080E2B90  @ =0x000015EC
	add r0, r6, r1
	strb r3, [r0]
	ldr r0, _080E2B94  @ =gUnknown_08176E58
	add r0, r4, r0
	ldrb r5, [r0]
	ldr r7, _080E2B98  @ =0x00000FF2
	add r0, r6, r7
	add r0, r0, r9
	ldrb r0, [r0]
	cmp r0, #71
	bls _080E2B08
	sub r0, r5, #3
	lsl r0, r0, #24
	lsr r5, r0, #24
_080E2B08:
	ldr r0, _080E2B9C  @ =gUnknown_03003E74
	ldrh r0, [r0]
	ldr r1, [sp, #4]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r7, #150
	lsl r7, r7, #4
	add r1, r6, r7
	ldrh r1, [r1]
	add r1, r2, r1
	lsl r1, r1, #16
	lsr r1, r1, #16
	add r7, r7, #4
	add r2, r6, r7
	ldrh r2, [r2]
	add r2, r3, r2
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E2BA0  @ =gUnknown_08176E68
	add r3, r4, r3
	ldrb r3, [r3]
	ldr r4, _080E2BA4  @ =gUnknown_03002B99
	ldrb r4, [r4]
	lsl r4, r4, #24
	asr r4, r4, #24
	orr r3, r3, r4
	lsl r3, r3, #8
	add r3, r5, r3
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r7, #0
	str r7, [sp]
	bl sub_080C6368
	mov r0, r8
	lsl r1, r0, #24
	mov r3, #255
	lsl r3, r3, #24
	add r1, r1, r3
	ldr r0, [sp, #4]
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #4]
	lsr r4, r1, #24
	mov r8, r4
	cmp r1, #0
	bge _080E2AC8
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E2B7C:
	.4byte gRam
_080E2B80:
	.4byte 0x00000FB2
_080E2B84:
	.4byte gUnknown_08176E18
_080E2B88:
	.4byte gUnknown_08176E38
_080E2B8C:
	.4byte 0x000015ED
_080E2B90:
	.4byte 0x000015EC
_080E2B94:
	.4byte gUnknown_08176E58
_080E2B98:
	.4byte 0x00000FF2
_080E2B9C:
	.4byte gUnknown_03003E74
_080E2BA0:
	.4byte gUnknown_08176E68
_080E2BA4:
	.4byte gUnknown_03002B99
	THUMB_FUNC_END sub_080E2A88

	THUMB_FUNC_START sub_080E2BA8
sub_080E2BA8: @ 0x080E2BA8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E25A8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E2BA8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E2BB8
sub_080E2BB8: @ 0x080E2BB8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E28F8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E2BB8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E2BC8
sub_080E2BC8: @ 0x080E2BC8
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E2BFE
	add r0, r4, #0
	mov r1, #12
	bl sub_080E33BC
	add r0, r4, #0
	mov r1, #8
	bl sub_080E3024
	add r0, r4, #0
	bl sub_080E2C08
	add r0, r4, #0
	bl sub_080E2684
_080E2BFE:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E2BC8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E2C08
sub_080E2C08: @ 0x080E2C08
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080E2C24  @ =gRam
	ldr r2, _080E2C28  @ =0x00000F62
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	mov r2, #0
	bl sub_080E2A88
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E2C24:
	.4byte gRam
_080E2C28:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080E2C08

	THUMB_FUNC_START sub_080E2C2C
sub_080E2C2C: @ 0x080E2C2C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E26E4
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E2D1E
	add r0, r4, #0
	bl sub_080E2A2C
	add r0, r4, #0
	bl sub_080C3964
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E2D1E
	add r0, r4, #0
	bl sub_080E3D00
	add r0, r4, #0
	bl sub_080C79F8
	add r0, r4, #0
	bl sub_080C4F98
	ldr r5, _080E2CCC  @ =gRam
	ldr r1, _080E2CD0  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080E2D0A
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r1, _080E2CD4  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	strb r3, [r0]
	sub r1, r1, #208
	add r0, r5, r1
	add r0, r4, r0
	strb r3, [r0]
	mov r6, #3
	add r3, r4, #0
	and r3, r3, r6
	ldr r0, _080E2CD8  @ =gUnknown_08176E14
	add r0, r3, r0
	ldrb r1, [r0]
	add r0, r4, #0
	bl sub_080C35FC
	ldr r1, _080E2CDC  @ =0x00001042
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	beq _080E2D0A
	add r0, r6, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080E2CE0
	add r0, r4, #0
	bl sub_080C36D8
	b _080E2CE8
	.byte 0x00
	.byte 0x00
_080E2CCC:
	.4byte gRam
_080E2CD0:
	.4byte 0x00000996
_080E2CD4:
	.4byte 0x00001082
_080E2CD8:
	.4byte gUnknown_08176E14
_080E2CDC:
	.4byte 0x00001042
_080E2CE0:
	add r0, r4, #0
	bl sub_080C3028
	add r0, r0, #2
_080E2CE8:
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080E2D24  @ =gRam
	ldr r0, _080E2D28  @ =0x00000F22
	add r1, r2, r0
	add r1, r4, r1
	ldr r0, _080E2D2C  @ =gUnknown_08176900
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E2D30  @ =0x00000F12
	add r2, r2, r1
	add r2, r4, r2
	ldr r0, _080E2D34  @ =gUnknown_08176904
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r2]
_080E2D0A:
	ldr r1, _080E2D24  @ =gRam
	ldr r0, _080E2D38  @ =0x00001052
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080E1E70
_080E2D1E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E2D24:
	.4byte gRam
_080E2D28:
	.4byte 0x00000F22
_080E2D2C:
	.4byte gUnknown_08176900
_080E2D30:
	.4byte 0x00000F12
_080E2D34:
	.4byte gUnknown_08176904
_080E2D38:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080E2C2C

	THUMB_FUNC_START sub_080E2D3C
sub_080E2D3C: @ 0x080E2D3C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E25A8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E2D3C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E2D4C
sub_080E2D4C: @ 0x080E2D4C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	add r0, r4, #0
	bl sub_080E34CC
	ldr r6, _080E2E00  @ =gRam
	ldr r1, _080E2E04  @ =0x00000F52
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #1
	bhi _080E2D70
	ldr r2, _080E2E08  @ =0x000015ED
	add r1, r6, r2
	mov r0, #128
	strb r0, [r1]
_080E2D70:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E2DF8
	add r0, r4, #0
	bl sub_080C3964
	ldr r0, _080E2E0C  @ =0x00000F62
	add r2, r6, r0
	add r2, r4, r2
	ldrb r1, [r2]
	ldr r3, _080E2E10  @ =gUnknown_08176E98
	ldrb r0, [r5]
	sub r0, r0, #2
	add r0, r0, r3
	ldrb r0, [r0]
	add r1, r1, r0
	strb r1, [r2]
	ldr r0, _080E2E14  @ =0x00000F72
	add r2, r6, r0
	add r2, r4, r2
	lsr r1, r1, #8
	ldrb r0, [r2]
	add r1, r1, r0
	mov r0, #1
	and r1, r1, r0
	strb r1, [r2]
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E2DF8
	add r0, r4, #0
	bl sub_080C6F48
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C4F98
	ldr r1, _080E2E18  @ =0x00000996
	add r0, r6, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080E2DE8
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r2, _080E2E1C  @ =0x00001082
	add r1, r6, r2
	add r1, r4, r1
	strb r0, [r1]
_080E2DE8:
	ldr r0, _080E2E20  @ =gUnknown_08176E9C
	ldrb r1, [r5]
	lsl r1, r1, #2
	add r1, r1, r0
	ldr r1, [r1]
	add r0, r7, #0
	bl _call_via_r1
_080E2DF8:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E2E00:
	.4byte gRam
_080E2E04:
	.4byte 0x00000F52
_080E2E08:
	.4byte 0x000015ED
_080E2E0C:
	.4byte 0x00000F62
_080E2E10:
	.4byte gUnknown_08176E98
_080E2E14:
	.4byte 0x00000F72
_080E2E18:
	.4byte 0x00000996
_080E2E1C:
	.4byte 0x00001082
_080E2E20:
	.4byte gUnknown_08176E9C
	THUMB_FUNC_END sub_080E2D4C

	THUMB_FUNC_START sub_080E2E24
sub_080E2E24: @ 0x080E2E24
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r3, #0
	ldr r2, _080E2E88  @ =gRam
	ldr r1, _080E2E8C  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080E2EB2
	ldr r5, _080E2E90  @ =0x00000FB2
	add r1, r2, r5
	add r1, r4, r1
	add r5, r5, #208
	add r0, r2, r5
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E2E94  @ =0x0000097C
	add r0, r2, r1
	ldrb r0, [r0]
	add r0, r0, #64
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #103
	bhi _080E2EA4
	ldr r5, _080E2E98  @ =0x0000097D
	add r0, r2, r5
	ldrb r0, [r0]
	add r0, r0, #48
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #95
	bhi _080E2EA4
	ldr r0, _080E2E9C  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E2EA0  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #24
	strb r1, [r0]
	b _080E2EAE
_080E2E88:
	.4byte gRam
_080E2E8C:
	.4byte 0x00000996
_080E2E90:
	.4byte 0x00000FB2
_080E2E94:
	.4byte 0x0000097C
_080E2E98:
	.4byte 0x0000097D
_080E2E9C:
	.4byte 0x00000F52
_080E2EA0:
	.4byte 0x00000FC2
_080E2EA4:
	add r0, r4, #0
	mov r1, #8
	bl sub_080C35FC
	mov r3, #1
_080E2EAE:
	cmp r3, #0
	beq _080E2EB8
_080E2EB2:
	add r0, r4, #0
	bl sub_080E3440
_080E2EB8:
	pop {r4,r5}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E2E24

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E2EC0
sub_080E2EC0: @ 0x080E2EC0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r4, _080E2F20  @ =gRam
	ldr r1, _080E2F24  @ =0x00000FC2
	add r0, r4, r1
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E2F12
	ldr r2, _080E2F28  @ =gUnknown_08176EAC
	ldr r5, _080E2F2C  @ =0x00000F72
	add r0, r4, r5
	add r0, r3, r0
	ldrb r1, [r0]
	lsl r1, r1, #1
	sub r5, r5, #16
	add r0, r4, r5
	add r0, r3, r0
	ldrb r0, [r0]
	lsr r0, r0, #7
	orr r1, r1, r0
	add r1, r1, r2
	ldr r2, _080E2F30  @ =0x00001082
	add r0, r4, r2
	add r0, r3, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bne _080E2F12
	sub r5, r5, #16
	add r1, r4, r5
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E2F34  @ =0x00000FE2
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #31
	strb r1, [r0]
_080E2F12:
	add r0, r3, #0
	bl sub_080E2F38
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E2F20:
	.4byte gRam
_080E2F24:
	.4byte 0x00000FC2
_080E2F28:
	.4byte gUnknown_08176EAC
_080E2F2C:
	.4byte 0x00000F72
_080E2F30:
	.4byte 0x00001082
_080E2F34:
	.4byte 0x00000FE2
	THUMB_FUNC_END sub_080E2EC0

	THUMB_FUNC_START sub_080E2F38
sub_080E2F38: @ 0x080E2F38
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r2, _080E2F90  @ =gRam
	ldr r1, _080E2F94  @ =0x00001052
	add r0, r2, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r1, r1, #2
	strb r1, [r0]
	ldr r6, _080E2F98  @ =0x00000F92
	add r3, r2, r6
	add r3, r5, r3
	ldr r4, _080E2F9C  @ =gUnknown_08176E78
	lsl r1, r1, #24
	lsr r1, r1, #26
	mov r0, #7
	and r1, r1, r0
	add r6, r6, #32
	add r0, r2, r6
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #3
	orr r1, r1, r0
	add r1, r1, r4
	ldrb r0, [r1]
	strb r0, [r3]
	ldr r0, _080E2FA0  @ =0x00000996
	add r2, r2, r0
	ldrb r1, [r2]
	add r0, r5, #0
	eor r0, r0, r1
	mov r1, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080E2F88
	add r0, r5, #0
	mov r1, #82
	bl sub_080CF140
_080E2F88:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E2F90:
	.4byte gRam
_080E2F94:
	.4byte 0x00001052
_080E2F98:
	.4byte 0x00000F92
_080E2F9C:
	.4byte gUnknown_08176E78
_080E2FA0:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080E2F38

	THUMB_FUNC_START sub_080E2FA4
sub_080E2FA4: @ 0x080E2FA4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080E2614
	ldr r6, _080E2FD8  @ =gRam
	ldr r1, _080E2FDC  @ =0x00000FE2
	add r0, r6, r1
	add r2, r4, r0
	ldrb r1, [r2]
	cmp r1, #0
	bne _080E2FC8
	ldr r3, _080E2FE0  @ =0x00000F52
	add r0, r6, r3
	add r0, r4, r0
	strb r1, [r0]
_080E2FC8:
	ldrb r0, [r2]
	cmp r0, #15
	bls _080E2FE4
	add r0, r4, #0
	bl sub_080E2F38
	b _080E3012
	.byte 0x00
	.byte 0x00
_080E2FD8:
	.4byte gRam
_080E2FDC:
	.4byte 0x00000FE2
_080E2FE0:
	.4byte 0x00000F52
_080E2FE4:
	ldr r4, _080E3018  @ =0x00001052
	add r0, r6, r4
	add r0, r5, r0
	ldrb r1, [r0]
	add r1, r1, #2
	strb r1, [r0]
	ldr r0, _080E301C  @ =0x00000F92
	add r2, r6, r0
	add r2, r5, r2
	ldr r3, _080E3020  @ =gUnknown_08176E78
	lsl r1, r1, #24
	lsr r1, r1, #26
	mov r0, #7
	and r1, r1, r0
	sub r4, r4, #160
	add r0, r6, r4
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #3
	orr r1, r1, r0
	add r1, r1, r3
	ldrb r0, [r1]
	strb r0, [r2]
_080E3012:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E3018:
	.4byte 0x00001052
_080E301C:
	.4byte 0x00000F92
_080E3020:
	.4byte gUnknown_08176E78
	THUMB_FUNC_END sub_080E2FA4

	THUMB_FUNC_START sub_080E3024
sub_080E3024: @ 0x080E3024
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	ldr r4, _080E3100  @ =gRam
	ldr r3, _080E3104  @ =0x00000F92
	add r2, r4, r3
	add r0, r0, r2
	ldrb r2, [r0]
	lsl r0, r2, #1
	add r0, r0, r2
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r10, r0
	ldr r0, _080E3108  @ =gUnknown_08176ED0
	add r0, r2, r0
	lsr r1, r1, #24
	ldrb r0, [r0]
	add r1, r1, r0
	lsr r7, r1, #2
	ldr r0, _080E310C  @ =gUnknown_08176EB8
	add r2, r2, r0
	ldrb r5, [r2]
	mov r8, r5
	mov r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	blt _080E30EE
	mov r9, r4
_080E3068:
	mov r6, r10
	add r6, r6, r8
	lsl r6, r6, #24
	lsr r6, r6, #24
	ldr r0, _080E3110  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r7
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r9
	ldr r1, _080E3114  @ =gUnknown_08176EE8
	lsl r3, r6, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r4, _080E3118  @ =0x00000964
	add r4, r4, r9
	ldr r2, _080E311C  @ =gUnknown_08176F78
	add r3, r3, r2
	ldrh r2, [r3]
	ldrh r4, [r4]
	add r2, r2, r4
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E3120  @ =gUnknown_08177008
	add r3, r6, r3
	ldrb r3, [r3]
	ldr r4, _080E3124  @ =gUnknown_08177050
	add r4, r6, r4
	ldrb r4, [r4]
	ldr r5, _080E3128  @ =gUnknown_03002B99
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080E312C  @ =gUnknown_08177098
	add r6, r6, r4
	ldrb r4, [r6]
	str r4, [sp]
	bl sub_080C6368
	mov r1, r8
	lsl r0, r1, #24
	asr r1, r0, #24
	cmp r1, #2
	bne _080E30DC
	add r0, r7, #1
	lsl r0, r0, #24
	lsr r7, r0, #24
_080E30DC:
	sub r1, r1, #1
	lsl r1, r1, #24
	add r0, r7, #1
	lsl r0, r0, #24
	lsr r7, r0, #24
	lsr r3, r1, #24
	mov r8, r3
	cmp r1, #0
	bge _080E3068
_080E30EE:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E3100:
	.4byte gRam
_080E3104:
	.4byte 0x00000F92
_080E3108:
	.4byte gUnknown_08176ED0
_080E310C:
	.4byte gUnknown_08176EB8
_080E3110:
	.4byte gUnknown_03003E74
_080E3114:
	.4byte gUnknown_08176EE8
_080E3118:
	.4byte 0x00000964
_080E311C:
	.4byte gUnknown_08176F78
_080E3120:
	.4byte gUnknown_08177008
_080E3124:
	.4byte gUnknown_08177050
_080E3128:
	.4byte gUnknown_03002B99
_080E312C:
	.4byte gUnknown_08177098
	THUMB_FUNC_END sub_080E3024

	THUMB_FUNC_START sub_080E3130
sub_080E3130: @ 0x080E3130
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #24
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #4]
	ldr r2, _080E31E0  @ =gRam
	mov r1, #150
	lsl r1, r1, #4
	add r0, r2, r1
	ldrb r1, [r0]
	ldr r3, _080E31E4  @ =0x000015E8
	add r0, r2, r3
	strb r1, [r0]
	ldr r4, _080E31E8  @ =0x00000964
	add r0, r2, r4
	ldrb r1, [r0]
	ldr r7, _080E31EC  @ =0x000015E9
	add r0, r2, r7
	strb r1, [r0]
	ldr r1, _080E31F0  @ =0x00000F62
	add r0, r2, r1
	ldr r3, [sp, #4]
	add r0, r3, r0
	ldrb r3, [r0]
	ldr r4, _080E31F4  @ =0x00000F72
	add r0, r2, r4
	ldr r7, [sp, #4]
	add r0, r7, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r3, r3, r0
	mov r7, #0
	sub r1, r1, #16
	add r0, r2, r1
	ldr r4, [sp, #4]
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #1
	bls _080E3194
	ldr r0, _080E31F8  @ =gUnknown_081770E0
	ldr r7, _080E31FC  @ =0x00000FE2
	add r1, r2, r7
	add r1, r4, r1
	ldrb r1, [r1]
	add r1, r1, r0
	ldrb r7, [r1]
_080E3194:
	ldr r1, _080E3200  @ =gUnknown_08177100
	ldr r4, _080E3204  @ =0x00000FB2
	add r0, r2, r4
	ldr r2, [sp, #4]
	add r0, r2, r0
	ldrb r0, [r0]
	add r1, r0, r1
	ldrb r1, [r1]
	str r1, [sp, #8]
	ldr r1, _080E3208  @ =gUnknown_08177104
	add r0, r0, r1
	ldrb r0, [r0]
	str r0, [sp, #12]
	add r5, r3, #0
	add r5, r5, #128
	ldr r4, _080E320C  @ =0x000001FF
	add r0, r4, #0
	and r5, r5, r0
	ldr r1, _080E3210  @ =gUnknown_08173F38
	mov r6, #255
	add r0, r3, #0
	and r0, r0, r6
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r2, [r0]
	add r0, r5, #0
	and r0, r0, r6
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r4, [r0]
	mov r0, #255
	lsl r0, r0, #8
	and r0, r0, r2
	cmp r0, #0
	beq _080E3214
	str r7, [sp, #16]
	b _080E322C
	.byte 0x00
	.byte 0x00
_080E31E0:
	.4byte gRam
_080E31E4:
	.4byte 0x000015E8
_080E31E8:
	.4byte 0x00000964
_080E31EC:
	.4byte 0x000015E9
_080E31F0:
	.4byte 0x00000F62
_080E31F4:
	.4byte 0x00000F72
_080E31F8:
	.4byte gUnknown_081770E0
_080E31FC:
	.4byte 0x00000FE2
_080E3200:
	.4byte gUnknown_08177100
_080E3204:
	.4byte 0x00000FB2
_080E3208:
	.4byte gUnknown_08177104
_080E320C:
	.4byte 0x000001FF
_080E3210:
	.4byte gUnknown_08173F38
_080E3214:
	and r2, r2, r6
	add r0, r2, #0
	mul r0, r7, r0
	lsl r0, r0, #16
	lsr r1, r0, #24
	lsr r0, r0, #23
	mov r2, #1
	and r0, r0, r2
	add r1, r1, r0
	lsl r1, r1, #24
	lsr r1, r1, #24
	str r1, [sp, #16]
_080E322C:
	ldr r0, [sp, #16]
	mov r10, r0
	mov r0, #128
	lsl r0, r0, #1
	and r3, r3, r0
	cmp r3, #0
	beq _080E3244
	mov r1, r10
	neg r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r10, r0
_080E3244:
	mov r0, #255
	lsl r0, r0, #8
	and r0, r0, r4
	cmp r0, #0
	beq _080E3252
	mov r9, r7
	b _080E326C
_080E3252:
	mov r0, #255
	and r4, r4, r0
	add r0, r4, #0
	mul r0, r7, r0
	lsl r0, r0, #16
	lsr r1, r0, #24
	lsr r0, r0, #23
	mov r2, #1
	and r0, r0, r2
	add r1, r1, r0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r9, r1
_080E326C:
	mov r7, r9
	mov r0, #128
	lsl r0, r0, #1
	and r5, r5, r0
	cmp r5, #0
	beq _080E3280
	mov r2, r9
	neg r0, r2
	lsl r0, r0, #24
	lsr r7, r0, #24
_080E3280:
	mov r0, r10
	add r0, r0, #252
	ldr r3, [sp, #8]
	add r0, r3, r0
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r5, _080E3388  @ =gRam
	ldr r4, _080E338C  @ =0x000015ED
	add r0, r5, r4
	strb r1, [r0]
	add r0, r7, #0
	add r0, r0, #252
	ldr r2, [sp, #12]
	add r0, r2, r0
	lsl r0, r0, #24
	lsr r3, r0, #24
	sub r4, r4, #1
	add r0, r5, r4
	strb r3, [r0]
	ldr r0, _080E3390  @ =gUnknown_03003E74
	ldrh r0, [r0]
	sub r4, r4, #4
	add r2, r5, r4
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080E3394  @ =0x000015E9
	add r6, r5, r2
	lsl r2, r3, #24
	asr r2, r2, #24
	ldrb r3, [r6]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E3398  @ =0x00002D4A
	mov r4, #2
	str r4, [sp]
	bl sub_080C6004
	mov r2, #3
	mov r4, #1
	mov r8, r4
	mov r0, #128
	and r7, r7, r0
	lsl r0, r7, #24
	lsr r0, r0, #24
	str r0, [sp, #20]
_080E32E4:
	ldr r1, _080E339C  @ =gUnknown_08177108
	lsl r0, r2, #24
	asr r4, r0, #24
	add r1, r4, r1
	ldrb r2, [r1]
	ldr r1, [sp, #16]
	add r0, r1, #0
	mul r0, r2, r0
	asr r0, r0, #8
	lsl r0, r0, #24
	lsr r1, r0, #24
	mov r0, r10
	mov r3, #128
	and r0, r0, r3
	cmp r0, #0
	beq _080E330A
	lsl r0, r1, #24
	neg r0, r0
	lsr r1, r0, #24
_080E330A:
	mov r0, r9
	mul r0, r2, r0
	asr r0, r0, #8
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r7, [sp, #20]
	cmp r7, #0
	beq _080E3320
	lsl r0, r3, #24
	neg r0, r0
	lsr r3, r0, #24
_080E3320:
	ldr r0, _080E3390  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r8
	lsl r0, r0, #16
	lsr r0, r0, #16
	lsl r1, r1, #24
	ldr r7, _080E33A0  @ =0x000015E8
	add r2, r5, r7
	asr r1, r1, #24
	ldrb r2, [r2]
	add r1, r1, r2
	ldr r2, [sp, #8]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	lsl r2, r3, #24
	asr r2, r2, #24
	ldrb r3, [r6]
	add r2, r2, r3
	ldr r7, [sp, #12]
	add r2, r2, r7
	lsl r2, r2, #16
	lsr r2, r2, #16
	mov r3, #0
	str r3, [sp]
	ldr r3, _080E33A4  @ =0x00002D6F
	bl sub_080C6004
	sub r1, r4, #1
	lsl r1, r1, #24
	mov r0, r8
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	lsr r2, r1, #24
	cmp r1, #0
	bge _080E32E4
	ldr r0, [sp, #4]
	mov r1, #255
	mov r2, #4
	bl sub_080C6350
	add sp, sp, #24
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E3388:
	.4byte gRam
_080E338C:
	.4byte 0x000015ED
_080E3390:
	.4byte gUnknown_03003E74
_080E3394:
	.4byte 0x000015E9
_080E3398:
	.4byte 0x00002D4A
_080E339C:
	.4byte gUnknown_08177108
_080E33A0:
	.4byte 0x000015E8
_080E33A4:
	.4byte 0x00002D6F
	THUMB_FUNC_END sub_080E3130

	THUMB_FUNC_START sub_080E33A8
sub_080E33A8: @ 0x080E33A8
	bx lr
	THUMB_FUNC_END sub_080E33A8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E33AC
sub_080E33AC: @ 0x080E33AC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E2D4C
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E33AC

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E33BC
sub_080E33BC: @ 0x080E33BC
	push {r4-r7,lr}
	sub sp, sp, #4
	add r5, r1, #0
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r5, r5, #24
	ldr r1, _080E3424  @ =gUnknown_03003E74
	lsr r5, r5, #26
	ldrh r1, [r1]
	add r5, r5, r1
	lsl r5, r5, #16
	lsr r5, r5, #16
	ldr r6, _080E3428  @ =gRam
	mov r2, #150
	lsl r2, r2, #4
	add r1, r6, r2
	ldrh r1, [r1]
	ldr r3, _080E342C  @ =0x00000964
	add r2, r6, r3
	ldrh r2, [r2]
	sub r2, r2, #9
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r4, _080E3430  @ =gUnknown_08176EB0
	ldr r7, _080E3434  @ =0x00001082
	add r3, r6, r7
	add r0, r0, r3
	ldrb r0, [r0]
	add r4, r0, r4
	ldrb r3, [r4]
	ldr r4, _080E3438  @ =gUnknown_08176EB4
	add r0, r0, r4
	ldrb r0, [r0]
	ldr r4, _080E343C  @ =0x00000969
	add r6, r6, r4
	mov r4, #0
	ldrsb r4, [r6, r4]
	orr r0, r0, r4
	lsl r0, r0, #8
	add r3, r3, r0
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r0, #2
	str r0, [sp]
	add r0, r5, #0
	bl sub_080C6368
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E3424:
	.4byte gUnknown_03003E74
_080E3428:
	.4byte gRam
_080E342C:
	.4byte 0x00000964
_080E3430:
	.4byte gUnknown_08176EB0
_080E3434:
	.4byte 0x00001082
_080E3438:
	.4byte gUnknown_08176EB4
_080E343C:
	.4byte 0x00000969
	THUMB_FUNC_END sub_080E33BC

	THUMB_FUNC_START sub_080E3440
sub_080E3440: @ 0x080E3440
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080E347C  @ =gRam
	ldr r1, _080E3480  @ =0x00001052
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	ldr r2, _080E3484  @ =0x00000F92
	add r4, r3, r2
	add r4, r0, r4
	ldr r5, _080E3488  @ =gUnknown_08176E78
	lsl r1, r1, #24
	lsr r1, r1, #26
	mov r2, #7
	and r1, r1, r2
	ldr r2, _080E348C  @ =0x00000FB2
	add r3, r3, r2
	add r0, r0, r3
	ldrb r0, [r0]
	lsl r0, r0, #3
	orr r1, r1, r0
	add r1, r1, r5
	ldrb r0, [r1]
	strb r0, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
_080E347C:
	.4byte gRam
_080E3480:
	.4byte 0x00001052
_080E3484:
	.4byte 0x00000F92
_080E3488:
	.4byte gUnknown_08176E78
_080E348C:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E3440

	THUMB_FUNC_START sub_080E3490
sub_080E3490: @ 0x080E3490
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E2614
	ldr r1, _080E34C0  @ =gRam
	ldr r2, _080E34C4  @ =0x00000FC2
	add r0, r1, r2
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080E34BA
	mov r0, #48
	strb r0, [r2]
	ldr r0, _080E34C8  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080E34BA:
	pop {r4}
	pop {r0}
	bx r0
_080E34C0:
	.4byte gRam
_080E34C4:
	.4byte 0x00000FC2
_080E34C8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E3490

	THUMB_FUNC_START sub_080E34CC
sub_080E34CC: @ 0x080E34CC
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r5, sp
	add r5, r5, #1
	mov r0, sp
	add r1, r5, #0
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E3510
	add r0, r4, #0
	bl sub_080E3518
	add r0, r4, #0
	bl sub_080E3528
	add r0, r4, #0
	bl sub_080E3130
	mov r0, sp
	add r1, r5, #0
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E3510
	add r0, r4, #0
	bl sub_080E2684
_080E3510:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E34CC

	THUMB_FUNC_START sub_080E3518
sub_080E3518: @ 0x080E3518
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #24
	bl sub_080E33BC
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E3518

	THUMB_FUNC_START sub_080E3528
sub_080E3528: @ 0x080E3528
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #20
	bl sub_080E3024
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E3528

	THUMB_FUNC_START sub_080E3538
sub_080E3538: @ 0x080E3538
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r6, #1
	ldr r5, _080E35DC  @ =gRam
	ldr r3, _080E35E0  @ =0x00000FB2
	add r0, r5, r3
	add r0, r4, r0
	strb r2, [r0]
	ldr r2, _080E35E4  @ =0x00000F92
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E35D6
	add r0, r4, #0
	bl sub_080C5044
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E3576
	ldr r3, _080E35E8  @ =0x00001626
	add r0, r5, r3
	ldrb r1, [r0]
	neg r0, r1
	orr r0, r0, r1
	lsr r6, r0, #31
_080E3576:
	cmp r6, #0
	beq _080E3594
	ldr r1, _080E35EC  @ =0x00000F52
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #2
	bhi _080E3594
	mov r0, #3
	strb r0, [r1]
	ldr r2, _080E35F0  @ =0x00000FC2
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
_080E3594:
	ldr r5, _080E35DC  @ =gRam
	ldr r3, _080E35F4  @ =0x00001072
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #3
	bls _080E35A8
	add r0, r4, #0
	bl sub_080E3E3C
_080E35A8:
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E35D6
	add r0, r4, #0
	bl sub_080E3D00
	add r0, r4, #0
	bl sub_080C6F48
	ldr r1, _080E35F8  @ =gUnknown_0817714C
	ldr r2, _080E35EC  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080E35D6:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E35DC:
	.4byte gRam
_080E35E0:
	.4byte 0x00000FB2
_080E35E4:
	.4byte 0x00000F92
_080E35E8:
	.4byte 0x00001626
_080E35EC:
	.4byte 0x00000F52
_080E35F0:
	.4byte 0x00000FC2
_080E35F4:
	.4byte 0x00001072
_080E35F8:
	.4byte gUnknown_0817714C
	THUMB_FUNC_END sub_080E3538

	THUMB_FUNC_START sub_080E35FC
sub_080E35FC: @ 0x080E35FC
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r0, r6, #0
	bl sub_080E2614
	ldr r7, _080E3660  @ =gRam
	ldr r1, _080E3664  @ =0x00000FC2
	add r0, r7, r1
	add r4, r6, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E3658
	ldr r0, _080E3668  @ =0x00000F52
	add r1, r7, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	bl GetRandomInt
	mov r1, #127
	and r1, r1, r0
	add r1, r1, #80
	strb r1, [r4]
	ldr r1, _080E366C  @ =0x00000FB2
	add r4, r7, r1
	add r4, r6, r4
	ldrb r5, [r4]
	bl GetRandomInt
	mov r1, #3
	and r1, r1, r0
	strb r1, [r4]
	cmp r5, r1
	beq _080E3658
	eor r5, r5, r1
	mov r0, #2
	and r5, r5, r0
	cmp r5, #0
	bne _080E3658
	ldr r1, _080E3670  @ =0x00000FD2
	add r0, r7, r1
	add r0, r6, r0
	mov r1, #12
	strb r1, [r0]
_080E3658:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E3660:
	.4byte gRam
_080E3664:
	.4byte 0x00000FC2
_080E3668:
	.4byte 0x00000F52
_080E366C:
	.4byte 0x00000FB2
_080E3670:
	.4byte 0x00000FD2
	THUMB_FUNC_END sub_080E35FC

	THUMB_FUNC_START sub_080E3674
sub_080E3674: @ 0x080E3674
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E36EC  @ =gRam
	ldr r1, _080E36F0  @ =0x00000FC2
	add r0, r5, r1
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	beq _080E3710
	add r0, r4, #0
	bl sub_080E263C
	ldr r1, _080E36F4  @ =0x00001042
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #15
	and r0, r0, r1
	cmp r0, #0
	beq _080E36B2
	ldr r1, _080E36F8  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r2, #1
	eor r1, r1, r2
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080E26C8
_080E36B2:
	ldr r0, _080E36FC  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080E3700  @ =gUnknown_08176910
	add r0, r0, #144
	add r3, r5, r0
	add r3, r4, r3
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E3704  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080E3708  @ =gUnknown_08176914
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E370C  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r3]
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080E3728
	b _080E371E
	.byte 0x00
	.byte 0x00
_080E36EC:
	.4byte gRam
_080E36F0:
	.4byte 0x00000FC2
_080E36F4:
	.4byte 0x00001042
_080E36F8:
	.4byte 0x00000FB2
_080E36FC:
	.4byte 0x00000F22
_080E3700:
	.4byte gUnknown_08176910
_080E3704:
	.4byte 0x00000F12
_080E3708:
	.4byte gUnknown_08176914
_080E370C:
	.4byte 0x00001082
_080E3710:
	ldr r1, _080E3724  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	mov r0, #160
	strb r0, [r2]
_080E371E:
	pop {r4,r5}
	pop {r0}
	bx r0
_080E3724:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E3674

	THUMB_FUNC_START sub_080E3728
sub_080E3728: @ 0x080E3728
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r2, _080E3798  @ =gRam
	ldr r1, _080E379C  @ =0x00001052
	add r0, r2, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r3, #15
	and r3, r3, r1
	add r6, r2, #0
	cmp r3, #0
	bne _080E375C
	ldr r2, _080E37A0  @ =0x00000F62
	add r0, r6, r2
	add r1, r5, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #2
	bne _080E375C
	strb r3, [r1]
_080E375C:
	add r0, r6, #0
	ldr r2, _080E37A4  @ =0x00000FB2
	add r1, r0, r2
	add r1, r5, r1
	ldrb r4, [r1]
	ldr r1, _080E37A8  @ =0x00000FF2
	add r0, r0, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #72
	bne _080E3778
	add r0, r4, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
_080E3778:
	ldr r0, _080E37AC  @ =0x00000F92
	add r2, r6, r0
	add r2, r5, r2
	ldr r3, _080E37B0  @ =gUnknown_08176918
	sub r0, r0, #48
	add r1, r6, r0
	add r1, r5, r1
	lsl r0, r4, #2
	ldrb r1, [r1]
	add r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	pop {r4-r6}
	pop {r0}
	bx r0
_080E3798:
	.4byte gRam
_080E379C:
	.4byte 0x00001052
_080E37A0:
	.4byte 0x00000F62
_080E37A4:
	.4byte 0x00000FB2
_080E37A8:
	.4byte 0x00000FF2
_080E37AC:
	.4byte 0x00000F92
_080E37B0:
	.4byte gUnknown_08176918
	THUMB_FUNC_END sub_080E3728

	THUMB_FUNC_START sub_080E37B4
sub_080E37B4: @ 0x080E37B4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E2614
	add r0, r4, #0
	bl sub_080E2094
	ldr r5, _080E3800  @ =gRam
	ldr r1, _080E3804  @ =0x00000FC2
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	beq _080E3810
	cmp r0, #0
	blt _080E381C
	ldr r6, _080E3808  @ =0x00001082
	add r2, r5, r6
	add r2, r4, r2
	ldr r3, _080E380C  @ =gUnknown_08176938
	lsr r1, r0, #27
	mov r0, #7
	and r1, r1, r0
	sub r6, r6, #208
	add r0, r5, r6
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #3
	orr r1, r1, r0
	add r1, r1, r3
	ldrb r0, [r1]
	strb r0, [r2]
	b _080E381C
	.byte 0x00
	.byte 0x00
_080E3800:
	.4byte gRam
_080E3804:
	.4byte 0x00000FC2
_080E3808:
	.4byte 0x00001082
_080E380C:
	.4byte gUnknown_08176938
_080E3810:
	mov r0, #32
	strb r0, [r1]
	ldr r1, _080E3824  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
_080E381C:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E3824:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E37B4

	THUMB_FUNC_START sub_080E3828
sub_080E3828: @ 0x080E3828
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080E3978  @ =gRam
	ldr r0, _080E397C  @ =0x00001042
	add r1, r4, r0
	add r1, r5, r1
	ldr r2, _080E3980  @ =gUnknown_08177164
	ldr r3, _080E3984  @ =0x00000FB2
	add r0, r4, r3
	add r6, r5, r0
	ldrb r0, [r6]
	add r0, r0, r2
	ldrb r1, [r1]
	ldrb r0, [r0]
	and r0, r0, r1
	cmp r0, #0
	beq _080E384E
	b _080E395A
_080E384E:
	ldr r1, _080E3988  @ =0x00000FC2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E385C
	b _080E395A
_080E385C:
	ldr r2, _080E398C  @ =0x00000996
	add r0, r4, r2
	ldrb r1, [r0]
	add r0, r5, #0
	eor r0, r0, r1
	mov r1, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080E3940
	add r0, r5, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r3, r0, #24
	strb r3, [r6]
	ldr r1, _080E3990  @ =0x00001082
	add r0, r4, r1
	add r0, r5, r0
	strb r3, [r0]
	ldr r2, _080E3994  @ =0x00000FF2
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #72
	bne _080E3894
	add r0, r3, #4
	lsl r0, r0, #24
	lsr r3, r0, #24
_080E3894:
	ldr r1, _080E3998  @ =0x000016C4
	add r0, r4, r1
	ldrb r2, [r0]
	add r1, r1, #1
	add r0, r4, r1
	mov r1, #0
	ldrsb r1, [r0, r1]
	lsl r1, r1, #8
	ldr r0, _080E399C  @ =gUnknown_08177168
	add r0, r3, r0
	orr r2, r2, r1
	ldrb r0, [r0]
	add r2, r2, r0
	ldr r0, _080E39A0  @ =gUnknown_08177170
	add r0, r3, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r1, _080E39A4  @ =0x00000968
	add r0, r4, r1
	strb r2, [r0]
	lsr r2, r2, #8
	add r1, r1, #1
	add r0, r4, r1
	strb r2, [r0]
	mov r2, #182
	lsl r2, r2, #5
	add r0, r4, r2
	ldrb r2, [r0]
	ldr r1, _080E39A8  @ =0x000016C1
	add r0, r4, r1
	mov r1, #0
	ldrsb r1, [r0, r1]
	lsl r1, r1, #8
	ldr r0, _080E39AC  @ =gUnknown_08177178
	add r0, r3, r0
	orr r2, r2, r1
	ldrb r0, [r0]
	add r2, r2, r0
	ldr r0, _080E39B0  @ =gUnknown_08177180
	add r0, r3, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r3, _080E39B4  @ =0x0000096C
	add r0, r4, r3
	strb r2, [r0]
	lsr r2, r2, #8
	ldr r1, _080E39B8  @ =0x0000096D
	add r0, r4, r1
	strb r2, [r0]
	add r0, r5, #0
	mov r1, #24
	bl sub_080C2DCC
	ldr r2, _080E39BC  @ =0x00000F12
	add r0, r4, r2
	add r0, r5, r0
	mov r3, #150
	lsl r3, r3, #4
	add r1, r4, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080E39C0  @ =0x00000F22
	add r0, r4, r1
	add r0, r5, r0
	ldr r2, _080E39C4  @ =0x00000961
	add r1, r4, r2
	ldrb r1, [r1]
	strb r1, [r0]
	add r3, r3, #28
	add r0, r4, r3
	ldrb r0, [r0]
	add r0, r0, #6
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #11
	bhi _080E3940
	ldr r1, _080E39C8  @ =0x0000097D
	add r0, r4, r1
	ldrb r0, [r0]
	add r0, r0, #6
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #11
	bls _080E395A
_080E3940:
	ldr r0, _080E3978  @ =gRam
	ldr r2, _080E39CC  @ =0x00001052
	add r0, r0, r2
	add r0, r5, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080E3728
	mov r0, #0
	cmp r0, #0
	beq _080E3972
_080E395A:
	ldr r2, _080E3978  @ =gRam
	ldr r3, _080E39D0  @ =0x00000F52
	add r1, r2, r3
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080E3988  @ =0x00000FC2
	add r2, r2, r0
	add r2, r5, r2
	mov r0, #24
	strb r0, [r2]
_080E3972:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E3978:
	.4byte gRam
_080E397C:
	.4byte 0x00001042
_080E3980:
	.4byte gUnknown_08177164
_080E3984:
	.4byte 0x00000FB2
_080E3988:
	.4byte 0x00000FC2
_080E398C:
	.4byte 0x00000996
_080E3990:
	.4byte 0x00001082
_080E3994:
	.4byte 0x00000FF2
_080E3998:
	.4byte 0x000016C4
_080E399C:
	.4byte gUnknown_08177168
_080E39A0:
	.4byte gUnknown_08177170
_080E39A4:
	.4byte 0x00000968
_080E39A8:
	.4byte 0x000016C1
_080E39AC:
	.4byte gUnknown_08177178
_080E39B0:
	.4byte gUnknown_08177180
_080E39B4:
	.4byte 0x0000096C
_080E39B8:
	.4byte 0x0000096D
_080E39BC:
	.4byte 0x00000F12
_080E39C0:
	.4byte 0x00000F22
_080E39C4:
	.4byte 0x00000961
_080E39C8:
	.4byte 0x0000097D
_080E39CC:
	.4byte 0x00001052
_080E39D0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E3828

	THUMB_FUNC_START sub_080E39D4
sub_080E39D4: @ 0x080E39D4
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080E3A60  @ =gRam
	ldr r0, _080E3A64  @ =0x00001092
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E3A68  @ =gUnknown_08177188
	ldr r3, _080E3A6C  @ =0x00000FB2
	add r0, r6, r3
	add r7, r4, r0
	ldrb r0, [r7]
	add r0, r0, r2
	ldrb r0, [r0]
	mov r2, #0
	mov r8, r2
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080E2614
	ldr r3, _080E3A70  @ =0x00000FC2
	add r0, r6, r3
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080E3A84
	ldr r1, _080E3A74  @ =0x00001052
	add r0, r6, r1
	add r1, r4, r0
	mov r2, r8
	strb r2, [r1]
	ldrb r0, [r5]
	cmp r0, #39
	bls _080E3A22
	mov r0, r8
	sub r0, r0, #1
	strb r0, [r1]
_080E3A22:
	ldrb r0, [r5]
	cmp r0, #12
	bne _080E3A2E
	add r0, r4, #0
	bl sub_080E3A94
_080E3A2E:
	ldrb r0, [r5]
	lsr r0, r0, #3
	ldrb r1, [r7]
	lsl r1, r1, #3
	orr r0, r0, r1
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080E3A78  @ =0x00000FF2
	add r0, r6, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #72
	bne _080E3A50
	add r0, r2, #0
	add r0, r0, #32
	lsl r0, r0, #24
	lsr r2, r0, #24
_080E3A50:
	ldr r1, _080E3A7C  @ =0x00000F92
	add r0, r6, r1
	add r0, r4, r0
	ldr r1, _080E3A80  @ =gUnknown_0817710C
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r0]
	b _080E3A8A
_080E3A60:
	.4byte gRam
_080E3A64:
	.4byte 0x00001092
_080E3A68:
	.4byte gUnknown_08177188
_080E3A6C:
	.4byte 0x00000FB2
_080E3A70:
	.4byte 0x00000FC2
_080E3A74:
	.4byte 0x00001052
_080E3A78:
	.4byte 0x00000FF2
_080E3A7C:
	.4byte 0x00000F92
_080E3A80:
	.4byte gUnknown_0817710C
_080E3A84:
	add r0, r4, #0
	bl sub_080E264C
_080E3A8A:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E39D4

	THUMB_FUNC_START sub_080E3A94
sub_080E3A94: @ 0x080E3A94
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r0, #27
	add r1, r4, #0
	bl sub_080CA538
	add r6, r0, #0
	cmp r6, #0
	blt _080E3B96
	add r0, r4, #0
	mov r1, #99
	bl sub_080CF140
	ldr r7, _080E3BA0  @ =gRam
	ldr r0, _080E3BA4  @ =0x00000FB2
	add r0, r0, r7
	mov r12, r0
	add r0, r4, r0
	ldrb r5, [r0]
	ldr r1, _080E3BA8  @ =0x00000FF2
	add r0, r7, r1
	add r4, r4, r0
	ldrb r0, [r4]
	cmp r0, #71
	bls _080E3AD2
	add r0, r5, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
_080E3AD2:
	mov r2, #150
	lsl r2, r2, #4
	add r1, r7, r2
	ldr r0, _080E3BAC  @ =gUnknown_0817718C
	add r0, r5, r0
	ldrb r0, [r0]
	ldrh r2, [r1]
	add r2, r2, r0
	ldr r0, _080E3BB0  @ =gUnknown_08177194
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r3, _080E3BB4  @ =0x00000964
	add r1, r7, r3
	ldr r0, _080E3BB8  @ =gUnknown_0817719C
	add r0, r5, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080E3BBC  @ =gUnknown_081771A4
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r3, _080E3BC0  @ =0x00000EE2
	add r0, r7, r3
	add r0, r6, r0
	mov r3, #0
	mov r8, r3
	strb r2, [r0]
	ldr r3, _080E3BC4  @ =0x00000F02
	add r0, r7, r3
	add r0, r6, r0
	lsr r2, r2, #8
	strb r2, [r0]
	ldr r2, _080E3BC8  @ =0x00000ED2
	add r0, r7, r2
	add r0, r6, r0
	strb r1, [r0]
	sub r3, r3, #16
	add r0, r7, r3
	add r0, r6, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080E3BCC  @ =0x00000F22
	add r1, r7, r0
	add r1, r6, r1
	ldr r0, _080E3BD0  @ =gUnknown_081771AC
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r2, r2, #64
	add r1, r7, r2
	add r1, r6, r1
	ldr r0, _080E3BD4  @ =gUnknown_081771B4
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	mov r3, r12
	add r1, r6, r3
	mov r0, #3
	and r0, r0, r5
	strb r0, [r1]
	ldr r1, _080E3BD8  @ =0x00001132
	add r2, r7, r1
	add r2, r6, r2
	ldr r1, _080E3BDC  @ =gUnknown_081771BC
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r2, _080E3BE0  @ =0x00001142
	add r0, r7, r2
	add r0, r6, r0
	mov r3, r8
	strb r3, [r0]
	mov r1, #0
	ldrb r0, [r4]
	cmp r0, #71
	bls _080E3B74
	mov r1, #1
_080E3B74:
	ldr r2, _080E3BE4  @ =0x00000F62
	add r0, r7, r2
	add r0, r6, r0
	strb r1, [r0]
	cmp r1, #0
	beq _080E3B96
	ldr r0, _080E3BE8  @ =gUnknown_0200233E
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E3B96
	ldr r3, _080E3BEC  @ =0x000011B2
	add r0, r7, r3
	add r0, r6, r0
	ldrb r2, [r0]
	mov r1, #223
	and r1, r1, r2
	strb r1, [r0]
_080E3B96:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080E3BA0:
	.4byte gRam
_080E3BA4:
	.4byte 0x00000FB2
_080E3BA8:
	.4byte 0x00000FF2
_080E3BAC:
	.4byte gUnknown_0817718C
_080E3BB0:
	.4byte gUnknown_08177194
_080E3BB4:
	.4byte 0x00000964
_080E3BB8:
	.4byte gUnknown_0817719C
_080E3BBC:
	.4byte gUnknown_081771A4
_080E3BC0:
	.4byte 0x00000EE2
_080E3BC4:
	.4byte 0x00000F02
_080E3BC8:
	.4byte 0x00000ED2
_080E3BCC:
	.4byte 0x00000F22
_080E3BD0:
	.4byte gUnknown_081771AC
_080E3BD4:
	.4byte gUnknown_081771B4
_080E3BD8:
	.4byte 0x00001132
_080E3BDC:
	.4byte gUnknown_081771BC
_080E3BE0:
	.4byte 0x00001142
_080E3BE4:
	.4byte 0x00000F62
_080E3BE8:
	.4byte gUnknown_0200233E
_080E3BEC:
	.4byte 0x000011B2
	THUMB_FUNC_END sub_080E3A94

	THUMB_FUNC_START sub_080E3BF0
sub_080E3BF0: @ 0x080E3BF0
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r3, r0, #24
	lsl r1, r1, #24
	lsr r7, r1, #26
	ldr r2, _080E3CB4  @ =gRam
	ldr r1, _080E3CB8  @ =0x00000F92
	add r0, r2, r1
	add r0, r3, r0
	ldrb r1, [r0]
	add r0, r1, #0
	sub r0, r0, #14
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r1, #13
	bhi _080E3C26
	ldr r0, _080E3CBC  @ =gUnknown_081771CC
	ldr r4, _080E3CC0  @ =0x00000FB2
	add r1, r2, r4
	add r1, r3, r1
	ldrb r1, [r1]
	add r1, r1, r0
	ldrb r0, [r1]
_080E3C26:
	lsl r1, r0, #2
	ldr r3, _080E3CC4  @ =0x0000096C
	add r0, r2, r3
	strb r1, [r0]
	mov r1, #3
	mov r8, r2
	ldr r4, _080E3CC8  @ =0x00000964
	add r4, r4, r8
	mov r9, r4
_080E3C38:
	ldr r0, _080E3CC4  @ =0x0000096C
	add r0, r0, r8
	ldrb r5, [r0]
	lsl r6, r1, #24
	asr r6, r6, #24
	add r5, r6, r5
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r0, _080E3CCC  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r7
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r8
	ldr r1, _080E3CD0  @ =gUnknown_081771D0
	lsl r3, r5, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080E3CD4  @ =gUnknown_08177230
	add r3, r3, r2
	ldrh r2, [r3]
	mov r3, r9
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E3CD8  @ =gUnknown_08177290
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080E3CDC  @ =gUnknown_081772C0
	add r5, r5, r4
	ldrb r5, [r5]
	mov r4, #32
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r4, #0
	str r4, [sp]
	bl sub_080C6368
	sub r6, r6, #1
	lsl r6, r6, #24
	add r0, r7, #1
	lsl r0, r0, #24
	lsr r7, r0, #24
	lsr r1, r6, #24
	cmp r6, #0
	bge _080E3C38
	add sp, sp, #4
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E3CB4:
	.4byte gRam
_080E3CB8:
	.4byte 0x00000F92
_080E3CBC:
	.4byte gUnknown_081771CC
_080E3CC0:
	.4byte 0x00000FB2
_080E3CC4:
	.4byte 0x0000096C
_080E3CC8:
	.4byte 0x00000964
_080E3CCC:
	.4byte gUnknown_03003E74
_080E3CD0:
	.4byte gUnknown_081771D0
_080E3CD4:
	.4byte gUnknown_08177230
_080E3CD8:
	.4byte gUnknown_08177290
_080E3CDC:
	.4byte gUnknown_081772C0
	THUMB_FUNC_END sub_080E3BF0

	THUMB_FUNC_START sub_080E3CE0
sub_080E3CE0: @ 0x080E3CE0
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E25A8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E3CE0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E3CF0
sub_080E3CF0: @ 0x080E3CF0
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E3D98
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E3CF0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E3D00
sub_080E3D00: @ 0x080E3D00
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r0, _080E3D20  @ =gRam
	ldr r2, _080E3D24  @ =0x00001042
	add r0, r0, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E3D1A
	add r0, r1, #0
	bl Sprite3_Move
_080E3D1A:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E3D20:
	.4byte gRam
_080E3D24:
	.4byte 0x00001042
	THUMB_FUNC_END sub_080E3D00

	THUMB_FUNC_START sub_080E3D28
sub_080E3D28: @ 0x080E3D28
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r5, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E3D7A
	ldr r1, _080E3D84  @ =gUnknown_081771C4
	ldr r4, _080E3D88  @ =gRam
	ldr r0, _080E3D8C  @ =0x00000FB2
	add r4, r4, r0
	add r4, r5, r4
	ldrb r0, [r4]
	add r0, r0, r1
	ldrb r1, [r0]
	add r0, r5, #0
	bl sub_080E2720
	ldr r1, _080E3D90  @ =gUnknown_081771C8
	ldrb r0, [r4]
	add r0, r0, r1
	ldrb r1, [r0]
	add r0, r5, #0
	bl sub_080E22D0
	ldr r1, _080E3D94  @ =gUnknown_081771C0
	ldrb r0, [r4]
	add r0, r0, r1
	ldrb r1, [r0]
	add r0, r5, #0
	bl sub_080E3BF0
	add r0, r5, #0
	bl sub_080E2684
_080E3D7A:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E3D84:
	.4byte gUnknown_081771C4
_080E3D88:
	.4byte gRam
_080E3D8C:
	.4byte 0x00000FB2
_080E3D90:
	.4byte gUnknown_081771C8
_080E3D94:
	.4byte gUnknown_081771C0
	THUMB_FUNC_END sub_080E3D28

	THUMB_FUNC_START sub_080E3D98
sub_080E3D98: @ 0x080E3D98
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	ldr r0, _080E3DE8  @ =gRam
	ldr r2, _080E3DEC  @ =0x00000F92
	add r1, r0, r2
	add r3, r4, r1
	ldrb r6, [r3]
	ldr r7, _080E3DF0  @ =0x00000FB2
	add r1, r0, r7
	add r2, r4, r1
	ldrb r1, [r2]
	add r5, r1, #0
	add r7, r7, #32
	add r0, r0, r7
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E3DD0
	ldr r0, _080E3DF4  @ =gUnknown_08176908
	add r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, _080E3DF8  @ =gUnknown_0817690C
	add r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r3]
_080E3DD0:
	add r0, r4, #0
	bl sub_080E3D28
	add r0, r4, #0
	add r1, r6, #0
	add r2, r5, #0
	bl sub_080E3538
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E3DE8:
	.4byte gRam
_080E3DEC:
	.4byte 0x00000F92
_080E3DF0:
	.4byte 0x00000FB2
_080E3DF4:
	.4byte gUnknown_08176908
_080E3DF8:
	.4byte gUnknown_0817690C
	THUMB_FUNC_END sub_080E3D98

	THUMB_FUNC_START sub_080E3DFC
sub_080E3DFC: @ 0x080E3DFC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E2614
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r2, _080E3E30  @ =gRam
	ldr r3, _080E3E34  @ =0x00001082
	add r1, r2, r3
	add r1, r4, r1
	strb r0, [r1]
	ldr r0, _080E3E38  @ =0x00000FC2
	add r2, r2, r0
	add r2, r4, r2
	ldrb r0, [r2]
	cmp r0, #0
	bne _080E3E2A
	add r0, r4, #0
	bl sub_080E3E3C
_080E3E2A:
	pop {r4}
	pop {r0}
	bx r0
_080E3E30:
	.4byte gRam
_080E3E34:
	.4byte 0x00001082
_080E3E38:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E3DFC

	THUMB_FUNC_START sub_080E3E3C
sub_080E3E3C: @ 0x080E3E3C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080E3E68  @ =gRam
	ldr r2, _080E3E6C  @ =0x00000F52
	add r1, r3, r2
	add r1, r0, r1
	mov r4, #0
	mov r2, #4
	strb r2, [r1]
	ldr r2, _080E3E70  @ =0x00000FC2
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #60
	strb r2, [r1]
	ldr r1, _080E3E74  @ =0x00001052
	add r3, r3, r1
	add r0, r0, r3
	strb r4, [r0]
	pop {r4}
	pop {r0}
	bx r0
_080E3E68:
	.4byte gRam
_080E3E6C:
	.4byte 0x00000F52
_080E3E70:
	.4byte 0x00000FC2
_080E3E74:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080E3E3C

	THUMB_FUNC_START sub_080E3E78
sub_080E3E78: @ 0x080E3E78
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	ldr r6, _080E3EB4  @ =gRam
	ldr r1, _080E3EB8  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080E3EC4
	cmp r0, #32
	bne _080E3EA0
	add r0, r4, #0
	bl sub_080E3EFC
_080E3EA0:
	ldr r2, _080E3EBC  @ =0x00000F92
	add r1, r6, r2
	add r1, r4, r1
	ldr r2, _080E3EC0  @ =gUnknown_08177300
	ldrb r0, [r5]
	lsr r0, r0, #2
	add r0, r0, r2
	ldrb r0, [r0]
	b _080E3EE8
	.byte 0x00
	.byte 0x00
_080E3EB4:
	.4byte gRam
_080E3EB8:
	.4byte 0x00000FC2
_080E3EBC:
	.4byte 0x00000F92
_080E3EC0:
	.4byte gUnknown_08177300
_080E3EC4:
	ldr r0, _080E3EF4  @ =0x00000F52
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #48
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r2, _080E3EF8  @ =0x00000FB2
	add r1, r6, r2
	add r1, r4, r1
	strb r0, [r1]
	add r2, r2, #208
	add r1, r6, r2
	add r1, r4, r1
_080E3EE8:
	strb r0, [r1]
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E3EF4:
	.4byte 0x00000F52
_080E3EF8:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E3E78

	THUMB_FUNC_START sub_080E3EFC
sub_080E3EFC: @ 0x080E3EFC
	push {r4,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #236
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080E3F44
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080E3F4C  @ =gRam
	ldr r1, _080E3F50  @ =0x00000FA2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #6
	strb r1, [r0]
	ldr r1, _080E3F54  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	ldr r0, _080E3F58  @ =0x00001012
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #3
	strb r0, [r1]
	ldr r1, _080E3F5C  @ =0x00000F82
	add r2, r2, r1
	add r2, r4, r2
	mov r0, #2
	strb r0, [r2]
_080E3F44:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E3F4C:
	.4byte gRam
_080E3F50:
	.4byte 0x00000FA2
_080E3F54:
	.4byte 0x00000FC2
_080E3F58:
	.4byte 0x00001012
_080E3F5C:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080E3EFC

	THUMB_FUNC_START sub_080E3F60
sub_080E3F60: @ 0x080E3F60
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080E3FDC  @ =gRam
	ldr r1, _080E3FE0  @ =0x00001172
	add r0, r6, r1
	add r0, r4, r0
	mov r7, #0
	strb r7, [r0]
	add r0, r4, #0
	bl sub_080C5044
	ldr r1, _080E3FE4  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080E3FF8
	sub r1, r1, #96
	add r0, r6, r1
	add r1, r4, r0
	strb r7, [r1]
	ldrb r0, [r5]
	cmp r0, #39
	bhi _080E3F96
	sub r0, r7, #1
	strb r0, [r1]
_080E3F96:
	ldrb r0, [r5]
	cmp r0, #16
	bne _080E3FA2
	add r0, r4, #0
	bl sub_080E3A94
_080E3FA2:
	ldr r1, _080E3FE8  @ =0x00000FB2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #3
	ldrb r1, [r5]
	lsr r1, r1, #3
	orr r0, r0, r1
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080E3FEC  @ =0x00000FF2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #73
	bne _080E3FCA
	add r0, r2, #0
	add r0, r0, #32
	lsl r0, r0, #24
	lsr r2, r0, #24
_080E3FCA:
	ldr r1, _080E3FF0  @ =0x00000F92
	add r0, r6, r1
	add r0, r4, r0
	ldr r1, _080E3FF4  @ =gUnknown_0817710C
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r0]
	b _080E400E
	.byte 0x00
	.byte 0x00
_080E3FDC:
	.4byte gRam
_080E3FE0:
	.4byte 0x00001172
_080E3FE4:
	.4byte 0x00000FC2
_080E3FE8:
	.4byte 0x00000FB2
_080E3FEC:
	.4byte 0x00000FF2
_080E3FF0:
	.4byte 0x00000F92
_080E3FF4:
	.4byte gUnknown_0817710C
_080E3FF8:
	ldr r1, _080E4014  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #48
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080E41E8
_080E400E:
	pop {r4-r7}
	pop {r0}
	bx r0
_080E4014:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E3F60

	THUMB_FUNC_START sub_080E4018
sub_080E4018: @ 0x080E4018
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E40D8
	ldr r2, _080E40E8  @ =gRam
	ldr r1, _080E40EC  @ =0x00000F92
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #1
	ldr r3, _080E40F0  @ =0x0000096C
	add r1, r2, r3
	strb r0, [r1]
	mov r3, #1
	mov r8, r2
	add r7, sp, #4
	mov r10, r7
	ldr r0, _080E40F4  @ =0x00000964
	add r0, r0, r8
	mov r9, r0
_080E405A:
	ldr r0, _080E40F0  @ =0x0000096C
	add r0, r0, r8
	ldrb r0, [r0]
	lsl r1, r3, #24
	asr r6, r1, #24
	add r0, r6, r0
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	ldr r0, _080E40F8  @ =gUnknown_0817735A
	add r0, r5, r0
	ldrb r1, [r0]
	mov r0, #32
	add r4, r0, #0
	orr r4, r4, r1
	cmp r6, #0
	bne _080E4088
	mov r0, #241
	and r4, r4, r0
	ldr r0, _080E40FC  @ =0x00000969
	add r0, r0, r8
	ldrb r0, [r0]
	orr r4, r4, r0
_080E4088:
	ldr r0, _080E4100  @ =gUnknown_03003E74
	mov r2, r10
	ldrb r1, [r2]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r1, #150
	lsl r1, r1, #4
	add r1, r1, r8
	ldrh r1, [r1]
	ldr r3, _080E4104  @ =gUnknown_08177330
	lsl r2, r5, #1
	add r2, r2, r3
	ldrh r2, [r2]
	mov r3, r9
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E4108  @ =gUnknown_0817734C
	add r3, r5, r3
	ldrb r3, [r3]
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	sub r1, r6, #1
	lsl r1, r1, #24
	mov r7, r10
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsr r3, r1, #24
	cmp r1, #0
	bge _080E405A
_080E40D8:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080E40E8:
	.4byte gRam
_080E40EC:
	.4byte 0x00000F92
_080E40F0:
	.4byte 0x0000096C
_080E40F4:
	.4byte 0x00000964
_080E40F8:
	.4byte gUnknown_0817735A
_080E40FC:
	.4byte 0x00000969
_080E4100:
	.4byte gUnknown_03003E74
_080E4104:
	.4byte gUnknown_08177330
_080E4108:
	.4byte gUnknown_0817734C
	THUMB_FUNC_END sub_080E4018

	THUMB_FUNC_START sub_080E410C
sub_080E410C: @ 0x080E410C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E25A8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E410C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E411C
sub_080E411C: @ 0x080E411C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080E4144  @ =gRam
	ldr r2, _080E4148  @ =0x00000F52
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E4152
	add r2, r2, #64
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #13
	bhi _080E414C
	add r0, r4, #0
	bl sub_080E4018
	b _080E4152
_080E4144:
	.4byte gRam
_080E4148:
	.4byte 0x00000F52
_080E414C:
	add r0, r4, #0
	bl sub_080E4240
_080E4152:
	add r0, r4, #0
	bl sub_080E4160
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E411C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E4160
sub_080E4160: @ 0x080E4160
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E41A8
	ldr r2, _080E4198  @ =gRam
	ldr r1, _080E419C  @ =0x00001172
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080E41A0  @ =gUnknown_081772F0
	ldr r0, _080E41A4  @ =0x00000F52
	add r2, r2, r0
	add r2, r4, r2
	ldrb r0, [r2]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	mov r0, #0
	b _080E41AA
_080E4198:
	.4byte gRam
_080E419C:
	.4byte 0x00001172
_080E41A0:
	.4byte gUnknown_081772F0
_080E41A4:
	.4byte 0x00000F52
_080E41A8:
	mov r0, #1
_080E41AA:
	pop {r4}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080E4160

	THUMB_FUNC_START sub_080E41B0
sub_080E41B0: @ 0x080E41B0
	push {r4,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r3, _080E41DC  @ =gRam
	ldr r2, _080E41E0  @ =0x00000FC2
	add r0, r3, r2
	add r2, r1, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080E41D4
	ldr r4, _080E41E4  @ =0x00000F52
	add r0, r3, r4
	add r0, r1, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #64
	strb r0, [r2]
_080E41D4:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E41DC:
	.4byte gRam
_080E41E0:
	.4byte 0x00000FC2
_080E41E4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E41B0

	THUMB_FUNC_START sub_080E41E8
sub_080E41E8: @ 0x080E41E8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C5044
	ldr r1, _080E4218  @ =gRam
	ldr r2, _080E421C  @ =0x00000FC2
	add r0, r1, r2
	add r3, r4, r0
	ldrb r0, [r3]
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	beq _080E4228
	ldr r5, _080E4220  @ =0x00000F92
	add r1, r1, r5
	add r1, r4, r1
	ldr r2, _080E4224  @ =gUnknown_08177320
	lsr r0, r0, #26
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080E4234
_080E4218:
	.4byte gRam
_080E421C:
	.4byte 0x00000FC2
_080E4220:
	.4byte 0x00000F92
_080E4224:
	.4byte gUnknown_08177320
_080E4228:
	ldr r5, _080E423C  @ =0x00000F52
	add r0, r1, r5
	add r0, r4, r0
	strb r2, [r0]
	mov r0, #64
	strb r0, [r3]
_080E4234:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E423C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E41E8

	THUMB_FUNC_START sub_080E4240
sub_080E4240: @ 0x080E4240
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E3D28
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E4240

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E4250
sub_080E4250: @ 0x080E4250
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E25A8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E4250

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E4260
sub_080E4260: @ 0x080E4260
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	ldr r0, _080E42B0  @ =gRam
	ldr r2, _080E42B4  @ =0x00000F92
	add r1, r0, r2
	add r3, r4, r1
	ldrb r6, [r3]
	ldr r7, _080E42B8  @ =0x00000FB2
	add r1, r0, r7
	add r2, r4, r1
	ldrb r1, [r2]
	add r5, r1, #0
	add r7, r7, #32
	add r0, r0, r7
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E4298
	ldr r0, _080E42BC  @ =gUnknown_08176908
	add r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, _080E42C0  @ =gUnknown_08177368
	add r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r3]
_080E4298:
	add r0, r4, #0
	bl sub_080E42EC
	add r0, r4, #0
	add r1, r6, #0
	add r2, r5, #0
	bl sub_080E3538
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E42B0:
	.4byte gRam
_080E42B4:
	.4byte 0x00000F92
_080E42B8:
	.4byte 0x00000FB2
_080E42BC:
	.4byte gUnknown_08176908
_080E42C0:
	.4byte gUnknown_08177368
	THUMB_FUNC_END sub_080E4260

	THUMB_FUNC_START sub_080E42C4
sub_080E42C4: @ 0x080E42C4
	push {lr}
	add r2, r1, #0
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r2, r2, #24
	lsr r2, r2, #24
	ldr r1, _080E42E4  @ =gRam
	ldr r3, _080E42E8  @ =0x00000F62
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	bl sub_080E2A88
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E42E4:
	.4byte gRam
_080E42E8:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080E42C4

	THUMB_FUNC_START sub_080E42EC
sub_080E42EC: @ 0x080E42EC
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E4332
	add r0, r4, #0
	mov r1, #12
	bl sub_080E33BC
	add r0, r4, #0
	mov r1, #8
	bl sub_080E3024
	ldr r0, _080E433C  @ =gRam
	ldr r1, _080E4340  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #19
	bhi _080E432C
	add r0, r4, #0
	bl sub_080E4344
_080E432C:
	add r0, r5, #0
	bl sub_080E2684
_080E4332:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E433C:
	.4byte gRam
_080E4340:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080E42EC

	THUMB_FUNC_START sub_080E4344
sub_080E4344: @ 0x080E4344
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #0
	bl sub_080E42C4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E4344

	THUMB_FUNC_START sub_080E4354
sub_080E4354: @ 0x080E4354
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #16
	lsl r0, r0, #24
	lsr r7, r0, #24
	str r7, [sp, #4]
	ldr r5, _080E4414  @ =gRam
	ldr r1, _080E4418  @ =0x00000F92
	add r0, r5, r1
	add r0, r0, r7
	mov r10, r0
	ldrb r0, [r0]
	str r0, [sp, #8]
	mov r0, #0
	mov r1, r10
	strb r0, [r1]
	ldr r0, _080E441C  @ =0x00001122
	add r2, r5, r0
	add r2, r7, r2
	ldrb r1, [r2]
	mov r9, r1
	mov r0, #241
	and r0, r0, r1
	mov r1, #2
	orr r0, r0, r1
	strb r0, [r2]
	ldr r0, _080E4420  @ =0x00001624
	add r6, r5, r0
	ldrb r4, [r6]
	ldr r1, _080E4424  @ =0x00001625
	add r5, r5, r1
	ldrb r0, [r5]
	lsl r0, r0, #8
	add r4, r4, r0
	lsl r4, r4, #16
	lsr r0, r4, #16
	mov r8, r0
	add r0, r0, #8
	strb r0, [r6]
	asr r0, r0, #8
	strb r0, [r5]
	add r0, r7, #0
	str r2, [sp, #12]
	bl sub_080C6240
	mov r1, r8
	strb r1, [r6]
	lsr r4, r4, #24
	strb r4, [r5]
	ldr r2, [sp, #12]
	mov r0, r9
	strb r0, [r2]
	mov r1, sp
	ldrb r0, [r1, #8]
	mov r1, r10
	strb r0, [r1]
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r7, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E4402
	add r0, r7, #0
	mov r1, #16
	bl sub_080E2720
	add r0, r7, #0
	mov r1, #12
	bl sub_080E3024
	mov r1, r10
	ldrb r0, [r1]
	cmp r0, #19
	bhi _080E43FC
	add r0, r7, #0
	mov r1, #4
	bl sub_080E42C4
_080E43FC:
	ldr r0, [sp, #4]
	bl sub_080E2684
_080E4402:
	add sp, sp, #16
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E4414:
	.4byte gRam
_080E4418:
	.4byte 0x00000F92
_080E441C:
	.4byte 0x00001122
_080E4420:
	.4byte 0x00001624
_080E4424:
	.4byte 0x00001625
	THUMB_FUNC_END sub_080E4354

	THUMB_FUNC_START sub_080E4428
sub_080E4428: @ 0x080E4428
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E25A8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E4428

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E4438
sub_080E4438: @ 0x080E4438
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080E4458  @ =gRam
	ldr r1, _080E445C  @ =0x00000F52
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E4466
	cmp r0, #2
	beq _080E4460
	add r0, r4, #0
	bl sub_080E4018
	b _080E4466
_080E4458:
	.4byte gRam
_080E445C:
	.4byte 0x00000F52
_080E4460:
	add r0, r4, #0
	bl sub_080E4354
_080E4466:
	add r0, r4, #0
	bl sub_080E4160
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E4438

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E4474
sub_080E4474: @ 0x080E4474
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E44AC  @ =gRam
	ldr r1, _080E44B0  @ =0x00000F82
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #1
	bls _080E453C
	add r0, r4, #0
	bl sub_080E4B00
	ldr r2, _080E44B4  @ =0x00000FD2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080E44B8
	sub r2, r2, #48
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	b _080E468E
	.byte 0x00
	.byte 0x00
_080E44AC:
	.4byte gRam
_080E44B0:
	.4byte 0x00000F82
_080E44B4:
	.4byte 0x00000FD2
_080E44B8:
	add r0, r4, #0
	bl Sprite3_CheckIfActive_Permissive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E44C6
	b _080E468E
_080E44C6:
	ldrb r0, [r6]
	cmp r0, #2
	beq _080E44CE
	b _080E468E
_080E44CE:
	mov r2, #15
	add r6, r5, #0
	ldr r0, _080E452C  @ =0x000010C2
	add r7, r6, r0
_080E44D6:
	ldr r1, _080E4530  @ =0x000015DC
	add r0, r6, r1
	ldrb r1, [r0]
	lsl r0, r2, #24
	asr r2, r0, #24
	add r5, r0, #0
	cmp r1, r2
	beq _080E4512
	ldr r1, _080E4534  @ =0x00000FA2
	add r0, r6, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #8
	bls _080E4512
	ldr r1, _080E4538  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	eor r0, r0, r2
	mov r1, #7
	and r0, r0, r1
	add r1, r2, r7
	ldrb r1, [r1]
	orr r0, r0, r1
	cmp r0, #0
	bne _080E4512
	lsr r1, r5, #24
	add r0, r4, #0
	mov r2, #8
	bl sub_080E46C8
_080E4512:
	mov r2, #255
	lsl r2, r2, #24
	add r0, r5, r2
	lsr r2, r0, #24
	cmp r0, #0
	bge _080E44D6
	add r0, r4, #0
	bl sub_080C4F98
	add r0, r4, #0
	bl sub_0808EEE4
	b _080E468E
_080E452C:
	.4byte 0x000010C2
_080E4530:
	.4byte 0x000015DC
_080E4534:
	.4byte 0x00000FA2
_080E4538:
	.4byte 0x00000996
_080E453C:
	mov r6, #0
	mov r8, r6
	mov r7, #0
	ldr r1, _080E4594  @ =0x00001062
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E455C
	ldr r2, _080E4598  @ =0x00000D94
	add r0, r5, r2
	add r0, r4, r0
	ldrb r2, [r0]
	mov r1, #48
	orr r1, r1, r2
	strb r1, [r0]
_080E455C:
	add r0, r4, #0
	bl sub_080C6240
	ldr r1, _080E459C  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #1
	bne _080E4576
	ldr r0, _080E45A0  @ =gUnknown_03003E74
	ldrh r0, [r0]
	bl sub_08115AD0
_080E4576:
	ldr r2, _080E45A4  @ =0x000010C2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E45BC
	ldr r1, _080E45A8  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #63
	bls _080E45AC
	mov r7, #1
	b _080E45B8
	.byte 0x00
	.byte 0x00
_080E4594:
	.4byte 0x00001062
_080E4598:
	.4byte 0x00000D94
_080E459C:
	.4byte 0x00000F92
_080E45A0:
	.4byte gUnknown_03003E74
_080E45A4:
	.4byte 0x000010C2
_080E45A8:
	.4byte 0x00000FD2
_080E45AC:
	cmp r0, #1
	beq _080E45B6
	mov r2, #1
	mov r8, r2
	b _080E45B8
_080E45B6:
	mov r6, #1
_080E45B8:
	cmp r6, #0
	beq _080E4620
_080E45BC:
	ldr r5, _080E469C  @ =gRam
	ldr r1, _080E46A0  @ =0x000010C2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r2, _080E46A4  @ =0x00000FA2
	add r0, r5, r2
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #10
	bne _080E45E0
	ldr r2, _080E46A8  @ =0x00001792
	add r0, r5, r2
	strb r1, [r0]
	sub r2, r2, #1
	add r0, r5, r2
	strb r1, [r0]
_080E45E0:
	add r0, r4, #0
	mov r1, #41
	bl sub_080CF0AC
	ldr r0, _080E46AC  @ =0x00000F82
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E46B0  @ =0x00001132
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #9
	strb r1, [r0]
	ldr r2, _080E46B4  @ =0x00001122
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080E46B8  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #31
	strb r1, [r0]
	mov r0, #6
	strb r0, [r6]
	ldr r2, _080E46BC  @ =0x00001012
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
_080E4620:
	mov r0, r8
	cmp r0, #0
	beq _080E4648
	ldr r0, _080E469C  @ =gRam
	ldr r1, _080E46B4  @ =0x00001122
	add r3, r0, r1
	add r3, r4, r3
	ldrb r1, [r3]
	mov r2, #241
	and r2, r2, r1
	ldr r1, _080E46B8  @ =0x00000FD2
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #1
	mov r1, #14
	and r0, r0, r1
	orr r2, r2, r0
	strb r2, [r3]
	mov r7, #1
_080E4648:
	cmp r7, #0
	beq _080E468E
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E468E
	ldr r5, _080E469C  @ =gRam
	ldr r2, _080E46C0  @ =0x000010B2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E466E
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
_080E466E:
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080E46C4  @ =0x000009B2
	add r0, r5, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	beq _080E4688
	add r0, r4, #0
	bl sub_080C79F8
_080E4688:
	add r0, r4, #0
	bl sub_080C8168
_080E468E:
	add sp, sp, #4
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E469C:
	.4byte gRam
_080E46A0:
	.4byte 0x000010C2
_080E46A4:
	.4byte 0x00000FA2
_080E46A8:
	.4byte 0x00001792
_080E46AC:
	.4byte 0x00000F82
_080E46B0:
	.4byte 0x00001132
_080E46B4:
	.4byte 0x00001122
_080E46B8:
	.4byte 0x00000FD2
_080E46BC:
	.4byte 0x00001012
_080E46C0:
	.4byte 0x000010B2
_080E46C4:
	.4byte 0x000009B2
	THUMB_FUNC_END sub_080E4474

	THUMB_FUNC_START sub_080E46C8
sub_080E46C8: @ 0x080E46C8
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r6, r0, #24
	lsl r1, r1, #24
	lsr r5, r1, #24
	lsl r2, r2, #24
	lsr r2, r2, #24
	str r2, [sp]
	ldr r4, _080E47F4  @ =gRam
	ldr r0, _080E47F8  @ =gUnknown_03003112
	add r0, r6, r0
	str r0, [sp, #4]
	ldrb r1, [r0]
	ldr r2, _080E47FC  @ =gUnknown_03003132
	add r2, r2, r6
	mov r10, r2
	ldrb r0, [r2]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r1, r1, #16
	ldr r3, _080E4800  @ =gUnknown_03003102
	add r3, r3, r6
	mov r8, r3
	ldrb r2, [r3]
	ldr r0, _080E4804  @ =gUnknown_03003122
	add r7, r6, r0
	ldrb r0, [r7]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r2, r2, #16
	ldr r3, _080E4808  @ =gUnknown_03002B90
	strb r1, [r3]
	lsr r1, r1, #8
	mov r3, #151
	lsl r3, r3, #4
	add r0, r4, r3
	strb r1, [r0]
	mov r0, #48
	ldr r1, _080E480C  @ =gUnknown_03002B94
	strb r0, [r1]
	ldr r3, _080E4810  @ =gUnknown_03002B95
	strb r0, [r3]
	ldr r0, _080E4814  @ =0x00000961
	add r0, r0, r4
	mov r9, r0
	strb r2, [r0]
	lsr r2, r2, #8
	ldr r1, _080E4818  @ =0x00000971
	add r0, r4, r1
	strb r2, [r0]
	add r0, r5, #0
	bl sub_080C4574
	bl sub_080C466C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E47E4
	ldr r2, _080E481C  @ =0x00000FF2
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #17
	beq _080E47E4
	add r0, r5, #0
	ldr r1, [sp]
	bl sub_080C3FCC
	ldr r3, [sp, #4]
	ldrb r0, [r3]
	ldr r1, _080E4808  @ =gUnknown_03002B90
	strb r0, [r1]
	mov r2, r10
	ldrb r0, [r2]
	mov r3, r9
	strb r0, [r3]
	mov r0, r8
	ldrb r1, [r0]
	ldrb r0, [r7]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r3, _080E4820  @ =0x00001142
	add r2, r4, r3
	add r0, r6, r2
	ldrb r0, [r0]
	sub r1, r1, r0
	ldr r0, _080E480C  @ =gUnknown_03002B94
	strb r1, [r0]
	lsr r1, r1, #8
	ldr r3, _080E4810  @ =gUnknown_03002B95
	strb r1, [r3]
	ldr r1, _080E47F8  @ =gUnknown_03003112
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r3, _080E4824  @ =0x00000968
	add r0, r4, r3
	strb r1, [r0]
	ldr r1, _080E47FC  @ =gUnknown_03003132
	add r0, r5, r1
	ldrb r1, [r0]
	add r3, r3, #1
	add r0, r4, r3
	strb r1, [r0]
	ldr r1, _080E4800  @ =gUnknown_03003102
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r3, _080E4804  @ =gUnknown_03003122
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r2, r5, r2
	ldrb r0, [r2]
	sub r1, r1, r0
	ldr r2, _080E4828  @ =0x0000096C
	add r0, r4, r2
	strb r1, [r0]
	lsr r1, r1, #8
	ldr r3, _080E482C  @ =0x0000096D
	add r0, r4, r3
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #32
	bl sub_080C2DCC
	ldr r1, _080E4830  @ =0x00001102
	add r0, r4, r1
	add r0, r5, r0
	ldr r2, _080E4808  @ =gUnknown_03002B90
	ldrb r1, [r2]
	strb r1, [r0]
	ldr r3, _080E4834  @ =0x00001112
	add r0, r4, r3
	add r0, r5, r0
	mov r2, r9
	ldrb r1, [r2]
	strb r1, [r0]
_080E47E4:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080E47F4:
	.4byte gRam
_080E47F8:
	.4byte gUnknown_03003112
_080E47FC:
	.4byte gUnknown_03003132
_080E4800:
	.4byte gUnknown_03003102
_080E4804:
	.4byte gUnknown_03003122
_080E4808:
	.4byte gUnknown_03002B90
_080E480C:
	.4byte gUnknown_03002B94
_080E4810:
	.4byte gUnknown_03002B95
_080E4814:
	.4byte 0x00000961
_080E4818:
	.4byte 0x00000971
_080E481C:
	.4byte 0x00000FF2
_080E4820:
	.4byte 0x00001142
_080E4824:
	.4byte 0x00000968
_080E4828:
	.4byte 0x0000096C
_080E482C:
	.4byte 0x0000096D
_080E4830:
	.4byte 0x00001102
_080E4834:
	.4byte 0x00001112
	THUMB_FUNC_END sub_080E46C8

	THUMB_FUNC_START sub_080E4838
sub_080E4838: @ 0x080E4838
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080E4C34
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r7, r0, #24
	cmp r7, #0
	bne _080E4904
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r6, _080E48CC  @ =gRam
	ldr r2, _080E48D0  @ =0x00000FB2
	add r1, r6, r2
	add r1, r1, r4
	mov r8, r1
	strb r0, [r1]
	add r2, r2, #208
	add r1, r6, r2
	add r1, r4, r1
	strb r0, [r1]
	ldr r1, _080E48D4  @ =0x00000F52
	add r0, r6, r1
	add r3, r4, r0
	ldrb r2, [r3]
	cmp r2, #0
	beq _080E48F0
	ldr r2, _080E48D8  @ =0x00000FC2
	add r0, r6, r2
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080E48E8
	ldr r1, _080E48DC  @ =0x00001052
	add r0, r6, r1
	add r1, r4, r0
	strb r7, [r1]
	ldrb r0, [r5]
	cmp r0, #79
	bls _080E48A2
	mov r0, #1
	strb r0, [r1]
_080E48A2:
	ldrb r0, [r5]
	cmp r0, #32
	bne _080E48AE
	add r0, r4, #0
	bl sub_080E4914
_080E48AE:
	ldrb r1, [r5]
	lsr r1, r1, #4
	ldr r0, _080E48E0  @ =0x00000F92
	add r2, r6, r0
	add r2, r4, r2
	ldr r3, _080E48E4  @ =gUnknown_0817710C
	mov r4, r8
	ldrb r0, [r4]
	lsl r0, r0, #3
	orr r0, r0, r1
	add r0, r0, #32
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	b _080E4904
_080E48CC:
	.4byte gRam
_080E48D0:
	.4byte 0x00000FB2
_080E48D4:
	.4byte 0x00000F52
_080E48D8:
	.4byte 0x00000FC2
_080E48DC:
	.4byte 0x00001052
_080E48E0:
	.4byte 0x00000F92
_080E48E4:
	.4byte gUnknown_0817710C
_080E48E8:
	strb r0, [r3]
	mov r0, #32
	strb r0, [r5]
	b _080E4904
_080E48F0:
	ldr r1, _080E4910  @ =0x00000FC2
	add r0, r6, r1
	add r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080E4904
	add r0, r2, #1
	strb r0, [r3]
	mov r0, #112
	strb r0, [r1]
_080E4904:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E4910:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E4838

	THUMB_FUNC_START sub_080E4914
sub_080E4914: @ 0x080E4914
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	mov r0, #74
	add r1, r4, #0
	bl sub_080CA538
	add r5, r0, #0
	cmp r5, #0
	blt _080E4A22
	ldr r6, _080E4A2C  @ =gRam
	ldr r1, _080E4A30  @ =0x00000FB2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r3, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r1, r6, r2
	ldr r0, _080E4A34  @ =gUnknown_0817736C
	add r0, r3, r0
	ldrb r0, [r0]
	ldrh r2, [r1]
	add r2, r2, r0
	ldr r0, _080E4A38  @ =gUnknown_08177370
	add r0, r3, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r0, _080E4A3C  @ =0x00000964
	add r1, r6, r0
	ldr r0, _080E4A40  @ =gUnknown_08177374
	add r0, r3, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080E4A44  @ =gUnknown_08177378
	add r3, r3, r0
	ldrb r0, [r3]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r3, _080E4A48  @ =0x00000EE2
	add r0, r6, r3
	add r0, r5, r0
	strb r2, [r0]
	add r3, r3, #32
	add r0, r6, r3
	add r0, r5, r0
	lsr r2, r2, #8
	strb r2, [r0]
	ldr r2, _080E4A4C  @ =0x00000ED2
	add r0, r6, r2
	add r0, r5, r0
	strb r1, [r0]
	sub r3, r3, #16
	add r0, r6, r3
	add r0, r5, r0
	lsr r1, r1, #8
	strb r1, [r0]
	lsl r4, r5, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #16
	bl sub_080C35FC
	ldr r1, _080E4A50  @ =0x00000F82
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #1
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r2, _080E4A54  @ =0x0000097D
	add r1, r6, r2
	mov r0, #0
	ldrsb r0, [r1, r0]
	mov r2, #128
	and r0, r0, r2
	cmp r0, #0
	beq _080E49BC
	ldrb r0, [r1]
	neg r0, r0
	strb r0, [r1]
_080E49BC:
	ldr r3, _080E4A58  @ =0x0000097C
	add r4, r6, r3
	mov r0, #0
	ldrsb r0, [r4, r0]
	and r0, r0, r2
	cmp r0, #0
	beq _080E49D0
	ldrb r0, [r4]
	neg r0, r0
	strb r0, [r4]
_080E49D0:
	ldr r0, _080E4A5C  @ =0x00001152
	add r2, r6, r0
	add r2, r5, r2
	ldr r3, _080E4A60  @ =gUnknown_0817737C
	ldrb r0, [r4]
	ldrb r1, [r1]
	orr r0, r0, r1
	lsl r0, r0, #24
	asr r0, r0, #28
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r1, _080E4A64  @ =0x00001032
	add r2, r6, r1
	add r2, r5, r2
	ldrb r1, [r2]
	mov r0, #238
	and r0, r0, r1
	mov r1, #24
	orr r0, r0, r1
	strb r0, [r2]
	ldr r2, _080E4A68  @ =0x00001122
	add r0, r6, r2
	add r0, r5, r0
	mov r1, #8
	strb r1, [r0]
	ldr r3, _080E4A6C  @ =0x00000FD2
	add r0, r6, r3
	add r0, r5, r0
	mov r1, #255
	strb r1, [r0]
	ldr r1, _080E4A70  @ =0x00001022
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #1
	neg r1, r1
	strb r1, [r0]
	add r0, r7, #0
	mov r1, #11
	bl sub_080CF140
_080E4A22:
	add r0, r5, #0
	pop {r4-r7}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080E4A2C:
	.4byte gRam
_080E4A30:
	.4byte 0x00000FB2
_080E4A34:
	.4byte gUnknown_0817736C
_080E4A38:
	.4byte gUnknown_08177370
_080E4A3C:
	.4byte 0x00000964
_080E4A40:
	.4byte gUnknown_08177374
_080E4A44:
	.4byte gUnknown_08177378
_080E4A48:
	.4byte 0x00000EE2
_080E4A4C:
	.4byte 0x00000ED2
_080E4A50:
	.4byte 0x00000F82
_080E4A54:
	.4byte 0x0000097D
_080E4A58:
	.4byte 0x0000097C
_080E4A5C:
	.4byte 0x00001152
_080E4A60:
	.4byte gUnknown_0817737C
_080E4A64:
	.4byte 0x00001032
_080E4A68:
	.4byte 0x00001122
_080E4A6C:
	.4byte 0x00000FD2
_080E4A70:
	.4byte 0x00001022
	THUMB_FUNC_END sub_080E4914

	THUMB_FUNC_START sub_080E4A74
sub_080E4A74: @ 0x080E4A74
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r4, _080E4AE4  @ =gRam
	ldr r2, _080E4AE8  @ =0x00000FB2
	add r1, r4, r2
	add r1, r0, r1
	ldrb r3, [r1]
	lsl r3, r3, #1
	add r2, r2, #160
	add r1, r4, r2
	add r0, r0, r1
	ldrb r0, [r0]
	orr r3, r3, r0
	lsl r3, r3, #24
	ldr r0, _080E4AEC  @ =gUnknown_03003E74
	ldrh r0, [r0]
	mov r1, #150
	lsl r1, r1, #4
	add r2, r4, r1
	ldr r1, _080E4AF0  @ =gUnknown_0817738C
	lsr r3, r3, #23
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080E4AF4  @ =0x00000964
	add r5, r4, r2
	ldr r2, _080E4AF8  @ =gUnknown_0817739C
	add r3, r3, r2
	ldrh r2, [r3]
	ldrh r5, [r5]
	add r2, r2, r5
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E4AFC  @ =0x00000969
	add r4, r4, r3
	ldrb r4, [r4]
	mov r3, #48
	and r3, r3, r4
	mov r4, #8
	orr r3, r3, r4
	lsl r3, r3, #8
	mov r4, #206
	orr r3, r3, r4
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080E4AE4:
	.4byte gRam
_080E4AE8:
	.4byte 0x00000FB2
_080E4AEC:
	.4byte gUnknown_03003E74
_080E4AF0:
	.4byte gUnknown_0817738C
_080E4AF4:
	.4byte 0x00000964
_080E4AF8:
	.4byte gUnknown_0817739C
_080E4AFC:
	.4byte 0x00000969
	THUMB_FUNC_END sub_080E4A74

	THUMB_FUNC_START sub_080E4B00
sub_080E4B00: @ 0x080E4B00
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r10, r0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r10
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E4BCA
	ldr r1, _080E4BDC  @ =gRam
	ldr r2, _080E4BE0  @ =0x00000FD2
	add r0, r1, r2
	add r0, r0, r10
	ldrb r0, [r0]
	lsr r0, r0, #1
	str r0, [sp, #8]
	mov r0, #12
	ldr r7, [sp, #8]
	and r7, r7, r0
	str r7, [sp, #8]
	mov r0, #3
	mov r8, r0
	add r6, sp, #4
	mov r9, r1
_080E4B42:
	ldr r5, [sp, #8]
	add r5, r5, r8
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r0, _080E4BE4  @ =gUnknown_03003E74
	ldrb r1, [r6]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r9
	ldr r1, _080E4BE8  @ =gUnknown_081773AC
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080E4BEC  @ =0x00000964
	add r3, r3, r9
	ldr r2, _080E4BF0  @ =gUnknown_081773BC
	add r2, r5, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E4BF4  @ =gUnknown_081773CC
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080E4BF8  @ =gUnknown_081773DC
	add r5, r5, r4
	ldrb r4, [r5]
	ldr r7, _080E4BFC  @ =gUnknown_03002B99
	mov r5, #0
	ldrsb r5, [r7, r5]
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #2
	str r4, [sp]
	bl sub_080C6004
	mov r0, r8
	lsl r1, r0, #24
	mov r2, #255
	lsl r2, r2, #24
	add r1, r1, r2
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsr r7, r1, #24
	mov r8, r7
	cmp r1, #0
	bge _080E4B42
	mov r0, r10
	mov r1, #2
	mov r2, #3
	bl sub_080C6350
_080E4BCA:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E4BDC:
	.4byte gRam
_080E4BE0:
	.4byte 0x00000FD2
_080E4BE4:
	.4byte gUnknown_03003E74
_080E4BE8:
	.4byte gUnknown_081773AC
_080E4BEC:
	.4byte 0x00000964
_080E4BF0:
	.4byte gUnknown_081773BC
_080E4BF4:
	.4byte gUnknown_081773CC
_080E4BF8:
	.4byte gUnknown_081773DC
_080E4BFC:
	.4byte gUnknown_03002B99
	THUMB_FUNC_END sub_080E4B00

	THUMB_FUNC_START sub_080E4C00
sub_080E4C00: @ 0x080E4C00
	bx lr
	THUMB_FUNC_END sub_080E4C00

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E4C04
sub_080E4C04: @ 0x080E4C04
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r0, _080E4C20  @ =gRam
	ldr r2, _080E4C24  @ =0x00000F82
	add r0, r0, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E4C28
	add r0, r1, #0
	bl sub_080E4474
	b _080E4C2E
_080E4C20:
	.4byte gRam
_080E4C24:
	.4byte 0x00000F82
_080E4C28:
	add r0, r1, #0
	bl sub_080E4838
_080E4C2E:
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E4C04

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E4C34
sub_080E4C34: @ 0x080E4C34
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E4C7C
	add r0, r4, #0
	mov r1, #8
	bl sub_080E33BC
	add r0, r4, #0
	mov r1, #4
	bl sub_080E3024
	ldr r0, _080E4C84  @ =gRam
	ldr r1, _080E4C88  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #19
	bhi _080E4C74
	add r0, r4, #0
	bl sub_080E4A74
_080E4C74:
	add r0, r5, #0
	mov r1, #10
	bl sub_080C57F8
_080E4C7C:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080E4C84:
	.4byte gRam
_080E4C88:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080E4C34

	THUMB_FUNC_START sub_080E4C8C
sub_080E4C8C: @ 0x080E4C8C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r6, _080E4D08  @ =gRam
	ldr r0, _080E4D0C  @ =0x00000F92
	add r2, r6, r0
	add r2, r4, r2
	ldr r3, _080E4D10  @ =gUnknown_081773EC
	ldr r1, _080E4D14  @ =0x00001052
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #8
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #25
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r5, _080E4D18  @ =0x00000FB2
	add r1, r6, r5
	add r1, r4, r1
	ldrb r1, [r1]
	add r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080E4EA8
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E4D44
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E4D44
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C79F8
	ldr r1, _080E4D1C  @ =0x00000F52
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080E4D20
	add r0, r4, #0
	bl sub_080E4DF0
	b _080E4D44
	.byte 0x00
	.byte 0x00
_080E4D08:
	.4byte gRam
_080E4D0C:
	.4byte 0x00000F92
_080E4D10:
	.4byte gUnknown_081773EC
_080E4D14:
	.4byte 0x00001052
_080E4D18:
	.4byte 0x00000FB2
_080E4D1C:
	.4byte 0x00000F52
_080E4D20:
	ldr r1, _080E4D4C  @ =0x00000FC2
	add r0, r6, r1
	add r4, r7, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E4D44
	bl GetRandomInt
	mov r1, #63
	and r1, r1, r0
	add r1, r1, #48
	strb r1, [r4]
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
	add r0, r7, #0
	bl sub_080E4D50
_080E4D44:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E4D4C:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E4C8C

	THUMB_FUNC_START sub_080E4D50
sub_080E4D50: @ 0x080E4D50
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080E4DCC  @ =gRam
	ldr r0, _080E4DD0  @ =0x00000FB2
	add r4, r6, r0
	add r4, r5, r4
	ldr r1, _080E4DD4  @ =0x00001082
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r3, [r4]
	cmp r0, r3
	bne _080E4DA8
	ldr r1, _080E4DD8  @ =0x0000097C
	add r0, r6, r1
	ldrb r0, [r0]
	add r0, r0, #16
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #31
	bls _080E4D98
	add r1, r1, #1
	add r0, r6, r1
	ldrb r0, [r0]
	add r0, r0, #16
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #31
	bhi _080E4DA8
_080E4D98:
	add r0, r3, #4
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r1, _080E4DDC  @ =0x00000FC2
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #128
	strb r1, [r0]
_080E4DA8:
	ldr r2, _080E4DCC  @ =gRam
	ldr r0, _080E4DE0  @ =0x00000F22
	add r1, r2, r0
	add r1, r5, r1
	ldr r0, _080E4DE4  @ =gUnknown_081773F4
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E4DE8  @ =0x00000F12
	add r2, r2, r1
	add r2, r5, r2
	ldr r0, _080E4DEC  @ =gUnknown_081773FC
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r2]
	pop {r4-r6}
	pop {r0}
	bx r0
_080E4DCC:
	.4byte gRam
_080E4DD0:
	.4byte 0x00000FB2
_080E4DD4:
	.4byte 0x00001082
_080E4DD8:
	.4byte 0x0000097C
_080E4DDC:
	.4byte 0x00000FC2
_080E4DE0:
	.4byte 0x00000F22
_080E4DE4:
	.4byte gUnknown_081773F4
_080E4DE8:
	.4byte 0x00000F12
_080E4DEC:
	.4byte gUnknown_081773FC
	THUMB_FUNC_END sub_080E4D50

	THUMB_FUNC_START sub_080E4DF0
sub_080E4DF0: @ 0x080E4DF0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r7, r0, #24
	mov r2, #16
	ldr r1, _080E4E84  @ =gRam
	ldr r3, _080E4E88  @ =0x00001042
	add r0, r1, r3
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E4E14
	ldr r2, _080E4E8C  @ =0x00000FC2
	add r0, r1, r2
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E4E56
	mov r2, #48
_080E4E14:
	mov r0, #1
	cmp r0, #0
	beq _080E4E56
	ldr r4, _080E4E84  @ =gRam
	ldr r3, _080E4E8C  @ =0x00000FC2
	add r0, r4, r3
	add r0, r7, r0
	mov r6, #0
	strb r2, [r0]
	add r0, r7, #0
	bl sub_080E2614
	bl GetRandomInt
	ldr r1, _080E4E90  @ =0x00001082
	add r3, r4, r1
	add r3, r7, r3
	ldr r5, _080E4E94  @ =gUnknown_08178400
	ldr r2, _080E4E98  @ =0x00000FB2
	add r1, r4, r2
	add r1, r7, r1
	ldrb r1, [r1]
	lsl r1, r1, #1
	mov r2, #1
	and r2, r2, r0
	orr r1, r1, r2
	add r1, r1, r5
	ldrb r0, [r1]
	strb r0, [r3]
	ldr r3, _080E4E9C  @ =0x00000F52
	add r4, r4, r3
	add r4, r7, r4
	strb r6, [r4]
_080E4E56:
	ldr r2, _080E4E84  @ =gRam
	ldr r1, _080E4EA0  @ =0x00000FD2
	add r0, r2, r1
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E4E70
	ldr r3, _080E4EA4  @ =0x00001052
	add r1, r2, r3
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080E4E70:
	ldr r0, _080E4EA4  @ =0x00001052
	add r1, r2, r0
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E4E84:
	.4byte gRam
_080E4E88:
	.4byte 0x00001042
_080E4E8C:
	.4byte 0x00000FC2
_080E4E90:
	.4byte 0x00001082
_080E4E94:
	.4byte gUnknown_08178400
_080E4E98:
	.4byte 0x00000FB2
_080E4E9C:
	.4byte 0x00000F52
_080E4EA0:
	.4byte 0x00000FD2
_080E4EA4:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080E4DF0

	THUMB_FUNC_START sub_080E4EA8
sub_080E4EA8: @ 0x080E4EA8
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r7, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r7, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E4F78
	ldr r0, _080E4F88  @ =gUnknown_03003E74
	mov r10, r0
	add r0, sp, #4
	ldrb r1, [r0]
	mov r2, r10
	ldrh r0, [r2]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r6, _080E4F8C  @ =gRam
	ldr r3, _080E4F90  @ =gUnknown_03002B90
	ldrh r1, [r3]
	ldr r4, _080E4F94  @ =gUnknown_03002B94
	ldrh r2, [r4]
	sub r2, r2, #11
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r5, _080E4F98  @ =gUnknown_08176958
	ldr r4, _080E4F9C  @ =0x00001082
	add r3, r6, r4
	add r3, r7, r3
	ldrb r4, [r3]
	add r5, r4, r5
	ldrb r3, [r5]
	ldr r5, _080E4FA0  @ =gUnknown_0817695C
	add r4, r4, r5
	ldrb r4, [r4]
	ldr r5, _080E4FA4  @ =0x00000969
	add r5, r5, r6
	mov r9, r5
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #2
	mov r8, r4
	str r4, [sp]
	bl sub_080C6368
	add r0, sp, #4
	ldrb r1, [r0]
	mov r5, r10
	ldrh r0, [r5]
	add r0, r0, r1
	add r0, r0, #1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r2, _080E4FA8  @ =gUnknown_08177404
	ldr r1, _080E4FAC  @ =0x00000F92
	add r6, r6, r1
	add r6, r7, r6
	ldrb r5, [r6]
	lsl r1, r5, #1
	add r1, r1, r2
	ldrh r1, [r1]
	ldr r2, _080E4F90  @ =gUnknown_03002B90
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080E4F94  @ =gUnknown_03002B94
	ldrh r2, [r3]
	ldr r3, _080E4FB0  @ =gUnknown_08177414
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080E4FB4  @ =gUnknown_0817741C
	add r5, r5, r4
	ldrb r4, [r5]
	mov r6, r9
	mov r5, #0
	ldrsb r5, [r6, r5]
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, r8
	str r4, [sp]
	bl sub_080C6368
	add r0, r7, #0
	bl sub_080C6230
_080E4F78:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080E4F88:
	.4byte gUnknown_03003E74
_080E4F8C:
	.4byte gRam
_080E4F90:
	.4byte gUnknown_03002B90
_080E4F94:
	.4byte gUnknown_03002B94
_080E4F98:
	.4byte gUnknown_08176958
_080E4F9C:
	.4byte 0x00001082
_080E4FA0:
	.4byte gUnknown_0817695C
_080E4FA4:
	.4byte 0x00000969
_080E4FA8:
	.4byte gUnknown_08177404
_080E4FAC:
	.4byte 0x00000F92
_080E4FB0:
	.4byte gUnknown_08177414
_080E4FB4:
	.4byte gUnknown_0817741C
	THUMB_FUNC_END sub_080E4EA8

	THUMB_FUNC_START sub_080E4FB8
sub_080E4FB8: @ 0x080E4FB8
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	bl GetRandomInt
	ldr r3, _080E4FEC  @ =gRam
	ldr r2, _080E4FF0  @ =0x00000FB2
	add r1, r3, r2
	add r1, r4, r1
	mov r2, #3
	and r2, r2, r0
	strb r2, [r1]
	ldr r1, _080E4FF4  @ =0x00001082
	add r0, r3, r1
	add r0, r4, r0
	strb r2, [r0]
	ldr r2, _080E4FF8  @ =0x00000FC2
	add r3, r3, r2
	add r4, r4, r3
	mov r0, #16
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E4FEC:
	.4byte gRam
_080E4FF0:
	.4byte 0x00000FB2
_080E4FF4:
	.4byte 0x00001082
_080E4FF8:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E4FB8

	THUMB_FUNC_START sub_080E4FFC
sub_080E4FFC: @ 0x080E4FFC
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E51B0
	add r0, r4, #0
	bl Sprite3_CheckIfActive_Permissive
	lsl r0, r0, #24
	lsr r7, r0, #24
	cmp r7, #0
	beq _080E501C
	b _080E51A4
_080E501C:
	ldr r6, _080E50AC  @ =gRam
	ldr r1, _080E50B0  @ =0x00000FA2
	add r0, r6, r1
	add r0, r0, r4
	mov r8, r0
	ldrb r0, [r0]
	cmp r0, #9
	beq _080E50D0
	ldr r2, _080E50B4  @ =0x00000F52
	add r0, r6, r2
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E5060
	add r0, r4, #0
	bl sub_080C50E4
	ldr r1, _080E50B8  @ =0x00001152
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #24
	strb r1, [r0]
	ldr r2, _080E50BC  @ =0x00000FC2
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
	ldr r1, _080E50C0  @ =0x000010C2
	add r0, r6, r1
	add r0, r4, r0
	strb r7, [r0]
_080E5060:
	ldr r0, _080E50C4  @ =0x00000FB2
	add r2, r6, r0
	add r2, r4, r2
	ldr r3, _080E50C8  @ =gUnknown_08177424
	ldr r1, _080E50BC  @ =0x00000FC2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080C2C4C
	add r0, r4, #0
	bl Sprite3_Move
	ldr r2, _080E50B8  @ =0x00001152
	add r1, r6, r2
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #2
	strb r0, [r1]
	ldr r1, _080E50CC  @ =0x00001142
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	blt _080E50A6
	b _080E51A4
_080E50A6:
	mov r2, r8
	strb r7, [r2]
	b _080E51A4
_080E50AC:
	.4byte gRam
_080E50B0:
	.4byte 0x00000FA2
_080E50B4:
	.4byte 0x00000F52
_080E50B8:
	.4byte 0x00001152
_080E50BC:
	.4byte 0x00000FC2
_080E50C0:
	.4byte 0x000010C2
_080E50C4:
	.4byte 0x00000FB2
_080E50C8:
	.4byte gUnknown_08177424
_080E50CC:
	.4byte 0x00001142
_080E50D0:
	ldr r1, _080E5120  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E5138
	add r0, r4, #0
	bl sub_080C500C
	ldr r2, _080E5124  @ =0x00001062
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E5180
	add r0, r4, #0
	bl sub_080C6F48
	ldr r1, _080E5128  @ =0x00001042
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E5180
	ldr r2, _080E512C  @ =0x00000F62
	add r0, r6, r2
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080E5130
	mov r0, #48
	strb r0, [r5]
	mov r0, #2
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #28
	bl sub_080CF0AC
	b _080E51A4
	.byte 0x00
	.byte 0x00
_080E5120:
	.4byte 0x00000FC2
_080E5124:
	.4byte 0x00001062
_080E5128:
	.4byte 0x00001042
_080E512C:
	.4byte 0x00000F62
_080E5130:
	add r0, r4, #0
	bl sub_080C4F18
	b _080E51A4
_080E5138:
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	beq _080E51A0
	cmp r1, #31
	bls _080E51A4
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080E51A4
	ldr r1, _080E5188  @ =0x00000996
	add r0, r6, r1
	ldrb r1, [r0]
	lsl r1, r1, #1
	mov r0, #4
	and r1, r1, r0
	ldr r2, _080E518C  @ =0x00000FB2
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	ldr r0, _080E5190  @ =0x00000F22
	add r2, r6, r0
	add r2, r4, r2
	ldr r0, _080E5194  @ =gUnknown_08177428
	add r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, _080E5198  @ =0x00000F12
	add r2, r6, r0
	add r2, r4, r2
	ldr r0, _080E519C  @ =gUnknown_08177430
	add r1, r1, r0
	ldrb r0, [r1]
	strb r0, [r2]
_080E5180:
	add r0, r4, #0
	bl Sprite3_Move
	b _080E51A4
_080E5188:
	.4byte 0x00000996
_080E518C:
	.4byte 0x00000FB2
_080E5190:
	.4byte 0x00000F22
_080E5194:
	.4byte gUnknown_08177428
_080E5198:
	.4byte 0x00000F12
_080E519C:
	.4byte gUnknown_08177430
_080E51A0:
	mov r2, r8
	strb r1, [r2]
_080E51A4:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E4FFC

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E51B0
sub_080E51B0: @ 0x080E51B0
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r5, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E528A
	ldr r2, _080E5298  @ =gRam
	ldr r1, _080E529C  @ =0x00000FB2
	add r0, r2, r1
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #1
	ldr r3, _080E52A0  @ =0x0000096C
	add r1, r2, r3
	strb r0, [r1]
	ldr r1, _080E52A4  @ =0x00000F62
	add r0, r2, r1
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #3
	add r3, r3, #1
	add r1, r2, r3
	strb r0, [r1]
	mov r1, #1
	add r7, r2, #0
	add r5, sp, #4
	mov r8, r5
	ldr r0, _080E52A8  @ =0x00000969
	add r0, r0, r7
	mov r9, r0
_080E5200:
	ldr r2, _080E52A0  @ =0x0000096C
	add r0, r7, r2
	ldrb r3, [r0]
	lsl r6, r1, #24
	asr r6, r6, #24
	add r3, r6, r3
	lsl r3, r3, #24
	lsr r3, r3, #24
	ldr r5, _080E52AC  @ =0x0000096D
	add r0, r7, r5
	ldrb r5, [r0]
	add r5, r3, r5
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r0, _080E52B0  @ =gUnknown_03003E74
	mov r2, r8
	ldrb r1, [r2]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r1, #150
	lsl r1, r1, #4
	add r2, r7, r1
	ldr r1, _080E52B4  @ =gUnknown_08177438
	lsl r3, r3, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080E52B8  @ =0x00000964
	add r4, r7, r2
	ldr r2, _080E52BC  @ =gUnknown_08177448
	add r3, r3, r2
	ldrh r2, [r3]
	ldrh r4, [r4]
	add r2, r2, r4
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E52C0  @ =gUnknown_08177458
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080E52C4  @ =gUnknown_08177478
	add r5, r5, r4
	ldrb r4, [r5]
	mov r5, r9
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #0
	str r4, [sp]
	bl sub_080C6368
	sub r6, r6, #1
	lsl r6, r6, #24
	mov r1, r8
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsr r1, r6, #24
	cmp r6, #0
	bge _080E5200
_080E528A:
	add sp, sp, #8
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080E5298:
	.4byte gRam
_080E529C:
	.4byte 0x00000FB2
_080E52A0:
	.4byte 0x0000096C
_080E52A4:
	.4byte 0x00000F62
_080E52A8:
	.4byte 0x00000969
_080E52AC:
	.4byte 0x0000096D
_080E52B0:
	.4byte gUnknown_03003E74
_080E52B4:
	.4byte gUnknown_08177438
_080E52B8:
	.4byte 0x00000964
_080E52BC:
	.4byte gUnknown_08177448
_080E52C0:
	.4byte gUnknown_08177458
_080E52C4:
	.4byte gUnknown_08177478
	THUMB_FUNC_END sub_080E51B0

	THUMB_FUNC_START sub_080E52C8
sub_080E52C8: @ 0x080E52C8
	bx lr
	THUMB_FUNC_END sub_080E52C8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E52CC
sub_080E52CC: @ 0x080E52CC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r0, r6, #0
	bl sub_080C36D8
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r5, _080E5358  @ =gRam
	ldr r0, _080E535C  @ =0x000016C4
	add r3, r5, r0
	ldr r2, _080E5360  @ =0x00001622
	add r0, r5, r2
	ldrb r2, [r0]
	ldr r4, _080E5364  @ =0x00001623
	add r0, r5, r4
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldrh r4, [r3]
	sub r4, r4, r2
	lsl r4, r4, #16
	lsr r4, r4, #16
	add r0, r6, #0
	bl sub_080E5698
	add r4, r4, #80
	lsl r4, r4, #16
	lsr r4, r4, #16
	cmp r4, #159
	bhi _080E5352
	mov r0, #182
	lsl r0, r0, #5
	add r2, r5, r0
	ldr r1, _080E5368  @ =0x00001624
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r3, _080E536C  @ =0x00001625
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	lsl r0, r0, #16
	mov r4, #176
	lsl r4, r4, #15
	add r0, r0, r4
	lsr r0, r0, #16
	cmp r0, #159
	bhi _080E5352
	ldr r0, _080E5370  @ =0x00000F52
	add r1, r5, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E5374  @ =0x00000FC2
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #24
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #100
	bl sub_080CF140
_080E5352:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E5358:
	.4byte gRam
_080E535C:
	.4byte 0x000016C4
_080E5360:
	.4byte 0x00001622
_080E5364:
	.4byte 0x00001623
_080E5368:
	.4byte 0x00001624
_080E536C:
	.4byte 0x00001625
_080E5370:
	.4byte 0x00000F52
_080E5374:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E52CC

	THUMB_FUNC_START sub_080E5378
sub_080E5378: @ 0x080E5378
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r5, r2, #0
	ldr r4, _080E53DC  @ =gRam
	ldr r1, _080E53E0  @ =0x00000FC2
	add r0, r4, r1
	add r3, r2, r0
	ldrb r0, [r3]
	cmp r0, #0
	bne _080E53B2
	ldr r6, _080E53E4  @ =0x00000F52
	add r1, r4, r6
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E53E8  @ =gUnknown_081774B0
	add r6, r6, #16
	add r0, r4, r6
	add r0, r2, r0
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r3]
	add r0, r2, #0
	mov r1, #32
	bl sub_080C35FC
_080E53B2:
	ldr r0, _080E53EC  @ =0x00001142
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E53F0  @ =0x00000F92
	add r2, r4, r1
	add r2, r5, r2
	ldr r6, _080E53F4  @ =0x00000996
	add r0, r4, r6
	ldrb r0, [r0]
	lsr r0, r0, #1
	mov r1, #1
	and r0, r0, r1
	add r0, r0, #1
	strb r0, [r2]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E53DC:
	.4byte gRam
_080E53E0:
	.4byte 0x00000FC2
_080E53E4:
	.4byte 0x00000F52
_080E53E8:
	.4byte gUnknown_081774B0
_080E53EC:
	.4byte 0x00001142
_080E53F0:
	.4byte 0x00000F92
_080E53F4:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080E5378

	THUMB_FUNC_START sub_080E53F8
sub_080E53F8: @ 0x080E53F8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080E5458  @ =gRam
	ldr r2, _080E545C  @ =0x00000FC2
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	add r2, r1, #0
	cmp r0, #0
	bne _080E5430
	ldr r1, _080E5460  @ =0x0000164C
	add r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E5424
	ldr r1, _080E5464  @ =0x00000F62
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E5430
_080E5424:
	ldr r0, _080E5468  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080E5430:
	ldr r1, _080E546C  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080E5450
	add r0, r4, #0
	mov r1, #32
	bl sub_080C2CB4
	add r0, r4, #0
	bl sub_080E5470
_080E5450:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E5458:
	.4byte gRam
_080E545C:
	.4byte 0x00000FC2
_080E5460:
	.4byte 0x0000164C
_080E5464:
	.4byte 0x00000F62
_080E5468:
	.4byte 0x00000F52
_080E546C:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080E53F8

	THUMB_FUNC_START sub_080E5470
sub_080E5470: @ 0x080E5470
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r2, _080E54B0  @ =gRam
	ldr r1, _080E54B4  @ =0x00000F12
	add r0, r2, r1
	add r4, r5, r0
	mov r7, #150
	lsl r7, r7, #4
	add r0, r2, r7
	ldrb r3, [r4]
	ldrb r0, [r0]
	sub r0, r3, r0
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r1, r1, #16
	add r0, r2, r1
	add r0, r5, r0
	add r7, r7, #1
	add r1, r2, r7
	ldrb r0, [r0]
	ldrb r1, [r1]
	sub r0, r0, r1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r6, #0
	beq _080E54BC
	lsl r0, r6, #24
	cmp r0, #0
	blt _080E54B8
	sub r0, r3, #1
	b _080E54BA
_080E54B0:
	.4byte gRam
_080E54B4:
	.4byte 0x00000F12
_080E54B8:
	add r0, r3, #1
_080E54BA:
	strb r0, [r4]
_080E54BC:
	cmp r1, #0
	beq _080E54E4
	lsl r0, r1, #24
	cmp r0, #0
	blt _080E54D8
	ldr r0, _080E54D4  @ =0x00000F22
	add r1, r2, r0
	add r1, r5, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	b _080E54E2
	.byte 0x00
	.byte 0x00
_080E54D4:
	.4byte 0x00000F22
_080E54D8:
	ldr r7, _080E54F0  @ =0x00000F22
	add r1, r2, r7
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
_080E54E2:
	strb r0, [r1]
_080E54E4:
	add r0, r5, #0
	bl sub_080E5654
	pop {r4-r7}
	pop {r0}
	bx r0
_080E54F0:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080E5470

	THUMB_FUNC_START sub_080E54F4
sub_080E54F4: @ 0x080E54F4
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E5530  @ =gRam
	ldr r1, _080E5534  @ =0x00000996
	add r0, r5, r1
	ldrb r2, [r0]
	add r0, r4, #0
	eor r0, r0, r2
	mov r3, #1
	and r0, r0, r3
	cmp r0, #0
	beq _080E5540
	ldr r0, _080E5538  @ =0x00000F92
	add r1, r5, r0
	add r1, r4, r1
	lsr r0, r2, #1
	and r0, r0, r3
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E553C  @ =0x00000F22
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsr r1, r1, #7
	add r0, r4, #0
	bl sub_080E5698
	b _080E5564
	.byte 0x00
	.byte 0x00
_080E5530:
	.4byte gRam
_080E5534:
	.4byte 0x00000996
_080E5538:
	.4byte 0x00000F92
_080E553C:
	.4byte 0x00000F22
_080E5540:
	add r0, r4, #0
	mov r1, #48
	bl sub_080C2CB4
	mov r0, #150
	lsl r0, r0, #4
	add r1, r5, r0
	ldrb r0, [r1]
	neg r0, r0
	strb r0, [r1]
	ldr r0, _080E556C  @ =0x00000961
	add r1, r5, r0
	ldrb r0, [r1]
	neg r0, r0
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080E5470
_080E5564:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E556C:
	.4byte 0x00000961
	THUMB_FUNC_END sub_080E54F4

	THUMB_FUNC_START sub_080E5570
sub_080E5570: @ 0x080E5570
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080E55B8  @ =gRam
	ldr r1, _080E55BC  @ =0x00000EA5
	add r2, r3, r1
	add r2, r0, r2
	ldr r4, _080E55C0  @ =gUnknown_08177498
	ldr r1, _080E55C4  @ =0x0000164C
	add r5, r3, r1
	ldrb r1, [r5]
	add r1, r1, r4
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r1, _080E55C8  @ =0x00001022
	add r2, r3, r1
	add r2, r0, r2
	ldr r4, _080E55CC  @ =gUnknown_0817749A
	ldrb r1, [r5]
	add r1, r1, r4
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r1, _080E55D0  @ =0x000011B2
	add r3, r3, r1
	add r3, r0, r3
	ldr r2, _080E55D4  @ =gUnknown_0817749C
	ldrb r1, [r5]
	add r1, r1, r2
	ldrb r1, [r1]
	strb r1, [r3]
	bl sub_080E57FC
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E55B8:
	.4byte gRam
_080E55BC:
	.4byte 0x00000EA5
_080E55C0:
	.4byte gUnknown_08177498
_080E55C4:
	.4byte 0x0000164C
_080E55C8:
	.4byte 0x00001022
_080E55CC:
	.4byte gUnknown_0817749A
_080E55D0:
	.4byte 0x000011B2
_080E55D4:
	.4byte gUnknown_0817749C
	THUMB_FUNC_END sub_080E5570

	THUMB_FUNC_START sub_080E55D8
sub_080E55D8: @ 0x080E55D8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E55E8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E55D8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E55E8
sub_080E55E8: @ 0x080E55E8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E5644  @ =gRam
	ldr r0, _080E5648  @ =0x00000D94
	add r1, r5, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #48
	orr r0, r0, r2
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E563E
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E563E
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080E564C  @ =gUnknown_081774A0
	ldr r2, _080E5650  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080E563E:
	pop {r4,r5}
	pop {r0}
	bx r0
_080E5644:
	.4byte gRam
_080E5648:
	.4byte 0x00000D94
_080E564C:
	.4byte gUnknown_081774A0
_080E5650:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E55E8

	THUMB_FUNC_START sub_080E5654
sub_080E5654: @ 0x080E5654
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E5688  @ =gRam
	ldr r1, _080E568C  @ =0x00000F92
	add r4, r2, r1
	add r4, r0, r4
	ldr r3, _080E5690  @ =0x00000996
	add r1, r2, r3
	ldrb r1, [r1]
	lsr r1, r1, #1
	mov r3, #1
	and r1, r1, r3
	add r1, r1, #1
	strb r1, [r4]
	ldr r1, _080E5694  @ =0x00000F22
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	lsr r1, r1, #7
	bl sub_080E5698
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E5688:
	.4byte gRam
_080E568C:
	.4byte 0x00000F92
_080E5690:
	.4byte 0x00000996
_080E5694:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080E5654

	THUMB_FUNC_START sub_080E5698
sub_080E5698: @ 0x080E5698
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r2, _080E56BC  @ =gRam
	ldr r3, _080E56C0  @ =0x00001122
	add r2, r2, r3
	add r0, r0, r2
	ldrb r3, [r0]
	mov r2, #191
	and r2, r2, r3
	ldr r3, _080E56C4  @ =gUnknown_081774B2
	add r1, r1, r3
	ldrb r1, [r1]
	orr r2, r2, r1
	strb r2, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080E56BC:
	.4byte gRam
_080E56C0:
	.4byte 0x00001122
_080E56C4:
	.4byte gUnknown_081774B2
	THUMB_FUNC_END sub_080E5698

	THUMB_FUNC_START sub_080E56C8
sub_080E56C8: @ 0x080E56C8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E5708  @ =gRam
	ldr r0, _080E570C  @ =0x00001052
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #160
	bne _080E5702
	ldr r0, _080E5710  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #100
	bl sub_080CF140
	ldr r1, _080E5714  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #16
	strb r1, [r0]
_080E5702:
	pop {r4,r5}
	pop {r0}
	bx r0
_080E5708:
	.4byte gRam
_080E570C:
	.4byte 0x00001052
_080E5710:
	.4byte 0x00000F52
_080E5714:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E56C8

	THUMB_FUNC_START sub_080E5718
sub_080E5718: @ 0x080E5718
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E5754  @ =gRam
	ldr r0, _080E5758  @ =0x00000F92
	add r2, r5, r0
	add r2, r4, r2
	ldr r3, _080E575C  @ =gUnknown_081774BC
	ldr r1, _080E5760  @ =0x00000996
	add r6, r5, r1
	ldrb r0, [r6]
	lsr r0, r0, #1
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r2, _080E5764  @ =0x00000FC2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E576C
	ldr r7, _080E5768  @ =0x00001142
	add r1, r5, r7
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080E57E4
_080E5754:
	.4byte gRam
_080E5758:
	.4byte 0x00000F92
_080E575C:
	.4byte gUnknown_081774BC
_080E5760:
	.4byte 0x00000996
_080E5764:
	.4byte 0x00000FC2
_080E5768:
	.4byte 0x00001142
_080E576C:
	ldrb r0, [r6]
	add r1, r4, #0
	eor r1, r1, r0
	mov r0, #1
	and r1, r1, r0
	cmp r1, #0
	bne _080E57E4
	mov r1, #15
	and r1, r1, r4
	add r1, r1, #24
	add r0, r4, #0
	bl sub_080C2CB4
	ldr r1, _080E57EC  @ =0x00000F22
	add r0, r5, r1
	add r3, r4, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	ldrb r0, [r1]
	neg r0, r0
	strb r0, [r3]
	ldr r7, _080E57F0  @ =0x00000F12
	add r0, r5, r7
	add r2, r4, r0
	ldr r0, _080E57F4  @ =0x00000961
	add r6, r5, r0
	ldrb r4, [r6]
	strb r4, [r2]
	ldr r7, _080E57F8  @ =0x0000097C
	add r0, r5, r7
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	add r0, r0, #40
	cmp r0, #79
	bgt _080E57C6
	add r7, r7, #1
	add r0, r5, r7
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	add r0, r0, #40
	cmp r0, #79
	ble _080E57E4
_080E57C6:
	mov r0, #0
	ldrsb r0, [r1, r0]
	lsr r1, r0, #31
	add r0, r0, r1
	asr r0, r0, #1
	add r0, r4, r0
	strb r0, [r2]
	mov r0, #0
	ldrsb r0, [r6, r0]
	lsr r1, r0, #31
	add r0, r0, r1
	asr r0, r0, #1
	ldrb r1, [r3]
	add r0, r0, r1
	strb r0, [r3]
_080E57E4:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E57EC:
	.4byte 0x00000F22
_080E57F0:
	.4byte 0x00000F12
_080E57F4:
	.4byte 0x00000961
_080E57F8:
	.4byte 0x0000097C
	THUMB_FUNC_END sub_080E5718

	THUMB_FUNC_START sub_080E57FC
sub_080E57FC: @ 0x080E57FC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080E5830  @ =gRam
	ldr r3, _080E5834  @ =0x00001142
	add r2, r1, r3
	add r2, r0, r2
	mov r3, #0
	strb r3, [r2]
	ldr r2, _080E5838  @ =0x00000F62
	add r3, r1, r2
	add r3, r0, r3
	sub r2, r2, #128
	add r1, r1, r2
	add r1, r0, r1
	ldrb r2, [r1]
	mov r1, #16
	and r1, r1, r2
	lsl r1, r1, #24
	lsr r1, r1, #28
	strb r1, [r3]
	bl sub_080C3774
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E5830:
	.4byte gRam
_080E5834:
	.4byte 0x00001142
_080E5838:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080E57FC

	THUMB_FUNC_START sub_080E583C
sub_080E583C: @ 0x080E583C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E584C
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E583C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E584C
sub_080E584C: @ 0x080E584C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E58A8  @ =gRam
	ldr r0, _080E58AC  @ =0x00000D94
	add r1, r5, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #48
	orr r0, r0, r2
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080E58B8
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E58A2
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E58A2
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080E58B0  @ =gUnknown_081774B4
	ldr r2, _080E58B4  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080E58A2:
	pop {r4,r5}
	pop {r0}
	bx r0
_080E58A8:
	.4byte gRam
_080E58AC:
	.4byte 0x00000D94
_080E58B0:
	.4byte gUnknown_081774B4
_080E58B4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E584C

	THUMB_FUNC_START sub_080E58B8
sub_080E58B8: @ 0x080E58B8
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080E58E4  @ =gRam
	ldr r1, _080E58E8  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080E58EC  @ =gUnknown_081774C0
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #2
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
_080E58E4:
	.4byte gRam
_080E58E8:
	.4byte 0x00000F92
_080E58EC:
	.4byte gUnknown_081774C0
	THUMB_FUNC_END sub_080E58B8

	THUMB_FUNC_START sub_080E58F0
sub_080E58F0: @ 0x080E58F0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	ldr r6, _080E5950  @ =gRam
	ldr r1, _080E5954  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #6
	beq _080E5960
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E5986
	add r0, r4, #0
	bl sub_080C4F98
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080E5958  @ =0x00000996
	add r0, r6, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080E5986
	add r0, r4, #0
	bl sub_080C6F48
	ldr r1, _080E595C  @ =0x00001042
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E5986
	add r0, r4, #0
	bl sub_080E5B38
	b _080E5986
_080E5950:
	.4byte gRam
_080E5954:
	.4byte 0x00000FA2
_080E5958:
	.4byte 0x00000996
_080E595C:
	.4byte 0x00001042
_080E5960:
	add r0, r5, #0
	bl sub_080E5990
	add r0, r5, #0
	bl Sprite3_CheckIfActive_Permissive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E5986
	ldr r1, _080E598C  @ =0x00000FC2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #30
	bne _080E5986
	add r0, r5, #0
	mov r1, #109
	bl sub_080CF0AC
_080E5986:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E598C:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E58F0

	THUMB_FUNC_START sub_080E5990
sub_080E5990: @ 0x080E5990
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E5A34
	mov r7, #3
	ldr r2, _080E5A44  @ =gRam
	ldr r1, _080E5A48  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsr r1, r1, #1
	mov r0, #12
	bic r0, r0, r1
	add r0, r0, #3
	add r5, r0, #0
	add r6, sp, #4
	mov r8, r2
	ldr r3, _080E5A4C  @ =0x00000964
	add r3, r3, r8
	mov r9, r3
_080E59D0:
	ldr r0, _080E5A50  @ =gUnknown_03003E74
	ldrb r1, [r6]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r8
	ldr r1, _080E5A54  @ =gUnknown_08177500
	lsl r3, r5, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080E5A58  @ =gUnknown_08177520
	add r3, r3, r2
	ldrh r2, [r3]
	mov r4, r9
	ldrh r4, [r4]
	add r2, r2, r4
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E5A5C  @ =gUnknown_08177540
	add r3, r5, r3
	ldrb r3, [r3]
	lsl r3, r3, #24
	mov r4, #246
	lsl r4, r4, #17
	add r3, r3, r4
	lsr r3, r3, #16
	mov r4, #0
	str r4, [sp]
	bl sub_080C6368
	lsl r1, r7, #24
	mov r0, #255
	lsl r0, r0, #24
	add r1, r1, r0
	sub r0, r5, #1
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsr r7, r1, #24
	cmp r1, #0
	bge _080E59D0
_080E5A34:
	add sp, sp, #8
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E5A44:
	.4byte gRam
_080E5A48:
	.4byte 0x00000FC2
_080E5A4C:
	.4byte 0x00000964
_080E5A50:
	.4byte gUnknown_03003E74
_080E5A54:
	.4byte gUnknown_08177500
_080E5A58:
	.4byte gUnknown_08177520
_080E5A5C:
	.4byte gUnknown_08177540
	THUMB_FUNC_END sub_080E5990

	THUMB_FUNC_START sub_080E5A60
sub_080E5A60: @ 0x080E5A60
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	mov r1, #27
	bl sub_080CF0AC
	mov r0, #12
	add r1, r4, #0
	bl sub_080CA538
	add r6, r0, #0
	cmp r6, #0
	blt _080E5AFC
	ldr r3, _080E5B04  @ =gRam
	ldr r0, _080E5B08  @ =0x00000FB2
	add r5, r3, r0
	add r0, r4, r5
	ldrb r4, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r1, r3, r2
	ldr r0, _080E5B0C  @ =gUnknown_08177550
	add r0, r4, r0
	ldrb r0, [r0]
	ldrh r2, [r1]
	add r2, r2, r0
	ldr r0, _080E5B10  @ =gUnknown_08177554
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r0, _080E5B14  @ =0x00000964
	add r1, r3, r0
	ldr r0, _080E5B18  @ =gUnknown_08177558
	add r0, r4, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080E5B1C  @ =gUnknown_0817755C
	add r4, r4, r0
	ldrb r0, [r4]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r4, _080E5B20  @ =0x00000EE2
	add r0, r3, r4
	add r0, r6, r0
	strb r2, [r0]
	add r4, r4, #32
	add r0, r3, r4
	add r0, r6, r0
	lsr r2, r2, #8
	strb r2, [r0]
	ldr r2, _080E5B24  @ =0x00000ED2
	add r0, r3, r2
	add r0, r6, r0
	strb r1, [r0]
	sub r4, r4, #16
	add r0, r3, r4
	add r0, r6, r0
	lsr r1, r1, #8
	strb r1, [r0]
	add r5, r6, r5
	ldrb r2, [r5]
	ldr r0, _080E5B28  @ =0x00000F22
	add r1, r3, r0
	add r1, r6, r1
	ldr r0, _080E5B2C  @ =gUnknown_08177560
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r4, r4, #32
	add r3, r3, r4
	add r3, r6, r3
	ldr r0, _080E5B30  @ =gUnknown_08177564
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r3]
_080E5AFC:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E5B04:
	.4byte gRam
_080E5B08:
	.4byte 0x00000FB2
_080E5B0C:
	.4byte gUnknown_08177550
_080E5B10:
	.4byte gUnknown_08177554
_080E5B14:
	.4byte 0x00000964
_080E5B18:
	.4byte gUnknown_08177558
_080E5B1C:
	.4byte gUnknown_0817755C
_080E5B20:
	.4byte 0x00000EE2
_080E5B24:
	.4byte 0x00000ED2
_080E5B28:
	.4byte 0x00000F22
_080E5B2C:
	.4byte gUnknown_08177560
_080E5B30:
	.4byte gUnknown_08177564
	THUMB_FUNC_END sub_080E5A60

	THUMB_FUNC_START sub_080E5B34
sub_080E5B34: @ 0x080E5B34
	bx lr
	THUMB_FUNC_END sub_080E5B34

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E5B38
sub_080E5B38: @ 0x080E5B38
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080E5B60  @ =gRam
	ldr r2, _080E5B64  @ =0x00000FA2
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #6
	strb r2, [r1]
	ldr r2, _080E5B68  @ =0x00000FC2
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #31
	strb r2, [r1]
	ldr r1, _080E5B6C  @ =0x00001012
	add r3, r3, r1
	add r0, r0, r3
	mov r1, #3
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080E5B60:
	.4byte gRam
_080E5B64:
	.4byte 0x00000FA2
_080E5B68:
	.4byte 0x00000FC2
_080E5B6C:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080E5B38

	THUMB_FUNC_START sub_080E5B70
sub_080E5B70: @ 0x080E5B70
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	ldr r7, _080E5C40  @ =gRam
	ldr r1, _080E5C44  @ =0x00000FD2
	add r0, r7, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	beq _080E5B9E
	ldr r0, _080E5C48  @ =0x00000D94
	add r2, r7, r0
	add r2, r4, r2
	ldrb r1, [r2]
	mov r0, #241
	and r0, r0, r1
	ldr r1, _080E5C4C  @ =gUnknown_0817756C
	ldrb r1, [r1, #2]
	orr r0, r0, r1
	strb r0, [r2]
_080E5B9E:
	add r0, r4, #0
	bl sub_080E5D6C
	add r0, r4, #0
	bl sub_080E5C64
	ldr r2, _080E5C50  @ =gUnknown_08177568
	ldr r1, _080E5C54  @ =0x00001052
	add r0, r7, r1
	add r5, r4, r0
	ldrb r0, [r5]
	lsr r0, r0, #3
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r2
	ldrb r1, [r0]
	ldrb r0, [r6]
	cmp r0, #0
	beq _080E5BCA
	add r0, r1, #3
	lsl r0, r0, #24
	lsr r1, r0, #24
_080E5BCA:
	ldr r2, _080E5C58  @ =0x00000F92
	add r0, r7, r2
	add r0, r4, r0
	strb r1, [r0]
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E5C36
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E5C36
	ldr r1, _080E5C5C  @ =0x00001082
	add r0, r7, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E5C00
	add r0, r4, #0
	bl sub_080C841C
	cmp r0, #0
	bne _080E5C36
_080E5C00:
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
	ldr r2, _080E5C60  @ =0x00000FC2
	add r0, r7, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E5C18
	add r0, r4, #0
	bl sub_080E5EA0
_080E5C18:
	ldrb r0, [r6]
	cmp r0, #0
	bne _080E5C24
	add r0, r4, #0
	bl Sprite3_Move
_080E5C24:
	mov r0, r8
	bl sub_080C6F48
	mov r0, r8
	bl Sprite_WallInducedSpeedInversion
	mov r0, r8
	bl sub_080C5044
_080E5C36:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080E5C40:
	.4byte gRam
_080E5C44:
	.4byte 0x00000FD2
_080E5C48:
	.4byte 0x00000D94
_080E5C4C:
	.4byte gUnknown_0817756C
_080E5C50:
	.4byte gUnknown_08177568
_080E5C54:
	.4byte 0x00001052
_080E5C58:
	.4byte 0x00000F92
_080E5C5C:
	.4byte 0x00001082
_080E5C60:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E5B70

	THUMB_FUNC_START sub_080E5C64
sub_080E5C64: @ 0x080E5C64
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r10, r0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r10
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E5D30
	ldr r2, _080E5D40  @ =gRam
	ldr r1, _080E5D44  @ =0x00000F92
	add r0, r2, r1
	add r0, r0, r10
	ldrb r1, [r0]
	lsl r0, r1, #1
	add r0, r0, r1
	ldr r3, _080E5D48  @ =0x0000096C
	add r1, r2, r3
	strb r0, [r1]
	mov r0, #2
	mov r9, r2
	add r7, sp, #4
	mov r8, r7
_080E5CA4:
	lsl r0, r0, #24
	asr r6, r0, #24
	lsl r4, r6, #1
	ldr r0, _080E5D44  @ =0x00000F92
	add r0, r0, r9
	add r0, r0, r10
	ldrb r1, [r0]
	lsl r0, r1, #1
	add r7, r0, r1
	lsl r0, r7, #1
	add r0, r4, r0
	ldr r1, _080E5D4C  @ =gUnknown_08177594
	add r0, r0, r1
	ldrh r5, [r0]
	cmp r5, #0
	beq _080E5D18
	ldr r0, _080E5D50  @ =gUnknown_03003E74
	mov r2, r8
	ldrb r1, [r2]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r9
	ldr r1, _080E5D54  @ =gUnknown_08177588
	add r1, r4, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080E5D58  @ =0x00000964
	add r3, r3, r9
	ldr r2, _080E5D5C  @ =gUnknown_0817758E
	add r2, r4, r2
	ldrh r2, [r2]
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r4, _080E5D60  @ =gUnknown_081775B8
	add r3, r6, r7
	add r3, r3, r4
	ldrb r4, [r3]
	ldr r7, _080E5D64  @ =gUnknown_03002B99
	ldrb r3, [r7]
	orr r3, r3, r4
	lsl r3, r3, #8
	orr r5, r5, r3
	ldr r3, _080E5D68  @ =gUnknown_081775CA
	add r3, r6, r3
	ldrb r3, [r3]
	str r3, [sp]
	add r3, r5, #0
	bl sub_080C6368
_080E5D18:
	sub r1, r6, #1
	lsl r1, r1, #24
	mov r2, r8
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	lsr r0, r1, #24
	cmp r1, #0
	bge _080E5CA4
	mov r0, r10
	bl sub_080C6230
_080E5D30:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080E5D40:
	.4byte gRam
_080E5D44:
	.4byte 0x00000F92
_080E5D48:
	.4byte 0x0000096C
_080E5D4C:
	.4byte gUnknown_08177594
_080E5D50:
	.4byte gUnknown_03003E74
_080E5D54:
	.4byte gUnknown_08177588
_080E5D58:
	.4byte 0x00000964
_080E5D5C:
	.4byte gUnknown_0817758E
_080E5D60:
	.4byte gUnknown_081775B8
_080E5D64:
	.4byte gUnknown_03002B99
_080E5D68:
	.4byte gUnknown_081775CA
	THUMB_FUNC_END sub_080E5C64

	THUMB_FUNC_START sub_080E5D6C
sub_080E5D6C: @ 0x080E5D6C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r3, _080E5E68  @ =gRam
	ldr r1, _080E5E6C  @ =0x00001082
	add r0, r3, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E5E62
	ldr r2, _080E5E70  @ =0x00000FA2
	add r0, r3, r2
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #9
	bne _080E5E36
	ldr r4, _080E5E74  @ =0x000009AD
	add r0, r3, r4
	ldr r2, _080E5E78  @ =0x00001605
	add r1, r3, r2
	ldrb r2, [r0]
	ldrb r0, [r1]
	orr r0, r0, r2
	cmp r0, #0
	bne _080E5E36
	ldr r4, _080E5E7C  @ =0x00001622
	add r0, r3, r4
	ldrb r1, [r0]
	ldr r2, _080E5E80  @ =0x00001623
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r4, r4, #162
	add r0, r3, r4
	ldrb r2, [r0]
	add r4, r4, #1
	add r0, r3, r4
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	mov r0, #192
	lsl r0, r0, #13
	add r1, r1, r0
	lsr r1, r1, #16
	cmp r1, #47
	bhi _080E5E36
	mov r1, #182
	lsl r1, r1, #5
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r2, _080E5E84  @ =0x000016C1
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	sub r4, r4, #161
	add r0, r3, r4
	ldrb r2, [r0]
	add r4, r4, #1
	add r0, r3, r4
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	mov r0, #128
	lsl r0, r0, #14
	add r1, r1, r0
	lsr r1, r1, #16
	cmp r1, #47
	bhi _080E5E36
	ldr r1, _080E5E88  @ =gUnknown_03003E70
	mov r0, #1
	strb r0, [r1]
	ldr r1, _080E5E8C  @ =0x00000546
	add r0, r3, r1
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	beq _080E5E36
	ldr r2, _080E5E90  @ =0x00001002
	add r1, r3, r2
	add r1, r6, r1
	ldrb r2, [r1]
	mov r0, #1
	and r0, r0, r2
	add r2, r2, #1
	strb r2, [r1]
	ldr r4, _080E5E94  @ =0x0000017D
	add r0, r0, r4
	bl sub_080C95C0
_080E5E36:
	ldr r4, _080E5E68  @ =gRam
	ldr r0, _080E5E98  @ =0x00001122
	add r4, r4, r0
	add r4, r6, r4
	ldrb r1, [r4]
	mov r0, #240
	and r0, r0, r1
	strb r0, [r4]
	ldrb r5, [r4]
	mov r1, #8
	add r0, r5, #0
	orr r0, r0, r1
	strb r0, [r4]
	add r0, r6, #0
	bl sub_080E5F00
	mov r0, #13
	orr r5, r5, r0
	strb r5, [r4]
	mov r0, #16
	bl sub_080CF370
_080E5E62:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E5E68:
	.4byte gRam
_080E5E6C:
	.4byte 0x00001082
_080E5E70:
	.4byte 0x00000FA2
_080E5E74:
	.4byte 0x000009AD
_080E5E78:
	.4byte 0x00001605
_080E5E7C:
	.4byte 0x00001622
_080E5E80:
	.4byte 0x00001623
_080E5E84:
	.4byte 0x000016C1
_080E5E88:
	.4byte gUnknown_03003E70
_080E5E8C:
	.4byte 0x00000546
_080E5E90:
	.4byte 0x00001002
_080E5E94:
	.4byte 0x0000017D
_080E5E98:
	.4byte 0x00001122
	THUMB_FUNC_END sub_080E5D6C

	THUMB_FUNC_START sub_080E5E9C
sub_080E5E9C: @ 0x080E5E9C
	bx lr
	THUMB_FUNC_END sub_080E5E9C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E5EA0
sub_080E5EA0: @ 0x080E5EA0
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	bl GetRandomInt
	mov r2, #7
	and r2, r2, r0
	ldr r3, _080E5EE4  @ =gRam
	ldr r0, _080E5EE8  @ =0x00000F22
	add r1, r3, r0
	add r1, r4, r1
	ldr r0, _080E5EEC  @ =gUnknown_08177570
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E5EF0  @ =0x00000F12
	add r1, r3, r0
	add r1, r4, r1
	ldr r0, _080E5EF4  @ =gUnknown_08177578
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E5EF8  @ =0x00000FC2
	add r3, r3, r0
	add r4, r4, r3
	ldr r0, _080E5EFC  @ =gUnknown_08177580
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E5EE4:
	.4byte gRam
_080E5EE8:
	.4byte 0x00000F22
_080E5EEC:
	.4byte gUnknown_08177570
_080E5EF0:
	.4byte 0x00000F12
_080E5EF4:
	.4byte gUnknown_08177578
_080E5EF8:
	.4byte 0x00000FC2
_080E5EFC:
	.4byte gUnknown_08177580
	THUMB_FUNC_END sub_080E5EA0

	THUMB_FUNC_START sub_080E5F00
sub_080E5F00: @ 0x080E5F00
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080E5F24  @ =gRam
	ldr r2, _080E5F28  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r2, [r1]
	lsl r1, r2, #1
	add r1, r1, r2
	lsl r1, r1, #3
	ldr r2, _080E5F2C  @ =gUnknown_081775D0
	add r1, r1, r2
	mov r2, #3
	bl sub_080C9480
	pop {r0}
	bx r0
_080E5F24:
	.4byte gRam
_080E5F28:
	.4byte 0x00000F92
_080E5F2C:
	.4byte gUnknown_081775D0
	THUMB_FUNC_END sub_080E5F00

	THUMB_FUNC_START sub_080E5F30
sub_080E5F30: @ 0x080E5F30
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E67E8
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E5FA8
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E5FA8
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	ldr r5, _080E5FB0  @ =gRam
	ldr r1, _080E5FB4  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #3
	beq _080E5F90
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080E5FB8  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	sub r1, r1, #208
	add r0, r5, r1
	add r3, r4, r0
	ldrb r1, [r3]
	add r0, r2, #0
	eor r0, r0, r1
	cmp r0, #1
	bne _080E5F90
	strb r2, [r3]
_080E5F90:
	ldr r1, _080E5FBC  @ =gUnknown_08177660
	ldr r0, _080E5FB0  @ =gRam
	ldr r2, _080E5FB4  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080E5FA8:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080E5FB0:
	.4byte gRam
_080E5FB4:
	.4byte 0x00000F52
_080E5FB8:
	.4byte 0x00001082
_080E5FBC:
	.4byte gUnknown_08177660
	THUMB_FUNC_END sub_080E5F30

	THUMB_FUNC_START sub_080E5FC0
sub_080E5FC0: @ 0x080E5FC0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E65C8
	ldr r3, _080E6074  @ =gRam
	ldr r1, _080E6078  @ =0x00000FC2
	add r0, r3, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E6054
	ldr r2, _080E607C  @ =0x000016C4
	add r0, r3, r2
	ldrb r1, [r0]
	ldr r6, _080E6080  @ =0x000016C5
	add r0, r3, r6
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	sub r2, r2, #162
	add r0, r3, r2
	ldrb r2, [r0]
	sub r6, r6, #162
	add r0, r3, r6
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	mov r0, #160
	lsl r0, r0, #15
	add r1, r1, r0
	lsr r1, r1, #16
	cmp r1, #159
	bhi _080E6054
	mov r1, #182
	lsl r1, r1, #5
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r2, _080E6084  @ =0x000016C1
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	add r6, r6, #1
	add r0, r3, r6
	ldrb r2, [r0]
	add r6, r6, #1
	add r0, r3, r6
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	mov r0, #160
	lsl r0, r0, #15
	add r1, r1, r0
	lsr r1, r1, #16
	cmp r1, #159
	bhi _080E6054
	ldr r1, _080E6088  @ =0x00000F52
	add r0, r3, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #16
	strb r0, [r5]
_080E6054:
	ldr r0, _080E6074  @ =gRam
	ldr r2, _080E608C  @ =0x00000F92
	add r1, r0, r2
	add r1, r4, r1
	ldr r2, _080E6090  @ =gUnknown_08177670
	ldr r3, _080E6094  @ =0x00000FB2
	add r0, r0, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E6074:
	.4byte gRam
_080E6078:
	.4byte 0x00000FC2
_080E607C:
	.4byte 0x000016C4
_080E6080:
	.4byte 0x000016C5
_080E6084:
	.4byte 0x000016C1
_080E6088:
	.4byte 0x00000F52
_080E608C:
	.4byte 0x00000F92
_080E6090:
	.4byte gUnknown_08177670
_080E6094:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E5FC0

	THUMB_FUNC_START sub_080E6098
sub_080E6098: @ 0x080E6098
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080E65C8
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E60EC  @ =gRam
	ldr r3, _080E60F0  @ =0x00001082
	add r1, r2, r3
	add r1, r4, r1
	strb r0, [r1]
	sub r3, r3, #208
	add r1, r2, r3
	add r1, r4, r1
	strb r0, [r1]
	ldr r1, _080E60F4  @ =0x00000FC2
	add r0, r2, r1
	add r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #0
	bne _080E60DE
	sub r1, r1, #112
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #32
	strb r0, [r3]
_080E60DE:
	add r0, r5, #0
	bl sub_080E68A0
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E60EC:
	.4byte gRam
_080E60F0:
	.4byte 0x00001082
_080E60F4:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E6098

	THUMB_FUNC_START sub_080E60F8
sub_080E60F8: @ 0x080E60F8
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	mov r1, #18
	bl sub_080C35FC
	ldr r5, _080E6210  @ =gRam
	ldr r1, _080E6214  @ =0x00001042
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E611A
	add r0, r4, #0
	bl Sprite3_Move
_080E611A:
	add r0, r4, #0
	bl sub_080C7A48
	ldr r2, _080E6218  @ =0x00000FC2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E61B4
	mov r3, #1
	ldr r6, _080E621C  @ =0x000016C4
	add r0, r5, r6
	ldrb r1, [r0]
	ldr r2, _080E6220  @ =0x000016C5
	add r0, r5, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	sub r6, r6, #162
	add r0, r5, r6
	ldrb r2, [r0]
	add r6, r6, #1
	add r0, r5, r6
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	mov r0, #160
	lsl r0, r0, #15
	add r1, r1, r0
	lsr r1, r1, #16
	cmp r1, #159
	bhi _080E619A
	mov r1, #182
	lsl r1, r1, #5
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r2, _080E6224  @ =0x000016C1
	add r0, r5, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	add r6, r6, #1
	add r0, r5, r6
	ldrb r2, [r0]
	add r6, r6, #1
	add r0, r5, r6
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	mov r0, #160
	lsl r0, r0, #15
	add r1, r1, r0
	lsr r1, r1, #16
	cmp r1, #159
	bhi _080E619A
	mov r3, #0
_080E619A:
	cmp r3, #0
	beq _080E61B4
	ldr r2, _080E6210  @ =gRam
	ldr r1, _080E6228  @ =0x00000F52
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r3, _080E6218  @ =0x00000FC2
	add r2, r2, r3
	add r2, r4, r2
	mov r0, #128
	strb r0, [r2]
_080E61B4:
	add r0, r4, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E61E4
	ldr r2, _080E6210  @ =gRam
	ldr r6, _080E6228  @ =0x00000F52
	add r1, r2, r6
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080E6218  @ =0x00000FC2
	add r2, r2, r0
	add r2, r4, r2
	mov r0, #32
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080E6650
	add r0, r4, #0
	bl sub_080E692C
_080E61E4:
	ldr r2, _080E6210  @ =gRam
	ldr r1, _080E622C  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #31
	and r0, r0, r1
	cmp r0, #0
	beq _080E6204
	ldr r3, _080E6230  @ =0x00000FB2
	add r0, r2, r3
	add r0, r4, r0
	ldr r6, _080E6234  @ =0x00001082
	add r1, r2, r6
	add r1, r4, r1
	ldrb r1, [r1]
	strb r1, [r0]
_080E6204:
	add r0, r4, #0
	bl sub_080E68E0
	pop {r4-r6}
	pop {r0}
	bx r0
_080E6210:
	.4byte gRam
_080E6214:
	.4byte 0x00001042
_080E6218:
	.4byte 0x00000FC2
_080E621C:
	.4byte 0x000016C4
_080E6220:
	.4byte 0x000016C5
_080E6224:
	.4byte 0x000016C1
_080E6228:
	.4byte 0x00000F52
_080E622C:
	.4byte 0x00000996
_080E6230:
	.4byte 0x00000FB2
_080E6234:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080E60F8

	THUMB_FUNC_START sub_080E6238
sub_080E6238: @ 0x080E6238
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E65C8
	add r0, r4, #0
	bl sub_080E6340
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r5, _080E630C  @ =gRam
	ldr r1, _080E6310  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E6296
	ldr r3, _080E6314  @ =0x00001052
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	ldr r7, _080E6318  @ =0x00000F92
	add r2, r5, r7
	add r2, r4, r2
	ldr r3, _080E631C  @ =gUnknown_08177674
	mov r0, #4
	and r1, r1, r0
	add r7, r7, #32
	add r0, r5, r7
	add r0, r4, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	add r1, r1, r3
	ldrb r0, [r1]
	strb r0, [r2]
	ldr r1, _080E6320  @ =0x00001042
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E6296
	add r0, r4, #0
	bl Sprite3_Move
_080E6296:
	add r0, r4, #0
	bl sub_080C7A48
	ldr r2, _080E630C  @ =gRam
	ldr r3, _080E6324  @ =0x00000FB2
	add r1, r2, r3
	add r1, r4, r1
	ldr r7, _080E6328  @ =0x00001082
	add r0, r2, r7
	add r5, r4, r0
	ldrb r0, [r5]
	strb r0, [r1]
	ldr r1, _080E632C  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080E6304
	cmp r6, #15
	bhi _080E6304
	sub r3, r3, #208
	add r0, r2, r3
	add r0, r6, r0
	ldrb r1, [r0]
	ldr r7, _080E6330  @ =0x00000968
	add r0, r2, r7
	strb r1, [r0]
	ldr r1, _080E6334  @ =0x00000F02
	add r0, r2, r1
	add r0, r6, r0
	ldrb r1, [r0]
	ldr r3, _080E6338  @ =0x00000969
	add r0, r2, r3
	strb r1, [r0]
	ldr r7, _080E633C  @ =0x00000ED2
	add r0, r2, r7
	add r0, r6, r0
	ldrb r1, [r0]
	add r3, r3, #3
	add r0, r2, r3
	strb r1, [r0]
	add r7, r7, #32
	add r0, r2, r7
	add r0, r6, r0
	ldrb r1, [r0]
	add r3, r3, #1
	add r0, r2, r3
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C2EE0
	strb r0, [r5]
_080E6304:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E630C:
	.4byte gRam
_080E6310:
	.4byte 0x00000FC2
_080E6314:
	.4byte 0x00001052
_080E6318:
	.4byte 0x00000F92
_080E631C:
	.4byte gUnknown_08177674
_080E6320:
	.4byte 0x00001042
_080E6324:
	.4byte 0x00000FB2
_080E6328:
	.4byte 0x00001082
_080E632C:
	.4byte 0x00000996
_080E6330:
	.4byte 0x00000968
_080E6334:
	.4byte 0x00000F02
_080E6338:
	.4byte 0x00000969
_080E633C:
	.4byte 0x00000ED2
	THUMB_FUNC_END sub_080E6238

	THUMB_FUNC_START sub_080E6340
sub_080E6340: @ 0x080E6340
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	mov r7, #0
	mov r6, #255
	mov r2, #15
	ldr r5, _080E6388  @ =gRam
_080E634E:
	lsl r2, r2, #24
	asr r1, r2, #24
	lsl r0, r3, #3
	add r4, r1, r0
	mov r0, #15
	and r4, r4, r0
	ldr r1, _080E638C  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E6390
	add r1, r1, #80
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #220
	beq _080E637A
	cmp r0, #225
	beq _080E637A
	cmp r0, #217
	bne _080E6390
_080E637A:
	add r0, r3, #0
	add r1, r4, #0
	bl sub_080E63C0
	add r6, r4, #0
	b _080E63B2
	.byte 0x00
	.byte 0x00
_080E6388:
	.4byte gRam
_080E638C:
	.4byte 0x00000FA2
_080E6390:
	mov r1, #255
	lsl r1, r1, #24
	add r0, r2, r1
	lsr r2, r0, #24
	cmp r0, #0
	bge _080E634E
	cmp r7, #0
	bne _080E63B2
	ldr r1, _080E63BC  @ =0x00000F52
	add r0, r5, r1
	add r0, r3, r0
	strb r7, [r0]
	add r1, r1, #112
	add r0, r5, r1
	add r0, r3, r0
	mov r1, #64
	strb r1, [r0]
_080E63B2:
	add r0, r6, #0
	pop {r4-r7}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080E63BC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E6340

	THUMB_FUNC_START sub_080E63C0
sub_080E63C0: @ 0x080E63C0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	lsl r1, r1, #24
	lsr r2, r1, #24
	ldr r4, _080E649C  @ =gRam
	ldr r1, _080E64A0  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	add r0, r6, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080E643C
	ldr r3, _080E64A4  @ =0x00000EE2
	add r0, r4, r3
	add r0, r2, r0
	ldrb r1, [r0]
	ldr r3, _080E64A8  @ =0x00000968
	add r0, r4, r3
	strb r1, [r0]
	ldr r1, _080E64AC  @ =0x00000F02
	add r0, r4, r1
	add r0, r2, r0
	ldrb r1, [r0]
	add r3, r3, #1
	add r0, r4, r3
	strb r1, [r0]
	ldr r1, _080E64B0  @ =0x00000ED2
	add r0, r4, r1
	add r0, r2, r0
	ldrb r1, [r0]
	add r3, r3, #3
	add r0, r4, r3
	strb r1, [r0]
	ldr r1, _080E64B4  @ =0x00000EF2
	add r0, r4, r1
	add r0, r2, r0
	ldrb r1, [r0]
	ldr r2, _080E64B8  @ =0x0000096D
	add r0, r4, r2
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #19
	bl sub_080C2DCC
	ldr r3, _080E64BC  @ =0x00000F12
	add r0, r4, r3
	add r0, r6, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r4, r2
	ldrb r1, [r1]
	strb r1, [r0]
	add r3, r3, #16
	add r0, r4, r3
	add r0, r6, r0
	add r2, r2, #1
	add r1, r4, r2
	ldrb r1, [r1]
	strb r1, [r0]
_080E643C:
	mov r2, #15
	add r5, r4, #0
	ldr r3, _080E64C0  @ =0x00000FF2
	add r7, r5, r3
_080E6444:
	lsl r2, r2, #24
	asr r3, r2, #24
	ldr r4, _080E64A0  @ =0x00000996
	add r0, r5, r4
	ldrb r1, [r0]
	eor r1, r1, r3
	mov r0, #3
	and r1, r1, r0
	ldr r4, _080E64C4  @ =0x000010E2
	add r0, r5, r4
	add r0, r3, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	add r4, r2, #0
	cmp r1, #0
	bne _080E6488
	ldr r1, _080E64C8  @ =0x00000FA2
	add r0, r5, r1
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E6488
	add r0, r3, r7
	ldrb r0, [r0]
	cmp r0, #220
	beq _080E6480
	cmp r0, #225
	beq _080E6480
	cmp r0, #217
	bne _080E6488
_080E6480:
	lsr r1, r4, #24
	add r0, r6, #0
	bl sub_080E64CC
_080E6488:
	mov r2, #255
	lsl r2, r2, #24
	add r0, r4, r2
	lsr r2, r0, #24
	cmp r0, #0
	bge _080E6444
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E649C:
	.4byte gRam
_080E64A0:
	.4byte 0x00000996
_080E64A4:
	.4byte 0x00000EE2
_080E64A8:
	.4byte 0x00000968
_080E64AC:
	.4byte 0x00000F02
_080E64B0:
	.4byte 0x00000ED2
_080E64B4:
	.4byte 0x00000EF2
_080E64B8:
	.4byte 0x0000096D
_080E64BC:
	.4byte 0x00000F12
_080E64C0:
	.4byte 0x00000FF2
_080E64C4:
	.4byte 0x000010E2
_080E64C8:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080E63C0

	THUMB_FUNC_START sub_080E64CC
sub_080E64CC: @ 0x080E64CC
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r8, r6
	lsl r1, r1, #24
	lsr r3, r1, #24
	ldr r4, _080E6594  @ =gRam
	ldr r1, _080E6598  @ =0x00000EE2
	add r0, r4, r1
	add r0, r3, r0
	ldrb r0, [r0]
	ldr r5, _080E659C  @ =0x00000968
	add r2, r4, r5
	strb r0, [r2]
	ldr r7, _080E65A0  @ =0x00000F02
	add r0, r4, r7
	add r0, r3, r0
	ldrb r1, [r0]
	add r5, r5, #1
	add r0, r4, r5
	strb r1, [r0]
	sub r7, r7, #48
	add r0, r4, r7
	add r0, r3, r0
	ldrb r0, [r0]
	ldr r1, _080E65A4  @ =0x0000096C
	add r5, r4, r1
	strb r0, [r5]
	add r7, r7, #32
	add r0, r4, r7
	add r0, r3, r0
	ldrb r1, [r0]
	ldr r7, _080E65A8  @ =0x0000096D
	add r0, r4, r7
	strb r1, [r0]
	ldr r1, _080E65AC  @ =0x00001622
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r7, _080E65B0  @ =0x00001623
	add r0, r4, r7
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	lsl r0, r0, #16
	mov r1, #128
	lsl r1, r1, #12
	add r0, r0, r1
	lsr r0, r0, #16
	cmp r0, #15
	bhi _080E658A
	ldr r2, _080E65B4  @ =0x00001624
	add r0, r4, r2
	ldrb r1, [r0]
	add r7, r7, #2
	add r0, r4, r7
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r5]
	sub r0, r0, r1
	lsl r0, r0, #16
	mov r1, #192
	lsl r1, r1, #12
	add r0, r0, r1
	lsr r0, r0, #16
	cmp r0, #23
	bhi _080E658A
	ldr r2, _080E65B8  @ =0x00000FA2
	add r0, r4, r2
	add r0, r3, r0
	mov r1, #0
	strb r1, [r0]
	ldr r1, _080E65BC  @ =gUnknown_08173034
	ldr r5, _080E65C0  @ =0x00000FF2
	add r0, r4, r5
	add r0, r3, r0
	ldrb r0, [r0]
	sub r0, r0, #216
	add r1, r0, r1
	ldrb r0, [r1]
	cmp r0, #0
	beq _080E6580
	add r1, r0, #0
	add r0, r6, #0
	bl sub_080CF140
_080E6580:
	ldr r7, _080E65C4  @ =0x00000FC2
	add r0, r4, r7
	add r0, r0, r8
	mov r1, #14
	strb r1, [r0]
_080E658A:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080E6594:
	.4byte gRam
_080E6598:
	.4byte 0x00000EE2
_080E659C:
	.4byte 0x00000968
_080E65A0:
	.4byte 0x00000F02
_080E65A4:
	.4byte 0x0000096C
_080E65A8:
	.4byte 0x0000096D
_080E65AC:
	.4byte 0x00001622
_080E65B0:
	.4byte 0x00001623
_080E65B4:
	.4byte 0x00001624
_080E65B8:
	.4byte 0x00000FA2
_080E65BC:
	.4byte gUnknown_08173034
_080E65C0:
	.4byte 0x00000FF2
_080E65C4:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E64CC

	THUMB_FUNC_START sub_080E65C8
sub_080E65C8: @ 0x080E65C8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E662A
	add r0, r4, #0
	mov r1, #32
	bl sub_080C2CB4
	ldr r1, _080E6630  @ =gRam
	mov r2, #150
	lsl r2, r2, #4
	add r0, r1, r2
	ldrb r2, [r0]
	ldr r3, _080E6634  @ =0x000016CD
	add r0, r1, r3
	strb r2, [r0]
	ldr r3, _080E6638  @ =0x00001102
	add r0, r1, r3
	add r0, r4, r0
	mvn r2, r2
	strb r2, [r0]
	ldr r2, _080E663C  @ =0x00000961
	add r0, r1, r2
	ldrb r2, [r0]
	ldr r3, _080E6640  @ =0x000016CE
	add r0, r1, r3
	strb r2, [r0]
	ldr r3, _080E6644  @ =0x00001112
	add r0, r1, r3
	add r0, r4, r0
	mvn r2, r2
	strb r2, [r0]
	ldr r0, _080E6648  @ =0x000016F8
	add r2, r1, r0
	mov r0, #4
	strb r0, [r2]
	ldr r2, _080E664C  @ =0x00001072
	add r1, r1, r2
	add r1, r4, r1
	mov r0, #12
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080E692C
_080E662A:
	pop {r4}
	pop {r0}
	bx r0
_080E6630:
	.4byte gRam
_080E6634:
	.4byte 0x000016CD
_080E6638:
	.4byte 0x00001102
_080E663C:
	.4byte 0x00000961
_080E6640:
	.4byte 0x000016CE
_080E6644:
	.4byte 0x00001112
_080E6648:
	.4byte 0x000016F8
_080E664C:
	.4byte 0x00001072
	THUMB_FUNC_END sub_080E65C8

	THUMB_FUNC_START sub_080E6650
sub_080E6650: @ 0x080E6650
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	ldr r1, _080E6690  @ =gRam
	ldr r0, _080E6694  @ =0x000015F9
	add r2, r1, r0
	mov r0, #5
	strb r0, [r2]
	ldr r0, _080E6698  @ =0x000015FA
	add r0, r0, r1
	mov r8, r0
	add r5, r2, #0
_080E6670:
	bl GetRandomInt
	mov r1, #3
	and r1, r1, r0
	mov r2, r8
	strb r1, [r2]
	ldrb r0, [r2]
	cmp r0, #1
	beq _080E669C
	cmp r0, #2
	beq _080E66A4
	bl sub_080AA868
	lsl r0, r0, #24
	lsr r0, r0, #24
	b _080E66A8
_080E6690:
	.4byte gRam
_080E6694:
	.4byte 0x000015F9
_080E6698:
	.4byte 0x000015FA
_080E669C:
	ldr r0, _080E66A0  @ =gUnknown_02002357
	b _080E66A6
_080E66A0:
	.4byte gUnknown_02002357
_080E66A4:
	ldr r0, _080E676C  @ =gUnknown_02002323
_080E66A6:
	ldrb r0, [r0]
_080E66A8:
	cmp r0, #0
	bne _080E66AE
	b _080E67CE
_080E66AE:
	ldr r0, _080E6770  @ =gUnknown_0817767C
	ldr r4, _080E6774  @ =gRam
	ldr r1, _080E6778  @ =0x000015FA
	add r6, r4, r1
	ldrb r1, [r6]
	add r1, r1, r0
	ldrb r0, [r1]
	mov r1, r9
	mov r2, #7
	bl sub_080C9AAC
	add r3, r0, #0
	cmp r3, #0
	bge _080E66CC
	b _080E67CE
_080E66CC:
	ldr r2, _080E677C  @ =0x00000EE2
	add r1, r4, r2
	add r1, r3, r1
	ldr r2, _080E6780  @ =0x000016C4
	add r0, r4, r2
	ldrb r0, [r0]
	mov r7, #0
	strb r0, [r1]
	ldr r0, _080E6784  @ =0x00000F02
	add r1, r4, r0
	add r1, r3, r1
	add r2, r2, #1
	add r0, r4, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E6788  @ =0x00000ED2
	add r1, r4, r0
	add r1, r3, r1
	sub r2, r2, #5
	add r0, r4, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E678C  @ =0x00000EF2
	add r1, r4, r0
	add r1, r3, r1
	add r2, r2, #1
	add r0, r4, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E6790  @ =0x00001152
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #24
	strb r1, [r0]
	ldr r2, _080E6794  @ =0x00000F22
	add r1, r4, r2
	add r1, r3, r1
	ldr r2, _080E6798  @ =gUnknown_08177680
	ldrb r0, [r5]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E679C  @ =0x00000F12
	add r0, r4, r1
	add r2, r3, r0
	ldr r1, _080E67A0  @ =gUnknown_08177686
	ldrb r0, [r5]
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r1, _080E67A4  @ =0x000010E2
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #32
	strb r1, [r0]
	ldr r1, _080E67A8  @ =0x00001082
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080E67AC  @ =0x00000D74
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #255
	strb r1, [r0]
	ldr r1, _080E67B0  @ =0x000009AC
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #26
	beq _080E67CC
	ldrb r0, [r6]
	cmp r0, #1
	beq _080E67B4
	cmp r0, #2
	beq _080E67BC
	mov r0, #1
	neg r0, r0
	bl sub_080AA83C
	b _080E67CE
_080E676C:
	.4byte gUnknown_02002323
_080E6770:
	.4byte gUnknown_0817767C
_080E6774:
	.4byte gRam
_080E6778:
	.4byte 0x000015FA
_080E677C:
	.4byte 0x00000EE2
_080E6780:
	.4byte 0x000016C4
_080E6784:
	.4byte 0x00000F02
_080E6788:
	.4byte 0x00000ED2
_080E678C:
	.4byte 0x00000EF2
_080E6790:
	.4byte 0x00001152
_080E6794:
	.4byte 0x00000F22
_080E6798:
	.4byte gUnknown_08177680
_080E679C:
	.4byte 0x00000F12
_080E67A0:
	.4byte gUnknown_08177686
_080E67A4:
	.4byte 0x000010E2
_080E67A8:
	.4byte 0x00001082
_080E67AC:
	.4byte 0x00000D74
_080E67B0:
	.4byte 0x000009AC
_080E67B4:
	ldr r1, _080E67B8  @ =gUnknown_02002357
	b _080E67BE
_080E67B8:
	.4byte gUnknown_02002357
_080E67BC:
	ldr r1, _080E67C8  @ =gUnknown_02002323
_080E67BE:
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	b _080E67CE
	.byte 0x00
	.byte 0x00
_080E67C8:
	.4byte gUnknown_02002323
_080E67CC:
	strb r7, [r2]
_080E67CE:
	ldrb r0, [r5]
	sub r0, r0, #1
	strb r0, [r5]
	lsl r0, r0, #24
	cmp r0, #0
	blt _080E67DC
	b _080E6670
_080E67DC:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E6650

	THUMB_FUNC_START sub_080E67E8
sub_080E67E8: @ 0x080E67E8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r7, _080E6868  @ =gRam
	ldr r1, _080E686C  @ =0x00000F92
	add r0, r7, r1
	add r0, r6, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080E6870  @ =gUnknown_0817768C
	add r1, r1, r0
	add r0, r6, #0
	mov r2, #2
	bl sub_080C9480
	ldr r1, _080E6874  @ =0x000010D2
	add r0, r7, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E6860
	ldr r0, _080E6878  @ =gUnknown_03003E74
	ldrh r4, [r0]
	lsl r4, r4, #3
	mov r1, #170
	lsl r1, r1, #3
	add r0, r7, r1
	add r4, r4, r0
	ldrh r5, [r4, #4]
	lsl r0, r5, #22
	lsr r0, r0, #22
	mov r2, #128
	lsl r2, r2, #1
	and r2, r2, r0
	ldr r1, _080E687C  @ =gUnknown_0817774C
	ldr r0, _080E6880  @ =0x00001082
	add r3, r7, r0
	add r3, r6, r3
	ldrb r0, [r3]
	add r0, r0, r1
	ldrb r1, [r0]
	orr r1, r1, r2
	ldr r0, _080E6884  @ =0xFFFFFC00
	and r0, r0, r5
	orr r0, r0, r1
	strh r0, [r4, #4]
	ldr r1, _080E6888  @ =gUnknown_08177750
	ldrb r0, [r3]
	add r0, r0, r1
	ldrb r1, [r0]
	lsr r1, r1, #6
	mov r0, #1
	and r1, r1, r0
	lsl r1, r1, #4
	ldrb r2, [r4, #3]
	mov r0, #17
	neg r0, r0
	and r0, r0, r2
	orr r0, r0, r1
	strb r0, [r4, #3]
_080E6860:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E6868:
	.4byte gRam
_080E686C:
	.4byte 0x00000F92
_080E6870:
	.4byte gUnknown_0817768C
_080E6874:
	.4byte 0x000010D2
_080E6878:
	.4byte gUnknown_03003E74
_080E687C:
	.4byte gUnknown_0817774C
_080E6880:
	.4byte 0x00001082
_080E6884:
	.4byte 0xFFFFFC00
_080E6888:
	.4byte gUnknown_08177750
	THUMB_FUNC_END sub_080E67E8

	THUMB_FUNC_START sub_080E688C
sub_080E688C: @ 0x080E688C
	bx lr
	THUMB_FUNC_END sub_080E688C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E6890
sub_080E6890: @ 0x080E6890
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E5F30
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E6890

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E68A0
sub_080E68A0: @ 0x080E68A0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r3, _080E68D4  @ =gRam
	ldr r1, _080E68D8  @ =0x00000996
	add r0, r3, r1
	ldrb r1, [r0]
	mov r0, #31
	and r0, r0, r1
	cmp r0, #0
	beq _080E68C8
	ldr r5, _080E68DC  @ =0x00000FB2
	add r0, r3, r5
	add r0, r2, r0
	add r5, r5, #208
	add r1, r3, r5
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r0]
_080E68C8:
	add r0, r4, #0
	bl sub_080E68E0
	pop {r4,r5}
	pop {r0}
	bx r0
_080E68D4:
	.4byte gRam
_080E68D8:
	.4byte 0x00000996
_080E68DC:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E68A0

	THUMB_FUNC_START sub_080E68E0
sub_080E68E0: @ 0x080E68E0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080E6918  @ =gRam
	ldr r1, _080E691C  @ =0x00001052
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	ldr r2, _080E6920  @ =0x00000F92
	add r4, r3, r2
	add r4, r0, r4
	ldr r5, _080E6924  @ =gUnknown_08177674
	mov r2, #4
	and r1, r1, r2
	ldr r2, _080E6928  @ =0x00000FB2
	add r3, r3, r2
	add r0, r0, r3
	ldrb r0, [r0]
	orr r1, r1, r0
	add r1, r1, r5
	ldrb r0, [r1]
	strb r0, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E6918:
	.4byte gRam
_080E691C:
	.4byte 0x00001052
_080E6920:
	.4byte 0x00000F92
_080E6924:
	.4byte gUnknown_08177674
_080E6928:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E68E0

	THUMB_FUNC_START sub_080E692C
sub_080E692C: @ 0x080E692C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #30
	bl sub_080CF0AC
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E692C

	THUMB_FUNC_START sub_080E693C
sub_080E693C: @ 0x080E693C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E6A2C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E6A00
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E6A00
	add r0, r4, #0
	bl sub_080C841C
	cmp r0, #0
	bne _080E6A00
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C79F8
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E6990
	ldr r0, _080E6A08  @ =gRam
	ldr r1, _080E6A0C  @ =0x00000FC2
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E69B0
_080E6990:
	bl GetRandomInt
	mov r1, #63
	and r1, r1, r0
	add r1, r1, #32
	ldr r2, _080E6A08  @ =gRam
	ldr r3, _080E6A0C  @ =0x00000FC2
	add r0, r2, r3
	add r0, r4, r0
	strb r1, [r0]
	ldr r0, _080E6A10  @ =0x00000FB2
	add r2, r2, r0
	add r2, r4, r2
	mov r0, #3
	and r1, r1, r0
	strb r1, [r2]
_080E69B0:
	ldr r5, _080E6A08  @ =gRam
	ldr r3, _080E6A14  @ =0x00000F22
	add r1, r5, r3
	add r1, r4, r1
	ldr r2, _080E6A18  @ =gUnknown_08177754
	ldr r0, _080E6A10  @ =0x00000FB2
	add r3, r5, r0
	add r3, r4, r3
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E6A1C  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080E6A20  @ =gUnknown_08177756
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E6A24  @ =0x00001052
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #25
	lsl r1, r0, #24
	lsr r2, r1, #24
	ldrb r0, [r3]
	cmp r0, #1
	bls _080E69F4
	lsr r2, r1, #26
_080E69F4:
	ldr r1, _080E6A28  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	and r2, r2, r1
	strb r2, [r0]
_080E6A00:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E6A08:
	.4byte gRam
_080E6A0C:
	.4byte 0x00000FC2
_080E6A10:
	.4byte 0x00000FB2
_080E6A14:
	.4byte 0x00000F22
_080E6A18:
	.4byte gUnknown_08177754
_080E6A1C:
	.4byte 0x00000F12
_080E6A20:
	.4byte gUnknown_08177756
_080E6A24:
	.4byte 0x00001052
_080E6A28:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080E693C

	THUMB_FUNC_START sub_080E6A2C
sub_080E6A2C: @ 0x080E6A2C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r8
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E6ACA
	mov r2, #1
	add r7, sp, #4
	ldr r0, _080E6ADC  @ =gRam
	mov r9, r0
	ldr r3, _080E6AE0  @ =gUnknown_0817775A
	mov r10, r3
_080E6A5C:
	ldr r0, _080E6AE4  @ =gUnknown_03003E74
	ldrb r1, [r7]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	lsl r6, r2, #24
	asr r6, r6, #24
	lsl r2, r6, #1
	ldr r1, _080E6AE8  @ =0x00000F92
	add r1, r1, r9
	add r1, r1, r8
	ldrb r5, [r1]
	lsl r1, r5, #2
	add r2, r2, r1
	add r2, r2, r10
	ldrh r1, [r2]
	ldr r2, _080E6AEC  @ =gUnknown_03002B90
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080E6AF0  @ =0x00000964
	add r2, r2, r9
	ldrh r2, [r2]
	ldr r3, _080E6AF4  @ =gUnknown_08177762
	lsl r5, r5, #1
	add r5, r6, r5
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080E6AF8  @ =gUnknown_08177766
	add r5, r5, r4
	ldrb r5, [r5]
	mov r12, r5
	ldr r5, _080E6AFC  @ =gUnknown_03002B99
	ldrb r4, [r5]
	mov r5, r12
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	sub r6, r6, #1
	lsl r6, r6, #24
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsr r2, r6, #24
	cmp r6, #0
	bge _080E6A5C
	mov r0, r8
	bl sub_080C6230
_080E6ACA:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E6ADC:
	.4byte gRam
_080E6AE0:
	.4byte gUnknown_0817775A
_080E6AE4:
	.4byte gUnknown_03003E74
_080E6AE8:
	.4byte 0x00000F92
_080E6AEC:
	.4byte gUnknown_03002B90
_080E6AF0:
	.4byte 0x00000964
_080E6AF4:
	.4byte gUnknown_08177762
_080E6AF8:
	.4byte gUnknown_08177766
_080E6AFC:
	.4byte gUnknown_03002B99
	THUMB_FUNC_END sub_080E6A2C

	THUMB_FUNC_START sub_080E6B00
sub_080E6B00: @ 0x080E6B00
	bx lr
	THUMB_FUNC_END sub_080E6B00

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E6B04
sub_080E6B04: @ 0x080E6B04
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E693C
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E6B04

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E6B14
sub_080E6B14: @ 0x080E6B14
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E6B74  @ =gRam
	ldr r0, _080E6B78  @ =0x00001022
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080E6B7C  @ =gUnknown_0817776C
	ldr r0, _080E6B80  @ =0x0000164C
	add r3, r5, r0
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080E6B84  @ =0x00000EA5
	add r1, r5, r2
	add r1, r4, r1
	ldr r2, _080E6B88  @ =gUnknown_0817776E
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	bl GetRandomInt
	ldr r2, _080E6B8C  @ =0x00000FC2
	add r1, r5, r2
	add r3, r4, r1
	mov r1, #127
	and r1, r1, r0
	strb r1, [r3]
	ldr r1, _080E6B90  @ =0x000009AC
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #26
	bne _080E6B6E
	ldr r0, _080E6B94  @ =0x00000FB2
	add r2, r5, r0
	add r2, r4, r2
	mov r0, #1
	and r0, r0, r4
	mov r1, #2
	orr r0, r0, r1
	strb r0, [r2]
	mov r0, #63
	strb r0, [r3]
_080E6B6E:
	pop {r4,r5}
	pop {r0}
	bx r0
_080E6B74:
	.4byte gRam
_080E6B78:
	.4byte 0x00001022
_080E6B7C:
	.4byte gUnknown_0817776C
_080E6B80:
	.4byte 0x0000164C
_080E6B84:
	.4byte 0x00000EA5
_080E6B88:
	.4byte gUnknown_0817776E
_080E6B8C:
	.4byte 0x00000FC2
_080E6B90:
	.4byte 0x000009AC
_080E6B94:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E6B14

	THUMB_FUNC_START sub_080E6B98
sub_080E6B98: @ 0x080E6B98
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	str r4, [sp]
	ldr r0, _080E6C68  @ =gRam
	mov r8, r0
	ldr r0, _080E6C6C  @ =0x00000FB2
	add r0, r0, r8
	add r6, r4, r0
	ldrb r1, [r6]
	add r7, r1, #0
	ldr r0, _080E6C70  @ =0x00000FD2
	add r0, r0, r8
	add r0, r0, r4
	mov r10, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E6BCE
	ldr r0, _080E6C74  @ =gUnknown_08177774
	add r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r6]
_080E6BCE:
	mov r5, #150
	lsl r5, r5, #4
	add r5, r5, r8
	mov r0, #0
	strb r0, [r5]
	ldr r0, _080E6C78  @ =0x00000F92
	add r0, r0, r8
	add r0, r0, r4
	mov r9, r0
	ldrb r0, [r0]
	cmp r0, #7
	bne _080E6BEA
	mov r0, #64
	strb r0, [r5]
_080E6BEA:
	ldr r2, _080E6C7C  @ =0x00001122
	add r2, r2, r8
	add r2, r4, r2
	ldrb r0, [r2]
	mov r1, #191
	and r1, r1, r0
	ldr r0, _080E6C80  @ =gUnknown_08177770
	add r0, r7, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	ldrb r0, [r5]
	orr r1, r1, r0
	strb r1, [r2]
	add r0, r4, #0
	bl sub_080E6E24
	strb r7, [r6]
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E6C1A
	b _080E6D8E
_080E6C1A:
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E6C28
	b _080E6D8E
_080E6C28:
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C5044
	ldr r0, _080E6C84  @ =0x00000F52
	add r0, r0, r8
	add r7, r4, r0
	ldrb r1, [r7]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	beq _080E6CE8
	add r0, r4, #0
	bl sub_080C3540
	ldr r0, _080E6C88  @ =0x00000FC2
	add r0, r0, r8
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080E6CA0
	ldr r0, _080E6C8C  @ =0x00000FF2
	add r0, r0, r8
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #8
	beq _080E6C90
	cmp r0, #10
	beq _080E6C98
	b _080E6D8E
_080E6C68:
	.4byte gRam
_080E6C6C:
	.4byte 0x00000FB2
_080E6C70:
	.4byte 0x00000FD2
_080E6C74:
	.4byte gUnknown_08177774
_080E6C78:
	.4byte 0x00000F92
_080E6C7C:
	.4byte 0x00001122
_080E6C80:
	.4byte gUnknown_08177770
_080E6C84:
	.4byte 0x00000F52
_080E6C88:
	.4byte 0x00000FC2
_080E6C8C:
	.4byte 0x00000FF2
_080E6C90:
	add r0, r4, #0
	bl sub_080E6F64
	b _080E6D8E
_080E6C98:
	add r0, r4, #0
	bl sub_080E6DA8
	b _080E6D8E
_080E6CA0:
	ldrb r4, [r6]
	bl GetRandomInt
	mov r1, #63
	and r1, r1, r0
	add r1, r1, #48
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	strb r1, [r5]
	mov r0, #3
	and r1, r1, r0
	strb r1, [r6]
	ldr r0, _080E6CE4  @ =0x000009AC
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #26
	bne _080E6CD0
	mov r0, #79
	strb r0, [r5]
	add r0, r4, #0
	mov r1, #1
	eor r0, r0, r1
	strb r0, [r6]
_080E6CD0:
	ldrb r0, [r6]
	cmp r0, r4
	beq _080E6D8E
	cmp r0, r4
	bne _080E6D8E
	mov r0, #8
	mov r2, r10
	strb r0, [r2]
	b _080E6D8E
	.byte 0x00
	.byte 0x00
_080E6CE4:
	.4byte 0x000009AC
_080E6CE8:
	ldrb r1, [r6]
	mov r0, #2
	and r0, r0, r1
	lsl r0, r0, #1
	strb r0, [r5]
	ldr r1, _080E6D58  @ =0x00001052
	add r1, r1, r8
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #27
	mov r1, #3
	and r0, r0, r1
	ldrb r1, [r5]
	orr r0, r0, r1
	mov r1, r9
	strb r0, [r1]
	ldr r0, _080E6D5C  @ =0x00000FC2
	add r0, r0, r8
	add r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #0
	beq _080E6D74
	ldr r1, _080E6D60  @ =0x00000F22
	add r1, r1, r8
	add r1, r4, r1
	ldr r2, _080E6D64  @ =gUnknown_08177778
	ldrb r0, [r6]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E6D68  @ =0x00000F12
	add r1, r1, r8
	add r1, r4, r1
	ldr r2, _080E6D6C  @ =gUnknown_0817777C
	ldrb r0, [r6]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C6F48
	ldr r0, _080E6D70  @ =0x00001042
	add r0, r0, r8
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E6D8E
	ldrb r0, [r6]
	mov r2, #1
	eor r0, r0, r2
	strb r0, [r6]
	b _080E6D8E
	.byte 0x00
	.byte 0x00
_080E6D58:
	.4byte 0x00001052
_080E6D5C:
	.4byte 0x00000FC2
_080E6D60:
	.4byte 0x00000F22
_080E6D64:
	.4byte gUnknown_08177778
_080E6D68:
	.4byte 0x00000F12
_080E6D6C:
	.4byte gUnknown_0817777C
_080E6D70:
	.4byte 0x00001042
_080E6D74:
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	ldr r1, _080E6DA0  @ =gUnknown_08177780
	ldr r0, _080E6DA4  @ =0x00000FF2
	add r0, r0, r8
	ldr r2, [sp]
	add r0, r2, r0
	ldrb r0, [r0]
	sub r0, r0, #8
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r3]
_080E6D8E:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E6DA0:
	.4byte gUnknown_08177780
_080E6DA4:
	.4byte 0x00000FF2
	THUMB_FUNC_END sub_080E6B98

	THUMB_FUNC_START sub_080E6DA8
sub_080E6DA8: @ 0x080E6DA8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080E6E0C  @ =gRam
	ldr r2, _080E6E10  @ =0x00000FC2
	add r0, r1, r2
	add r3, r4, r0
	ldrb r2, [r3]
	mov r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, #0
	blt _080E6DEA
	mov r5, #15
	add r0, r5, #0
	and r0, r0, r2
	cmp r0, #0
	bne _080E6DDA
	ldr r0, _080E6E14  @ =0x00000FB2
	add r1, r1, r0
	add r1, r4, r1
	ldr r2, _080E6E18  @ =gUnknown_0817779A
	ldrb r0, [r1]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080E6DDA:
	ldrb r1, [r3]
	add r0, r5, #0
	and r0, r0, r1
	cmp r0, #8
	bne _080E6DEA
	add r0, r4, #0
	bl sub_080E5A60
_080E6DEA:
	ldr r0, _080E6E0C  @ =gRam
	ldr r2, _080E6E1C  @ =0x00000F82
	add r1, r0, r2
	add r1, r4, r1
	ldr r2, _080E6E20  @ =gUnknown_08177790
	ldr r3, _080E6E10  @ =0x00000FC2
	add r0, r0, r3
	add r0, r4, r0
	ldrb r0, [r0]
	lsr r0, r0, #4
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E6E0C:
	.4byte gRam
_080E6E10:
	.4byte 0x00000FC2
_080E6E14:
	.4byte 0x00000FB2
_080E6E18:
	.4byte gUnknown_0817779A
_080E6E1C:
	.4byte 0x00000F82
_080E6E20:
	.4byte gUnknown_08177790
	THUMB_FUNC_END sub_080E6DA8

	THUMB_FUNC_START sub_080E6E24
sub_080E6E24: @ 0x080E6E24
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	cmp r0, #0
	bne _080E6EEA
	ldr r6, _080E6EF8  @ =gRam
	ldr r1, _080E6EFC  @ =0x00000FB2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #3
	beq _080E6EC8
	ldr r2, _080E6F00  @ =0x00000F82
	add r0, r6, r2
	add r0, r4, r0
	ldrb r5, [r0]
	lsl r0, r5, #1
	add r5, r5, r0
	add r5, r1, r5
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r2, _080E6F04  @ =gUnknown_03003E74
	add r0, sp, #4
	ldrb r1, [r0]
	ldrh r0, [r2]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r4, #150
	lsl r4, r4, #4
	add r2, r6, r4
	ldr r1, _080E6F08  @ =gUnknown_0817779E
	lsl r3, r5, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r7, _080E6F0C  @ =0x00000964
	add r4, r6, r7
	ldr r2, _080E6F10  @ =gUnknown_081777B0
	add r3, r3, r2
	ldrh r2, [r3]
	ldrh r4, [r4]
	add r2, r2, r4
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E6F14  @ =gUnknown_081777C2
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080E6F18  @ =gUnknown_081777CB
	add r5, r5, r4
	mov r12, r5
	ldr r5, _080E6F1C  @ =0x00000969
	add r4, r6, r5
	mov r7, r12
	ldrb r7, [r7]
	mov r12, r7
	ldrb r4, [r4]
	mov r5, r12
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r7, r9
	str r7, [sp]
	bl sub_080C6368
_080E6EC8:
	ldr r1, _080E6F04  @ =gUnknown_03003E74
	ldrh r0, [r1]
	add r0, r0, #1
	strh r0, [r1]
	ldr r0, _080E6F20  @ =0x00001012
	add r4, r6, r0
	add r4, r4, r8
	ldrb r0, [r4]
	sub r0, r0, #1
	strb r0, [r4]
	mov r0, r8
	mov r1, #0
	bl sub_080C626C
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
_080E6EEA:
	add sp, sp, #8
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080E6EF8:
	.4byte gRam
_080E6EFC:
	.4byte 0x00000FB2
_080E6F00:
	.4byte 0x00000F82
_080E6F04:
	.4byte gUnknown_03003E74
_080E6F08:
	.4byte gUnknown_0817779E
_080E6F0C:
	.4byte 0x00000964
_080E6F10:
	.4byte gUnknown_081777B0
_080E6F14:
	.4byte gUnknown_081777C2
_080E6F18:
	.4byte gUnknown_081777CB
_080E6F1C:
	.4byte 0x00000969
_080E6F20:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080E6E24

	THUMB_FUNC_START sub_080E6F24
sub_080E6F24: @ 0x080E6F24
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E6B14
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E6F24

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E6F34
sub_080E6F34: @ 0x080E6F34
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E6B14
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E6F34

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E6F44
sub_080E6F44: @ 0x080E6F44
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E6B98
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E6F44

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E6F54
sub_080E6F54: @ 0x080E6F54
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E6B98
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E6F54

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E6F64
sub_080E6F64: @ 0x080E6F64
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r5, r1, #0
	ldr r6, _080E6F98  @ =gRam
	ldr r2, _080E6F9C  @ =0x00000FC2
	add r0, r6, r2
	add r4, r1, r0
	ldrb r0, [r4]
	cmp r0, #28
	bne _080E6F80
	add r0, r1, #0
	bl sub_080E5A60
_080E6F80:
	ldr r0, _080E6FA0  @ =0x00000F82
	add r1, r6, r0
	add r1, r5, r1
	ldr r2, _080E6FA4  @ =gUnknown_08177784
	ldrb r0, [r4]
	lsr r0, r0, #3
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r4-r6}
	pop {r0}
	bx r0
_080E6F98:
	.4byte gRam
_080E6F9C:
	.4byte 0x00000FC2
_080E6FA0:
	.4byte 0x00000F82
_080E6FA4:
	.4byte gUnknown_08177784
	THUMB_FUNC_END sub_080E6F64

	THUMB_FUNC_START sub_080E6FA8
sub_080E6FA8: @ 0x080E6FA8
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r9, r4
	add r0, r4, #0
	bl sub_080E71D4
	ldr r6, _080E70F4  @ =gRam
	ldr r1, _080E70F8  @ =0x00001072
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E6FD0
	add r0, r4, #0
	bl sub_080E2614
_080E6FD0:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r5, r0, #24
	cmp r5, #0
	beq _080E6FE0
	b _080E71AE
_080E6FE0:
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r2, _080E70FC  @ =0x00001152
	add r0, r6, r2
	add r0, r0, r4
	mov r8, r0
	ldrb r0, [r0]
	sub r0, r0, #2
	mov r3, r8
	strb r0, [r3]
	ldr r1, _080E7100  @ =0x00001142
	add r0, r6, r1
	add r7, r4, r0
	mov r0, #0
	ldrsb r0, [r7, r0]
	cmp r0, #0
	bge _080E700E
	strb r5, [r7]
	strb r5, [r3]
	add r0, r4, #0
	bl sub_080E2614
_080E700E:
	ldr r2, _080E7104  @ =0x00000F52
	add r0, r6, r2
	add r2, r4, r0
	ldrb r3, [r2]
	mov r12, r3
	cmp r3, #0
	beq _080E701E
	b _080E716C
_080E701E:
	ldr r5, _080E7108  @ =0x00001032
	add r0, r6, r5
	add r5, r4, r0
	ldrb r1, [r5]
	mov r0, #64
	orr r1, r1, r0
	mov r0, #0
	orr r1, r1, r0
	strb r1, [r5]
	ldr r3, _080E710C  @ =0x00000FC2
	add r0, r6, r3
	add r7, r4, r0
	ldrb r3, [r7]
	cmp r3, #1
	beq _080E7128
	ldr r5, _080E7110  @ =0x00000996
	add r0, r6, r5
	ldrb r1, [r0]
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080E70C4
	ldr r1, _080E7114  @ =0x000016C4
	add r0, r6, r1
	ldrb r1, [r0]
	ldr r2, _080E7118  @ =0x000016C5
	add r0, r6, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r5, _080E711C  @ =0x00001622
	add r0, r6, r5
	ldrb r2, [r0]
	add r5, r5, #1
	add r0, r6, r5
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	mov r0, #248
	lsl r0, r0, #13
	add r1, r1, r0
	lsr r1, r1, #16
	cmp r1, #61
	bhi _080E70C4
	mov r1, #182
	lsl r1, r1, #5
	add r0, r6, r1
	ldrb r1, [r0]
	ldr r2, _080E7120  @ =0x000016C1
	add r0, r6, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	add r5, r5, #1
	add r0, r6, r5
	ldrb r2, [r0]
	add r5, r5, #1
	add r0, r6, r5
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	mov r0, #192
	lsl r0, r0, #14
	add r1, r1, r0
	lsr r1, r1, #16
	cmp r1, #87
	bhi _080E70C4
	cmp r3, #0
	bne _080E70C4
	mov r0, #48
	strb r0, [r7]
	add r0, r4, #0
	mov r1, #58
	bl sub_080CF0AC
_080E70C4:
	mov r0, r9
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E70D8
	bl sub_080AF16C
	bl sub_0809945C
_080E70D8:
	ldr r2, _080E70F4  @ =gRam
	ldr r1, _080E710C  @ =0x00000FC2
	add r0, r2, r1
	add r0, r0, r9
	ldrb r1, [r0]
	cmp r1, #0
	beq _080E71AE
	ldr r3, _080E7124  @ =0x000010C2
	add r0, r2, r3
	add r0, r0, r9
	add r1, r1, #20
	strb r1, [r0]
	b _080E71AE
	.byte 0x00
	.byte 0x00
_080E70F4:
	.4byte gRam
_080E70F8:
	.4byte 0x00001072
_080E70FC:
	.4byte 0x00001152
_080E7100:
	.4byte 0x00001142
_080E7104:
	.4byte 0x00000F52
_080E7108:
	.4byte 0x00001032
_080E710C:
	.4byte 0x00000FC2
_080E7110:
	.4byte 0x00000996
_080E7114:
	.4byte 0x000016C4
_080E7118:
	.4byte 0x000016C5
_080E711C:
	.4byte 0x00001622
_080E7120:
	.4byte 0x000016C1
_080E7124:
	.4byte 0x000010C2
_080E7128:
	mov r3, #191
	and r1, r1, r3
	strb r1, [r5]
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	ldr r0, _080E7160  @ =0x00001012
	add r1, r6, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #127
	and r0, r0, r2
	strb r0, [r1]
	ldrb r0, [r5]
	and r3, r3, r0
	strb r3, [r5]
	ldr r1, _080E7164  @ =0x00001122
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #11
	strb r1, [r0]
	ldr r2, _080E7168  @ =0x000010C2
	add r0, r6, r2
	add r0, r4, r0
	mov r3, r12
	strb r3, [r0]
	b _080E71AE
	.byte 0x00
	.byte 0x00
_080E7160:
	.4byte 0x00001012
_080E7164:
	.4byte 0x00001122
_080E7168:
	.4byte 0x000010C2
_080E716C:
	mov r0, r9
	bl sub_080C5044
	mov r0, r9
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E71AE
	mov r0, r9
	bl Sprite3_Move
	mov r0, r9
	bl sub_080C79F8
	ldr r5, _080E71BC  @ =0x00000FC2
	add r0, r6, r5
	mov r1, r9
	add r2, r1, r0
	ldrb r1, [r2]
	ldrb r0, [r7]
	orr r0, r0, r1
	cmp r0, #0
	bne _080E71AE
	mov r0, #8
	strb r0, [r2]
	mov r0, #16
	mov r2, r8
	strb r0, [r2]
	mov r0, r9
	mov r1, #12
	bl sub_080C35FC
_080E71AE:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E71BC:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E6FA8

	THUMB_FUNC_START sub_080E71C0
sub_080E71C0: @ 0x080E71C0
	bx lr
	THUMB_FUNC_END sub_080E71C0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E71C4
sub_080E71C4: @ 0x080E71C4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E6FA8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E71C4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E71D4
sub_080E71D4: @ 0x080E71D4
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	mov r1, #0
	mov r0, sp
	strb r1, [r0]
	ldr r0, _080E721C  @ =gRam
	ldr r1, _080E7220  @ =0x00000F52
	add r0, r0, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E7202
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E7212
_080E7202:
	ldr r1, _080E7224  @ =gUnknown_081777D4
	add r0, r4, #0
	mov r2, #2
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C6230
_080E7212:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E721C:
	.4byte gRam
_080E7220:
	.4byte 0x00000F52
_080E7224:
	.4byte gUnknown_081777D4
	THUMB_FUNC_END sub_080E71D4

	THUMB_FUNC_START sub_080E7228
sub_080E7228: @ 0x080E7228
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080E7254  @ =gRam
	ldr r2, _080E7258  @ =0x00000FE2
	add r0, r1, r2
	add r0, r4, r0
	ldrb r3, [r0]
	add r5, r1, #0
	cmp r3, #0
	bne _080E7264
	ldr r1, _080E725C  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #2
	beq _080E727C
	ldr r2, _080E7260  @ =0x00000F62
	add r0, r5, r2
	b _080E7270
	.byte 0x00
	.byte 0x00
_080E7254:
	.4byte gRam
_080E7258:
	.4byte 0x00000FE2
_080E725C:
	.4byte 0x00000F52
_080E7260:
	.4byte 0x00000F62
_080E7264:
	mov r0, #4
	and r0, r0, r3
	cmp r0, #0
	beq _080E727C
	ldr r1, _080E7278  @ =0x00000F62
	add r0, r5, r1
_080E7270:
	add r0, r4, r0
	ldrb r3, [r0]
	b _080E727E
	.byte 0x00
	.byte 0x00
_080E7278:
	.4byte 0x00000F62
_080E727C:
	mov r3, #8
_080E727E:
	ldr r2, _080E7340  @ =0x00000F92
	add r1, r5, r2
	add r1, r4, r1
	ldr r0, _080E7344  @ =gUnknown_081777E4
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E7348  @ =0x00001122
	add r2, r5, r0
	add r2, r4, r2
	ldrb r0, [r2]
	mov r1, #191
	and r1, r1, r0
	ldr r0, _080E734C  @ =gUnknown_081777ED
	add r0, r3, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E7338
	ldr r1, _080E7350  @ =0x00001072
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E72D6
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E72D6
	add r0, r4, #0
	mov r1, #30
	bl sub_080CF0AC
_080E72D6:
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E72EA
	bl sub_080AF16C
	bl sub_0809945C
_080E72EA:
	ldr r5, _080E7354  @ =gRam
	ldr r2, _080E7350  @ =0x00001072
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #14
	bne _080E7316
	ldr r1, _080E7358  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	sub r2, r2, #160
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r1, _080E735C  @ =0x00000FE2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
_080E7316:
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E7338
	ldr r1, _080E7360  @ =gUnknown_081777F8
	ldr r2, _080E7358  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080E7338:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080E7340:
	.4byte 0x00000F92
_080E7344:
	.4byte gUnknown_081777E4
_080E7348:
	.4byte 0x00001122
_080E734C:
	.4byte gUnknown_081777ED
_080E7350:
	.4byte 0x00001072
_080E7354:
	.4byte gRam
_080E7358:
	.4byte 0x00000F52
_080E735C:
	.4byte 0x00000FE2
_080E7360:
	.4byte gUnknown_081777F8
	THUMB_FUNC_END sub_080E7228

	THUMB_FUNC_START sub_080E7364
sub_080E7364: @ 0x080E7364
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E73D8  @ =gRam
	ldr r1, _080E73DC  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r7, [r6]
	cmp r7, #0
	bne _080E7406
	ldr r0, _080E73E0  @ =0x00001012
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mov r2, #127
	and r0, r0, r2
	strb r0, [r1]
	ldr r0, _080E73E4  @ =0x00000E75
	add r1, r5, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #251
	and r0, r0, r2
	strb r0, [r1]
	ldr r0, _080E73E8  @ =0x00001032
	add r1, r5, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #191
	and r0, r0, r2
	strb r0, [r1]
	ldr r0, _080E73EC  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	bl GetRandomInt
	mov r1, #31
	and r1, r1, r0
	add r1, r1, #32
	strb r1, [r6]
	ldr r1, _080E73F0  @ =0x00000F72
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #4
	beq _080E73F4
	bl GetRandomInt
	mov r1, #3
	and r1, r1, r0
	b _080E7400
_080E73D8:
	.4byte gRam
_080E73DC:
	.4byte 0x00000FC2
_080E73E0:
	.4byte 0x00001012
_080E73E4:
	.4byte 0x00000E75
_080E73E8:
	.4byte 0x00001032
_080E73EC:
	.4byte 0x00000F52
_080E73F0:
	.4byte 0x00000F72
_080E73F4:
	strb r7, [r1]
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r1, r0, #24
_080E7400:
	add r0, r4, #0
	bl sub_080E757C
_080E7406:
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E7364

	THUMB_FUNC_START sub_080E740C
sub_080E740C: @ 0x080E740C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E7464  @ =gRam
	ldr r1, _080E7468  @ =0x00000FC2
	add r0, r5, r1
	add r2, r4, r0
	ldrb r1, [r2]
	cmp r1, #0
	beq _080E74B4
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C6F48
	ldr r2, _080E746C  @ =0x00001042
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E7478
	ldr r3, _080E7470  @ =0x00001052
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	ldr r0, _080E7474  @ =0x00000F62
	add r3, r5, r0
	add r3, r4, r3
	sub r2, r2, #144
	add r0, r5, r2
	add r0, r4, r0
	ldrb r2, [r0]
	lsl r2, r2, #1
	lsl r1, r1, #24
	lsr r1, r1, #26
	mov r0, #1
	and r1, r1, r0
	orr r2, r2, r1
	strb r2, [r3]
	b _080E74C0
	.byte 0x00
	.byte 0x00
_080E7464:
	.4byte gRam
_080E7468:
	.4byte 0x00000FC2
_080E746C:
	.4byte 0x00001042
_080E7470:
	.4byte 0x00001052
_080E7474:
	.4byte 0x00000F62
_080E7478:
	ldr r3, _080E74A4  @ =0x00000FB2
	add r0, r5, r3
	add r0, r4, r0
	ldrb r2, [r0]
	mov r1, #1
	eor r1, r1, r2
	strb r1, [r0]
	ldr r0, _080E74A8  @ =0x00000F22
	add r2, r5, r0
	add r2, r4, r2
	ldr r0, _080E74AC  @ =gUnknown_08177804
	add r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r2]
	sub r3, r3, #160
	add r2, r5, r3
	add r2, r4, r2
	ldr r0, _080E74B0  @ =gUnknown_08177808
	add r1, r1, r0
	ldrb r0, [r1]
	b _080E74BE
	.byte 0x00
	.byte 0x00
_080E74A4:
	.4byte 0x00000FB2
_080E74A8:
	.4byte 0x00000F22
_080E74AC:
	.4byte gUnknown_08177804
_080E74B0:
	.4byte gUnknown_08177808
_080E74B4:
	ldr r3, _080E74C8  @ =0x00000F52
	add r0, r5, r3
	add r0, r4, r0
	strb r1, [r0]
	mov r0, #32
_080E74BE:
	strb r0, [r2]
_080E74C0:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E74C8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E740C

	THUMB_FUNC_START sub_080E74CC
sub_080E74CC: @ 0x080E74CC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	add r5, r3, #0
	ldr r4, _080E751C  @ =gRam
	ldr r0, _080E7520  @ =0x00001012
	add r1, r4, r0
	add r1, r3, r1
	ldrb r2, [r1]
	mov r0, #128
	orr r0, r0, r2
	strb r0, [r1]
	ldr r2, _080E7524  @ =0x00000E75
	add r1, r4, r2
	add r1, r3, r1
	ldrb r0, [r1]
	mov r2, #4
	orr r0, r0, r2
	strb r0, [r1]
	ldr r0, _080E7528  @ =0x00001032
	add r1, r4, r0
	add r1, r3, r1
	ldrb r2, [r1]
	mov r0, #64
	orr r0, r0, r2
	strb r0, [r1]
	ldr r1, _080E752C  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	beq _080E7534
	ldr r2, _080E7530  @ =0x00000FD2
	add r1, r4, r2
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080E756A
_080E751C:
	.4byte gRam
_080E7520:
	.4byte 0x00001012
_080E7524:
	.4byte 0x00000E75
_080E7528:
	.4byte 0x00001032
_080E752C:
	.4byte 0x00000996
_080E7530:
	.4byte 0x00000FD2
_080E7534:
	ldr r1, _080E7550  @ =0x00000FD2
	add r0, r4, r1
	add r0, r3, r0
	ldrb r1, [r0]
	cmp r1, #0
	beq _080E7558
	cmp r1, #32
	bne _080E756A
	ldr r2, _080E7554  @ =0x00000FE2
	add r0, r4, r2
	add r0, r3, r0
	mov r1, #64
	b _080E7568
	.byte 0x00
	.byte 0x00
_080E7550:
	.4byte 0x00000FD2
_080E7554:
	.4byte 0x00000FE2
_080E7558:
	ldr r2, _080E7570  @ =0x00000F52
	add r0, r4, r2
	add r0, r5, r0
	strb r1, [r0]
	ldr r1, _080E7574  @ =0x00000FC2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #16
_080E7568:
	strb r1, [r0]
_080E756A:
	pop {r4,r5}
	pop {r0}
	bx r0
_080E7570:
	.4byte 0x00000F52
_080E7574:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E74CC

	THUMB_FUNC_START sub_080E7578
sub_080E7578: @ 0x080E7578
	bx lr
	THUMB_FUNC_END sub_080E7578

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E757C
sub_080E757C: @ 0x080E757C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r4, _080E75B4  @ =gRam
	ldr r3, _080E75B8  @ =0x00000FB2
	add r2, r4, r3
	add r2, r0, r2
	strb r1, [r2]
	ldr r2, _080E75BC  @ =0x00000F22
	add r3, r4, r2
	add r3, r0, r3
	ldr r2, _080E75C0  @ =gUnknown_08177804
	add r2, r1, r2
	ldrb r2, [r2]
	strb r2, [r3]
	ldr r3, _080E75C4  @ =0x00000F12
	add r4, r4, r3
	add r0, r0, r4
	ldr r2, _080E75C8  @ =gUnknown_08177808
	add r1, r1, r2
	ldrb r1, [r1]
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E75B4:
	.4byte gRam
_080E75B8:
	.4byte 0x00000FB2
_080E75BC:
	.4byte 0x00000F22
_080E75C0:
	.4byte gUnknown_08177804
_080E75C4:
	.4byte 0x00000F12
_080E75C8:
	.4byte gUnknown_08177808
	THUMB_FUNC_END sub_080E757C

	THUMB_FUNC_START sub_080E75CC
sub_080E75CC: @ 0x080E75CC
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080E76A8  @ =gRam
	ldr r1, _080E76AC  @ =0x000009B2
	add r0, r6, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bne _080E76DC
	ldr r2, _080E76B0  @ =0x00000D94
	add r0, r6, r2
	add r0, r5, r0
	mov r1, #48
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080E7948
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r4, r0, #24
	cmp r4, #0
	beq _080E7606
	b _080E77B2
_080E7606:
	ldr r3, _080E76B4  @ =0x00001052
	add r2, r6, r3
	add r2, r5, r2
	ldr r1, _080E76B8  @ =0x00000FB2
	add r0, r6, r1
	add r0, r0, r5
	mov r8, r0
	ldrb r0, [r2]
	mov r3, r8
	ldrb r1, [r3]
	sub r0, r0, r1
	strb r0, [r2]
	add r0, r5, #0
	bl sub_080C5044
	add r0, r5, #0
	bl sub_080C99DC
	ldr r1, _080E76BC  @ =0x00001152
	add r0, r6, r1
	add r7, r5, r0
	ldrb r0, [r7]
	sub r0, r0, #2
	strb r0, [r7]
	ldr r2, _080E76C0  @ =0x00001142
	add r0, r6, r2
	add r2, r5, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080E7648
	b _080E77B2
_080E7648:
	strb r4, [r2]
	add r0, r5, #0
	bl sub_080C7A48
	ldr r3, _080E76C4  @ =0x00001042
	add r0, r6, r3
	add r0, r5, r0
	ldrb r1, [r0]
	neg r0, r1
	orr r0, r0, r1
	lsr r4, r0, #31
	ldr r0, _080E76C8  @ =gUnknown_0817780C
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r7]
	ldr r0, _080E76CC  @ =0x00000F12
	add r1, r6, r0
	add r1, r5, r1
	ldr r0, _080E76D0  @ =gUnknown_0817780E
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	bl GetRandomInt
	mov r1, #1
	and r1, r1, r0
	cmp r1, #0
	beq _080E7684
	add r0, r4, #2
	add r4, r0, #0
_080E7684:
	ldr r2, _080E76D4  @ =0x00000F22
	add r1, r6, r2
	add r1, r5, r1
	ldr r0, _080E76D8  @ =gUnknown_08177810
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	mov r0, #2
	and r0, r0, r4
	sub r0, r0, #1
	mov r3, r8
	strb r0, [r3]
	add r0, r5, #0
	mov r1, #30
	bl sub_080CF0AC
	b _080E77B2
	.byte 0x00
	.byte 0x00
_080E76A8:
	.4byte gRam
_080E76AC:
	.4byte 0x000009B2
_080E76B0:
	.4byte 0x00000D94
_080E76B4:
	.4byte 0x00001052
_080E76B8:
	.4byte 0x00000FB2
_080E76BC:
	.4byte 0x00001152
_080E76C0:
	.4byte 0x00001142
_080E76C4:
	.4byte 0x00001042
_080E76C8:
	.4byte gUnknown_0817780C
_080E76CC:
	.4byte 0x00000F12
_080E76D0:
	.4byte gUnknown_0817780E
_080E76D4:
	.4byte 0x00000F22
_080E76D8:
	.4byte gUnknown_08177810
_080E76DC:
	ldr r1, _080E77BC  @ =0x00001610
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080E76EC
	add r0, r5, #0
	bl sub_080C58F0
_080E76EC:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E77B2
	ldr r3, _080E77C0  @ =0x00001122
	add r2, r6, r3
	add r2, r5, r2
	ldr r0, _080E77C4  @ =0x00000996
	add r4, r6, r0
	ldrb r0, [r4]
	lsl r0, r0, #2
	mov r3, #64
	neg r3, r3
	add r1, r3, #0
	and r0, r0, r1
	strb r0, [r2]
	add r0, r5, #0
	bl sub_080C99DC
	ldrb r1, [r4]
	add r0, r5, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080E77B2
	ldr r1, _080E77C8  @ =0x00001622
	add r0, r6, r1
	ldrb r1, [r0]
	ldr r2, _080E77CC  @ =0x00001623
	add r0, r6, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r3, _080E77D0  @ =0x000016C4
	add r0, r6, r3
	ldrb r2, [r0]
	add r3, r3, #1
	add r0, r6, r3
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #4
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #15
	bhi _080E778A
	ldr r1, _080E77D4  @ =0x00001624
	add r0, r6, r1
	ldrb r1, [r0]
	ldr r2, _080E77D8  @ =0x00001625
	add r0, r6, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r3, r3, #5
	add r0, r6, r3
	ldrb r2, [r0]
	add r3, r3, #1
	add r0, r6, r3
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	sub r1, r1, #4
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #11
	bhi _080E778A
	add r0, r5, #0
	bl sub_080C3BD0
_080E778A:
	ldr r6, _080E77DC  @ =gRam
	ldr r1, _080E77C4  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	add r4, r5, #0
	eor r4, r4, r0
	mov r0, #3
	and r4, r4, r0
	cmp r4, #0
	bne _080E77B2
	add r0, r5, #0
	bl sub_080C7A48
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E77B2
	ldr r2, _080E77E0  @ =0x00000FA2
	add r0, r6, r2
	add r0, r5, r0
	strb r4, [r0]
_080E77B2:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080E77BC:
	.4byte 0x00001610
_080E77C0:
	.4byte 0x00001122
_080E77C4:
	.4byte 0x00000996
_080E77C8:
	.4byte 0x00001622
_080E77CC:
	.4byte 0x00001623
_080E77D0:
	.4byte 0x000016C4
_080E77D4:
	.4byte 0x00001624
_080E77D8:
	.4byte 0x00001625
_080E77DC:
	.4byte gRam
_080E77E0:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080E75CC

	THUMB_FUNC_START sub_080E77E4
sub_080E77E4: @ 0x080E77E4
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp]
	mov r4, #3
	ldr r3, _080E7900  @ =gRam
	ldr r1, _080E7904  @ =0x00000FA2
	add r0, r3, r1
	ldrb r0, [r0]
	ldr r2, _080E7908  @ =0x00000FA3
	add r1, r3, r2
	ldrb r1, [r1]
	ldr r5, _080E790C  @ =0x00000FA4
	add r2, r3, r5
	add r0, r0, r1
	ldrb r2, [r2]
	add r0, r0, r2
	cmp r0, #9
	bgt _080E7816
	mov r4, #7
_080E7816:
	lsl r0, r4, #24
	cmp r0, #0
	blt _080E78EE
	mov r0, #1
	mov r10, r0
_080E7820:
	mov r0, #194
	ldr r1, [sp]
	str r3, [sp, #4]
	bl sub_080CA538
	add r7, r0, #0
	lsl r4, r4, #24
	mov r9, r4
	ldr r3, [sp, #4]
	cmp r7, #0
	blt _080E78E2
	mov r1, #150
	lsl r1, r1, #4
	add r0, r3, r1
	ldrh r4, [r0]
	add r4, r4, #4
	lsl r4, r4, #16
	lsr r6, r4, #16
	ldr r2, _080E7910  @ =0x00000964
	add r0, r3, r2
	ldrh r5, [r0]
	add r5, r5, #4
	lsl r5, r5, #16
	lsr r0, r5, #16
	mov r8, r0
	lsl r0, r7, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r3, [sp, #4]
	ldr r1, _080E7914  @ =0x00000EE2
	add r0, r3, r1
	add r0, r7, r0
	strb r6, [r0]
	ldr r2, _080E7918  @ =0x00000F02
	add r0, r3, r2
	add r0, r7, r0
	lsr r4, r4, #24
	strb r4, [r0]
	ldr r4, _080E791C  @ =0x00000ED2
	add r0, r3, r4
	add r0, r7, r0
	mov r1, r8
	strb r1, [r0]
	sub r2, r2, #16
	add r0, r3, r2
	add r0, r7, r0
	lsr r5, r5, #24
	strb r5, [r0]
	ldr r4, _080E7920  @ =0x00001172
	add r0, r3, r4
	add r0, r7, r0
	mov r5, r10
	strb r5, [r0]
	ldr r1, _080E7924  @ =0x00000EA5
	add r0, r3, r1
	add r0, r7, r0
	strb r5, [r0]
	ldr r2, _080E7928  @ =0x00001132
	add r0, r3, r2
	add r0, r7, r0
	strb r5, [r0]
	sub r4, r4, #48
	add r0, r3, r4
	add r0, r7, r0
	mov r5, #0
	strb r5, [r0]
	ldr r1, _080E792C  @ =0x00001012
	add r0, r3, r1
	add r0, r7, r0
	mov r1, #32
	strb r1, [r0]
	ldr r2, _080E7930  @ =0x00000F22
	add r1, r3, r2
	add r1, r7, r1
	ldr r0, _080E7934  @ =gUnknown_08177894
	mov r4, r9
	asr r2, r4, #24
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r5, _080E7938  @ =0x00000F12
	add r1, r3, r5
	add r1, r7, r1
	ldr r0, _080E793C  @ =gUnknown_0817789C
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	str r3, [sp, #4]
	bl GetRandomInt
	ldr r1, _080E7940  @ =gUnknown_030031C2
	add r2, r7, r1
	mov r1, r10
	and r1, r1, r0
	strb r1, [r2]
	ldr r3, [sp, #4]
_080E78E2:
	mov r0, #255
	lsl r0, r0, #24
	add r0, r0, r9
	lsr r4, r0, #24
	cmp r0, #0
	bge _080E7820
_080E78EE:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E7900:
	.4byte gRam
_080E7904:
	.4byte 0x00000FA2
_080E7908:
	.4byte 0x00000FA3
_080E790C:
	.4byte 0x00000FA4
_080E7910:
	.4byte 0x00000964
_080E7914:
	.4byte 0x00000EE2
_080E7918:
	.4byte 0x00000F02
_080E791C:
	.4byte 0x00000ED2
_080E7920:
	.4byte 0x00001172
_080E7924:
	.4byte 0x00000EA5
_080E7928:
	.4byte 0x00001132
_080E792C:
	.4byte 0x00001012
_080E7930:
	.4byte 0x00000F22
_080E7934:
	.4byte gUnknown_08177894
_080E7938:
	.4byte 0x00000F12
_080E793C:
	.4byte gUnknown_0817789C
_080E7940:
	.4byte gUnknown_030031C2
	THUMB_FUNC_END sub_080E77E4

	THUMB_FUNC_START sub_080E7944
sub_080E7944: @ 0x080E7944
	bx lr
	THUMB_FUNC_END sub_080E7944

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E7948
sub_080E7948: @ 0x080E7948
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080E797C  @ =gRam
	ldr r1, _080E7980  @ =0x00001052
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsr r1, r1, #3
	mov r0, #3
	and r1, r1, r0
	lsl r1, r1, #5
	ldr r0, _080E7984  @ =gUnknown_08177814
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #4
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080CA5AC
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E797C:
	.4byte gRam
_080E7980:
	.4byte 0x00001052
_080E7984:
	.4byte gUnknown_08177814
	THUMB_FUNC_END sub_080E7948

	THUMB_FUNC_START sub_080E7988
sub_080E7988: @ 0x080E7988
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080E79B8  @ =gRam
	ldr r2, _080E79BC  @ =0x0000096C
	add r1, r0, r2
	mov r2, #2
	strb r2, [r1]
	ldr r3, _080E79C0  @ =0x0000096D
	add r1, r0, r3
	strb r2, [r1]
	ldr r1, _080E79C4  @ =0x00000FA2
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #10
	bne _080E79CC
	ldr r1, _080E79C8  @ =gUnknown_081778A4
	add r0, r4, #0
	bl sub_080C94AC
	b _080E79D4
	.byte 0x00
	.byte 0x00
_080E79B8:
	.4byte gRam
_080E79BC:
	.4byte 0x0000096C
_080E79C0:
	.4byte 0x0000096D
_080E79C4:
	.4byte 0x00000FA2
_080E79C8:
	.4byte gUnknown_081778A4
_080E79CC:
	ldr r1, _080E7A08  @ =gUnknown_081778A4
	add r0, r4, #0
	bl sub_080C94D0
_080E79D4:
	add r0, r4, #0
	bl Sprite3_CheckIfActive_Permissive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E7A2E
	add r0, r4, #0
	bl sub_080C841C
	cmp r0, #0
	bne _080E7A2E
	ldr r1, _080E7A0C  @ =gRam
	ldr r2, _080E7A10  @ =0x0000140C
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #3
	beq _080E7A14
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C8168
	b _080E7A2E
	.byte 0x00
	.byte 0x00
_080E7A08:
	.4byte gUnknown_081778A4
_080E7A0C:
	.4byte gRam
_080E7A10:
	.4byte 0x0000140C
_080E7A14:
	ldr r3, _080E7A38  @ =0x00000F82
	add r0, r1, r3
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080E7A2E
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #114
	mov r2, sp
	bl sub_080C9564
_080E7A2E:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E7A38:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080E7988

	THUMB_FUNC_START sub_080E7A3C
sub_080E7A3C: @ 0x080E7A3C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E7A4C
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E7A3C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E7A4C
sub_080E7A4C: @ 0x080E7A4C
	bx lr
	THUMB_FUNC_END sub_080E7A4C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E7A50
sub_080E7A50: @ 0x080E7A50
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E7988
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E7A50

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E7A60
sub_080E7A60: @ 0x080E7A60
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080E7AC4  @ =gRam
	ldr r2, _080E7AC8  @ =0x00001610
	add r0, r1, r2
	ldrb r0, [r0]
	add r6, r1, #0
	cmp r0, #2
	bhi _080E7ABC
	ldr r3, _080E7ACC  @ =0x000015F7
	add r0, r6, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E7A9A
	ldr r1, _080E7AD0  @ =0x000010F2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E7A9A
	ldr r2, _080E7AD4  @ =gUnknown_03003E74
	ldr r1, _080E7AD8  @ =gUnknown_081778C6
	mov r0, #3
	and r0, r0, r4
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r2]
_080E7A9A:
	ldr r2, _080E7ADC  @ =0x00001172
	add r1, r6, r2
	add r1, r4, r1
	ldr r3, _080E7AE0  @ =0x00000FA2
	add r0, r6, r3
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E7AE4  @ =0x00000F82
	add r0, r6, r1
	add r5, r4, r0
	ldrb r2, [r5]
	cmp r2, #5
	bls _080E7AE8
	add r0, r4, #0
	bl sub_080E7BD4
_080E7ABC:
	add r0, r4, #0
	bl sub_080E7D28
	b _080E7B24
_080E7AC4:
	.4byte gRam
_080E7AC8:
	.4byte 0x00001610
_080E7ACC:
	.4byte 0x000015F7
_080E7AD0:
	.4byte 0x000010F2
_080E7AD4:
	.4byte gUnknown_03003E74
_080E7AD8:
	.4byte gUnknown_081778C6
_080E7ADC:
	.4byte 0x00001172
_080E7AE0:
	.4byte 0x00000FA2
_080E7AE4:
	.4byte 0x00000F82
_080E7AE8:
	add r0, r4, #0
	bl sub_080C6240
	ldrb r2, [r5]
	ldr r3, _080E7B10  @ =0x000009B2
	add r0, r6, r3
	ldr r3, _080E7B14  @ =0x0000164C
	add r1, r6, r3
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	ldrb r1, [r1]
	add r0, r0, r1
	cmp r0, #1
	bgt _080E7B18
	add r0, r4, #0
	add r1, r2, #0
	bl sub_080E7B2C
	b _080E7B24
_080E7B10:
	.4byte 0x000009B2
_080E7B14:
	.4byte 0x0000164C
_080E7B18:
	add r1, r2, #5
	lsl r1, r1, #24
	lsr r1, r1, #24
	add r0, r4, #0
	bl sub_080E7B2C
_080E7B24:
	pop {r4-r6}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E7A60

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E7B2C
sub_080E7B2C: @ 0x080E7B2C
	push {r4-r6,lr}
	mov r6, r9
	mov r5, r8
	push {r5,r6}
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r2, _080E7BB8  @ =gUnknown_03003E74
	ldrh r4, [r2]
	lsl r4, r4, #3
	ldr r6, _080E7BBC  @ =gUnknown_03002780
	add r4, r4, r6
	ldr r2, _080E7BC0  @ =gUnknown_081778B4
	add r1, r1, r2
	ldrb r3, [r1]
	ldr r1, _080E7BC4  @ =gUnknown_081778C0
	mov r9, r1
	ldr r2, _080E7BC8  @ =0x00000A32
	add r2, r2, r6
	mov r8, r2
	add r8, r8, r0
	mov r2, r8
	ldrb r1, [r2]
	add r1, r1, r9
	ldrb r2, [r1]
	mov r1, #1
	and r1, r1, r2
	lsl r1, r1, #8
	orr r3, r3, r1
	ldrh r2, [r4, #4]
	ldr r1, _080E7BCC  @ =0xFFFFFC00
	and r1, r1, r2
	orr r1, r1, r3
	strh r1, [r4, #4]
	mov r2, r8
	ldrb r1, [r2]
	add r1, r1, r9
	ldrb r2, [r1]
	lsr r2, r2, #1
	lsl r2, r2, #4
	ldrb r5, [r4, #5]
	mov r3, #15
	add r1, r3, #0
	and r1, r1, r5
	orr r1, r1, r2
	strb r1, [r4, #5]
	ldr r4, _080E7BD0  @ =0x00000BD2
	add r6, r6, r4
	add r6, r0, r6
	ldrb r1, [r6]
	mov r2, #192
	and r2, r2, r1
	mov r4, r8
	ldrb r1, [r4]
	add r1, r1, r9
	ldrb r1, [r1]
	and r3, r3, r1
	orr r2, r2, r3
	strb r2, [r6]
	bl sub_080E7D28
	lsl r0, r0, #24
	lsr r0, r0, #24
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r6}
	pop {r1}
	bx r1
_080E7BB8:
	.4byte gUnknown_03003E74
_080E7BBC:
	.4byte gUnknown_03002780
_080E7BC0:
	.4byte gUnknown_081778B4
_080E7BC4:
	.4byte gUnknown_081778C0
_080E7BC8:
	.4byte 0x00000A32
_080E7BCC:
	.4byte 0xFFFFFC00
_080E7BD0:
	.4byte 0x00000BD2
	THUMB_FUNC_END sub_080E7B2C

	THUMB_FUNC_START sub_080E7BD4
sub_080E7BD4: @ 0x080E7BD4
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #8]
	ldr r4, _080E7CF0  @ =gRam
	ldr r0, _080E7CF4  @ =0x00001122
	add r1, r4, r0
	ldr r2, [sp, #8]
	add r1, r2, r1
	ldr r2, _080E7CF8  @ =gUnknown_081778DD
	ldr r3, _080E7CFC  @ =0x00000F82
	add r0, r4, r3
	ldr r7, [sp, #8]
	add r0, r7, r0
	ldrb r0, [r0]
	sub r0, r0, #6
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	ldr r2, [sp, #8]
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E7CE0
	mov r5, #3
	mov r8, r4
	ldr r0, _080E7D00  @ =0x00000969
	add r0, r0, r8
	mov r10, r0
	mov r1, #150
	lsl r1, r1, #4
	add r1, r1, r8
	mov r9, r1
_080E7C28:
	ldr r0, _080E7D04  @ =gUnknown_03003E74
	sub r1, r5, #3
	ldrh r0, [r0]
	sub r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r1, _080E7D08  @ =gUnknown_081778CE
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	mov r2, r9
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r6, _080E7D0C  @ =0x00000964
	add r6, r6, r8
	ldr r2, _080E7D10  @ =gUnknown_081778D2
	add r2, r5, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	ldrh r3, [r6]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E7D14  @ =gUnknown_081778D6
	add r3, r5, r3
	ldrb r4, [r3]
	mov r7, r10
	ldrb r3, [r7]
	orr r3, r3, r4
	lsl r3, r3, #8
	mov r4, #138
	orr r3, r3, r4
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	sub r5, r5, #1
	cmp r5, #0
	bge _080E7C28
	mov r0, #12
	bl sub_080CF388
	ldr r1, _080E7D18  @ =0x0000056E
	add r0, r6, r1
	ldr r2, [sp, #8]
	add r0, r2, r0
	ldrb r1, [r0]
	ldr r3, _080E7D1C  @ =0x0000058E
	add r0, r6, r3
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r0, r6, #0
	sub r0, r0, #12
	ldrh r0, [r0]
	sub r1, r1, r0
	strh r1, [r6]
	mov r5, #2
	sub r7, r6, #4
	add r4, r6, #0
_080E7CAA:
	ldr r0, _080E7D04  @ =gUnknown_03003E74
	sub r1, r5, #2
	ldrh r0, [r0]
	sub r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r1, _080E7D20  @ =gUnknown_081778DA
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r7]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldrh r2, [r4]
	add r2, r2, #12
	lsl r2, r2, #16
	lsr r2, r2, #16
	mov r3, #2
	str r3, [sp]
	ldr r3, _080E7D24  @ =0x000024CC
	bl sub_080C6368
	sub r5, r5, #1
	cmp r5, #0
	bge _080E7CAA
_080E7CE0:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080E7CF0:
	.4byte gRam
_080E7CF4:
	.4byte 0x00001122
_080E7CF8:
	.4byte gUnknown_081778DD
_080E7CFC:
	.4byte 0x00000F82
_080E7D00:
	.4byte 0x00000969
_080E7D04:
	.4byte gUnknown_03003E74
_080E7D08:
	.4byte gUnknown_081778CE
_080E7D0C:
	.4byte 0x00000964
_080E7D10:
	.4byte gUnknown_081778D2
_080E7D14:
	.4byte gUnknown_081778D6
_080E7D18:
	.4byte 0x0000056E
_080E7D1C:
	.4byte 0x0000058E
_080E7D20:
	.4byte gUnknown_081778DA
_080E7D24:
	.4byte 0x000024CC
	THUMB_FUNC_END sub_080E7BD4

	THUMB_FUNC_START sub_080E7D28
sub_080E7D28: @ 0x080E7D28
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	ldr r0, _080E7D44  @ =gRam
	ldr r1, _080E7D48  @ =0x00000FA2
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #9
	beq _080E7D4C
	mov r0, #0
	b _080E7D64
	.byte 0x00
	.byte 0x00
_080E7D44:
	.4byte gRam
_080E7D48:
	.4byte 0x00000FA2
_080E7D4C:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E7D62
	add r0, r4, #0
	bl sub_080E7D6C
	mov r0, #0
	b _080E7D64
_080E7D62:
	mov r0, #1
_080E7D64:
	pop {r4}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080E7D28

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E7D6C
sub_080E7D6C: @ 0x080E7D6C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl Sprite3_Move
	ldr r0, _080E7D9C  @ =gRam
	ldr r1, _080E7DA0  @ =0x00001062
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E7D8E
	add r0, r4, #0
	bl sub_080C6F48
_080E7D8E:
	add r0, r5, #0
	bl sub_080C811C
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E7D9C:
	.4byte gRam
_080E7DA0:
	.4byte 0x00001062
	THUMB_FUNC_END sub_080E7D6C

	THUMB_FUNC_START sub_080E7DA4
sub_080E7DA4: @ 0x080E7DA4
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080E7DE8  @ =gRam
	ldr r1, _080E7DEC  @ =0x00000FA2
	add r0, r4, r1
	add r7, r5, r0
	ldrb r0, [r7]
	cmp r0, #9
	bne _080E7DFC
	add r1, r1, #192
	add r0, r4, r1
	add r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080E7DFC
	mov r6, #0
	strb r6, [r1]
	ldr r0, _080E7DF0  @ =0x00000F22
	add r4, r4, r0
	add r4, r5, r4
	mov r0, #1
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	strb r6, [r4]
	cmp r0, #0
	beq _080E7DF4
	strb r6, [r7]
	b _080E7E70
	.byte 0x00
	.byte 0x00
_080E7DE8:
	.4byte gRam
_080E7DEC:
	.4byte 0x00000FA2
_080E7DF0:
	.4byte 0x00000F22
_080E7DF4:
	add r0, r5, #0
	mov r1, #108
	bl sub_080CF0AC
_080E7DFC:
	ldr r4, _080E7E78  @ =gRam
	ldr r1, _080E7E7C  @ =0x00000F82
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E7E14
	ldr r1, _080E7E80  @ =0x00000D94
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #48
	strb r1, [r0]
_080E7E14:
	add r0, r5, #0
	bl sub_080E7E90
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E7E70
	ldr r1, _080E7E84  @ =0x00001122
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080E7E40
	add r0, r5, #0
	bl sub_080C841C
	cmp r0, #0
	bne _080E7E70
_080E7E40:
	ldr r1, _080E7E88  @ =0x00000F52
	add r0, r4, r1
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #1
	bls _080E7E54
	mov r0, sp
	add r1, r5, #0
	bl sub_080C4948
_080E7E54:
	add r0, r5, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E7E70
	ldr r0, _080E7E8C  @ =gUnknown_081778E0
	ldrb r1, [r4]
	lsl r1, r1, #2
	add r1, r1, r0
	ldr r1, [r1]
	add r0, r5, #0
	bl _call_via_r1
_080E7E70:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080E7E78:
	.4byte gRam
_080E7E7C:
	.4byte 0x00000F82
_080E7E80:
	.4byte 0x00000D94
_080E7E84:
	.4byte 0x00001122
_080E7E88:
	.4byte 0x00000F52
_080E7E8C:
	.4byte gUnknown_081778E0
	THUMB_FUNC_END sub_080E7DA4

	THUMB_FUNC_START sub_080E7E90
sub_080E7E90: @ 0x080E7E90
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r4, _080E7F18  @ =gRam
	ldr r1, _080E7F1C  @ =0x00001122
	add r0, r4, r1
	add r0, r0, r7
	mov r8, r0
	ldrb r1, [r0]
	mov r0, #1
	mov r9, r0
	and r0, r0, r1
	cmp r0, #0
	bne _080E7EBE
	ldr r1, _080E7F20  @ =0x00001610
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080E7F4C
_080E7EBE:
	ldr r1, _080E7F24  @ =0x000010E2
	add r0, r4, r1
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E7ED0
	mov r0, #8
	bl sub_080CF388
_080E7ED0:
	ldr r1, _080E7F28  @ =0x00000F52
	add r0, r4, r1
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E7F30
	add r1, r1, #64
	add r0, r4, r1
	add r5, r7, r0
	ldrb r6, [r5]
	cmp r6, #3
	bhi _080E7F3E
	mov r0, r8
	ldrb r4, [r0]
	ldr r0, _080E7F2C  @ =gUnknown_081778F0
	add r0, r6, r0
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, r8
	strb r0, [r1]
	mov r1, r9
	and r0, r0, r1
	mov r1, #1
	eor r0, r0, r1
	lsl r0, r0, #2
	ldrb r1, [r5]
	add r0, r0, r1
	strb r0, [r5]
	add r0, r7, #0
	bl sub_080C6240
	mov r0, r8
	strb r4, [r0]
	strb r6, [r5]
	b _080E7F4C
_080E7F18:
	.4byte gRam
_080E7F1C:
	.4byte 0x00001122
_080E7F20:
	.4byte 0x00001610
_080E7F24:
	.4byte 0x000010E2
_080E7F28:
	.4byte 0x00000F52
_080E7F2C:
	.4byte gUnknown_081778F0
_080E7F30:
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r7, #0
	bl sub_080C632C
	b _080E7F4C
_080E7F3E:
	lsl r1, r6, #3
	ldr r0, _080E7F5C  @ =gUnknown_081778D4
	add r1, r1, r0
	add r0, r7, #0
	mov r2, #2
	bl sub_080C9480
_080E7F4C:
	add sp, sp, #4
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E7F5C:
	.4byte gUnknown_081778D4
	THUMB_FUNC_END sub_080E7E90

	THUMB_FUNC_START sub_080E7F60
sub_080E7F60: @ 0x080E7F60
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r2, _080E801C  @ =gRam
	ldr r0, _080E8020  @ =0x00001132
	add r4, r2, r0
	add r4, r6, r4
	ldrb r5, [r4]
	mov r1, #9
	add r0, r5, #0
	orr r0, r0, r1
	strb r0, [r4]
	ldr r1, _080E8024  @ =0x00001012
	add r0, r2, r1
	add r7, r6, r0
	ldrb r1, [r7]
	mov r0, #128
	orr r0, r0, r1
	strb r0, [r7]
	add r0, r6, #0
	str r2, [sp]
	bl sub_080C4F98
	strb r5, [r4]
	lsl r0, r0, #24
	ldr r2, [sp]
	cmp r0, #0
	beq _080E8014
	ldr r3, _080E8028  @ =0x00000F52
	add r1, r2, r3
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080E802C  @ =0x00000FC2
	add r1, r2, r0
	add r1, r6, r1
	mov r0, #127
	strb r0, [r1]
	ldrb r1, [r7]
	and r0, r0, r1
	strb r0, [r7]
	ldr r1, _080E8030  @ =0x00000EE2
	add r0, r2, r1
	add r0, r6, r0
	ldr r3, _080E8034  @ =0x000016C4
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080E8038  @ =0x00000F02
	add r0, r2, r1
	add r0, r6, r0
	add r3, r3, #1
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	mov r1, #182
	lsl r1, r1, #5
	add r0, r2, r1
	ldrb r1, [r0]
	sub r3, r3, #4
	add r0, r2, r3
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	orr r1, r1, r0
	add r1, r1, #8
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080E803C  @ =0x00000ED2
	add r0, r2, r3
	add r0, r6, r0
	strb r1, [r0]
	add r3, r3, #32
	add r0, r2, r3
	add r0, r6, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080E8040  @ =0x000010E2
	add r0, r2, r1
	add r0, r6, r0
	mov r1, #48
	strb r1, [r0]
	ldr r3, _080E8044  @ =0x00001172
	add r0, r2, r3
	add r0, r6, r0
	mov r1, #0
	strb r1, [r0]
_080E8014:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080E801C:
	.4byte gRam
_080E8020:
	.4byte 0x00001132
_080E8024:
	.4byte 0x00001012
_080E8028:
	.4byte 0x00000F52
_080E802C:
	.4byte 0x00000FC2
_080E8030:
	.4byte 0x00000EE2
_080E8034:
	.4byte 0x000016C4
_080E8038:
	.4byte 0x00000F02
_080E803C:
	.4byte 0x00000ED2
_080E8040:
	.4byte 0x000010E2
_080E8044:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080E7F60

	THUMB_FUNC_START sub_080E8048
sub_080E8048: @ 0x080E8048
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080E8070  @ =gRam
	ldr r1, _080E8074  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E8080
	ldr r3, _080E8078  @ =0x00000F92
	add r1, r2, r3
	add r1, r4, r1
	ldr r2, _080E807C  @ =gUnknown_08177934
	lsr r0, r0, #27
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080E80A6
_080E8070:
	.4byte gRam
_080E8074:
	.4byte 0x00000FC2
_080E8078:
	.4byte 0x00000F92
_080E807C:
	.4byte gUnknown_08177934
_080E8080:
	ldr r0, _080E80AC  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E80B0  @ =0x00001152
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #16
	bl sub_080C35FC
	add r0, r4, #0
	mov r1, #94
	bl sub_080CF140
_080E80A6:
	pop {r4}
	pop {r0}
	bx r0
_080E80AC:
	.4byte 0x00000F52
_080E80B0:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080E8048

	THUMB_FUNC_START sub_080E80B4
sub_080E80B4: @ 0x080E80B4
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r4, r5, #0
	ldr r0, _080E8140  @ =gRam
	mov r8, r0
	ldr r0, _080E8144  @ =0x00000FC2
	add r0, r0, r8
	add r0, r0, r5
	mov r9, r0
	ldrb r7, [r0]
	cmp r7, #0
	bne _080E8158
	mov r0, sp
	add r1, r5, #0
	bl sub_080C4948
	add r0, r5, #0
	bl Sprite3_Move
	add r0, r5, #0
	bl sub_080C7A20
	ldr r0, _080E8148  @ =0x00001142
	add r0, r0, r8
	add r6, r5, r0
	ldrb r4, [r6]
	add r0, r5, #0
	bl sub_080C2C4C
	ldr r0, _080E814C  @ =0x00001152
	add r0, r0, r8
	add r2, r5, r0
	ldrb r1, [r2]
	add r0, r1, #0
	add r0, r0, #64
	mov r3, #128
	and r0, r0, r3
	cmp r0, #0
	bne _080E8110
	sub r0, r1, #2
	strb r0, [r2]
_080E8110:
	ldrb r1, [r6]
	eor r4, r4, r1
	and r4, r4, r3
	cmp r4, #0
	beq _080E81B4
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080E81B4
	strb r7, [r2]
	strb r7, [r6]
	ldr r0, _080E8150  @ =0x00000F82
	add r0, r0, r8
	add r0, r5, r0
	strb r7, [r0]
	mov r0, #31
	mov r1, r9
	strb r0, [r1]
	ldr r0, _080E8154  @ =0x00001082
	add r0, r0, r8
	add r0, r5, r0
	mov r1, #8
	strb r1, [r0]
	b _080E81B4
_080E8140:
	.4byte gRam
_080E8144:
	.4byte 0x00000FC2
_080E8148:
	.4byte 0x00001142
_080E814C:
	.4byte 0x00001152
_080E8150:
	.4byte 0x00000F82
_080E8154:
	.4byte 0x00001082
_080E8158:
	mov r1, r9
	ldrb r0, [r1]
	cmp r0, #1
	bne _080E8184
	mov r2, #0
	mov r0, #32
	strb r0, [r1]
	ldr r1, _080E817C  @ =0x00000F52
	add r1, r1, r8
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080E8180  @ =0x00000F92
	add r0, r0, r8
	add r0, r5, r0
	strb r2, [r0]
	b _080E81B4
_080E817C:
	.4byte 0x00000F52
_080E8180:
	.4byte 0x00000F92
_080E8184:
	ldr r1, _080E81C4  @ =0x00000F92
	add r1, r1, r8
	add r1, r4, r1
	ldr r2, _080E81C8  @ =gUnknown_08177944
	lsr r0, r0, #4
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080E81CC  @ =0x00000F22
	add r2, r2, r8
	add r2, r4, r2
	ldr r3, _080E81D0  @ =gUnknown_08177946
	ldr r0, _080E81D4  @ =0x00000996
	add r0, r0, r8
	ldrb r0, [r0]
	lsr r0, r0, #1
	mov r1, #1
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	add r0, r4, #0
	bl Sprite3_MoveHoriz
_080E81B4:
	add sp, sp, #4
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E81C4:
	.4byte 0x00000F92
_080E81C8:
	.4byte gUnknown_08177944
_080E81CC:
	.4byte 0x00000F22
_080E81D0:
	.4byte gUnknown_08177946
_080E81D4:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080E80B4

	THUMB_FUNC_START sub_080E81D8
sub_080E81D8: @ 0x080E81D8
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	add r0, r4, #0
	bl sub_080C4F98
	ldr r6, _080E82C0  @ =gRam
	ldr r1, _080E82C4  @ =0x00000FD2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080E8230
	add r0, r4, #0
	mov r1, #48
	bl sub_080C35FC
	bl GetRandomInt
	mov r1, #63
	and r1, r1, r0
	mov r0, #96
	orr r1, r1, r0
	strb r1, [r5]
	ldr r2, _080E82C8  @ =0x00001122
	add r3, r6, r2
	add r3, r4, r3
	ldrb r1, [r3]
	lsl r0, r1, #2
	strb r0, [r3]
	ldr r2, _080E82CC  @ =0x00000F22
	add r0, r6, r2
	add r0, r4, r0
	ldrb r2, [r0]
	mov r0, #128
	and r0, r0, r2
	lsl r1, r1, #26
	lsr r1, r1, #25
	orr r0, r0, r1
	lsr r0, r0, #1
	strb r0, [r3]
_080E8230:
	ldr r3, _080E82D0  @ =0x00000FE2
	add r0, r6, r3
	add r0, r0, r4
	mov r8, r0
	ldrb r0, [r0]
	lsl r1, r0, #24
	cmp r1, #0
	bne _080E82E4
	ldr r1, _080E82D4  @ =0x00001052
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r5, #14
	and r5, r5, r1
	ldr r2, _080E82D8  @ =0x00001042
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	orr r5, r5, r0
	cmp r5, #0
	bne _080E829E
	add r0, r4, #0
	bl Sprite3_Move
	ldr r3, _080E82DC  @ =0x000010A2
	add r0, r6, r3
	add r2, r4, r0
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	sub r3, r3, #32
	add r1, r6, r3
	add r6, r4, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r1, [r6]
	cmp r0, r1
	bne _080E829E
	strb r5, [r2]
	bl GetRandomInt
	mov r4, #31
	add r1, r4, #0
	and r1, r1, r0
	add r1, r1, #64
	mov r2, r8
	strb r1, [r2]
	bl GetRandomInt
	and r4, r4, r0
	mov r0, #16
	orr r4, r4, r0
	strb r4, [r6]
_080E829E:
	add r0, r7, #0
	bl sub_080C7A20
	ldr r0, _080E82C0  @ =gRam
	ldr r3, _080E82E0  @ =0x00000F92
	add r2, r0, r3
	add r2, r7, r2
	ldr r1, _080E82D4  @ =0x00001052
	add r0, r0, r1
	add r0, r7, r0
	ldrb r1, [r0]
	mov r0, #8
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #27
	strb r0, [r2]
	b _080E82F2
_080E82C0:
	.4byte gRam
_080E82C4:
	.4byte 0x00000FD2
_080E82C8:
	.4byte 0x00001122
_080E82CC:
	.4byte 0x00000F22
_080E82D0:
	.4byte 0x00000FE2
_080E82D4:
	.4byte 0x00001052
_080E82D8:
	.4byte 0x00001042
_080E82DC:
	.4byte 0x000010A2
_080E82E0:
	.4byte 0x00000F92
_080E82E4:
	ldr r2, _080E82FC  @ =0x00000F92
	add r0, r6, r2
	add r0, r7, r0
	lsr r1, r1, #28
	mov r2, #1
	and r1, r1, r2
	strb r1, [r0]
_080E82F2:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080E82FC:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080E81D8

	THUMB_FUNC_START sub_080E8300
sub_080E8300: @ 0x080E8300
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E7DA4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E8300

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E8310
sub_080E8310: @ 0x080E8310
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080E832C  @ =gRam
	ldr r2, _080E8330  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	mov r2, #4
	strb r2, [r1]
	bl sub_080C3758
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E832C:
	.4byte gRam
_080E8330:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080E8310

	THUMB_FUNC_START sub_080E8334
sub_080E8334: @ 0x080E8334
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E84D0  @ =gRam
	ldr r1, _080E84D4  @ =0x00001062
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080E834C
	b _080E8548
_080E834C:
	ldr r2, _080E84D8  @ =0x00001172
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080E84DC  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E8366
	mov r0, #4
	bl sub_080CF3A0
_080E8366:
	add r0, r4, #0
	bl sub_080C58F0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	beq _080E837C
	b _080E85C8
_080E837C:
	add r0, r4, #0
	bl sub_080E8914
	add r0, r4, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E8390
	b _080E8538
_080E8390:
	add r0, r4, #0
	bl Sprite3_Move
	ldr r2, _080E84E0  @ =0x000009B2
	add r0, r5, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	beq _080E83D0
	ldr r1, _080E84E4  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E83D0
	sub r2, r2, #28
	add r0, r5, r2
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	beq _080E83D0
	add r0, r4, #0
	bl sub_080C79F8
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E83D0
	b _080E852C
_080E83D0:
	ldr r6, _080E84D0  @ =gRam
	ldr r1, _080E84E8  @ =0x0000176C
	add r0, r6, r1
	ldr r2, _080E84EC  @ =0x0000180D
	add r1, r6, r2
	ldrb r2, [r0]
	ldrb r0, [r1]
	add r7, r0, #0
	orr r7, r7, r2
	cmp r7, #0
	beq _080E83E8
	b _080E85C8
_080E83E8:
	ldr r1, _080E84F0  @ =0x00001791
	add r0, r6, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bge _080E83F8
	b _080E85C8
_080E83F8:
	ldr r0, _080E84F4  @ =gUnknown_0200233E
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080E8402
	b _080E85C8
_080E8402:
	mov r2, #161
	lsl r2, r2, #4
	add r0, r6, r2
	ldr r2, _080E84F8  @ =0x000010F2
	add r1, r6, r2
	add r1, r4, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _080E8418
	b _080E85C8
_080E8418:
	add r0, r4, #0
	bl sub_080C4574
	ldr r1, _080E84FC  @ =0x000016D5
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r5, r0, #1
	ldr r2, _080E8500  @ =0x000016EA
	add r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E8436
	ldr r0, _080E8504  @ =gUnknown_0817795C
	add r0, r5, r0
	ldrb r5, [r0]
_080E8436:
	ldr r1, _080E8508  @ =0x000016C4
	add r0, r6, r1
	ldrb r2, [r0]
	add r1, r1, #1
	add r0, r6, r1
	mov r1, #0
	ldrsb r1, [r0, r1]
	lsl r1, r1, #8
	ldr r0, _080E850C  @ =gUnknown_08177958
	add r0, r5, r0
	orr r2, r2, r1
	ldrb r0, [r0]
	add r2, r2, r0
	ldr r0, _080E8510  @ =gUnknown_08177960
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	mov r1, #182
	lsl r1, r1, #5
	add r0, r6, r1
	ldrb r3, [r0]
	add r1, r1, #1
	add r0, r6, r1
	mov r1, #0
	ldrsb r1, [r0, r1]
	lsl r1, r1, #8
	ldr r0, _080E8514  @ =gUnknown_08177964
	add r0, r5, r0
	orr r3, r3, r1
	ldrb r0, [r0]
	add r3, r3, r0
	mov r1, #150
	lsl r1, r1, #4
	add r0, r6, r1
	strb r2, [r0]
	lsr r2, r2, #8
	add r1, r1, #16
	add r0, r6, r1
	strb r2, [r0]
	ldr r0, _080E8518  @ =gUnknown_08177968
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r2, _080E851C  @ =0x00000964
	add r0, r6, r2
	strb r1, [r0]
	ldr r1, _080E8520  @ =0x00000961
	add r0, r6, r1
	strb r3, [r0]
	lsr r3, r3, #8
	add r2, r2, #13
	add r0, r6, r2
	strb r3, [r0]
	ldr r0, _080E8524  @ =gUnknown_0817796C
	add r0, r5, r0
	ldrb r1, [r0]
	sub r2, r2, #12
	add r0, r6, r2
	strb r1, [r0]
	bl sub_080C466C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E84B8
	b _080E85C8
_080E84B8:
	add r0, r4, #0
	bl sub_080C444C
	ldr r1, _080E8528  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	strb r7, [r0]
	add r0, r4, #0
	mov r1, #9
	bl sub_080CF0AC
	b _080E85C8
_080E84D0:
	.4byte gRam
_080E84D4:
	.4byte 0x00001062
_080E84D8:
	.4byte 0x00001172
_080E84DC:
	.4byte 0x00000FC2
_080E84E0:
	.4byte 0x000009B2
_080E84E4:
	.4byte 0x00000FD2
_080E84E8:
	.4byte 0x0000176C
_080E84EC:
	.4byte 0x0000180D
_080E84F0:
	.4byte 0x00001791
_080E84F4:
	.4byte gUnknown_0200233E
_080E84F8:
	.4byte 0x000010F2
_080E84FC:
	.4byte 0x000016D5
_080E8500:
	.4byte 0x000016EA
_080E8504:
	.4byte gUnknown_0817795C
_080E8508:
	.4byte 0x000016C4
_080E850C:
	.4byte gUnknown_08177958
_080E8510:
	.4byte gUnknown_08177960
_080E8514:
	.4byte gUnknown_08177964
_080E8518:
	.4byte gUnknown_08177968
_080E851C:
	.4byte 0x00000964
_080E8520:
	.4byte 0x00000961
_080E8524:
	.4byte gUnknown_0817796C
_080E8528:
	.4byte 0x00000FA2
_080E852C:
	ldr r2, _080E8534  @ =0x00000FA2
	add r0, r5, r2
	b _080E853C
	.byte 0x00
	.byte 0x00
_080E8534:
	.4byte 0x00000FA2
_080E8538:
	ldr r1, _080E8544  @ =0x00000FA2
	add r0, r5, r1
_080E853C:
	add r0, r4, r0
	strb r6, [r0]
	b _080E85C8
	.byte 0x00
	.byte 0x00
_080E8544:
	.4byte 0x00000FA2
_080E8548:
	ldr r2, _080E855C  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E8560
	add r0, r4, #0
	bl sub_080E8808
	b _080E8572
_080E855C:
	.4byte 0x00000F52
_080E8560:
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E85C8
_080E8572:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E85C8
	ldr r0, _080E8598  @ =gRam
	ldr r1, _080E859C  @ =0x00000F52
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #1
	beq _080E85B2
	cmp r0, #1
	bgt _080E85A0
	cmp r0, #0
	beq _080E85AA
	b _080E85C8
	.byte 0x00
	.byte 0x00
_080E8598:
	.4byte gRam
_080E859C:
	.4byte 0x00000F52
_080E85A0:
	cmp r0, #2
	beq _080E85BA
	cmp r0, #3
	beq _080E85C2
	b _080E85C8
_080E85AA:
	add r0, r4, #0
	bl sub_080E85D0
	b _080E85C8
_080E85B2:
	add r0, r4, #0
	bl sub_080E86D8
	b _080E85C8
_080E85BA:
	add r0, r4, #0
	bl sub_080E8748
	b _080E85C8
_080E85C2:
	add r0, r4, #0
	bl sub_080E87AC
_080E85C8:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E8334

	THUMB_FUNC_START sub_080E85D0
sub_080E85D0: @ 0x080E85D0
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080E86A0  @ =gRam
	ldr r0, _080E86A4  @ =0x00001172
	add r1, r6, r0
	add r1, r5, r1
	ldr r2, _080E86A8  @ =0x00000FC2
	add r0, r6, r2
	add r0, r0, r5
	mov r8, r0
	ldrb r0, [r0]
	strb r0, [r1]
	mov r3, r8
	ldrb r0, [r3]
	cmp r0, #0
	bne _080E8696
	bl GetRandomInt
	mov r1, #7
	and r1, r1, r0
	ldr r7, _080E86AC  @ =0x00000F62
	add r0, r6, r7
	add r0, r5, r0
	ldrb r2, [r0]
	ldr r3, _080E86B0  @ =0x00000F72
	add r0, r6, r3
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r0, _080E86B4  @ =gUnknown_08177970
	add r0, r1, r0
	ldrb r3, [r0]
	add r2, r3, r2
	ldr r0, _080E86B8  @ =gUnknown_08177978
	add r1, r1, r0
	ldrb r4, [r1]
	lsl r4, r4, #8
	add r2, r2, r4
	add r7, r7, #32
	add r0, r6, r7
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r7, _080E86BC  @ =0x00001082
	add r0, r6, r7
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r3, r3, r1
	add r3, r3, r4
	ldr r1, _080E86C0  @ =0x00000EE2
	add r0, r6, r1
	add r0, r5, r0
	strb r2, [r0]
	ldr r7, _080E86C4  @ =0x00000F02
	add r0, r6, r7
	add r0, r5, r0
	lsr r2, r2, #8
	strb r2, [r0]
	sub r1, r1, #16
	add r0, r6, r1
	add r0, r5, r0
	strb r3, [r0]
	ldr r2, _080E86C8  @ =0x00000EF2
	add r0, r6, r2
	add r0, r5, r0
	lsr r3, r3, #8
	strb r3, [r0]
	add r0, r5, #0
	bl sub_080C1F70
	add r0, r5, #0
	bl sub_080C79F8
	ldr r3, _080E86CC  @ =0x000015E2
	add r0, r6, r3
	ldrh r0, [r0]
	cmp r0, #8
	bne _080E8696
	mov r0, #127
	mov r7, r8
	strb r0, [r7]
	ldr r0, _080E86D0  @ =0x00000F52
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r2, _080E86D4  @ =0x00001032
	add r1, r6, r2
	add r1, r5, r1
	ldrb r0, [r1]
	mov r2, #64
	orr r0, r0, r2
	strb r0, [r1]
_080E8696:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080E86A0:
	.4byte gRam
_080E86A4:
	.4byte 0x00001172
_080E86A8:
	.4byte 0x00000FC2
_080E86AC:
	.4byte 0x00000F62
_080E86B0:
	.4byte 0x00000F72
_080E86B4:
	.4byte gUnknown_08177970
_080E86B8:
	.4byte gUnknown_08177978
_080E86BC:
	.4byte 0x00001082
_080E86C0:
	.4byte 0x00000EE2
_080E86C4:
	.4byte 0x00000F02
_080E86C8:
	.4byte 0x00000EF2
_080E86CC:
	.4byte 0x000015E2
_080E86D0:
	.4byte 0x00000F52
_080E86D4:
	.4byte 0x00001032
	THUMB_FUNC_END sub_080E85D0

	THUMB_FUNC_START sub_080E86D8
sub_080E86D8: @ 0x080E86D8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r4, _080E8708  @ =gRam
	ldr r0, _080E870C  @ =0x00001172
	add r1, r4, r0
	add r1, r3, r1
	ldr r2, _080E8710  @ =0x00000FC2
	add r0, r4, r2
	add r2, r3, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldrb r0, [r2]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E871C
	ldr r2, _080E8714  @ =0x00000F92
	add r1, r4, r2
	add r1, r3, r1
	ldr r2, _080E8718  @ =gUnknown_08177948
	lsr r0, r0, #27
	add r0, r0, r2
	ldrb r0, [r0]
	b _080E8738
_080E8708:
	.4byte gRam
_080E870C:
	.4byte 0x00001172
_080E8710:
	.4byte 0x00000FC2
_080E8714:
	.4byte 0x00000F92
_080E8718:
	.4byte gUnknown_08177948
_080E871C:
	ldr r0, _080E8740  @ =0x00000F52
	add r1, r4, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #127
	strb r0, [r2]
	ldr r2, _080E8744  @ =0x00001032
	add r1, r4, r2
	add r1, r3, r1
	ldrb r2, [r1]
	mov r0, #191
	and r0, r0, r2
_080E8738:
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
_080E8740:
	.4byte 0x00000F52
_080E8744:
	.4byte 0x00001032
	THUMB_FUNC_END sub_080E86D8

	THUMB_FUNC_START sub_080E8748
sub_080E8748: @ 0x080E8748
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C5044
	ldr r6, _080E8780  @ =gRam
	ldr r1, _080E8784  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080E8790
	cmp r0, #48
	bne _080E876C
	add r0, r4, #0
	bl sub_080E89E4
_080E876C:
	ldr r0, _080E8788  @ =0x00000F92
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E878C  @ =gUnknown_08177980
	ldrb r0, [r5]
	lsr r0, r0, #4
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080E87A0
_080E8780:
	.4byte gRam
_080E8784:
	.4byte 0x00000FC2
_080E8788:
	.4byte 0x00000F92
_080E878C:
	.4byte gUnknown_08177980
_080E8790:
	ldr r1, _080E87A8  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #23
	strb r0, [r5]
_080E87A0:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E87A8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E8748

	THUMB_FUNC_START sub_080E87AC
sub_080E87AC: @ 0x080E87AC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r4, _080E87D8  @ =gRam
	ldr r1, _080E87DC  @ =0x00000FC2
	add r0, r4, r1
	add r1, r3, r0
	ldrb r0, [r1]
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	beq _080E87E8
	ldr r2, _080E87E0  @ =0x00000F92
	add r1, r4, r2
	add r1, r3, r1
	ldr r2, _080E87E4  @ =gUnknown_08177988
	lsr r0, r0, #26
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080E87FC
	.byte 0x00
	.byte 0x00
_080E87D8:
	.4byte gRam
_080E87DC:
	.4byte 0x00000FC2
_080E87E0:
	.4byte 0x00000F92
_080E87E4:
	.4byte gUnknown_08177988
_080E87E8:
	mov r0, #128
	strb r0, [r1]
	ldr r1, _080E8804  @ =0x00000F92
	add r0, r4, r1
	add r0, r3, r0
	strb r2, [r0]
	sub r1, r1, #64
	add r0, r4, r1
	add r0, r3, r0
	strb r2, [r0]
_080E87FC:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E8804:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080E87AC

	THUMB_FUNC_START sub_080E8808
sub_080E8808: @ 0x080E8808
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r9
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E88D4
	ldr r2, _080E88E4  @ =gRam
	ldr r1, _080E88E8  @ =0x00000F92
	add r0, r2, r1
	add r0, r0, r9
	ldrb r0, [r0]
	lsl r0, r0, #1
	ldr r3, _080E88EC  @ =0x0000096C
	add r1, r2, r3
	strb r0, [r1]
	mov r0, #1
	mov r10, r2
	add r7, sp, #4
	mov r8, r7
_080E8846:
	lsl r0, r0, #24
	asr r6, r0, #24
	ldr r0, _080E88E8  @ =0x00000F92
	add r0, r0, r10
	add r0, r0, r9
	ldrb r7, [r0]
	lsl r0, r7, #1
	add r5, r6, r0
	ldr r1, _080E88F0  @ =gUnknown_081779FC
	add r0, r5, r1
	ldrb r4, [r0]
	ldr r0, _080E88F4  @ =gUnknown_08177A16
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r0, r1, #8
	orr r4, r4, r0
	mov r0, #15
	and r1, r1, r0
	cmp r1, #0
	bne _080E8880
	ldr r0, _080E88F8  @ =0x00000969
	add r0, r0, r10
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	orr r4, r4, r0
	lsl r0, r4, #16
	lsr r4, r0, #16
_080E8880:
	ldr r0, _080E88FC  @ =gUnknown_03003E74
	mov r2, r8
	ldrb r1, [r2]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r2, _080E8900  @ =gUnknown_08177994
	lsl r3, r6, #1
	lsl r1, r7, #2
	add r3, r3, r1
	add r2, r3, r2
	ldrh r1, [r2]
	ldr r7, _080E8904  @ =gUnknown_03002B90
	ldrh r7, [r7]
	add r1, r1, r7
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080E8908  @ =gUnknown_081779C8
	add r3, r3, r2
	ldrh r2, [r3]
	ldr r3, _080E890C  @ =gUnknown_03002B94
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E8910  @ =gUnknown_08177A30
	add r3, r5, r3
	ldrb r3, [r3]
	str r3, [sp]
	add r3, r4, #0
	bl sub_080C6368
	sub r1, r6, #1
	lsl r1, r1, #24
	mov r7, r8
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsr r0, r1, #24
	cmp r1, #0
	bge _080E8846
_080E88D4:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080E88E4:
	.4byte gRam
_080E88E8:
	.4byte 0x00000F92
_080E88EC:
	.4byte 0x0000096C
_080E88F0:
	.4byte gUnknown_081779FC
_080E88F4:
	.4byte gUnknown_08177A16
_080E88F8:
	.4byte 0x00000969
_080E88FC:
	.4byte gUnknown_03003E74
_080E8900:
	.4byte gUnknown_08177994
_080E8904:
	.4byte gUnknown_03002B90
_080E8908:
	.4byte gUnknown_081779C8
_080E890C:
	.4byte gUnknown_03002B94
_080E8910:
	.4byte gUnknown_08177A30
	THUMB_FUNC_END sub_080E8808

	THUMB_FUNC_START sub_080E8914
sub_080E8914: @ 0x080E8914
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E89A4  @ =gRam
	ldr r3, _080E89A8  @ =0x00000996
	add r1, r2, r3
	ldrb r1, [r1]
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080E89DE
	mov r1, #29
	ldr r4, _080E89AC  @ =0x000011D2
	add r5, r2, r4
	mov r4, #8
	ldr r0, _080E89B0  @ =0x000015F8
	add r6, r2, r0
	ldr r3, _080E89B4  @ =0x000012FE
	add r7, r2, r3
_080E893C:
	lsl r0, r1, #24
	asr r3, r0, #24
	add r1, r3, r5
	ldrb r0, [r1]
	cmp r0, #0
	bne _080E89D4
	strb r4, [r1]
	strb r4, [r6]
	add r1, r3, r7
	mov r0, #11
	strb r0, [r1]
	ldr r4, _080E89B8  @ =0x0000122C
	add r1, r2, r4
	add r1, r3, r1
	ldr r4, _080E89BC  @ =0x00001622
	add r0, r2, r4
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080E89C0  @ =0x00001268
	add r1, r2, r0
	add r1, r3, r1
	add r4, r4, #1
	add r0, r2, r4
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080E89C4  @ =0x00001624
	add r0, r2, r1
	ldrb r1, [r0]
	add r4, r4, #2
	add r0, r2, r4
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #16
	ldr r4, _080E89C8  @ =0x0000120E
	add r0, r2, r4
	add r0, r3, r0
	strb r1, [r0]
	add r4, r4, #60
	add r0, r2, r4
	add r0, r3, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080E89CC  @ =0x0000131C
	add r1, r2, r0
	add r1, r3, r1
	ldr r3, _080E89D0  @ =0x000015DC
	add r0, r2, r3
	ldrb r0, [r0]
	strb r0, [r1]
	b _080E89DE
	.byte 0x00
	.byte 0x00
_080E89A4:
	.4byte gRam
_080E89A8:
	.4byte 0x00000996
_080E89AC:
	.4byte 0x000011D2
_080E89B0:
	.4byte 0x000015F8
_080E89B4:
	.4byte 0x000012FE
_080E89B8:
	.4byte 0x0000122C
_080E89BC:
	.4byte 0x00001622
_080E89C0:
	.4byte 0x00001268
_080E89C4:
	.4byte 0x00001624
_080E89C8:
	.4byte 0x0000120E
_080E89CC:
	.4byte 0x0000131C
_080E89D0:
	.4byte 0x000015DC
_080E89D4:
	sub r0, r3, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bge _080E893C
_080E89DE:
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E8914

	THUMB_FUNC_START sub_080E89E4
sub_080E89E4: @ 0x080E89E4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r0, #85
	add r1, r4, #0
	mov r2, #13
	bl sub_080C9AAC
	add r6, r0, #0
	cmp r6, #0
	blt _080E8AAE
	add r0, r4, #0
	mov r1, #89
	bl sub_080CF140
	ldr r4, _080E8AB8  @ =gRam
	mov r1, #150
	lsl r1, r1, #4
	add r0, r4, r1
	ldrh r1, [r0]
	add r1, r1, #4
	ldr r2, _080E8ABC  @ =0x00000EE2
	add r0, r4, r2
	add r0, r6, r0
	mov r5, #0
	strb r1, [r0]
	add r2, r2, #32
	add r0, r4, r2
	add r0, r6, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080E8AC0  @ =0x00000964
	add r1, r4, r0
	ldr r2, _080E8AC4  @ =0x00000968
	add r0, r4, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	sub r0, r0, #4
	ldrh r1, [r1]
	sub r1, r1, r0
	ldr r2, _080E8AC8  @ =0x00000ED2
	add r0, r4, r2
	add r0, r6, r0
	strb r1, [r0]
	add r2, r2, #32
	add r0, r4, r2
	add r0, r6, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080E8ACC  @ =0x00001032
	add r2, r4, r0
	add r2, r6, r2
	ldrb r1, [r2]
	mov r0, #254
	and r0, r0, r1
	mov r1, #64
	orr r0, r0, r1
	strb r0, [r2]
	ldr r1, _080E8AD0  @ =0x00001122
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #6
	strb r1, [r0]
	ldr r2, _080E8AD4  @ =0x00001132
	add r0, r4, r2
	add r0, r6, r0
	mov r1, #84
	strb r1, [r0]
	sub r2, r2, #208
	add r0, r4, r2
	add r0, r6, r0
	strb r1, [r0]
	ldr r1, _080E8AD8  @ =0x00001012
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #32
	strb r1, [r0]
	lsl r0, r6, #24
	lsr r0, r0, #24
	bl sub_080C35FC
	ldr r2, _080E8ADC  @ =0x00000FC2
	add r0, r4, r2
	add r0, r6, r0
	mov r1, #20
	strb r1, [r0]
	ldr r1, _080E8AE0  @ =0x00000FD2
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #16
	strb r1, [r0]
	ldr r2, _080E8AE4  @ =0x000011B2
	add r0, r4, r2
	add r0, r6, r0
	strb r5, [r0]
	ldr r0, _080E8AE8  @ =0x00000E75
	add r4, r4, r0
	add r4, r6, r4
	mov r0, #72
	strb r0, [r4]
_080E8AAE:
	add r0, r6, #0
	pop {r4-r6}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080E8AB8:
	.4byte gRam
_080E8ABC:
	.4byte 0x00000EE2
_080E8AC0:
	.4byte 0x00000964
_080E8AC4:
	.4byte 0x00000968
_080E8AC8:
	.4byte 0x00000ED2
_080E8ACC:
	.4byte 0x00001032
_080E8AD0:
	.4byte 0x00001122
_080E8AD4:
	.4byte 0x00001132
_080E8AD8:
	.4byte 0x00001012
_080E8ADC:
	.4byte 0x00000FC2
_080E8AE0:
	.4byte 0x00000FD2
_080E8AE4:
	.4byte 0x000011B2
_080E8AE8:
	.4byte 0x00000E75
	THUMB_FUNC_END sub_080E89E4

	THUMB_FUNC_START sub_080E8AEC
sub_080E8AEC: @ 0x080E8AEC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080E8B08  @ =gRam
	ldr r2, _080E8B0C  @ =0x00000FC2
	add r1, r1, r2
	add r1, r0, r1
	mov r2, #64
	strb r2, [r1]
	bl sub_080EA2DC
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E8B08:
	.4byte gRam
_080E8B0C:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E8AEC

	THUMB_FUNC_START sub_080E8B10
sub_080E8B10: @ 0x080E8B10
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E8334
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080E8B10

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080E8B20
sub_080E8B20: @ 0x080E8B20
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r7, r5, #0
	ldr r6, _080E8BA0  @ =gRam
	ldr r1, _080E8BA4  @ =0x00001072
	add r0, r6, r1
	add r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080E8B84
	mov r0, #0
	strb r0, [r1]
	ldr r2, _080E8BA8  @ =0x00000F72
	add r0, r6, r2
	add r0, r5, r0
	mov r1, #3
	strb r1, [r0]
	ldr r3, _080E8BAC  @ =0x000010A2
	add r0, r6, r3
	add r0, r5, r0
	mov r1, #192
	strb r1, [r0]
	ldr r0, _080E8BB0  @ =0x00000F22
	add r3, r6, r0
	add r3, r5, r3
	ldr r1, _080E8BB4  @ =0x00001112
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	mov r2, #128
	add r1, r2, #0
	and r1, r1, r0
	lsr r0, r0, #1
	mov r4, #63
	and r0, r0, r4
	orr r1, r1, r0
	strb r1, [r3]
	ldr r3, _080E8BB8  @ =0x00000F12
	add r1, r6, r3
	add r1, r5, r1
	ldr r3, _080E8BBC  @ =0x00001102
	add r0, r6, r3
	add r0, r5, r0
	ldrb r0, [r0]
	and r2, r2, r0
	lsr r0, r0, #1
	and r0, r0, r4
	orr r2, r2, r0
	strb r2, [r1]
_080E8B84:
	ldr r1, _080E8BC0  @ =gUnknown_08177A4C
	ldr r2, _080E8BA8  @ =0x00000F72
	add r0, r6, r2
	add r0, r7, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r7, #0
	bl _call_via_r1
	pop {r4-r7}
	pop {r0}
	bx r0
_080E8BA0:
	.4byte gRam
_080E8BA4:
	.4byte 0x00001072
_080E8BA8:
	.4byte 0x00000F72
_080E8BAC:
	.4byte 0x000010A2
_080E8BB0:
	.4byte 0x00000F22
_080E8BB4:
	.4byte 0x00001112
_080E8BB8:
	.4byte 0x00000F12
_080E8BBC:
	.4byte 0x00001102
_080E8BC0:
	.4byte gUnknown_08177A4C
	THUMB_FUNC_END sub_080E8B20

	THUMB_FUNC_START sub_080E8BC4
sub_080E8BC4: @ 0x080E8BC4
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E8C16
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E8C16
	ldr r2, _080E8C20  @ =gRam
	ldr r1, _080E8C24  @ =0x00000FC2
	add r0, r2, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080E8C16
	mov r0, #127
	strb r0, [r1]
	ldr r0, _080E8C28  @ =0x00000F72
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080E8C2C  @ =0x00001032
	add r1, r2, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #64
	orr r0, r0, r2
	strb r0, [r1]
_080E8C16:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E8C20:
	.4byte gRam
_080E8C24:
	.4byte 0x00000FC2
_080E8C28:
	.4byte 0x00000F72
_080E8C2C:
	.4byte 0x00001032
	THUMB_FUNC_END sub_080E8BC4

	THUMB_FUNC_START sub_080E8C30
sub_080E8C30: @ 0x080E8C30
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080E8808
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E8CCE
	ldr r6, _080E8C74  @ =gRam
	ldr r0, _080E8C78  @ =0x00001172
	add r2, r6, r0
	add r2, r4, r2
	ldr r1, _080E8C7C  @ =0x00000FC2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	strb r1, [r2]
	ldrb r0, [r0]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E8C88
	ldr r2, _080E8C80  @ =0x00000F92
	add r1, r6, r2
	add r1, r4, r1
	ldr r2, _080E8C84  @ =gUnknown_08177948
	lsr r0, r0, #27
	add r0, r0, r2
	ldrb r0, [r0]
	b _080E8CCC
_080E8C74:
	.4byte gRam
_080E8C78:
	.4byte 0x00001172
_080E8C7C:
	.4byte 0x00000FC2
_080E8C80:
	.4byte 0x00000F92
_080E8C84:
	.4byte gUnknown_08177948
_080E8C88:
	ldr r0, _080E8CD4  @ =0x00001032
	add r1, r6, r0
	add r1, r5, r1
	ldrb r2, [r1]
	mov r0, #191
	and r0, r0, r2
	strb r0, [r1]
	add r0, r5, #0
	mov r1, #110
	bl sub_080CF0AC
	ldr r2, _080E8CD8  @ =0x00000F72
	add r1, r6, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E8CDC  @ =0x00001152
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #48
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E8CE0  @ =0x00000FB2
	add r1, r6, r2
	add r1, r5, r1
	strb r0, [r1]
	add r2, r2, #208
	add r1, r6, r2
	add r1, r5, r1
_080E8CCC:
	strb r0, [r1]
_080E8CCE:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E8CD4:
	.4byte 0x00001032
_080E8CD8:
	.4byte 0x00000F72
_080E8CDC:
	.4byte 0x00001152
_080E8CE0:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080E8C30

	THUMB_FUNC_START sub_080E8CE4
sub_080E8CE4: @ 0x080E8CE4
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080E8E30  @ =gRam
	mov r8, r0
	ldr r2, _080E8E34  @ =0x00000F92
	add r2, r2, r8
	add r2, r4, r2
	ldr r3, _080E8E38  @ =gUnknown_08177A5C
	ldr r0, _080E8E3C  @ =0x00001052
	add r0, r0, r8
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #8
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #25
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080E8E40  @ =0x00000FB2
	add r1, r1, r8
	add r1, r1, r4
	mov r9, r1
	ldrb r1, [r1]
	add r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080E8FB0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080E8E24
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r0, _080E8E44  @ =0x00001152
	add r0, r0, r8
	add r5, r4, r0
	ldrb r0, [r5]
	sub r0, r0, #2
	strb r0, [r5]
	ldr r0, _080E8E48  @ =0x00001142
	add r0, r0, r8
	add r7, r4, r0
	ldrb r0, [r7]
	sub r0, r0, #1
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080E8DB2
	ldrb r0, [r5]
	sub r0, r0, #240
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080E8D72
	add r0, r4, #0
	bl sub_080E2614
_080E8D72:
	strb r6, [r7]
	strb r6, [r5]
	ldr r5, _080E8E4C  @ =0x00000996
	add r5, r5, r8
	ldrb r0, [r5]
	add r1, r4, #0
	eor r1, r1, r0
	mov r0, #15
	and r1, r1, r0
	cmp r1, #0
	bne _080E8DB2
	add r0, r4, #0
	bl sub_080C2FA8
	add r2, r0, #0
	ldr r0, _080E8E50  @ =0x00001082
	add r0, r0, r8
	add r0, r4, r0
	strb r2, [r0]
	ldrb r1, [r5]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #31
	and r0, r0, r1
	cmp r0, #0
	bne _080E8DB2
	mov r1, r9
	strb r2, [r1]
	add r0, r4, #0
	mov r1, #8
	bl sub_080C35FC
_080E8DB2:
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C79F8
	ldr r5, _080E8E30  @ =gRam
	ldr r1, _080E8E48  @ =0x00001142
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	sub r0, r0, #1
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080E8E16
	add r0, r4, #0
	bl sub_080E91FC
	ldr r1, _080E8E54  @ =0x000015E2
	add r0, r5, r1
	ldrh r0, [r0]
	cmp r0, #8
	bne _080E8E16
	add r0, r4, #0
	bl sub_080CB1E0
	add r0, r4, #0
	mov r1, #110
	bl sub_080CF0AC
	ldr r1, _080E8E58  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	mov r3, #0
	mov r2, #3
	strb r2, [r0]
	add r1, r1, #32
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #15
	strb r1, [r0]
	ldr r1, _080E8E5C  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	strb r3, [r0]
	add r1, r1, #192
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
_080E8E16:
	ldr r1, _080E8E30  @ =gRam
	ldr r5, _080E8E3C  @ =0x00001052
	add r1, r1, r5
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080E8E24:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080E8E30:
	.4byte gRam
_080E8E34:
	.4byte 0x00000F92
_080E8E38:
	.4byte gUnknown_08177A5C
_080E8E3C:
	.4byte 0x00001052
_080E8E40:
	.4byte 0x00000FB2
_080E8E44:
	.4byte 0x00001152
_080E8E48:
	.4byte 0x00001142
_080E8E4C:
	.4byte 0x00000996
_080E8E50:
	.4byte 0x00001082
_080E8E54:
	.4byte 0x000015E2
_080E8E58:
	.4byte 0x00000FA2
_080E8E5C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E8CE4

	THUMB_FUNC_START sub_080E8E60
sub_080E8E60: @ 0x080E8E60
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r0, sp
	add r1, r6, #0
	bl sub_080C4948
	ldr r4, _080E8F74  @ =gRam
	ldr r1, _080E8F78  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080E8EBA
	ldr r2, _080E8F7C  @ =0x000010A2
	add r1, r4, r2
	add r1, r6, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r3, #0
	bne _080E8EBA
	ldr r1, _080E8F80  @ =0x00000F72
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #2
	strb r1, [r0]
	ldr r2, _080E8F84  @ =0x00000FA2
	add r0, r4, r2
	add r0, r6, r0
	ldrb r2, [r0]
	mov r1, #9
	strb r1, [r0]
	cmp r2, #10
	bne _080E8EBA
	ldr r1, _080E8F88  @ =0x00001791
	add r0, r4, r1
	strb r3, [r0]
	ldr r2, _080E8F8C  @ =0x00001792
	add r0, r4, r2
	strb r3, [r0]
_080E8EBA:
	ldr r0, _080E8F74  @ =gRam
	ldr r2, _080E8F7C  @ =0x000010A2
	add r1, r0, r2
	add r1, r6, r1
	ldrb r1, [r1]
	add r7, r0, #0
	cmp r1, #47
	bhi _080E8F0A
	ldr r1, _080E8F78  @ =0x00000996
	add r0, r7, r1
	ldrb r3, [r0]
	mov r0, #1
	and r0, r0, r3
	cmp r0, #0
	bne _080E8F0A
	lsr r3, r3, #1
	mov r0, #1
	and r3, r3, r0
	ldr r2, _080E8F90  @ =0x00000EE2
	add r5, r7, r2
	add r5, r6, r5
	ldrb r1, [r5]
	ldr r0, _080E8F94  @ =0x00000F02
	add r4, r7, r0
	add r4, r6, r4
	ldrb r2, [r4]
	lsl r2, r2, #8
	ldr r0, _080E8F98  @ =gUnknown_08177A64
	add r0, r3, r0
	orr r1, r1, r2
	ldrb r0, [r0]
	add r1, r1, r0
	ldr r0, _080E8F9C  @ =gUnknown_08177A66
	add r3, r3, r0
	ldrb r0, [r3]
	lsl r0, r0, #8
	add r1, r1, r0
	strb r1, [r5]
	lsr r1, r1, #8
	strb r1, [r4]
_080E8F0A:
	ldr r1, _080E8FA0  @ =0x00000F92
	add r0, r7, r1
	add r0, r6, r0
	mov r5, #0
	strb r5, [r0]
	ldr r2, _080E8FA4  @ =0x00001042
	add r0, r7, r2
	add r0, r6, r0
	strb r5, [r0]
	add r0, r6, #0
	bl sub_080E9240
	ldr r0, _080E8FA8  @ =0x00001012
	add r4, r7, r0
	add r4, r6, r4
	ldrb r0, [r4]
	sub r0, r0, #2
	strb r0, [r4]
	add r0, r6, #0
	bl sub_080C6240
	ldrb r0, [r4]
	add r0, r0, #2
	strb r0, [r4]
	ldr r1, _080E8FAC  @ =0x00001092
	add r0, r7, r1
	add r0, r6, r0
	strb r5, [r0]
	add r0, r6, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E8F6C
	add r0, r6, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E8F6C
	add r0, r6, #0
	bl Sprite3_Move
	add r0, r6, #0
	bl sub_080C8168
	add r0, r6, #0
	bl sub_080E91FC
_080E8F6C:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080E8F74:
	.4byte gRam
_080E8F78:
	.4byte 0x00000996
_080E8F7C:
	.4byte 0x000010A2
_080E8F80:
	.4byte 0x00000F72
_080E8F84:
	.4byte 0x00000FA2
_080E8F88:
	.4byte 0x00001791
_080E8F8C:
	.4byte 0x00001792
_080E8F90:
	.4byte 0x00000EE2
_080E8F94:
	.4byte 0x00000F02
_080E8F98:
	.4byte gUnknown_08177A64
_080E8F9C:
	.4byte gUnknown_08177A66
_080E8FA0:
	.4byte 0x00000F92
_080E8FA4:
	.4byte 0x00001042
_080E8FA8:
	.4byte 0x00001012
_080E8FAC:
	.4byte 0x00001092
	THUMB_FUNC_END sub_080E8E60

	THUMB_FUNC_START sub_080E8FB0
sub_080E8FB0: @ 0x080E8FB0
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r4, r0, #24
	str r4, [sp, #8]
	add r0, r4, #0
	bl sub_080E9240
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E90AA
	ldr r7, _080E90BC  @ =gRam
	ldr r1, _080E90C0  @ =0x00000F92
	add r0, r7, r1
	add r4, r4, r0
	mov r10, r4
	ldrb r0, [r4]
	cmp r0, #3
	bls _080E8FFC
	ldr r3, _080E90C4  @ =0x00000964
	add r2, r7, r3
	mov r1, #1
	and r1, r1, r0
	ldr r4, _080E90C8  @ =0x0000FFFF
	add r1, r1, r4
	ldrh r0, [r2]
	add r0, r0, r1
	strh r0, [r2]
_080E8FFC:
	add r0, sp, #4
	ldrb r1, [r0]
	ldr r5, _080E90CC  @ =gUnknown_03003E74
	ldrh r0, [r5]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r6, _080E90D0  @ =gUnknown_03002B90
	ldrh r1, [r6]
	ldr r2, _080E90C4  @ =0x00000964
	add r2, r2, r7
	mov r9, r2
	ldrh r2, [r2]
	sub r2, r2, #6
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r5, _080E90D4  @ =gUnknown_08177A68
	ldr r4, _080E90D8  @ =0x00001082
	add r3, r7, r4
	ldr r6, [sp, #8]
	add r3, r6, r3
	ldrb r4, [r3]
	add r5, r4, r5
	ldrb r3, [r5]
	ldr r5, _080E90DC  @ =gUnknown_08177A6C
	add r4, r4, r5
	ldrb r4, [r4]
	ldr r5, _080E90E0  @ =0x00000969
	add r5, r5, r7
	mov r8, r5
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r6, #2
	str r6, [sp]
	bl sub_080C6368
	add r0, sp, #4
	ldrb r1, [r0]
	ldr r2, _080E90CC  @ =gUnknown_03003E74
	ldrh r0, [r2]
	add r0, r0, r1
	add r0, r0, #1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r3, _080E90D0  @ =gUnknown_03002B90
	ldrh r1, [r3]
	mov r4, r9
	ldrh r2, [r4]
	add r2, r2, #2
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E90E4  @ =gUnknown_08177A70
	mov r5, r10
	ldrb r4, [r5]
	add r3, r4, r3
	ldrb r3, [r3]
	ldr r5, _080E90E8  @ =gUnknown_08177A78
	add r4, r4, r5
	ldrb r4, [r4]
	mov r5, r8
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	str r6, [sp]
	bl sub_080C6368
	ldr r6, _080E90EC  @ =0x00001092
	add r0, r7, r6
	ldr r1, [sp, #8]
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E90AA
	add r0, r1, #0
	bl sub_080C6230
_080E90AA:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E90BC:
	.4byte gRam
_080E90C0:
	.4byte 0x00000F92
_080E90C4:
	.4byte 0x00000964
_080E90C8:
	.4byte 0x0000FFFF
_080E90CC:
	.4byte gUnknown_03003E74
_080E90D0:
	.4byte gUnknown_03002B90
_080E90D4:
	.4byte gUnknown_08177A68
_080E90D8:
	.4byte 0x00001082
_080E90DC:
	.4byte gUnknown_08177A6C
_080E90E0:
	.4byte 0x00000969
_080E90E4:
	.4byte gUnknown_08177A70
_080E90E8:
	.4byte gUnknown_08177A78
_080E90EC:
	.4byte 0x00001092
	THUMB_FUNC_END sub_080E8FB0

	THUMB_FUNC_START sub_080E90F0
sub_080E90F0: @ 0x080E90F0
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080E91AC  @ =gUnknown_08177AB0
	ldr r6, _080E91B0  @ =gRam
	ldr r2, _080E91B4  @ =0x00000996
	add r1, r6, r2
	ldrb r1, [r1]
	lsr r1, r1, #2
	mov r2, #3
	and r1, r1, r2
	add r1, r1, r3
	ldrb r1, [r1]
	lsr r1, r1, #3
	lsl r1, r1, #3
	ldr r2, _080E91B8  @ =gUnknown_08177A80
	add r1, r1, r2
	mov r2, #2
	bl sub_080C9480
	ldr r0, _080E91BC  @ =gUnknown_03003E74
	mov r10, r0
	ldrh r0, [r0]
	lsl r0, r0, #3
	mov r2, #170
	lsl r2, r2, #3
	add r1, r6, r2
	add r7, r0, r1
	ldrb r1, [r7, #3]
	mov r0, #17
	neg r0, r0
	and r0, r0, r1
	mov r1, #33
	neg r1, r1
	mov r9, r1
	and r0, r0, r1
	strb r0, [r7, #3]
	ldrb r1, [r7, #5]
	mov r3, #15
	add r0, r3, #0
	and r0, r0, r1
	mov r2, #32
	mov r8, r2
	mov r1, r8
	orr r0, r0, r1
	strb r0, [r7, #5]
	ldrh r5, [r7, #4]
	lsl r0, r5, #22
	lsr r0, r0, #22
	mov r4, #255
	add r1, r4, #0
	and r1, r1, r0
	ldr r2, _080E91C0  @ =0xFFFFFC00
	add r0, r2, #0
	and r0, r0, r5
	orr r0, r0, r1
	strh r0, [r7, #4]
	mov r1, r10
	ldrh r0, [r1]
	lsl r0, r0, #3
	mov r1, #171
	lsl r1, r1, #3
	add r6, r6, r1
	add r7, r0, r6
	ldrb r0, [r7, #3]
	mov r1, #16
	orr r0, r0, r1
	mov r1, r9
	and r0, r0, r1
	strb r0, [r7, #3]
	ldrb r0, [r7, #5]
	and r3, r3, r0
	mov r0, r8
	orr r3, r3, r0
	strb r3, [r7, #5]
	ldrh r1, [r7, #4]
	lsl r0, r1, #22
	lsr r0, r0, #22
	and r4, r4, r0
	and r2, r2, r1
	orr r2, r2, r4
	strh r2, [r7, #4]
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E91AC:
	.4byte gUnknown_08177AB0
_080E91B0:
	.4byte gRam
_080E91B4:
	.4byte 0x00000996
_080E91B8:
	.4byte gUnknown_08177A80
_080E91BC:
	.4byte gUnknown_03003E74
_080E91C0:
	.4byte 0xFFFFFC00
	THUMB_FUNC_END sub_080E90F0

	THUMB_FUNC_START sub_080E91C4
sub_080E91C4: @ 0x080E91C4
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080E91D8  @ =gRam
	ldr r2, _080E91DC  @ =0x00000FC2
	add r1, r1, r2
	add r0, r0, r1
	mov r1, #96
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080E91D8:
	.4byte gRam
_080E91DC:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E91C4

	THUMB_FUNC_START sub_080E91E0
sub_080E91E0: @ 0x080E91E0
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080E90F0
	ldr r1, _080E91F8  @ =gUnknown_03003E74
	ldrh r0, [r1]
	add r0, r0, #2
	strh r0, [r1]
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E91F8:
	.4byte gUnknown_03003E74
	THUMB_FUNC_END sub_080E91E0

	THUMB_FUNC_START sub_080E91FC
sub_080E91FC: @ 0x080E91FC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080E9230  @ =gRam
	ldr r3, _080E9234  @ =0x00001092
	add r1, r2, r3
	add r3, r0, r1
	mov r1, #0
	strb r1, [r3]
	ldr r4, _080E9238  @ =0x00001142
	add r1, r2, r4
	add r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E9228
	ldr r1, _080E923C  @ =0x000015E2
	add r0, r2, r1
	ldrh r0, [r0]
	cmp r0, #9
	bne _080E9228
	mov r0, #1
	strb r0, [r3]
_080E9228:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9230:
	.4byte gRam
_080E9234:
	.4byte 0x00001092
_080E9238:
	.4byte 0x00001142
_080E923C:
	.4byte 0x000015E2
	THUMB_FUNC_END sub_080E91FC

	THUMB_FUNC_START sub_080E9240
sub_080E9240: @ 0x080E9240
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r0, _080E9260  @ =gRam
	ldr r2, _080E9264  @ =0x00001092
	add r0, r0, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E925A
	add r0, r1, #0
	bl sub_080E91E0
_080E925A:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9260:
	.4byte gRam
_080E9264:
	.4byte 0x00001092
	THUMB_FUNC_END sub_080E9240

	THUMB_FUNC_START sub_080E9268
sub_080E9268: @ 0x080E9268
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080E934C  @ =gRam
	ldr r1, _080E9350  @ =0x000016C4
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r2, _080E9354  @ =0x000016C5
	add r0, r4, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r3, _080E9358  @ =0x00001622
	add r0, r4, r3
	ldrb r2, [r0]
	add r3, r3, #1
	add r0, r4, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #16
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #31
	bhi _080E9346
	mov r1, #182
	lsl r1, r1, #5
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r2, _080E935C  @ =0x000016C1
	add r0, r4, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	add r3, r3, #1
	add r0, r4, r3
	ldrb r2, [r0]
	add r3, r3, #1
	add r0, r4, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #48
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #79
	bhi _080E9346
	bl sub_08093078
	ldr r1, _080E9360  @ =0x00000FC2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #127
	strb r1, [r0]
	mov r0, #45
	mov r1, #0
	bl sub_0812A324
	ldr r2, _080E9364  @ =0x00000F52
	add r1, r4, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r1, #15
	add r5, r4, #0
	ldr r3, _080E9368  @ =0x00001792
	add r6, r5, r3
_080E92FC:
	lsl r0, r1, #24
	asr r2, r0, #24
	ldr r3, _080E936C  @ =0x000015DC
	add r1, r5, r3
	add r4, r0, #0
	ldrb r1, [r1]
	cmp r2, r1
	beq _080E933A
	ldr r1, _080E9370  @ =0x00000E75
	add r0, r5, r1
	add r0, r2, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080E933A
	ldr r3, _080E9374  @ =0x00000FA2
	add r0, r5, r3
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #10
	bne _080E9334
	ldr r2, _080E9378  @ =0x00001791
	add r0, r5, r2
	strb r1, [r0]
	strb r1, [r6]
_080E9334:
	lsr r0, r4, #24
	bl sub_080CB1E0
_080E933A:
	mov r3, #255
	lsl r3, r3, #24
	add r0, r4, r3
	lsr r1, r0, #24
	cmp r0, #0
	bge _080E92FC
_080E9346:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E934C:
	.4byte gRam
_080E9350:
	.4byte 0x000016C4
_080E9354:
	.4byte 0x000016C5
_080E9358:
	.4byte 0x00001622
_080E935C:
	.4byte 0x000016C1
_080E9360:
	.4byte 0x00000FC2
_080E9364:
	.4byte 0x00000F52
_080E9368:
	.4byte 0x00001792
_080E936C:
	.4byte 0x000015DC
_080E9370:
	.4byte 0x00000E75
_080E9374:
	.4byte 0x00000FA2
_080E9378:
	.4byte 0x00001791
	THUMB_FUNC_END sub_080E9268

	THUMB_FUNC_START sub_080E937C
sub_080E937C: @ 0x080E937C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r6, _080E93B0  @ =gRam
	ldr r1, _080E93B4  @ =0x00000FC2
	add r0, r6, r1
	add r4, r2, r0
	ldrb r3, [r4]
	add r5, r3, #0
	cmp r5, #0
	beq _080E93C4
	ldr r1, _080E93B8  @ =gUnknown_08177AC8
	mov r2, #1
	add r0, r2, #0
	and r0, r0, r3
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r1, [r0]
	ldr r3, _080E93BC  @ =0x00000A28
	add r0, r6, r3
	strh r1, [r0]
	ldr r1, _080E93C0  @ =0x00001770
	add r0, r6, r1
	strb r2, [r0]
	b _080E93E4
	.byte 0x00
	.byte 0x00
_080E93B0:
	.4byte gRam
_080E93B4:
	.4byte 0x00000FC2
_080E93B8:
	.4byte gUnknown_08177AC8
_080E93BC:
	.4byte 0x00000A28
_080E93C0:
	.4byte 0x00001770
_080E93C4:
	ldr r3, _080E93EC  @ =0x00000F52
	add r1, r6, r3
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #127
	strb r0, [r4]
	ldr r1, _080E93F0  @ =0x00000A28
	add r0, r6, r1
	strh r5, [r0]
	add r3, r3, #64
	add r0, r6, r3
	add r0, r2, r0
	mov r1, #4
	strb r1, [r0]
_080E93E4:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E93EC:
	.4byte 0x00000F52
_080E93F0:
	.4byte 0x00000A28
	THUMB_FUNC_END sub_080E937C

	THUMB_FUNC_START sub_080E93F4
sub_080E93F4: @ 0x080E93F4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080E9430  @ =gRam
	ldr r1, _080E9434  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080E9440
	cmp r0, #28
	bne _080E941C
	add r1, r1, #32
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #15
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080E95CC
_080E941C:
	ldr r0, _080E9438  @ =0x00000F92
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080E943C  @ =gUnknown_08177ACC
	ldrb r0, [r5]
	lsr r0, r0, #3
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080E9450
_080E9430:
	.4byte gRam
_080E9434:
	.4byte 0x00000FC2
_080E9438:
	.4byte 0x00000F92
_080E943C:
	.4byte gUnknown_08177ACC
_080E9440:
	ldr r1, _080E9458  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #127
	strb r0, [r5]
_080E9450:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9458:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E93F4

	THUMB_FUNC_START sub_080E945C
sub_080E945C: @ 0x080E945C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080E9490  @ =gRam
	ldr r1, _080E9494  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E954C
	ldr r2, _080E9498  @ =0x00000F92
	add r1, r5, r2
	add r1, r4, r1
	ldr r2, _080E949C  @ =gUnknown_08177ADC
	lsr r0, r0, #28
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldrb r0, [r6]
	cmp r0, #80
	bne _080E94A4
	ldr r0, _080E94A0  @ =0x00000145
	bl sub_080C95C0
	b _080E955C
_080E9490:
	.4byte gRam
_080E9494:
	.4byte 0x00000FC2
_080E9498:
	.4byte 0x00000F92
_080E949C:
	.4byte gUnknown_08177ADC
_080E94A0:
	.4byte 0x00000145
_080E94A4:
	cmp r0, #79
	bne _080E94CE
	ldr r1, _080E94BC  @ =0x00001AE2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E94C4
	ldr r0, _080E94C0  @ =0x00000149
	bl sub_080C95C0
	mov r0, #48
	b _080E955A
_080E94BC:
	.4byte 0x00001AE2
_080E94C0:
	.4byte 0x00000149
_080E94C4:
	mov r0, #163
	lsl r0, r0, #1
	bl sub_080C95C0
	b _080E955C
_080E94CE:
	cmp r0, #78
	bne _080E9530
	ldr r2, _080E94E8  @ =0x00001AE2
	add r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E94EC
	mov r0, #164
	lsl r0, r0, #1
	bl sub_080C95C0
	mov r0, #48
	b _080E955A
_080E94E8:
	.4byte 0x00001AE2
_080E94EC:
	bl sub_080AA868
	ldr r1, _080E9504  @ =0x000001F3
	cmp r0, r1
	bgt _080E9508
	mov r0, #164
	lsl r0, r0, #1
	bl sub_080C95C0
	mov r0, #48
	b _080E955A
	.byte 0x00
	.byte 0x00
_080E9504:
	.4byte 0x000001F3
_080E9508:
	ldr r0, _080E9524  @ =0xFFFFFE0C
	bl sub_080AA83C
	ldr r0, _080E9528  @ =0x00000147
	bl sub_080C95C0
	ldr r0, _080E952C  @ =0x00001062
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080E955C
	.byte 0x00
	.byte 0x00
_080E9524:
	.4byte 0xFFFFFE0C
_080E9528:
	.4byte 0x00000147
_080E952C:
	.4byte 0x00001062
_080E9530:
	cmp r0, #77
	bne _080E955C
	ldr r1, _080E9548  @ =0x00001062
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080E955C
	add r0, r4, #0
	bl sub_080E9900
	b _080E955C
_080E9548:
	.4byte 0x00001062
_080E954C:
	ldr r2, _080E9564  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #36
_080E955A:
	strb r0, [r6]
_080E955C:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9564:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E945C

	THUMB_FUNC_START sub_080E9568
sub_080E9568: @ 0x080E9568
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080E95A4  @ =gRam
	ldr r1, _080E95A8  @ =0x00000FC2
	add r0, r6, r1
	add r7, r5, r0
	ldrb r4, [r7]
	cmp r4, #0
	beq _080E95B4
	cmp r4, #29
	bne _080E9590
	add r1, r1, #32
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #15
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080E95CC
_080E9590:
	ldr r0, _080E95AC  @ =0x00000F92
	add r1, r6, r0
	add r1, r5, r1
	ldr r2, _080E95B0  @ =gUnknown_08177AE4
	ldrb r0, [r7]
	lsr r0, r0, #1
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080E95C0
_080E95A4:
	.4byte gRam
_080E95A8:
	.4byte 0x00000FC2
_080E95AC:
	.4byte 0x00000F92
_080E95B0:
	.4byte gUnknown_08177AE4
_080E95B4:
	add r0, r5, #0
	bl sub_080CB1E0
	ldr r1, _080E95C8  @ =0x00001770
	add r0, r6, r1
	strb r4, [r0]
_080E95C0:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E95C8:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080E9568

	THUMB_FUNC_START sub_080E95CC
sub_080E95CC: @ 0x080E95CC
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	mov r1, #14
	bl sub_080CF0AC
	mov r6, #7
	ldr r5, _080E96D8  @ =gRam
	mov r1, #0
	mov r9, r1
	ldr r3, _080E96DC  @ =0x00001172
	add r3, r3, r5
	mov r8, r3
_080E95F0:
	mov r0, #8
	add r1, r7, #0
	bl sub_080CA538
	add r4, r0, #0
	lsl r6, r6, #24
	cmp r4, #0
	blt _080E96BC
	ldr r1, _080E96E0  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	mov r3, #150
	lsl r3, r3, #4
	add r1, r5, r3
	ldr r0, _080E96E4  @ =gUnknown_08177AF9
	asr r2, r6, #24
	add r0, r2, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080E96E8  @ =gUnknown_08177B01
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r1, r1, #4
	ldr r3, _080E96EC  @ =0x00000EE2
	add r0, r5, r3
	add r0, r4, r0
	strb r1, [r0]
	add r3, r3, #32
	add r0, r5, r3
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080E96F0  @ =0x00000964
	add r1, r5, r0
	ldr r0, _080E96F4  @ =gUnknown_08177B09
	add r0, r2, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080E96F8  @ =gUnknown_08177B11
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r1, r1, #4
	sub r3, r3, #48
	add r0, r5, r3
	add r0, r4, r0
	strb r1, [r0]
	add r3, r3, #32
	add r0, r5, r3
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080E96FC  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080E9700  @ =gUnknown_08177B19
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r3, r3, #32
	add r1, r5, r3
	add r1, r4, r1
	ldr r0, _080E9704  @ =gUnknown_08177B21
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	bl GetRandomInt
	ldr r1, _080E9708  @ =0x00001152
	add r2, r5, r1
	add r2, r4, r2
	mov r1, #15
	and r1, r1, r0
	add r1, r1, #24
	strb r1, [r2]
	ldr r3, _080E970C  @ =0x00000F52
	add r0, r5, r3
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080E9710  @ =0x00001142
	add r0, r5, r1
	add r0, r4, r0
	mov r3, r9
	strb r3, [r0]
	ldr r0, _080E9714  @ =0x00001032
	add r1, r5, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #64
	orr r2, r2, r0
	strb r2, [r1]
	mov r1, r8
	add r0, r4, r1
	strb r2, [r0]
_080E96BC:
	mov r3, #255
	lsl r3, r3, #24
	add r0, r6, r3
	lsr r6, r0, #24
	cmp r0, #0
	bge _080E95F0
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E96D8:
	.4byte gRam
_080E96DC:
	.4byte 0x00001172
_080E96E0:
	.4byte 0x00000FA2
_080E96E4:
	.4byte gUnknown_08177AF9
_080E96E8:
	.4byte gUnknown_08177B01
_080E96EC:
	.4byte 0x00000EE2
_080E96F0:
	.4byte 0x00000964
_080E96F4:
	.4byte gUnknown_08177B09
_080E96F8:
	.4byte gUnknown_08177B11
_080E96FC:
	.4byte 0x00000F22
_080E9700:
	.4byte gUnknown_08177B19
_080E9704:
	.4byte gUnknown_08177B21
_080E9708:
	.4byte 0x00001152
_080E970C:
	.4byte 0x00000F52
_080E9710:
	.4byte 0x00001142
_080E9714:
	.4byte 0x00001032
	THUMB_FUNC_END sub_080E95CC

	THUMB_FUNC_START sub_080E9718
sub_080E9718: @ 0x080E9718
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #8]
	mov r4, sp
	add r4, r4, #5
	add r0, sp, #4
	add r1, r4, #0
	ldr r2, [sp, #8]
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E9740
	b _080E98AE
_080E9740:
	ldr r2, _080E98C0  @ =gRam
	ldr r1, _080E98C4  @ =0x00000F52
	add r0, r2, r1
	ldr r3, [sp, #8]
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #1
	bls _080E9808
	ldr r4, _080E98C8  @ =0x00000F92
	add r0, r2, r4
	add r0, r3, r0
	ldrb r0, [r0]
	lsl r0, r0, #26
	lsr r0, r0, #24
	mov r10, r0
	mov r7, #3
	mov r8, r7
	mov r9, r2
	add r6, sp, #4
_080E9766:
	mov r0, r10
	add r0, r0, r8
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	ldr r0, _080E98CC  @ =gUnknown_08177BC5
	add r0, r5, r0
	ldrb r3, [r0]
	mov r0, #15
	and r0, r0, r3
	cmp r0, #0
	bne _080E9784
	ldr r1, _080E98D0  @ =gUnknown_03002B99
	ldrb r0, [r1]
	orr r3, r3, r0
_080E9784:
	mov r0, #32
	orr r3, r3, r0
	lsl r3, r3, #24
	ldr r0, _080E98D4  @ =gUnknown_03003E74
	ldrb r1, [r6]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r9
	ldr r1, _080E98D8  @ =gUnknown_08177B29
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080E98DC  @ =gUnknown_08177B5D
	add r2, r5, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	ldr r4, _080E98E0  @ =gUnknown_03002B94
	ldrh r4, [r4]
	add r2, r2, r4
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r4, _080E98E4  @ =gUnknown_08177B91
	add r4, r5, r4
	ldrb r4, [r4]
	lsr r3, r3, #16
	orr r3, r3, r4
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	mov r7, r8
	lsl r1, r7, #24
	mov r0, #255
	lsl r0, r0, #24
	add r1, r1, r0
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsr r3, r1, #24
	mov r8, r3
	cmp r1, #0
	bge _080E9766
	ldr r0, [sp, #8]
	mov r1, #2
	mov r2, #3
	bl sub_080C6350
	add r0, sp, #4
	mov r1, sp
	add r1, r1, #5
	ldr r2, [sp, #8]
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E98AE
_080E9808:
	ldr r4, _080E98C0  @ =gRam
	ldr r7, _080E98E8  @ =0x00000FE2
	add r0, r4, r7
	ldr r1, [sp, #8]
	add r0, r1, r0
	ldrb r0, [r0]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E98AE
	lsr r0, r0, #25
	mov r1, #4
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	mov r0, #16
	bl sub_080CF3A0
	add r1, sp, #4
	mov r0, #0
	strb r0, [r1]
	mov r7, #3
	add r6, r1, #0
	mov r8, r4
	ldr r3, _080E98EC  @ =0x00000964
	add r3, r3, r8
	mov r10, r3
_080E983E:
	mov r4, r9
	add r5, r4, r7
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r0, _080E98D4  @ =gUnknown_03003E74
	ldrb r1, [r6]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r8
	ldr r1, _080E98F0  @ =gUnknown_08177BF9
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080E98F4  @ =gUnknown_08177C01
	add r2, r5, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	mov r3, r10
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E98F8  @ =gUnknown_08177C09
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080E98FC  @ =gUnknown_08177C11
	add r5, r5, r4
	ldrb r5, [r5]
	mov r4, #36
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	lsl r1, r7, #24
	mov r4, #255
	lsl r4, r4, #24
	add r1, r1, r4
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsr r7, r1, #24
	cmp r1, #0
	bge _080E983E
_080E98AE:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E98C0:
	.4byte gRam
_080E98C4:
	.4byte 0x00000F52
_080E98C8:
	.4byte 0x00000F92
_080E98CC:
	.4byte gUnknown_08177BC5
_080E98D0:
	.4byte gUnknown_03002B99
_080E98D4:
	.4byte gUnknown_03003E74
_080E98D8:
	.4byte gUnknown_08177B29
_080E98DC:
	.4byte gUnknown_08177B5D
_080E98E0:
	.4byte gUnknown_03002B94
_080E98E4:
	.4byte gUnknown_08177B91
_080E98E8:
	.4byte 0x00000FE2
_080E98EC:
	.4byte 0x00000964
_080E98F0:
	.4byte gUnknown_08177BF9
_080E98F4:
	.4byte gUnknown_08177C01
_080E98F8:
	.4byte gUnknown_08177C09
_080E98FC:
	.4byte gUnknown_08177C11
	THUMB_FUNC_END sub_080E9718

	THUMB_FUNC_START sub_080E9900
sub_080E9900: @ 0x080E9900
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r0, #192
	add r1, r6, #0
	bl sub_080CA538
	add r5, r0, #0
	cmp r5, #0
	blt _080E9972
	lsl r0, r5, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r4, _080E9978  @ =gRam
	ldr r1, _080E997C  @ =0x00001152
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #32
	strb r1, [r0]
	ldr r1, _080E9980  @ =0x00000F12
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #16
	strb r1, [r0]
	ldr r1, _080E9984  @ =0x00000F62
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #30
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #108
	bl sub_080CF0AC
	ldr r1, _080E9988  @ =0x00001012
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #131
	strb r1, [r0]
	ldr r1, _080E998C  @ =0x00001032
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #84
	strb r1, [r0]
	ldr r1, _080E9990  @ =0x00001122
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #4
	strb r1, [r0]
	ldr r0, _080E9994  @ =0x000010B2
	add r4, r4, r0
	add r4, r5, r4
	mov r0, #48
	strb r0, [r4]
	mov r0, #17
	bl sub_0812FBC4
_080E9972:
	pop {r4-r6}
	pop {r0}
	bx r0
_080E9978:
	.4byte gRam
_080E997C:
	.4byte 0x00001152
_080E9980:
	.4byte 0x00000F12
_080E9984:
	.4byte 0x00000F62
_080E9988:
	.4byte 0x00001012
_080E998C:
	.4byte 0x00001032
_080E9990:
	.4byte 0x00001122
_080E9994:
	.4byte 0x000010B2
	THUMB_FUNC_END sub_080E9900

	THUMB_FUNC_START sub_080E9998
sub_080E9998: @ 0x080E9998
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r0, _080E99B0  @ =gUnknown_0200233A
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E99B4
	add r0, r1, #0
	bl sub_080C3758
	b _080E99C0
	.byte 0x00
	.byte 0x00
_080E99B0:
	.4byte gUnknown_0200233A
_080E99B4:
	ldr r0, _080E99C4  @ =gRam
	ldr r2, _080E99C8  @ =0x00000FA2
	add r0, r0, r2
	add r0, r1, r0
	mov r1, #0
	strb r1, [r0]
_080E99C0:
	pop {r0}
	bx r0
_080E99C4:
	.4byte gRam
_080E99C8:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080E9998

	THUMB_FUNC_START sub_080E99CC
sub_080E99CC: @ 0x080E99CC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080E9718
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E99FC
	ldr r1, _080E9A04  @ =gUnknown_08177AB4
	ldr r0, _080E9A08  @ =gRam
	ldr r2, _080E9A0C  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080E99FC:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9A04:
	.4byte gUnknown_08177AB4
_080E9A08:
	.4byte gRam
_080E9A0C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E99CC

	THUMB_FUNC_START sub_080E9A10
sub_080E9A10: @ 0x080E9A10
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080E9A60  @ =gRam
	ldr r1, _080E9A64  @ =0x00000F62
	add r2, r3, r1
	add r2, r0, r2
	ldr r4, _080E9A68  @ =0x00000EE2
	add r1, r3, r4
	add r1, r0, r1
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r1, _080E9A6C  @ =0x00000F72
	add r2, r3, r1
	add r2, r0, r2
	add r4, r4, #32
	add r1, r3, r4
	add r1, r0, r1
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r1, _080E9A70  @ =0x00000F82
	add r2, r3, r1
	add r2, r0, r2
	sub r4, r4, #48
	add r1, r3, r4
	add r1, r0, r1
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r2, _080E9A74  @ =0x00001082
	add r1, r3, r2
	add r1, r0, r1
	add r4, r4, #32
	add r3, r3, r4
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9A60:
	.4byte gRam
_080E9A64:
	.4byte 0x00000F62
_080E9A68:
	.4byte 0x00000EE2
_080E9A6C:
	.4byte 0x00000F72
_080E9A70:
	.4byte 0x00000F82
_080E9A74:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080E9A10

	THUMB_FUNC_START sub_080E9A78
sub_080E9A78: @ 0x080E9A78
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080E9B1C  @ =gRam
	ldr r1, _080E9B20  @ =0x00000FC2
	add r0, r6, r1
	add r2, r5, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080E9B14
	ldr r0, _080E9B24  @ =0x00000F52
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #8
	strb r0, [r2]
	bl GetRandomInt
	mov r4, #3
	and r4, r4, r0
	ldr r1, _080E9B28  @ =0x00000F62
	add r0, r6, r1
	add r0, r5, r0
	ldrb r3, [r0]
	add r1, r1, #16
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #8
	ldr r0, _080E9B2C  @ =gUnknown_08177C34
	add r0, r4, r0
	orr r3, r3, r1
	ldrb r0, [r0]
	add r3, r3, r0
	ldr r0, _080E9B30  @ =gUnknown_08177C38
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r3, r3, r0
	ldr r1, _080E9B34  @ =0x00000F82
	add r0, r6, r1
	add r0, r5, r0
	ldrb r2, [r0]
	ldr r1, _080E9B38  @ =0x00001082
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #8
	ldr r0, _080E9B3C  @ =gUnknown_08177C3C
	add r0, r4, r0
	orr r2, r2, r1
	ldrb r0, [r0]
	add r2, r2, r0
	ldr r0, _080E9B40  @ =gUnknown_08177C40
	add r4, r4, r0
	ldrb r0, [r4]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r1, _080E9B44  @ =0x00000EE2
	add r0, r6, r1
	add r0, r5, r0
	strb r3, [r0]
	add r1, r1, #32
	add r0, r6, r1
	add r0, r5, r0
	lsr r3, r3, #8
	strb r3, [r0]
	sub r1, r1, #48
	add r0, r6, r1
	add r0, r5, r0
	strb r2, [r0]
	add r1, r1, #32
	add r0, r6, r1
	add r0, r5, r0
	lsr r2, r2, #8
	strb r2, [r0]
_080E9B14:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9B1C:
	.4byte gRam
_080E9B20:
	.4byte 0x00000FC2
_080E9B24:
	.4byte 0x00000F52
_080E9B28:
	.4byte 0x00000F62
_080E9B2C:
	.4byte gUnknown_08177C34
_080E9B30:
	.4byte gUnknown_08177C38
_080E9B34:
	.4byte 0x00000F82
_080E9B38:
	.4byte 0x00001082
_080E9B3C:
	.4byte gUnknown_08177C3C
_080E9B40:
	.4byte gUnknown_08177C40
_080E9B44:
	.4byte 0x00000EE2
	THUMB_FUNC_END sub_080E9A78

	THUMB_FUNC_START sub_080E9B48
sub_080E9B48: @ 0x080E9B48
	push {r4,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080E9B74  @ =gRam
	ldr r1, _080E9B78  @ =0x00000FC2
	add r0, r2, r1
	add r4, r3, r0
	ldrb r0, [r4]
	lsl r1, r0, #24
	cmp r1, #0
	beq _080E9B80
	ldr r4, _080E9B7C  @ =0x00000F92
	add r0, r2, r4
	add r0, r3, r0
	lsr r1, r1, #26
	mov r2, #1
	and r1, r1, r2
	strb r1, [r0]
	add r0, r3, #0
	bl sub_080E9D14
	b _080E9B90
_080E9B74:
	.4byte gRam
_080E9B78:
	.4byte 0x00000FC2
_080E9B7C:
	.4byte 0x00000F92
_080E9B80:
	ldr r1, _080E9B98  @ =0x00000F52
	add r0, r2, r1
	add r0, r3, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #16
	strb r0, [r4]
_080E9B90:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9B98:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E9B48

	THUMB_FUNC_START sub_080E9B9C
sub_080E9B9C: @ 0x080E9B9C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r3, _080E9BF4  @ =gRam
	ldr r0, _080E9BF8  @ =0x00001152
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #2
	strb r0, [r1]
	ldr r1, _080E9BFC  @ =0x00001142
	add r0, r3, r1
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080E9BEC
	mov r0, #0
	strb r0, [r2]
	ldr r0, _080E9C00  @ =0x00000F52
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E9C04  @ =0x00000FC2
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #16
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080E9D14
_080E9BEC:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9BF4:
	.4byte gRam
_080E9BF8:
	.4byte 0x00001152
_080E9BFC:
	.4byte 0x00001142
_080E9C00:
	.4byte 0x00000F52
_080E9C04:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080E9B9C

	THUMB_FUNC_START sub_080E9C08
sub_080E9C08: @ 0x080E9C08
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r2, _080E9C54  @ =gRam
	ldr r1, _080E9C58  @ =0x00001012
	add r0, r2, r1
	add r3, r5, r0
	mov r1, #130
	strb r1, [r3]
	ldr r4, _080E9C5C  @ =0x00001172
	add r0, r2, r4
	add r0, r5, r0
	strb r1, [r0]
	ldr r1, _080E9C60  @ =0x00001032
	add r0, r2, r1
	add r0, r5, r0
	mov r1, #73
	strb r1, [r0]
	ldr r4, _080E9C64  @ =0x00001002
	add r0, r2, r4
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080E9C6C
	add r0, r5, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	beq _080E9CD2
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	ldr r0, _080E9C68  @ =0x00000177
	bl sub_080C95C0
	b _080E9CD2
	.byte 0x00
	.byte 0x00
_080E9C54:
	.4byte gRam
_080E9C58:
	.4byte 0x00001012
_080E9C5C:
	.4byte 0x00001172
_080E9C60:
	.4byte 0x00001032
_080E9C64:
	.4byte 0x00001002
_080E9C68:
	.4byte 0x00000177
_080E9C6C:
	mov r1, #0
	cmp r0, #15
	bls _080E9CC4
	cmp r0, #16
	bne _080E9CC0
	ldr r4, _080E9CF8  @ =0x000011B2
	add r0, r2, r4
	add r0, r5, r0
	strb r1, [r0]
	ldr r1, _080E9CFC  @ =0x00000FA2
	add r0, r2, r1
	add r0, r5, r0
	mov r1, #6
	strb r1, [r0]
	ldr r4, _080E9D00  @ =0x00000FC2
	add r0, r2, r4
	add r0, r5, r0
	mov r1, #15
	strb r1, [r0]
	ldrb r0, [r3]
	add r0, r0, #4
	strb r0, [r3]
	add r0, r5, #0
	mov r1, #21
	bl sub_080CF0AC
	mov r0, #77
	add r1, r5, #0
	bl sub_080CA538
	cmp r0, #0
	blt _080E9CBE
	lsl r4, r0, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080CAE50
	add r0, r4, #0
	mov r1, #6
	bl sub_080C6E84
_080E9CBE:
	mov r1, #1
_080E9CC0:
	cmp r1, #0
	beq _080E9CD2
_080E9CC4:
	ldr r1, _080E9D04  @ =gRam
	ldr r0, _080E9D08  @ =0x00001002
	add r1, r1, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080E9CD2:
	ldr r2, _080E9D04  @ =gRam
	ldr r4, _080E9D0C  @ =0x00001052
	add r1, r2, r4
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E9D10  @ =0x00000F92
	add r2, r2, r1
	add r2, r5, r2
	mov r1, #4
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #26
	add r0, r0, #3
	strb r0, [r2]
	pop {r4,r5}
	pop {r0}
	bx r0
_080E9CF8:
	.4byte 0x000011B2
_080E9CFC:
	.4byte 0x00000FA2
_080E9D00:
	.4byte 0x00000FC2
_080E9D04:
	.4byte gRam
_080E9D08:
	.4byte 0x00001002
_080E9D0C:
	.4byte 0x00001052
_080E9D10:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080E9C08

	THUMB_FUNC_START sub_080E9D14
sub_080E9D14: @ 0x080E9D14
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080E9D78  @ =gRam
	ldr r1, _080E9D7C  @ =0x00000ED2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r0, r4, r2
	strb r1, [r0]
	ldr r1, _080E9D80  @ =0x00000EF2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r4, r2
	strb r1, [r0]
	ldr r1, _080E9D84  @ =0x00000EE2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r2, r2, #3
	add r0, r4, r2
	strb r1, [r0]
	ldr r1, _080E9D88  @ =0x00000F02
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r4, r2
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #0
	bl sub_080C781C
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #64
	beq _080E9D70
	ldr r1, _080E9D8C  @ =0x00000F52
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #5
	strb r1, [r0]
_080E9D70:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9D78:
	.4byte gRam
_080E9D7C:
	.4byte 0x00000ED2
_080E9D80:
	.4byte 0x00000EF2
_080E9D84:
	.4byte 0x00000EE2
_080E9D88:
	.4byte 0x00000F02
_080E9D8C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E9D14

	THUMB_FUNC_START sub_080E9D90
sub_080E9D90: @ 0x080E9D90
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E9E8A
	ldr r2, _080E9E9C  @ =gRam
	ldr r1, _080E9EA0  @ =0x00000ED2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r3, _080E9EA4  @ =0x00000EF2
	add r0, r2, r3
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r5, _080E9EA8  @ =0x00000958
	add r0, r2, r5
	ldrh r0, [r0]
	sub r1, r1, r0
	ldr r7, _080E9EAC  @ =0x0000096C
	add r0, r2, r7
	strh r1, [r0]
	ldr r1, _080E9EB0  @ =0x00000F92
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r1, r0, #1
	add r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #8]
	mov r3, #2
	mov r10, r3
	mov r9, r2
	add r5, sp, #4
	mov r8, r5
_080E9DF2:
	ldr r0, [sp, #8]
	add r0, r0, r10
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	ldr r0, _080E9EB4  @ =0x00000964
	add r0, r0, r9
	ldrh r6, [r0]
	ldr r0, _080E9EB8  @ =gUnknown_08177C8F
	add r0, r5, r0
	ldr r1, _080E9EBC  @ =0x00000969
	add r1, r1, r9
	ldrb r2, [r0]
	ldrb r0, [r1]
	add r4, r0, #0
	orr r4, r4, r2
	ldr r0, _080E9EC0  @ =gUnknown_08177C9E
	add r0, r0, r5
	mov r12, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E9E2C
	ldr r0, _080E9EAC  @ =0x0000096C
	add r0, r0, r9
	ldrh r6, [r0]
	mov r0, #240
	and r4, r4, r0
	mov r0, #2
	orr r4, r4, r0
_080E9E2C:
	ldr r0, _080E9EC4  @ =gUnknown_03003E74
	mov r7, r8
	ldrb r1, [r7]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r1, _080E9EC8  @ =gUnknown_08177C44
	lsl r3, r5, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldr r2, _080E9ECC  @ =gUnknown_03002B90
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080E9ED0  @ =gUnknown_08177C62
	add r3, r3, r2
	ldrh r2, [r3]
	add r2, r6, r2
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080E9ED4  @ =gUnknown_08177C80
	add r3, r5, r3
	ldrb r3, [r3]
	lsl r4, r4, #8
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r5, r12
	ldrb r4, [r5]
	str r4, [sp]
	bl sub_080C6368
	mov r7, r10
	lsl r1, r7, #24
	mov r0, #255
	lsl r0, r0, #24
	add r1, r1, r0
	mov r2, r8
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	lsr r3, r1, #24
	mov r10, r3
	cmp r1, #0
	bge _080E9DF2
_080E9E8A:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9E9C:
	.4byte gRam
_080E9EA0:
	.4byte 0x00000ED2
_080E9EA4:
	.4byte 0x00000EF2
_080E9EA8:
	.4byte 0x00000958
_080E9EAC:
	.4byte 0x0000096C
_080E9EB0:
	.4byte 0x00000F92
_080E9EB4:
	.4byte 0x00000964
_080E9EB8:
	.4byte gUnknown_08177C8F
_080E9EBC:
	.4byte 0x00000969
_080E9EC0:
	.4byte gUnknown_08177C9E
_080E9EC4:
	.4byte gUnknown_03003E74
_080E9EC8:
	.4byte gUnknown_08177C44
_080E9ECC:
	.4byte gUnknown_03002B90
_080E9ED0:
	.4byte gUnknown_08177C62
_080E9ED4:
	.4byte gUnknown_08177C80
	THUMB_FUNC_END sub_080E9D90

	THUMB_FUNC_START sub_080E9ED8
sub_080E9ED8: @ 0x080E9ED8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	add r5, r3, #0
	ldr r1, _080E9F24  @ =gRam
	ldr r2, _080E9F28  @ =0x00000F52
	add r0, r1, r2
	add r4, r3, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080E9F02
	ldr r2, _080E9F2C  @ =0x00000D94
	add r0, r1, r2
	add r0, r3, r0
	ldrb r2, [r0]
	mov r1, #48
	orr r1, r1, r2
	strb r1, [r0]
	add r0, r3, #0
	bl sub_080E9D90
_080E9F02:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080E9F1E
	ldr r0, _080E9F30  @ =gUnknown_08177C1C
	ldrb r1, [r4]
	lsl r1, r1, #2
	add r1, r1, r0
	ldr r1, [r1]
	add r0, r5, #0
	bl _call_via_r1
_080E9F1E:
	pop {r4,r5}
	pop {r0}
	bx r0
_080E9F24:
	.4byte gRam
_080E9F28:
	.4byte 0x00000F52
_080E9F2C:
	.4byte 0x00000D94
_080E9F30:
	.4byte gUnknown_08177C1C
	THUMB_FUNC_END sub_080E9ED8

	THUMB_FUNC_START sub_080E9F34
sub_080E9F34: @ 0x080E9F34
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r3, _080E9F78  @ =gRam
	ldr r1, _080E9F7C  @ =0x00000FC2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080E9F60
	ldr r0, _080E9F80  @ =0x00000F52
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080E9F84  @ =0x00001152
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #64
	strb r1, [r0]
_080E9F60:
	ldr r1, _080E9F88  @ =0x00000F92
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080E9D14
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080E9F78:
	.4byte gRam
_080E9F7C:
	.4byte 0x00000FC2
_080E9F80:
	.4byte 0x00000F52
_080E9F84:
	.4byte 0x00001152
_080E9F88:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080E9F34

	THUMB_FUNC_START sub_080E9F8C
sub_080E9F8C: @ 0x080E9F8C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r4, _080E9FB4  @ =gRam
	ldr r1, _080E9FB8  @ =0x00000FC2
	add r0, r4, r1
	add r5, r3, r0
	ldrb r0, [r5]
	lsl r1, r0, #24
	lsr r2, r1, #24
	cmp r2, #0
	beq _080E9FC0
	ldr r2, _080E9FBC  @ =0x00000F92
	add r0, r4, r2
	add r0, r3, r0
	lsr r1, r1, #26
	mov r2, #1
	and r1, r1, r2
	strb r1, [r0]
	b _080E9FCC
_080E9FB4:
	.4byte gRam
_080E9FB8:
	.4byte 0x00000FC2
_080E9FBC:
	.4byte 0x00000F92
_080E9FC0:
	ldr r1, _080E9FD8  @ =0x00000F52
	add r0, r4, r1
	add r0, r3, r0
	strb r2, [r0]
	mov r0, #32
	strb r0, [r5]
_080E9FCC:
	add r0, r3, #0
	bl sub_080E9D14
	pop {r4,r5}
	pop {r0}
	bx r0
_080E9FD8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E9F8C

	THUMB_FUNC_START sub_080E9FDC
sub_080E9FDC: @ 0x080E9FDC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080EA044  @ =gRam
	ldr r1, _080EA048  @ =0x00000FC2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EA03C
	ldr r4, _080EA04C  @ =0x00000EE2
	add r1, r3, r4
	add r1, r2, r1
	add r4, r4, #128
	add r0, r3, r4
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EA050  @ =0x00000F02
	add r1, r3, r0
	add r1, r2, r1
	add r4, r4, #16
	add r0, r3, r4
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EA054  @ =0x00000ED2
	add r1, r3, r0
	add r1, r2, r1
	add r4, r4, #16
	add r0, r3, r4
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EA058  @ =0x00000EF2
	add r1, r3, r0
	add r1, r2, r1
	ldr r4, _080EA05C  @ =0x00001082
	add r0, r3, r4
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EA060  @ =0x00000F52
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080EA03C:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EA044:
	.4byte gRam
_080EA048:
	.4byte 0x00000FC2
_080EA04C:
	.4byte 0x00000EE2
_080EA050:
	.4byte 0x00000F02
_080EA054:
	.4byte 0x00000ED2
_080EA058:
	.4byte 0x00000EF2
_080EA05C:
	.4byte 0x00001082
_080EA060:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080E9FDC

	THUMB_FUNC_START sub_080EA064
sub_080EA064: @ 0x080EA064
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080EA100  @ =gRam
	ldr r1, _080EA104  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	add r0, r5, #0
	eor r0, r0, r1
	mov r1, #7
	and r0, r0, r1
	cmp r0, #0
	beq _080EA0FA
	ldr r2, _080EA108  @ =0x000016C4
	add r0, r4, r2
	ldrb r1, [r0]
	ldr r6, _080EA10C  @ =0x000016C5
	add r0, r4, r6
	mov r3, #0
	ldrsb r3, [r0, r3]
	lsl r3, r3, #8
	sub r2, r2, #162
	add r0, r4, r2
	ldrb r2, [r0]
	sub r6, r6, #162
	add r0, r4, r6
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	orr r1, r1, r3
	sub r1, r1, r2
	lsl r1, r1, #16
	mov r0, #192
	lsl r0, r0, #14
	add r1, r1, r0
	asr r1, r1, #16
	cmp r1, #95
	bgt _080EA0FA
	mov r1, #182
	lsl r1, r1, #5
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r2, _080EA110  @ =0x000016C1
	add r0, r4, r2
	mov r3, #0
	ldrsb r3, [r0, r3]
	lsl r3, r3, #8
	add r6, r6, #1
	add r0, r4, r6
	ldrb r2, [r0]
	add r6, r6, #1
	add r0, r4, r6
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	orr r1, r1, r3
	sub r1, r1, r2
	lsl r1, r1, #16
	mov r0, #192
	lsl r0, r0, #14
	add r1, r1, r0
	asr r1, r1, #16
	cmp r1, #95
	bgt _080EA0FA
	ldr r2, _080EA114  @ =0x00000F52
	add r1, r4, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r6, _080EA118  @ =0x00000FC2
	add r0, r4, r6
	add r0, r5, r0
	mov r1, #31
	strb r1, [r0]
_080EA0FA:
	pop {r4-r6}
	pop {r0}
	bx r0
_080EA100:
	.4byte gRam
_080EA104:
	.4byte 0x00000996
_080EA108:
	.4byte 0x000016C4
_080EA10C:
	.4byte 0x000016C5
_080EA110:
	.4byte 0x000016C1
_080EA114:
	.4byte 0x00000F52
_080EA118:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080EA064

	THUMB_FUNC_START sub_080EA11C
sub_080EA11C: @ 0x080EA11C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080EA14C  @ =gRam
	ldr r3, _080EA150  @ =0x00000FC2
	add r0, r1, r3
	add r3, r2, r0
	ldrb r0, [r3]
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EA158
	ldr r4, _080EA154  @ =0x00000F52
	add r0, r1, r4
	add r0, r2, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #96
	strb r0, [r3]
	add r0, r2, #0
	mov r1, #16
	bl sub_080C35FC
	b _080EA168
_080EA14C:
	.4byte gRam
_080EA150:
	.4byte 0x00000FC2
_080EA154:
	.4byte 0x00000F52
_080EA158:
	ldr r3, _080EA170  @ =0x00000F92
	add r1, r1, r3
	add r1, r2, r1
	ldr r2, _080EA174  @ =gUnknown_08177CC4
	lsr r0, r0, #26
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080EA168:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EA170:
	.4byte 0x00000F92
_080EA174:
	.4byte gUnknown_08177CC4
	THUMB_FUNC_END sub_080EA11C

	THUMB_FUNC_START sub_080EA178
sub_080EA178: @ 0x080EA178
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080EA1AC  @ =gRam
	ldr r1, _080EA1B0  @ =0x00001172
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r1, _080EA1B4  @ =0x00000FC2
	add r0, r2, r1
	add r3, r4, r0
	ldrb r0, [r3]
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EA1B8
	sub r1, r1, #112
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #8
	strb r0, [r3]
	b _080EA1D8
	.byte 0x00
	.byte 0x00
_080EA1AC:
	.4byte gRam
_080EA1B0:
	.4byte 0x00001172
_080EA1B4:
	.4byte 0x00000FC2
_080EA1B8:
	ldr r1, _080EA1E0  @ =0x00000F92
	add r2, r2, r1
	add r2, r4, r2
	ldr r3, _080EA1E4  @ =gUnknown_08177CCC
	lsr r0, r0, #26
	mov r1, #1
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl Sprite3_Move
_080EA1D8:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EA1E0:
	.4byte 0x00000F92
_080EA1E4:
	.4byte gUnknown_08177CCC
	THUMB_FUNC_END sub_080EA178

	THUMB_FUNC_START sub_080EA1E8
sub_080EA1E8: @ 0x080EA1E8
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EA2A2
	ldr r2, _080EA2B4  @ =gRam
	ldr r1, _080EA2B8  @ =0x00000F92
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r0, r1, #1
	add r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	mov r7, #2
	mov r8, r2
	ldr r2, _080EA2BC  @ =0x00000969
	add r2, r2, r8
	mov r10, r2
_080EA228:
	mov r1, #150
	lsl r1, r1, #4
	add r1, r1, r8
	ldr r0, _080EA2C0  @ =gUnknown_08177CD3
	mov r3, r9
	add r6, r7, r3
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	mov r5, #0
	ldrsh r1, [r1, r5]
	add r1, r1, r0
	ldr r2, _080EA2C4  @ =0x00000964
	add r2, r2, r8
	ldr r0, _080EA2C8  @ =gUnknown_08177CE5
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	mov r3, #0
	ldrsh r2, [r2, r3]
	add r2, r2, r0
	ldr r0, _080EA2CC  @ =gUnknown_03003E74
	sub r3, r7, #2
	ldrh r0, [r0]
	sub r0, r0, r3
	lsl r0, r0, #16
	lsr r0, r0, #16
	lsl r1, r1, #16
	lsr r1, r1, #16
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080EA2D0  @ =gUnknown_08177CF7
	add r3, r6, r3
	ldrb r3, [r3]
	ldr r4, _080EA2D4  @ =gUnknown_08177D09
	add r4, r6, r4
	ldrb r4, [r4]
	mov r5, r10
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080EA2D8  @ =gUnknown_08177D1B
	add r6, r6, r4
	ldrb r5, [r6]
	mov r4, #2
	and r4, r4, r5
	lsl r4, r4, #24
	lsr r4, r4, #24
	str r4, [sp]
	bl sub_080C6368
	sub r7, r7, #1
	cmp r7, #0
	bge _080EA228
_080EA2A2:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EA2B4:
	.4byte gRam
_080EA2B8:
	.4byte 0x00000F92
_080EA2BC:
	.4byte 0x00000969
_080EA2C0:
	.4byte gUnknown_08177CD3
_080EA2C4:
	.4byte 0x00000964
_080EA2C8:
	.4byte gUnknown_08177CE5
_080EA2CC:
	.4byte gUnknown_03003E74
_080EA2D0:
	.4byte gUnknown_08177CF7
_080EA2D4:
	.4byte gUnknown_08177D09
_080EA2D8:
	.4byte gUnknown_08177D1B
	THUMB_FUNC_END sub_080EA1E8

	THUMB_FUNC_START sub_080EA2DC
sub_080EA2DC: @ 0x080EA2DC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080EA2F8  @ =gRam
	ldr r1, _080EA2FC  @ =0x00000EE2
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #8
	strb r1, [r2]
	bl sub_080E9A10
	pop {r0}
	bx r0
_080EA2F8:
	.4byte gRam
_080EA2FC:
	.4byte 0x00000EE2
	THUMB_FUNC_END sub_080EA2DC

	THUMB_FUNC_START sub_080EA300
sub_080EA300: @ 0x080EA300
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080EA310
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EA300

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EA310
sub_080EA310: @ 0x080EA310
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080EA334  @ =gRam
	ldr r1, _080EA338  @ =0x00000F52
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080EA33C
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C632C
	b _080EA342
_080EA334:
	.4byte gRam
_080EA338:
	.4byte 0x00000F52
_080EA33C:
	add r0, r4, #0
	bl sub_080EA1E8
_080EA342:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EA37C
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EA37C
	ldr r2, _080EA384  @ =gRam
	ldr r1, _080EA388  @ =0x00001172
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080EA38C  @ =gUnknown_08177CB0
	ldr r0, _080EA390  @ =0x00000F52
	add r2, r2, r0
	add r2, r4, r2
	ldrb r0, [r2]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080EA37C:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080EA384:
	.4byte gRam
_080EA388:
	.4byte 0x00001172
_080EA38C:
	.4byte gUnknown_08177CB0
_080EA390:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EA310

	THUMB_FUNC_START sub_080EA394
sub_080EA394: @ 0x080EA394
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r1, _080EA3B8  @ =gRam
	ldr r2, _080EA3BC  @ =0x00000FC2
	add r0, r1, r2
	add r4, r3, r0
	ldrb r0, [r4]
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080EA3C4
	ldr r5, _080EA3C0  @ =0x00000F52
	add r0, r1, r5
	add r0, r3, r0
	strb r2, [r0]
	strb r2, [r4]
	b _080EA3D4
_080EA3B8:
	.4byte gRam
_080EA3BC:
	.4byte 0x00000FC2
_080EA3C0:
	.4byte 0x00000F52
_080EA3C4:
	ldr r2, _080EA3DC  @ =0x00000F92
	add r1, r1, r2
	add r1, r3, r1
	ldr r2, _080EA3E0  @ =gUnknown_08177CCE
	lsr r0, r0, #25
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080EA3D4:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EA3DC:
	.4byte 0x00000F92
_080EA3E0:
	.4byte gUnknown_08177CCE
	THUMB_FUNC_END sub_080EA394

	THUMB_FUNC_START sub_080EA3E4
sub_080EA3E4: @ 0x080EA3E4
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r1, _080EA450  @ =gRam
	ldr r2, _080EA454  @ =0x00000F22
	add r0, r1, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r4, r0, #24
	add r6, r1, #0
	cmp r4, #0
	beq _080EA416
	ldr r0, _080EA458  @ =0x00001122
	add r2, r6, r0
	add r2, r5, r2
	ldrb r0, [r2]
	mov r1, #191
	and r1, r1, r0
	ldr r3, _080EA45C  @ =gUnknown_08177D30
	lsr r0, r4, #31
	add r0, r0, r3
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
_080EA416:
	ldr r1, _080EA460  @ =0x00000F92
	add r0, r6, r1
	add r0, r5, r0
	ldrb r7, [r0]
	ldr r2, _080EA464  @ =0x0000164C
	add r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EA474
	ldr r1, _080EA468  @ =0x000009AD
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #35
	beq _080EA436
	cmp r0, #44
	bne _080EA49A
_080EA436:
	ldr r2, _080EA46C  @ =0x000009E8
	add r0, r6, r2
	ldrh r0, [r0]
	cmp r0, #0
	beq _080EA49A
	cmp r0, #2
	bhi _080EA49A
	ldr r1, _080EA470  @ =0x00000CF8
	add r0, r6, r1
	ldrh r0, [r0]
	cmp r0, #31
	bhi _080EA49A
	b _080EA4A6
_080EA450:
	.4byte gRam
_080EA454:
	.4byte 0x00000F22
_080EA458:
	.4byte 0x00001122
_080EA45C:
	.4byte gUnknown_08177D30
_080EA460:
	.4byte 0x00000F92
_080EA464:
	.4byte 0x0000164C
_080EA468:
	.4byte 0x000009AD
_080EA46C:
	.4byte 0x000009E8
_080EA470:
	.4byte 0x00000CF8
_080EA474:
	ldr r2, _080EA5B0  @ =0x000009AD
	add r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #35
	beq _080EA482
	cmp r0, #44
	bne _080EA4A6
_080EA482:
	ldr r1, _080EA5B4  @ =0x000009E8
	add r0, r6, r1
	ldrh r0, [r0]
	cmp r0, #0
	beq _080EA4A6
	cmp r0, #2
	bhi _080EA4A6
	ldr r2, _080EA5B8  @ =0x00000CF8
	add r0, r6, r2
	ldrh r0, [r0]
	cmp r0, #31
	bhi _080EA4A6
_080EA49A:
	ldr r0, _080EA5BC  @ =0x00000F92
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #2
	strb r0, [r1]
_080EA4A6:
	add r0, r5, #0
	bl sub_080C6240
	mov r1, #128
	lsl r1, r1, #2
	mov r0, #1
	bl sub_080C6174
	ldr r4, _080EA5C0  @ =gRam
	ldr r1, _080EA5BC  @ =0x00000F92
	add r0, r4, r1
	add r0, r5, r0
	strb r7, [r0]
	ldr r2, _080EA5C4  @ =0x00001082
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EA4CE
	b _080EA6B0
_080EA4CE:
	add r1, r1, #16
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #10
	bne _080EA51A
	ldr r2, _080EA5C8  @ =0x00000F52
	add r0, r4, r2
	add r0, r5, r0
	mov r1, #3
	strb r1, [r0]
	ldr r1, _080EA5B0  @ =0x000009AD
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EA51A
	ldr r2, _080EA5CC  @ =0x00001052
	add r1, r4, r2
	add r1, r5, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	add r0, r5, #0
	bl sub_080EAB14
	add r0, r5, #0
	bl sub_080EABEC
	ldr r1, _080EA5D0  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080EA51A
	add r0, r5, #0
	bl sub_080EAC54
_080EA51A:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EA528
	b _080EA6E8
_080EA528:
	ldr r6, _080EA5C0  @ =gRam
	ldr r2, _080EA5D4  @ =0x0000164C
	add r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EA540
	add r0, r5, #0
	bl sub_080C841C
	cmp r0, #0
	beq _080EA540
	b _080EA6E8
_080EA540:
	ldr r1, _080EA5D8  @ =0x00000F82
	add r0, r6, r1
	add r0, r5, r0
	ldrb r7, [r0]
	cmp r7, #0
	bne _080EA60E
	ldr r2, _080EA5DC  @ =0x00001022
	add r0, r6, r2
	add r0, r5, r0
	mov r1, #255
	strb r1, [r0]
	ldr r1, _080EA5E0  @ =0x00000F72
	add r0, r6, r1
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #34
	bls _080EA568
	add r0, r5, #0
	bl sub_080EA9C8
_080EA568:
	ldr r2, _080EA5E4  @ =0x00001072
	add r0, r6, r2
	add r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080EA590
	strb r7, [r1]
	ldrb r0, [r4]
	cmp r0, #34
	bhi _080EA580
	add r0, r0, #1
	strb r0, [r4]
_080EA580:
	add r0, r5, #0
	bl sub_080EAC54
	ldr r1, _080EA5C8  @ =0x00000F52
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #2
	strb r1, [r0]
_080EA590:
	mov r0, sp
	add r1, r5, #0
	bl sub_080C4948
	ldr r0, _080EA5C0  @ =gRam
	ldr r2, _080EA5C8  @ =0x00000F52
	add r0, r0, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #1
	beq _080EA5F6
	cmp r0, #1
	bgt _080EA5E8
	cmp r0, #0
	beq _080EA5EE
	b _080EA606
_080EA5B0:
	.4byte 0x000009AD
_080EA5B4:
	.4byte 0x000009E8
_080EA5B8:
	.4byte 0x00000CF8
_080EA5BC:
	.4byte 0x00000F92
_080EA5C0:
	.4byte gRam
_080EA5C4:
	.4byte 0x00001082
_080EA5C8:
	.4byte 0x00000F52
_080EA5CC:
	.4byte 0x00001052
_080EA5D0:
	.4byte 0x00000996
_080EA5D4:
	.4byte 0x0000164C
_080EA5D8:
	.4byte 0x00000F82
_080EA5DC:
	.4byte 0x00001022
_080EA5E0:
	.4byte 0x00000F72
_080EA5E4:
	.4byte 0x00001072
_080EA5E8:
	cmp r0, #2
	beq _080EA5FE
	b _080EA606
_080EA5EE:
	add r0, r5, #0
	bl sub_080EA700
	b _080EA6E8
_080EA5F6:
	add r0, r5, #0
	bl sub_080EA788
	b _080EA6E8
_080EA5FE:
	add r0, r5, #0
	bl sub_080EAB4C
	b _080EA6E8
_080EA606:
	add r0, r5, #0
	bl sub_080EA8EC
	b _080EA6E8
_080EA60E:
	ldr r0, _080EA694  @ =0x00001122
	add r1, r6, r0
	add r1, r5, r1
	ldrb r2, [r1]
	mov r0, #16
	orr r0, r0, r2
	strb r0, [r1]
	add r0, r5, #0
	bl Sprite3_Move
	ldr r1, _080EA698  @ =0x00001142
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #12
	strb r1, [r0]
	ldr r2, _080EA69C  @ =0x00001172
	add r0, r6, r2
	add r0, r5, r0
	strb r1, [r0]
	ldr r1, _080EA6A0  @ =0x00000996
	add r0, r6, r1
	ldrb r1, [r0]
	add r0, r5, #0
	eor r0, r0, r1
	mov r1, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080EA68A
	add r0, r5, #0
	bl sub_080C4F98
	mov r4, #15
_080EA64E:
	cmp r4, r5
	beq _080EA684
	ldr r1, _080EA6A4  @ =gRam
	ldr r2, _080EA6A8  @ =0x00000FF2
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #11
	beq _080EA684
	sub r2, r2, #80
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #8
	bls _080EA684
	ldr r2, _080EA6AC  @ =0x000010C2
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EA684
	lsl r1, r4, #24
	lsr r1, r1, #24
	add r0, r5, #0
	mov r2, #2
	bl sub_080E46C8
_080EA684:
	sub r4, r4, #1
	cmp r4, #0
	bge _080EA64E
_080EA68A:
	add r0, r5, #0
	bl sub_080EAB14
	b _080EA6E8
	.byte 0x00
	.byte 0x00
_080EA694:
	.4byte 0x00001122
_080EA698:
	.4byte 0x00001142
_080EA69C:
	.4byte 0x00001172
_080EA6A0:
	.4byte 0x00000996
_080EA6A4:
	.4byte gRam
_080EA6A8:
	.4byte 0x00000FF2
_080EA6AC:
	.4byte 0x000010C2
_080EA6B0:
	ldr r1, _080EA6F0  @ =0x00000FF2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #61
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080CEB84
	ldr r2, _080EA6F4  @ =0x00001002
	add r1, r4, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EA6F8  @ =0x00000FC2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #48
	strb r1, [r0]
	mov r0, #21
	mov r1, #0
	bl sub_0812A324
	ldr r2, _080EA6FC  @ =0x00001172
	add r0, r4, r2
	add r0, r5, r0
	mov r1, #21
	strb r1, [r0]
_080EA6E8:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080EA6F0:
	.4byte 0x00000FF2
_080EA6F4:
	.4byte 0x00001002
_080EA6F8:
	.4byte 0x00000FC2
_080EA6FC:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080EA3E4

	THUMB_FUNC_START sub_080EA700
sub_080EA700: @ 0x080EA700
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r5, _080EA768  @ =gRam
	ldr r1, _080EA76C  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080EA752
	bl GetRandomInt
	mov r2, #15
	and r2, r2, r0
	ldr r0, _080EA770  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080EA774  @ =gUnknown_08177D54
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EA778  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080EA77C  @ =gUnknown_08177D64
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	bl GetRandomInt
	mov r1, #31
	and r1, r1, r0
	add r1, r1, #16
	strb r1, [r6]
	ldr r0, _080EA780  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080EA752:
	ldr r1, _080EA784  @ =0x00000F92
	add r0, r5, r1
	add r0, r7, r0
	mov r1, #0
	strb r1, [r0]
	add r0, r7, #0
	bl sub_080C3094
	pop {r4-r7}
	pop {r0}
	bx r0
_080EA768:
	.4byte gRam
_080EA76C:
	.4byte 0x00000FC2
_080EA770:
	.4byte 0x00000F22
_080EA774:
	.4byte gUnknown_08177D54
_080EA778:
	.4byte 0x00000F12
_080EA77C:
	.4byte gUnknown_08177D64
_080EA780:
	.4byte 0x00000F52
_080EA784:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080EA700

	THUMB_FUNC_START sub_080EA788
sub_080EA788: @ 0x080EA788
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080EA808  @ =gRam
	ldr r1, _080EA80C  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #1
	and r0, r0, r1
	cmp r0, #0
	beq _080EA7B8
	add r0, r4, #0
	bl sub_080EAC34
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EA7B8
	ldr r1, _080EA810  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
_080EA7B8:
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r5, _080EA808  @ =gRam
	ldr r1, _080EA814  @ =0x00001152
	add r0, r5, r1
	add r3, r4, r0
	ldrb r0, [r3]
	sub r0, r0, #2
	strb r0, [r3]
	sub r1, r1, #16
	add r0, r5, r1
	add r1, r4, r0
	mov r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bge _080EA7FA
	mov r0, #0
	strb r0, [r1]
	ldr r1, _080EA818  @ =0x00000FC2
	add r0, r5, r1
	add r1, r4, r0
	ldrb r2, [r1]
	cmp r2, #0
	bne _080EA7F6
	mov r0, #32
	strb r0, [r1]
	ldr r1, _080EA810  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
_080EA7F6:
	mov r0, #10
	strb r0, [r3]
_080EA7FA:
	add r0, r4, #0
	bl sub_080EAB14
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EA808:
	.4byte gRam
_080EA80C:
	.4byte 0x00000996
_080EA810:
	.4byte 0x00000F52
_080EA814:
	.4byte 0x00001152
_080EA818:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080EA788

	THUMB_FUNC_START sub_080EA81C
sub_080EA81C: @ 0x080EA81C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080EA854  @ =gRam
	ldr r0, _080EA858  @ =0x00001052
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #5
	strb r0, [r1]
	ldr r1, _080EA85C  @ =0x00000F92
	add r2, r2, r1
	add r2, r4, r2
	lsl r0, r0, #24
	lsr r0, r0, #28
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080C3094
	add r0, r4, #0
	bl sub_080EABEC
	pop {r4}
	pop {r0}
	bx r0
_080EA854:
	.4byte gRam
_080EA858:
	.4byte 0x00001052
_080EA85C:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080EA81C

	THUMB_FUNC_START sub_080EA860
sub_080EA860: @ 0x080EA860
	push {r4-r7,lr}
	sub sp, sp, #4
	mov r0, #16
	bl sub_080CF370
	ldr r2, _080EA8D0  @ =gRam
	ldr r1, _080EA8D4  @ =0x0000096C
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #24
	and r0, r0, r1
	cmp r0, #0
	beq _080EA8C6
	mov r0, #3
	ldr r3, _080EA8D8  @ =0x00000964
	add r7, r2, r3
	ldr r6, _080EA8DC  @ =gUnknown_03003E74
	mov r1, #150
	lsl r1, r1, #4
	add r5, r2, r1
_080EA888:
	lsl r4, r0, #24
	asr r4, r4, #24
	ldrh r0, [r6]
	add r0, r0, r4
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r1, _080EA8E0  @ =gUnknown_08177D32
	lsl r3, r4, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r5]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080EA8E4  @ =gUnknown_08177D3A
	add r3, r3, r2
	ldrh r2, [r3]
	ldrh r3, [r7]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	mov r3, #0
	str r3, [sp]
	ldr r3, _080EA8E8  @ =0x00002213
	bl sub_080C6368
	sub r4, r4, #1
	lsl r4, r4, #24
	lsr r0, r4, #24
	cmp r4, #0
	bge _080EA888
_080EA8C6:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EA8D0:
	.4byte gRam
_080EA8D4:
	.4byte 0x0000096C
_080EA8D8:
	.4byte 0x00000964
_080EA8DC:
	.4byte gUnknown_03003E74
_080EA8E0:
	.4byte gUnknown_08177D32
_080EA8E4:
	.4byte gUnknown_08177D3A
_080EA8E8:
	.4byte 0x00002213
	THUMB_FUNC_END sub_080EA860

	THUMB_FUNC_START sub_080EA8EC
sub_080EA8EC: @ 0x080EA8EC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080EAC14
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EA91E
	add r0, r4, #0
	bl Sprite_Invert_XY_Speeds
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl Sprite_Halve_XY_Speeds
	add r0, r4, #0
	bl Sprite_Halve_XY_Speeds
	add r0, r4, #0
	bl sub_080EAC54
_080EA91E:
	ldr r5, _080EA960  @ =gRam
	ldr r0, _080EA964  @ =0x00001152
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EA968  @ =0x00001142
	add r0, r5, r1
	add r1, r4, r0
	mov r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	blt _080EA974
	ldr r2, _080EA96C  @ =0x00001052
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #4
	strb r0, [r1]
	ldr r1, _080EA970  @ =0x00000F92
	add r2, r5, r1
	add r2, r4, r2
	lsl r0, r0, #24
	lsr r0, r0, #28
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080C3094
	b _080EA9B6
	.byte 0x00
	.byte 0x00
_080EA960:
	.4byte gRam
_080EA964:
	.4byte 0x00001152
_080EA968:
	.4byte 0x00001142
_080EA96C:
	.4byte 0x00001052
_080EA970:
	.4byte 0x00000F92
_080EA974:
	mov r0, #0
	strb r0, [r1]
	ldr r2, _080EA9BC  @ =0x00000F52
	add r0, r5, r2
	add r0, r6, r0
	mov r1, #2
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #16
	bl sub_080C2CB4
	ldr r0, _080EA9C0  @ =0x00000F12
	add r1, r5, r0
	add r1, r6, r1
	mov r2, #150
	lsl r2, r2, #4
	add r0, r5, r2
	ldrb r0, [r0]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080EA9C4  @ =0x00000F22
	add r1, r5, r0
	add r1, r6, r1
	add r2, r2, #1
	add r0, r5, r2
	ldrb r0, [r0]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	add r0, r6, #0
	bl sub_080EA81C
_080EA9B6:
	pop {r4-r6}
	pop {r0}
	bx r0
_080EA9BC:
	.4byte 0x00000F52
_080EA9C0:
	.4byte 0x00000F12
_080EA9C4:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080EA8EC

	THUMB_FUNC_START sub_080EA9C8
sub_080EA9C8: @ 0x080EA9C8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r5, _080EAA5C  @ =gRam
	ldr r1, _080EAA60  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	add r0, r7, #0
	eor r0, r0, r1
	mov r1, #15
	and r0, r0, r1
	ldr r2, _080EAA64  @ =0x000009B2
	add r1, r5, r2
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	orr r0, r0, r1
	cmp r0, #0
	bne _080EAAD2
	mov r0, #11
	add r1, r7, #0
	mov r2, #10
	bl sub_080C9AAC
	add r4, r0, #0
	cmp r4, #0
	blt _080EAAD2
	add r0, r7, #0
	mov r1, #100
	bl sub_080CF140
	ldr r3, _080EAA68  @ =0x00000F82
	add r0, r5, r3
	add r0, r4, r0
	mov r6, #1
	strb r6, [r0]
	bl GetRandomInt
	ldr r1, _080EAA6C  @ =0x0000097D
	add r2, r5, r1
	strb r0, [r2]
	mov r1, #2
	and r1, r1, r0
	cmp r1, #0
	bne _080EAA84
	ldrb r1, [r2]
	ldr r2, _080EAA70  @ =0x00000958
	add r0, r5, r2
	ldrh r2, [r0]
	add r2, r1, r2
	ldr r0, _080EAA74  @ =gUnknown_08177D42
	and r1, r1, r6
	add r1, r1, r0
	ldr r3, _080EAA78  @ =0x00000952
	add r0, r5, r3
	ldrh r3, [r0]
	ldrb r1, [r1]
	add r3, r3, r1
	ldr r1, _080EAA7C  @ =0x00000ED2
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	add r1, r1, #32
	add r0, r5, r1
	add r0, r4, r0
	lsr r2, r2, #8
	strb r2, [r0]
	ldr r2, _080EAA80  @ =0x00000EE2
	add r0, r5, r2
	add r0, r4, r0
	strb r3, [r0]
	add r1, r1, #16
	b _080EAABA
	.byte 0x00
	.byte 0x00
_080EAA5C:
	.4byte gRam
_080EAA60:
	.4byte 0x00000996
_080EAA64:
	.4byte 0x000009B2
_080EAA68:
	.4byte 0x00000F82
_080EAA6C:
	.4byte 0x0000097D
_080EAA70:
	.4byte 0x00000958
_080EAA74:
	.4byte gUnknown_08177D42
_080EAA78:
	.4byte 0x00000952
_080EAA7C:
	.4byte 0x00000ED2
_080EAA80:
	.4byte 0x00000EE2
_080EAA84:
	ldrb r1, [r2]
	ldr r2, _080EAAD8  @ =0x00000952
	add r0, r5, r2
	ldrh r2, [r0]
	add r2, r1, r2
	ldr r0, _080EAADC  @ =gUnknown_08177D42
	and r1, r1, r6
	add r1, r1, r0
	ldr r3, _080EAAE0  @ =0x00000958
	add r0, r5, r3
	ldrh r3, [r0]
	ldrb r1, [r1]
	add r3, r3, r1
	ldr r1, _080EAAE4  @ =0x00000EE2
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	add r1, r1, #32
	add r0, r5, r1
	add r0, r4, r0
	lsr r2, r2, #8
	strb r2, [r0]
	ldr r2, _080EAAE8  @ =0x00000ED2
	add r0, r5, r2
	add r0, r4, r0
	strb r3, [r0]
	sub r1, r1, #16
_080EAABA:
	add r0, r5, r1
	add r0, r4, r0
	lsr r3, r3, #8
	strb r3, [r0]
	lsl r0, r4, #24
	lsr r0, r0, #24
	mov r1, #32
	bl sub_080C35FC
	add r0, r7, #0
	bl sub_080EAC54
_080EAAD2:
	pop {r4-r7}
	pop {r0}
	bx r0
_080EAAD8:
	.4byte 0x00000952
_080EAADC:
	.4byte gUnknown_08177D42
_080EAAE0:
	.4byte 0x00000958
_080EAAE4:
	.4byte 0x00000EE2
_080EAAE8:
	.4byte 0x00000ED2
	THUMB_FUNC_END sub_080EA9C8

	THUMB_FUNC_START sub_080EAAEC
sub_080EAAEC: @ 0x080EAAEC
	bx lr
	THUMB_FUNC_END sub_080EAAEC

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EAAF0
sub_080EAAF0: @ 0x080EAAF0
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080EAB0C  @ =gRam
	ldr r3, _080EAB10  @ =0x00000996
	add r2, r1, r3
	ldrb r2, [r2]
	sub r3, r3, #42
	add r1, r1, r3
	strb r2, [r1]
	bl sub_080EA860
	pop {r0}
	bx r0
_080EAB0C:
	.4byte gRam
_080EAB10:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080EAAF0

	THUMB_FUNC_START sub_080EAB14
sub_080EAB14: @ 0x080EAB14
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080EAB40  @ =gRam
	ldr r1, _080EAB44  @ =0x00001052
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #4
	strb r1, [r2]
	ldr r2, _080EAB48  @ =0x00000F92
	add r3, r3, r2
	add r3, r0, r3
	lsl r1, r1, #24
	lsr r1, r1, #28
	mov r2, #1
	and r1, r1, r2
	strb r1, [r3]
	bl sub_080C3094
	pop {r0}
	bx r0
_080EAB40:
	.4byte gRam
_080EAB44:
	.4byte 0x00001052
_080EAB48:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080EAB14

	THUMB_FUNC_START sub_080EAB4C
sub_080EAB4C: @ 0x080EAB4C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C3094
	add r0, r4, #0
	bl sub_080EAC34
	ldr r2, _080EAB84  @ =gRam
	ldr r1, _080EAB88  @ =0x00001142
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r0, _080EAB8C  @ =0x00000996
	add r2, r2, r0
	ldrb r1, [r2]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #31
	and r0, r0, r1
	cmp r0, #0
	beq _080EAB90
	add r0, r4, #0
	bl sub_080EA81C
	b _080EAB96
_080EAB84:
	.4byte gRam
_080EAB88:
	.4byte 0x00001142
_080EAB8C:
	.4byte 0x00000996
_080EAB90:
	add r0, r4, #0
	bl sub_080EAB9C
_080EAB96:
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EAB4C

	THUMB_FUNC_START sub_080EAB9C
sub_080EAB9C: @ 0x080EAB9C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #16
	bl sub_080C2CB4
	ldr r2, _080EABE0  @ =gRam
	ldr r0, _080EABE4  @ =0x00000F12
	add r1, r2, r0
	add r1, r4, r1
	mov r3, #150
	lsl r3, r3, #4
	add r0, r2, r3
	ldrb r0, [r0]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080EABE8  @ =0x00000F22
	add r1, r2, r0
	add r1, r4, r1
	add r3, r3, #1
	add r2, r2, r3
	ldrb r0, [r2]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080EA81C
	pop {r4}
	pop {r0}
	bx r0
_080EABE0:
	.4byte gRam
_080EABE4:
	.4byte 0x00000F12
_080EABE8:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080EAB9C

	THUMB_FUNC_START sub_080EABEC
sub_080EABEC: @ 0x080EABEC
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EAC0C
	add r0, r4, #0
	bl sub_080EAAF0
_080EAC0C:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EABEC

	THUMB_FUNC_START sub_080EAC14
sub_080EAC14: @ 0x080EAC14
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080C2C4C
	add r0, r4, #0
	bl sub_080EAC34
	lsl r0, r0, #24
	lsr r0, r0, #24
	pop {r4}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080EAC14

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EAC34
sub_080EAC34: @ 0x080EAC34
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C79D0
	lsl r0, r0, #24
	lsr r0, r0, #24
	pop {r4}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080EAC34

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EAC54
sub_080EAC54: @ 0x080EAC54
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #98
	bl sub_080CF0AC
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EAC54

	THUMB_FUNC_START sub_080EAC64
sub_080EAC64: @ 0x080EAC64
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080EACEC  @ =gRam
	ldr r1, _080EACF0  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	ldr r2, _080EACF4  @ =0x00000FC2
	add r1, r5, r2
	add r6, r4, r1
	ldrb r1, [r6]
	orr r0, r0, r1
	cmp r0, #0
	bne _080EACE6
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r1, _080EACF8  @ =0x0000097C
	add r0, r5, r1
	ldrb r0, [r0]
	add r0, r0, #40
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #79
	bhi _080EACE6
	ldr r2, _080EACFC  @ =0x0000097D
	add r0, r5, r2
	ldrb r0, [r0]
	add r0, r0, #40
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #79
	bhi _080EACE6
	add r0, r4, #0
	mov r1, #100
	bl sub_080CF140
	ldr r0, _080EAD00  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r1, #64
	strb r1, [r6]
	ldr r2, _080EAD04  @ =0x00000F72
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r2, _080EAD08  @ =0x00000F62
	add r1, r5, r2
	add r1, r4, r1
	ldr r2, _080EAD0C  @ =gUnknown_08177D4E
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080EACE6:
	pop {r4-r6}
	pop {r0}
	bx r0
_080EACEC:
	.4byte gRam
_080EACF0:
	.4byte 0x00000996
_080EACF4:
	.4byte 0x00000FC2
_080EACF8:
	.4byte 0x0000097C
_080EACFC:
	.4byte 0x0000097D
_080EAD00:
	.4byte 0x00000F52
_080EAD04:
	.4byte 0x00000F72
_080EAD08:
	.4byte 0x00000F62
_080EAD0C:
	.4byte gUnknown_08177D4E
	THUMB_FUNC_END sub_080EAC64

	THUMB_FUNC_START sub_080EAD10
sub_080EAD10: @ 0x080EAD10
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080EAD44  @ =gRam
	ldr r1, _080EAD48  @ =0x00000FC2
	add r0, r5, r1
	add r3, r4, r0
	ldrb r2, [r3]
	add r1, r2, #0
	cmp r1, #0
	bne _080EAD50
	ldr r2, _080EAD4C  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	mov r0, #64
	strb r0, [r3]
	add r2, r2, #64
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080E2614
	b _080EADC8
	.byte 0x00
	.byte 0x00
_080EAD44:
	.4byte gRam
_080EAD48:
	.4byte 0x00000FC2
_080EAD4C:
	.4byte 0x00000F52
_080EAD50:
	mov r0, #7
	and r0, r0, r2
	cmp r0, #0
	bne _080EAD88
	ldr r0, _080EADD0  @ =0x00000F62
	add r2, r5, r0
	add r2, r4, r2
	ldr r3, _080EADD4  @ =gUnknown_08177D52
	ldr r1, _080EADD8  @ =0x00000F72
	add r0, r5, r1
	add r5, r4, r0
	ldrb r1, [r5]
	mov r0, #1
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	ldrb r1, [r2]
	add r0, r0, r1
	strb r0, [r2]
	bl GetRandomInt
	mov r1, #3
	and r1, r1, r0
	cmp r1, #0
	bne _080EAD88
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
_080EAD88:
	ldr r3, _080EADDC  @ =gRam
	ldr r2, _080EADD0  @ =0x00000F62
	add r0, r3, r2
	add r0, r4, r0
	ldrb r0, [r0]
	mov r2, #15
	and r2, r2, r0
	ldr r0, _080EADE0  @ =0x00000F22
	add r1, r3, r0
	add r1, r4, r1
	ldr r0, _080EADE4  @ =gUnknown_08177D54
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EADE8  @ =0x00000F12
	add r1, r3, r0
	add r1, r4, r1
	ldr r0, _080EADEC  @ =gUnknown_08177D64
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r1, _080EADF0  @ =0x00000F92
	add r2, r3, r1
	add r2, r4, r2
	ldr r0, _080EADF4  @ =0x00000996
	add r3, r3, r0
	ldrb r0, [r3]
	lsr r0, r0, #2
	mov r1, #1
	and r0, r0, r1
	add r0, r0, #1
	strb r0, [r2]
_080EADC8:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EADD0:
	.4byte 0x00000F62
_080EADD4:
	.4byte gUnknown_08177D52
_080EADD8:
	.4byte 0x00000F72
_080EADDC:
	.4byte gRam
_080EADE0:
	.4byte 0x00000F22
_080EADE4:
	.4byte gUnknown_08177D54
_080EADE8:
	.4byte 0x00000F12
_080EADEC:
	.4byte gUnknown_08177D64
_080EADF0:
	.4byte 0x00000F92
_080EADF4:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080EAD10

	THUMB_FUNC_START sub_080EADF8
sub_080EADF8: @ 0x080EADF8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080EAE38  @ =gRam
	ldr r2, _080EAE3C  @ =0x0000164C
	add r1, r3, r2
	ldrb r4, [r1]
	ldr r1, _080EAE40  @ =0x00000EA5
	add r2, r3, r1
	add r2, r0, r2
	ldr r1, _080EAE44  @ =gUnknown_08177D48
	add r1, r4, r1
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r1, _080EAE48  @ =0x00001022
	add r2, r3, r1
	add r2, r0, r2
	ldr r1, _080EAE4C  @ =gUnknown_08177D4A
	add r1, r4, r1
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r2, _080EAE50  @ =0x000011B2
	add r3, r3, r2
	add r0, r0, r3
	ldr r1, _080EAE54  @ =gUnknown_08177D4C
	add r4, r4, r1
	ldrb r1, [r4]
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EAE38:
	.4byte gRam
_080EAE3C:
	.4byte 0x0000164C
_080EAE40:
	.4byte 0x00000EA5
_080EAE44:
	.4byte gUnknown_08177D48
_080EAE48:
	.4byte 0x00001022
_080EAE4C:
	.4byte gUnknown_08177D4A
_080EAE50:
	.4byte 0x000011B2
_080EAE54:
	.4byte gUnknown_08177D4C
	THUMB_FUNC_END sub_080EADF8

	THUMB_FUNC_START sub_080EAE58
sub_080EAE58: @ 0x080EAE58
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	ldr r6, _080EAEB0  @ =gRam
	ldr r0, _080EAEB4  @ =0x00000D94
	add r1, r6, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #48
	orr r0, r0, r2
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EAEC2
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EAEC2
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080EAEB8  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EAEBC
	add r0, r4, #0
	bl sub_080EAD10
	b _080EAEC2
	.byte 0x00
	.byte 0x00
_080EAEB0:
	.4byte gRam
_080EAEB4:
	.4byte 0x00000D94
_080EAEB8:
	.4byte 0x00000F52
_080EAEBC:
	add r0, r5, #0
	bl sub_080EAC64
_080EAEC2:
	pop {r4-r6}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EAE58

	THUMB_FUNC_START sub_080EAEC8
sub_080EAEC8: @ 0x080EAEC8
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080EAF30  @ =gRam
	ldr r1, _080EAF34  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080EAF28
	bl GetRandomInt
	ldr r2, _080EAF38  @ =gUnknown_08177D80
	mov r1, #3
	and r1, r1, r0
	add r1, r1, r2
	ldrb r0, [r1]
	strb r0, [r5]
	ldr r0, _080EAF3C  @ =0x00000F52
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EAF40  @ =0x00000FB2
	add r3, r6, r1
	add r3, r4, r3
	add r1, r1, #208
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r3]
	ldr r0, _080EAF44  @ =0x00000F22
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080EAF48  @ =gUnknown_08177D84
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EAF4C  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080EAF50  @ =gUnknown_08177D88
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080EAF28:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EAF30:
	.4byte gRam
_080EAF34:
	.4byte 0x00000FC2
_080EAF38:
	.4byte gUnknown_08177D80
_080EAF3C:
	.4byte 0x00000F52
_080EAF40:
	.4byte 0x00000FB2
_080EAF44:
	.4byte 0x00000F22
_080EAF48:
	.4byte gUnknown_08177D84
_080EAF4C:
	.4byte 0x00000F12
_080EAF50:
	.4byte gUnknown_08177D88
	THUMB_FUNC_END sub_080EAEC8

	THUMB_FUNC_START sub_080EAF54
sub_080EAF54: @ 0x080EAF54
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080EAFC8  @ =gRam
	ldr r0, _080EAFCC  @ =0x00000F92
	add r2, r6, r0
	add r2, r5, r2
	ldr r1, _080EAFD0  @ =0x00001052
	add r0, r6, r1
	add r7, r5, r0
	ldrb r3, [r7]
	mov r9, r3
	mov r1, #1
	ldr r3, _080EAFD4  @ =gUnknown_08177D8C
	ldr r4, _080EAFD8  @ =0x00000FB2
	add r0, r6, r4
	add r0, r0, r5
	mov r8, r0
	ldrb r0, [r0]
	add r0, r0, r3
	mov r3, r9
	and r1, r1, r3
	ldrb r0, [r0]
	add r1, r1, r0
	strb r1, [r2]
	mov r4, #12
	mov r9, r4
	ldr r1, _080EAFDC  @ =0x00001042
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EB01C
	ldr r2, _080EAFE0  @ =0x00000FC2
	add r0, r6, r2
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080EAFE8
	ldr r3, _080EAFE4  @ =0x00001062
	add r0, r6, r3
	add r2, r5, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080EB016
	mov r0, #11
	strb r0, [r2]
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	b _080EB016
_080EAFC8:
	.4byte gRam
_080EAFCC:
	.4byte 0x00000F92
_080EAFD0:
	.4byte 0x00001052
_080EAFD4:
	.4byte gUnknown_08177D8C
_080EAFD8:
	.4byte 0x00000FB2
_080EAFDC:
	.4byte 0x00001042
_080EAFE0:
	.4byte 0x00000FC2
_080EAFE4:
	.4byte 0x00001062
_080EAFE8:
	add r0, r5, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, r8
	ldrb r1, [r1]
	cmp r0, r1
	beq _080EB000
	mov r2, #16
	mov r9, r2
	b _080EB01C
_080EB000:
	ldr r3, _080EB084  @ =0x00000F52
	add r0, r6, r3
	add r0, r5, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #32
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080C351C
_080EB016:
	mov r0, #0
	cmp r0, #0
	beq _080EB078
_080EB01C:
	ldr r4, _080EB088  @ =gRam
	ldr r1, _080EB08C  @ =0x00000FC2
	add r0, r4, r1
	add r0, r5, r0
	mov r7, #0
	mov r2, r9
	strb r2, [r0]
	bl GetRandomInt
	ldr r3, _080EB090  @ =0x00001082
	add r1, r4, r3
	add r6, r5, r1
	ldr r3, _080EB094  @ =gUnknown_08177D90
	ldr r2, _080EB098  @ =0x00000FB2
	add r1, r4, r2
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #1
	mov r2, #1
	and r2, r2, r0
	orr r1, r1, r2
	add r1, r1, r3
	ldrb r0, [r1]
	strb r0, [r6]
	ldr r3, _080EB084  @ =0x00000F52
	add r0, r4, r3
	add r0, r5, r0
	strb r7, [r0]
	ldr r0, _080EB09C  @ =0x00000F82
	add r4, r4, r0
	add r1, r5, r4
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #4
	bne _080EB072
	strb r7, [r1]
	add r0, r5, #0
	bl sub_080C2FA8
	strb r0, [r6]
_080EB072:
	add r0, r5, #0
	bl sub_080C351C
_080EB078:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080EB084:
	.4byte 0x00000F52
_080EB088:
	.4byte gRam
_080EB08C:
	.4byte 0x00000FC2
_080EB090:
	.4byte 0x00001082
_080EB094:
	.4byte gUnknown_08177D90
_080EB098:
	.4byte 0x00000FB2
_080EB09C:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080EAF54

	THUMB_FUNC_START sub_080EB0A0
sub_080EB0A0: @ 0x080EB0A0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080EB0FC  @ =gRam
	ldr r2, _080EB100  @ =0x00000FB2
	add r0, r1, r2
	add r0, r4, r0
	ldrb r5, [r0]
	add r2, r2, #16
	add r0, r1, r2
	add r3, r4, r0
	ldrb r2, [r3]
	add r6, r1, #0
	cmp r2, #0
	bne _080EB0C6
	ldr r1, _080EB104  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	strb r2, [r0]
_080EB0C6:
	ldrb r0, [r3]
	cmp r0, #15
	bhi _080EB0E6
	cmp r0, #15
	bne _080EB0E0
	add r0, r4, #0
	bl sub_080EB114
	ldr r2, _080EB108  @ =0x00000FD2
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
_080EB0E0:
	add r0, r5, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
_080EB0E6:
	ldr r1, _080EB10C  @ =0x00000F92
	add r0, r6, r1
	add r0, r4, r0
	ldr r1, _080EB110  @ =gUnknown_08177D98
	add r1, r5, r1
	ldrb r1, [r1]
	strb r1, [r0]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EB0FC:
	.4byte gRam
_080EB100:
	.4byte 0x00000FB2
_080EB104:
	.4byte 0x00000F52
_080EB108:
	.4byte 0x00000FD2
_080EB10C:
	.4byte 0x00000F92
_080EB110:
	.4byte gUnknown_08177D98
	THUMB_FUNC_END sub_080EB0A0

	THUMB_FUNC_START sub_080EB114
sub_080EB114: @ 0x080EB114
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r0, #27
	add r1, r4, #0
	bl sub_080CA538
	add r5, r0, #0
	cmp r5, #0
	blt _080EB1B2
	ldr r3, _080EB1B8  @ =gRam
	ldr r0, _080EB1BC  @ =0x00000FB2
	add r2, r3, r0
	add r0, r4, r2
	ldrb r4, [r0]
	ldr r1, _080EB1C0  @ =0x00000F62
	add r0, r3, r1
	add r0, r5, r0
	mov r1, #3
	strb r1, [r0]
	add r2, r5, r2
	strb r4, [r2]
	mov r2, #150
	lsl r2, r2, #4
	add r1, r3, r2
	ldr r0, _080EB1C4  @ =gUnknown_08177DA0
	add r0, r4, r0
	ldrb r0, [r0]
	ldrh r2, [r1]
	add r2, r2, r0
	ldr r0, _080EB1C8  @ =gUnknown_08177DA4
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r6, _080EB1CC  @ =0x00000964
	add r1, r3, r6
	ldr r0, _080EB1D0  @ =gUnknown_08177DA8
	add r0, r4, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080EB1D4  @ =gUnknown_08177DAC
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r6, _080EB1D8  @ =0x00000EE2
	add r0, r3, r6
	add r0, r5, r0
	strb r2, [r0]
	add r6, r6, #32
	add r0, r3, r6
	add r0, r5, r0
	lsr r2, r2, #8
	strb r2, [r0]
	ldr r2, _080EB1DC  @ =0x00000ED2
	add r0, r3, r2
	add r0, r5, r0
	strb r1, [r0]
	sub r6, r6, #16
	add r0, r3, r6
	add r0, r5, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080EB1E0  @ =0x00000F22
	add r1, r3, r0
	add r1, r5, r1
	ldr r0, _080EB1E4  @ =gUnknown_08177DB0
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080EB1E8  @ =0x00000F12
	add r3, r3, r1
	add r3, r5, r3
	ldr r0, _080EB1EC  @ =gUnknown_08177DB4
	add r4, r4, r0
	ldrb r0, [r4]
	strb r0, [r3]
_080EB1B2:
	pop {r4-r6}
	pop {r0}
	bx r0
_080EB1B8:
	.4byte gRam
_080EB1BC:
	.4byte 0x00000FB2
_080EB1C0:
	.4byte 0x00000F62
_080EB1C4:
	.4byte gUnknown_08177DA0
_080EB1C8:
	.4byte gUnknown_08177DA4
_080EB1CC:
	.4byte 0x00000964
_080EB1D0:
	.4byte gUnknown_08177DA8
_080EB1D4:
	.4byte gUnknown_08177DAC
_080EB1D8:
	.4byte 0x00000EE2
_080EB1DC:
	.4byte 0x00000ED2
_080EB1E0:
	.4byte 0x00000F22
_080EB1E4:
	.4byte gUnknown_08177DB0
_080EB1E8:
	.4byte 0x00000F12
_080EB1EC:
	.4byte gUnknown_08177DB4
	THUMB_FUNC_END sub_080EB114

	THUMB_FUNC_START sub_080EB1F0
sub_080EB1F0: @ 0x080EB1F0
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r4, _080EB2D4  @ =gRam
	ldr r1, _080EB2D8  @ =0x00000F92
	add r0, r4, r1
	add r0, r6, r0
	ldrb r1, [r0]
	lsl r1, r1, #5
	ldr r0, _080EB2DC  @ =gUnknown_08177DB8
	add r1, r1, r0
	add r0, r6, #0
	mov r2, #4
	bl sub_080C9480
	ldr r1, _080EB2E0  @ =0x000010D2
	add r0, r4, r1
	add r0, r6, r0
	ldrb r0, [r0]
	mov r8, r4
	cmp r0, #0
	bne _080EB2C6
	ldr r0, _080EB2E4  @ =0x00000FD2
	add r0, r0, r8
	add r0, r6, r0
	ldrb r0, [r0]
	ldr r7, _080EB2E8  @ =gUnknown_03003E74
	ldr r1, _080EB2EC  @ =gUnknown_08177F38
	mov r9, r1
	ldr r1, _080EB2F0  @ =gUnknown_08177F44
	mov r10, r1
	cmp r0, #0
	beq _080EB268
	mov r2, #3
	mov r12, r7
	mov r3, #170
	lsl r3, r3, #3
	add r3, r3, r8
	mov r4, #240
_080EB246:
	mov r0, r12
	ldrh r1, [r0]
	lsl r0, r2, #24
	asr r2, r0, #24
	add r1, r1, r2
	lsl r1, r1, #3
	add r5, r1, r3
	ldrb r0, [r5, #3]
	lsr r0, r0, #6
	cmp r0, #1
	beq _080EB25E
	strb r4, [r5]
_080EB25E:
	sub r0, r2, #1
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r0, #0
	bge _080EB246
_080EB268:
	ldr r0, _080EB2D8  @ =0x00000F92
	add r0, r0, r8
	add r0, r6, r0
	ldrb r0, [r0]
	add r0, r0, r9
	ldrb r0, [r0]
	lsr r0, r0, #2
	ldrh r7, [r7]
	add r0, r0, r7
	lsl r0, r0, #3
	mov r1, #170
	lsl r1, r1, #3
	add r1, r1, r8
	add r5, r0, r1
	ldrh r4, [r5, #4]
	lsl r0, r4, #22
	lsr r0, r0, #22
	mov r2, #128
	lsl r2, r2, #1
	and r2, r2, r0
	ldr r3, _080EB2F4  @ =0x00001082
	add r3, r3, r8
	add r3, r6, r3
	ldrb r0, [r3]
	add r0, r0, r10
	ldrb r1, [r0]
	orr r1, r1, r2
	ldr r0, _080EB2F8  @ =0xFFFFFC00
	and r0, r0, r4
	orr r0, r0, r1
	strh r0, [r5, #4]
	ldrb r0, [r3]
	ldr r1, _080EB2FC  @ =gUnknown_08177F48
	add r0, r0, r1
	ldrb r1, [r0]
	lsr r1, r1, #6
	mov r0, #1
	and r1, r1, r0
	lsl r1, r1, #4
	ldrb r2, [r5, #3]
	sub r0, r0, #18
	and r0, r0, r2
	orr r0, r0, r1
	strb r0, [r5, #3]
	add r0, r6, #0
	bl sub_080C6230
_080EB2C6:
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080EB2D4:
	.4byte gRam
_080EB2D8:
	.4byte 0x00000F92
_080EB2DC:
	.4byte gUnknown_08177DB8
_080EB2E0:
	.4byte 0x000010D2
_080EB2E4:
	.4byte 0x00000FD2
_080EB2E8:
	.4byte gUnknown_03003E74
_080EB2EC:
	.4byte gUnknown_08177F38
_080EB2F0:
	.4byte gUnknown_08177F44
_080EB2F4:
	.4byte 0x00001082
_080EB2F8:
	.4byte 0xFFFFFC00
_080EB2FC:
	.4byte gUnknown_08177F48
	THUMB_FUNC_END sub_080EB1F0

	THUMB_FUNC_START sub_080EB300
sub_080EB300: @ 0x080EB300
	bx lr
	THUMB_FUNC_END sub_080EB300

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EB304
sub_080EB304: @ 0x080EB304
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r4, r5, #0
	add r0, r5, #0
	bl sub_080EB1F0
	ldr r6, _080EB374  @ =gRam
	ldr r1, _080EB378  @ =0x000009AC
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #26
	bne _080EB32E
	ldr r2, _080EB37C  @ =0x00000964
	add r1, r6, r2
	ldrh r0, [r1]
	sub r0, r0, #16
	strh r0, [r1]
	add r0, r5, #0
	bl sub_080EAAF0
_080EB32E:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EB36E
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EB36E
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C6F48
	ldr r1, _080EB380  @ =gUnknown_08177D74
	ldr r2, _080EB384  @ =0x00000F52
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080EB36E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080EB374:
	.4byte gRam
_080EB378:
	.4byte 0x000009AC
_080EB37C:
	.4byte 0x00000964
_080EB380:
	.4byte gUnknown_08177D74
_080EB384:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EB304

	THUMB_FUNC_START sub_080EB388
sub_080EB388: @ 0x080EB388
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080EB3F4  @ =gRam
	ldr r0, _080EB3F8  @ =0x00000F92
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080EB3FC  @ =0x00000F72
	add r0, r6, r2
	add r7, r4, r0
	ldr r2, _080EB400  @ =gUnknown_08177F4C
	ldr r3, _080EB404  @ =0x00000FB2
	add r0, r6, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	ldrb r2, [r7]
	add r0, r0, r2
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080EB5CC
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EB3EE
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	lsr r5, r0, #24
	cmp r5, #0
	bne _080EB3EE
	add r0, r4, #0
	bl sub_080C5044
	strb r5, [r7]
	ldr r1, _080EB408  @ =gUnknown_08177F50
	ldr r3, _080EB40C  @ =0x00000F52
	add r0, r6, r3
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080EB3EE:
	pop {r4-r7}
	pop {r0}
	bx r0
_080EB3F4:
	.4byte gRam
_080EB3F8:
	.4byte 0x00000F92
_080EB3FC:
	.4byte 0x00000F72
_080EB400:
	.4byte gUnknown_08177F4C
_080EB404:
	.4byte 0x00000FB2
_080EB408:
	.4byte gUnknown_08177F50
_080EB40C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EB388

	THUMB_FUNC_START sub_080EB410
sub_080EB410: @ 0x080EB410
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r6, _080EB43C  @ =gRam
	ldr r1, _080EB440  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r1, [r5]
	cmp r1, #0
	beq _080EB448
	mov r0, #24
	and r0, r0, r1
	cmp r0, #0
	beq _080EB4CA
	ldr r2, _080EB444  @ =0x00000F72
	add r1, r6, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080EB4CA
_080EB43C:
	.4byte gRam
_080EB440:
	.4byte 0x00000FC2
_080EB444:
	.4byte 0x00000F72
_080EB448:
	ldr r0, _080EB48C  @ =0x00000F52
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	bl GetRandomInt
	ldr r2, _080EB490  @ =gUnknown_08177F58
	mov r1, #12
	and r1, r1, r0
	lsr r1, r1, #2
	add r1, r1, r2
	ldrb r0, [r1]
	strb r0, [r5]
	ldr r1, _080EB494  @ =0x00000F62
	add r0, r6, r1
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080EB49C
	bl GetRandomInt
	ldr r1, _080EB498  @ =0x00000FB2
	add r2, r6, r1
	add r2, r4, r2
	mov r1, #3
	and r1, r1, r0
	strb r1, [r2]
	b _080EB4CA
_080EB48C:
	.4byte 0x00000F52
_080EB490:
	.4byte gUnknown_08177F58
_080EB494:
	.4byte 0x00000F62
_080EB498:
	.4byte 0x00000FB2
_080EB49C:
	mov r0, #3
	strb r0, [r2]
	mov r0, #96
	strb r0, [r5]
	ldr r2, _080EB4D0  @ =0x00000F82
	add r1, r6, r2
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r7, #0
	bl sub_080C3028
	add r4, r0, #0
	add r0, r7, #0
	bl sub_080C36D8
	ldr r2, _080EB4D4  @ =0x00000FB2
	add r1, r6, r2
	add r1, r7, r1
	lsl r4, r4, #1
	orr r4, r4, r0
	strb r4, [r1]
_080EB4CA:
	pop {r4-r7}
	pop {r0}
	bx r0
_080EB4D0:
	.4byte 0x00000F82
_080EB4D4:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080EB410

	THUMB_FUNC_START sub_080EB4D8
sub_080EB4D8: @ 0x080EB4D8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r5, _080EB584  @ =gRam
	ldr r0, _080EB588  @ =0x00000F72
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C6F48
	ldr r1, _080EB58C  @ =0x00001042
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EB514
	ldr r3, _080EB590  @ =0x00000FB2
	add r0, r5, r3
	add r0, r4, r0
	ldrb r1, [r0]
	mov r2, #3
	eor r1, r1, r2
	strb r1, [r0]
_080EB514:
	ldr r1, _080EB590  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r2, [r0]
	ldr r3, _080EB594  @ =0x00000F82
	add r0, r5, r3
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	beq _080EB52E
	add r0, r2, #4
	lsl r0, r0, #24
	lsr r2, r0, #24
_080EB52E:
	ldr r0, _080EB598  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080EB59C  @ =gUnknown_08177F5C
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r3, _080EB5A0  @ =0x00000F12
	add r1, r5, r3
	add r1, r4, r1
	ldr r0, _080EB5A4  @ =gUnknown_08177F64
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r1, _080EB5A8  @ =0x00001152
	add r0, r5, r1
	add r3, r4, r0
	ldrb r0, [r3]
	sub r0, r0, #4
	strb r0, [r3]
	sub r1, r1, #16
	add r0, r5, r1
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080EB5BE
	mov r0, #0
	strb r0, [r2]
	ldr r1, _080EB5AC  @ =0x00000FC2
	add r0, r5, r1
	add r1, r4, r0
	ldrb r2, [r1]
	cmp r2, #0
	beq _080EB5B0
	mov r0, #20
	strb r0, [r3]
	b _080EB5BE
	.byte 0x00
	.byte 0x00
_080EB584:
	.4byte gRam
_080EB588:
	.4byte 0x00000F72
_080EB58C:
	.4byte 0x00001042
_080EB590:
	.4byte 0x00000FB2
_080EB594:
	.4byte 0x00000F82
_080EB598:
	.4byte 0x00000F22
_080EB59C:
	.4byte gUnknown_08177F5C
_080EB5A0:
	.4byte 0x00000F12
_080EB5A4:
	.4byte gUnknown_08177F64
_080EB5A8:
	.4byte 0x00001152
_080EB5AC:
	.4byte 0x00000FC2
_080EB5B0:
	ldr r3, _080EB5C4  @ =0x00000F52
	add r0, r5, r3
	add r0, r7, r0
	strb r2, [r0]
	strb r2, [r6]
	mov r0, #63
	strb r0, [r1]
_080EB5BE:
	pop {r4-r7}
	pop {r0}
	bx r0
_080EB5C4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EB4D8

	THUMB_FUNC_START sub_080EB5C8
sub_080EB5C8: @ 0x080EB5C8
	bx lr
	THUMB_FUNC_END sub_080EB5C8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EB5CC
sub_080EB5CC: @ 0x080EB5CC
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080EB5F8  @ =gRam
	ldr r1, _080EB5FC  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #5
	ldr r0, _080EB600  @ =gUnknown_08177F6C
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #4
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
_080EB5F8:
	.4byte gRam
_080EB5FC:
	.4byte 0x00000F92
_080EB600:
	.4byte gUnknown_08177F6C
	THUMB_FUNC_END sub_080EB5CC

	THUMB_FUNC_START sub_080EB604
sub_080EB604: @ 0x080EB604
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080EBBE8
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EB68E
	ldr r5, _080EB664  @ =gRam
	ldr r1, _080EB668  @ =0x00001072
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EB640
	ldr r2, _080EB66C  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080EB670  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #48
	strb r1, [r0]
_080EB640:
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EB68E
	add r0, r4, #0
	bl sub_080C5044
	ldr r2, _080EB674  @ =0x000009AC
	add r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #26
	bne _080EB678
	add r0, r4, #0
	bl sub_080EB9F0
	b _080EB68E
_080EB664:
	.4byte gRam
_080EB668:
	.4byte 0x00001072
_080EB66C:
	.4byte 0x00000F52
_080EB670:
	.4byte 0x00000FC2
_080EB674:
	.4byte 0x000009AC
_080EB678:
	ldr r1, _080EB694  @ =gUnknown_0817806C
	ldr r2, _080EB698  @ =0x00000F52
	add r0, r5, r2
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r6, #0
	bl _call_via_r1
_080EB68E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080EB694:
	.4byte gUnknown_0817806C
_080EB698:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EB604

	THUMB_FUNC_START sub_080EB69C
sub_080EB69C: @ 0x080EB69C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r7, #1
	neg r7, r7
	ldr r5, _080EB6D0  @ =gRam
	ldr r2, _080EB6D4  @ =0x00000FC2
	add r0, r5, r2
	add r4, r6, r0
	ldrb r3, [r4]
	mov r12, r5
	cmp r3, #0
	bne _080EB6B8
	b _080EB7DC
_080EB6B8:
	cmp r3, #32
	beq _080EB6FC
	ldr r4, _080EB6D8  @ =0x00000FB2
	add r0, r5, r4
	add r0, r6, r0
	ldrb r2, [r0]
	cmp r3, #31
	bls _080EB6DC
	cmp r1, #0
	beq _080EB6E2
	mov r2, #8
	b _080EB6E2
_080EB6D0:
	.4byte gRam
_080EB6D4:
	.4byte 0x00000FC2
_080EB6D8:
	.4byte 0x00000FB2
_080EB6DC:
	add r0, r2, #4
	lsl r0, r0, #24
	lsr r2, r0, #24
_080EB6E2:
	ldr r0, _080EB6F4  @ =0x00000F92
	add r0, r0, r12
	add r0, r6, r0
	ldr r1, _080EB6F8  @ =gUnknown_08178078
	add r1, r2, r1
	ldrb r1, [r1]
	strb r1, [r0]
	b _080EB7E8
	.byte 0x00
	.byte 0x00
_080EB6F4:
	.4byte 0x00000F92
_080EB6F8:
	.4byte gUnknown_08178078
_080EB6FC:
	mov r0, #74
	add r1, r6, #0
	bl sub_080CA538
	add r7, r0, #0
	cmp r7, #0
	bge _080EB710
	ldrb r0, [r4]
	add r0, r0, #1
	b _080EB7E6
_080EB710:
	lsl r0, r7, #24
	lsr r0, r0, #24
	bl sub_080C2914
	ldr r1, _080EB7A8  @ =0x00000FD2
	add r0, r5, r1
	add r0, r7, r0
	mov r1, #64
	strb r1, [r0]
	ldr r2, _080EB7AC  @ =0x00000FB2
	add r0, r5, r2
	add r0, r6, r0
	ldrb r3, [r0]
	mov r4, #150
	lsl r4, r4, #4
	add r1, r5, r4
	ldr r0, _080EB7B0  @ =gUnknown_08178081
	add r0, r3, r0
	ldrb r0, [r0]
	ldrh r2, [r1]
	add r2, r2, r0
	ldr r0, _080EB7B4  @ =gUnknown_08178085
	add r0, r3, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r0, _080EB7B8  @ =0x00000964
	add r1, r5, r0
	ldr r0, _080EB7BC  @ =gUnknown_08178089
	add r0, r3, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080EB7C0  @ =gUnknown_0817808D
	add r0, r3, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r4, _080EB7C4  @ =0x00000EE2
	add r0, r5, r4
	add r0, r7, r0
	strb r2, [r0]
	add r4, r4, #32
	add r0, r5, r4
	add r0, r7, r0
	lsr r2, r2, #8
	strb r2, [r0]
	ldr r2, _080EB7C8  @ =0x00000ED2
	add r0, r5, r2
	add r0, r7, r0
	strb r1, [r0]
	sub r4, r4, #16
	add r0, r5, r4
	add r0, r7, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080EB7CC  @ =0x00000F22
	add r1, r5, r0
	add r1, r7, r1
	ldr r0, _080EB7D0  @ =gUnknown_08178091
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r2, r2, #64
	add r1, r5, r2
	add r1, r7, r1
	ldr r0, _080EB7D4  @ =gUnknown_08178095
	add r3, r3, r0
	ldrb r0, [r3]
	strb r0, [r1]
	ldr r4, _080EB7D8  @ =0x00001152
	add r0, r5, r4
	add r0, r7, r0
	mov r1, #40
	strb r1, [r0]
	b _080EB7E8
_080EB7A8:
	.4byte 0x00000FD2
_080EB7AC:
	.4byte 0x00000FB2
_080EB7B0:
	.4byte gUnknown_08178081
_080EB7B4:
	.4byte gUnknown_08178085
_080EB7B8:
	.4byte 0x00000964
_080EB7BC:
	.4byte gUnknown_08178089
_080EB7C0:
	.4byte gUnknown_0817808D
_080EB7C4:
	.4byte 0x00000EE2
_080EB7C8:
	.4byte 0x00000ED2
_080EB7CC:
	.4byte 0x00000F22
_080EB7D0:
	.4byte gUnknown_08178091
_080EB7D4:
	.4byte gUnknown_08178095
_080EB7D8:
	.4byte 0x00001152
_080EB7DC:
	ldr r1, _080EB7F0  @ =0x00000F52
	add r0, r5, r1
	add r0, r6, r0
	strb r3, [r0]
	mov r0, #2
_080EB7E6:
	strb r0, [r4]
_080EB7E8:
	add r0, r7, #0
	pop {r4-r7}
	pop {r1}
	bx r1
_080EB7F0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EB69C

	THUMB_FUNC_START sub_080EB7F4
sub_080EB7F4: @ 0x080EB7F4
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r8, r5
	ldr r6, _080EB850  @ =gRam
	ldr r1, _080EB854  @ =0x00000FC2
	add r0, r6, r1
	add r4, r5, r0
	ldrb r7, [r4]
	cmp r7, #0
	bne _080EB8AA
	bl GetRandomInt
	mov r1, #3
	and r1, r1, r0
	cmp r1, #0
	beq _080EB89C
	ldr r2, _080EB858  @ =0x00000F82
	add r0, r6, r2
	add r1, r5, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #4
	beq _080EB864
	ldr r4, _080EB85C  @ =gUnknown_08178099
	bl GetRandomInt
	ldr r2, _080EB860  @ =0x00000FB2
	add r1, r6, r2
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #1
	mov r2, #1
	and r2, r2, r0
	orr r1, r1, r2
	add r1, r1, r4
	ldrb r1, [r1]
	add r0, r5, #0
	bl sub_080EB8B8
	b _080EB8AA
_080EB850:
	.4byte gRam
_080EB854:
	.4byte 0x00000FC2
_080EB858:
	.4byte 0x00000F82
_080EB85C:
	.4byte gUnknown_08178099
_080EB860:
	.4byte 0x00000FB2
_080EB864:
	strb r7, [r1]
	add r0, r5, #0
	bl sub_080C2FA8
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	add r0, r5, #0
	bl sub_080EB8B8
	ldr r0, _080EB894  @ =0x00000F22
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	lsl r0, r0, #1
	strb r0, [r1]
	ldr r2, _080EB898  @ =0x00000F12
	add r1, r6, r2
	add r1, r5, r1
	ldrb r0, [r1]
	lsl r0, r0, #1
	strb r0, [r1]
	b _080EB8AA
	.byte 0x00
	.byte 0x00
_080EB894:
	.4byte 0x00000F22
_080EB898:
	.4byte 0x00000F12
_080EB89C:
	ldr r1, _080EB8B4  @ =0x00000F52
	add r0, r6, r1
	add r0, r0, r8
	mov r1, #2
	strb r1, [r0]
	mov r0, #64
	strb r0, [r4]
_080EB8AA:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080EB8B4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EB7F4

	THUMB_FUNC_START sub_080EB8B8
sub_080EB8B8: @ 0x080EB8B8
	push {r4-r6,lr}
	add r4, r0, #0
	add r6, r1, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	lsl r6, r6, #24
	lsr r6, r6, #24
	ldr r5, _080EB910  @ =gRam
	ldr r1, _080EB914  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
	bl GetRandomInt
	ldr r1, _080EB918  @ =0x00000FC2
	add r2, r5, r1
	add r2, r4, r2
	mov r1, #63
	and r1, r1, r0
	add r1, r1, #96
	strb r1, [r2]
	ldr r0, _080EB91C  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080EB920  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080EB924  @ =gUnknown_081780A1
	add r0, r6, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080EB928  @ =0x00000F12
	add r5, r5, r1
	add r4, r4, r5
	ldr r0, _080EB92C  @ =gUnknown_081780A5
	add r6, r6, r0
	ldrb r0, [r6]
	strb r0, [r4]
	pop {r4-r6}
	pop {r0}
	bx r0
_080EB910:
	.4byte gRam
_080EB914:
	.4byte 0x00000FB2
_080EB918:
	.4byte 0x00000FC2
_080EB91C:
	.4byte 0x00000F52
_080EB920:
	.4byte 0x00000F22
_080EB924:
	.4byte gUnknown_081780A1
_080EB928:
	.4byte 0x00000F12
_080EB92C:
	.4byte gUnknown_081780A5
	THUMB_FUNC_END sub_080EB8B8

	THUMB_FUNC_START sub_080EB930
sub_080EB930: @ 0x080EB930
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080EB9A8  @ =gRam
	ldr r1, _080EB9AC  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r1, [r6]
	cmp r1, #0
	beq _080EB9D8
	ldr r2, _080EB9B0  @ =0x00000F62
	add r0, r5, r2
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080EB968
	mov r0, #11
	strb r0, [r2]
	ldr r0, _080EB9B4  @ =0x00001052
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080EB968:
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C6F48
	ldr r1, _080EB9B8  @ =0x00001042
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EB9C4
	ldr r2, _080EB9BC  @ =0x00000F92
	add r3, r5, r2
	add r3, r4, r3
	ldr r2, _080EB9C0  @ =gUnknown_081780A9
	sub r1, r1, #144
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, r2
	ldr r2, _080EB9B4  @ =0x00001052
	add r0, r5, r2
	add r0, r4, r0
	ldrb r2, [r0]
	mov r0, #1
	and r0, r0, r2
	ldrb r1, [r1]
	add r0, r0, r1
	strb r0, [r3]
	b _080EB9E4
	.byte 0x00
	.byte 0x00
_080EB9A8:
	.4byte gRam
_080EB9AC:
	.4byte 0x00000FC2
_080EB9B0:
	.4byte 0x00000F62
_080EB9B4:
	.4byte 0x00001052
_080EB9B8:
	.4byte 0x00001042
_080EB9BC:
	.4byte 0x00000F92
_080EB9C0:
	.4byte gUnknown_081780A9
_080EB9C4:
	mov r0, #16
	strb r0, [r6]
	ldr r1, _080EB9D4  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	b _080EB9E2
	.byte 0x00
	.byte 0x00
_080EB9D4:
	.4byte 0x00000F52
_080EB9D8:
	mov r0, #16
	strb r0, [r6]
	ldr r2, _080EB9EC  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
_080EB9E2:
	strb r1, [r0]
_080EB9E4:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EB9EC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EB930

	THUMB_FUNC_START sub_080EB9F0
sub_080EB9F0: @ 0x080EB9F0
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080EBA88  @ =gRam
	ldr r2, _080EBA8C  @ =0x00000F52
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	add r5, r1, #0
	cmp r0, #0
	beq _080EBADC
	mov r6, #0
	cmp r4, #4
	bne _080EBA18
	mov r6, #1
_080EBA18:
	add r0, r4, #0
	add r1, r6, #0
	bl sub_080EB69C
	add r4, r0, #0
	cmp r4, #0
	bge _080EBA28
	b _080EBB98
_080EBA28:
	ldr r7, _080EBA90  @ =0x00000FD2
	add r0, r5, r7
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r0, _080EBA94  @ =0x00000E75
	add r1, r5, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #128
	mov r3, #0
	mov r7, #0
	orr r0, r0, r2
	strb r0, [r1]
	ldr r1, _080EBA98  @ =0x00001122
	add r0, r5, r1
	add r2, r4, r0
	mov r0, #4
	strb r0, [r2]
	cmp r6, #0
	bne _080EBA54
	b _080EBB98
_080EBA54:
	ldr r6, _080EBA9C  @ =0x00000F92
	add r0, r5, r6
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldrb r1, [r2]
	mov r0, #241
	and r0, r0, r1
	mov r1, #8
	orr r0, r0, r1
	strb r0, [r2]
	ldr r1, _080EBAA0  @ =0x00000F22
	add r0, r5, r1
	add r0, r4, r0
	strb r7, [r0]
	ldr r2, _080EBAA4  @ =0x00000F12
	add r0, r5, r2
	add r0, r4, r0
	strb r7, [r0]
	ldr r6, _080EBAA8  @ =0x00001152
	add r0, r5, r6
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
	b _080EBB98
	.byte 0x00
	.byte 0x00
_080EBA88:
	.4byte gRam
_080EBA8C:
	.4byte 0x00000F52
_080EBA90:
	.4byte 0x00000FD2
_080EBA94:
	.4byte 0x00000E75
_080EBA98:
	.4byte 0x00001122
_080EBA9C:
	.4byte 0x00000F92
_080EBAA0:
	.4byte 0x00000F22
_080EBAA4:
	.4byte 0x00000F12
_080EBAA8:
	.4byte 0x00001152
_080EBAAC:
	mov r0, #0
	ldr r7, [sp]
	strb r0, [r7]
	ldr r0, _080EBAD4  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EBAD8  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #13
	bl sub_080CF140
	b _080EBB98
	.byte 0x00
	.byte 0x00
_080EBAD4:
	.4byte 0x00000F52
_080EBAD8:
	.4byte 0x00000FC2
_080EBADC:
	ldr r2, _080EBBA8  @ =0x00000F92
	add r3, r5, r2
	add r3, r4, r3
	ldr r2, _080EBBAC  @ =gUnknown_08178289
	ldr r6, _080EBBB0  @ =0x00000FB2
	add r0, r5, r6
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, r2
	ldr r7, _080EBBB4  @ =0x00001052
	add r0, r5, r7
	add r0, r4, r0
	ldrb r2, [r0]
	mov r0, #1
	and r0, r0, r2
	ldrb r1, [r1]
	add r0, r0, r1
	strb r0, [r3]
	mov r3, #15
	ldr r0, _080EBBB8  @ =0x00000EE2
	add r0, r0, r5
	mov r10, r0
	ldr r1, _080EBBBC  @ =0x00000F02
	add r1, r1, r5
	mov r9, r1
	ldr r2, _080EBBC0  @ =0x00000ED2
	add r2, r2, r5
	mov r8, r2
	sub r6, r6, #192
	add r6, r6, r5
	mov r12, r6
_080EBB1A:
	cmp r3, r4
	beq _080EBB92
	ldr r7, _080EBBC4  @ =gUnknown_030031D2
	add r7, r3, r7
	str r7, [sp]
	ldrb r0, [r7]
	cmp r0, #0
	beq _080EBB92
	ldr r1, _080EBBC8  @ =gUnknown_03003222
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #74
	bne _080EBB92
	mov r2, r10
	add r0, r4, r2
	ldrb r1, [r0]
	mov r6, r9
	add r0, r4, r6
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	add r0, r3, r2
	ldrb r2, [r0]
	add r0, r3, r6
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #12
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #31
	bhi _080EBB92
	mov r7, r8
	add r0, r4, r7
	ldrb r1, [r0]
	mov r2, r12
	add r0, r4, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	add r0, r3, r7
	ldrb r2, [r0]
	mov r6, r12
	add r0, r3, r6
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r2, r2, r0
	ldr r7, _080EBBCC  @ =gRam
	ldr r6, _080EBBD0  @ =0x00001142
	add r0, r7, r6
	add r0, r3, r0
	ldrb r0, [r0]
	sub r2, r2, r0
	sub r1, r1, r2
	add r1, r1, #12
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #31
	bls _080EBAAC
_080EBB92:
	sub r3, r3, #1
	cmp r3, #0
	bge _080EBB1A
_080EBB98:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080EBBA8:
	.4byte 0x00000F92
_080EBBAC:
	.4byte gUnknown_08178289
_080EBBB0:
	.4byte 0x00000FB2
_080EBBB4:
	.4byte 0x00001052
_080EBBB8:
	.4byte 0x00000EE2
_080EBBBC:
	.4byte 0x00000F02
_080EBBC0:
	.4byte 0x00000ED2
_080EBBC4:
	.4byte gUnknown_030031D2
_080EBBC8:
	.4byte gUnknown_03003222
_080EBBCC:
	.4byte gRam
_080EBBD0:
	.4byte 0x00001142
	THUMB_FUNC_END sub_080EB9F0

	THUMB_FUNC_START sub_080EBBD4
sub_080EBBD4: @ 0x080EBBD4
	bx lr
	THUMB_FUNC_END sub_080EBBD4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EBBD8
sub_080EBBD8: @ 0x080EBBD8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #0
	bl sub_080EB69C
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EBBD8

	THUMB_FUNC_START sub_080EBBE8
sub_080EBBE8: @ 0x080EBBE8
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r1, _080EBC28  @ =gUnknown_08178248
	ldr r5, _080EBC2C  @ =gRam
	ldr r0, _080EBC30  @ =0x00000F92
	add r5, r5, r0
	add r5, r4, r5
	ldrb r2, [r5]
	lsl r0, r2, #2
	add r0, r0, r1
	ldr r1, [r0]
	ldr r0, _080EBC34  @ =gUnknown_0817827C
	add r2, r2, r0
	ldrb r2, [r2]
	add r0, r4, #0
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C6230
	ldrb r0, [r5]
	cmp r0, #12
	bne _080EBC22
	ldr r0, _080EBC38  @ =gUnknown_03003E74
	ldrh r0, [r0]
	bl sub_08115AD0
_080EBC22:
	pop {r4,r5}
	pop {r0}
	bx r0
_080EBC28:
	.4byte gUnknown_08178248
_080EBC2C:
	.4byte gRam
_080EBC30:
	.4byte 0x00000F92
_080EBC34:
	.4byte gUnknown_0817827C
_080EBC38:
	.4byte gUnknown_03003E74
	THUMB_FUNC_END sub_080EBBE8

	THUMB_FUNC_START sub_080EBC3C
sub_080EBC3C: @ 0x080EBC3C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r5, _080EBD44  @ =gRam
	ldr r1, _080EBD48  @ =0x00000F62
	add r0, r5, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EBC5C
	b _080EBFE8
_080EBC5C:
	ldr r2, _080EBD4C  @ =0x00001062
	add r0, r5, r2
	add r0, r0, r6
	mov r9, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EBC6C
	b _080EBF34
_080EBC6C:
	ldr r3, _080EBD50  @ =0x00000FA2
	add r0, r5, r3
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #9
	beq _080EBC7A
	b _080EBE04
_080EBC7A:
	ldr r1, _080EBD54  @ =0x000016C4
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r2, _080EBD58  @ =0x000016C5
	add r0, r5, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #40
	ldr r3, _080EBD5C  @ =0x00001622
	add r0, r5, r3
	ldrb r2, [r0]
	add r3, r3, #1
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #79
	bls _080EBCAC
	b _080EBE04
_080EBCAC:
	mov r1, #182
	lsl r1, r1, #5
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r2, _080EBD60  @ =0x000016C1
	add r0, r5, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #48
	add r3, r3, #1
	add r0, r5, r3
	ldrb r2, [r0]
	add r3, r3, #1
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #79
	bls _080EBCE0
	b _080EBE04
_080EBCE0:
	ldr r1, _080EBD64  @ =0x000016F6
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #128
	bne _080EBCEC
	b _080EBE04
_080EBCEC:
	ldr r2, _080EBD68  @ =0x00001142
	add r1, r5, r2
	add r1, r6, r1
	ldr r3, _080EBD6C  @ =0x000010D2
	add r0, r5, r3
	add r0, r6, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	orr r0, r0, r1
	cmp r0, #0
	beq _080EBD04
	b _080EBE04
_080EBD04:
	mov r1, #161
	lsl r1, r1, #4
	add r0, r5, r1
	sub r2, r2, #80
	add r1, r5, r2
	add r1, r6, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080EBE04
	mov r7, #0
	mov r4, #0
	add r0, r6, #0
	bl sub_080C2FA8
	mov r3, #150
	lsl r3, r3, #4
	add r1, r5, r3
	strb r0, [r1]
	ldr r1, _080EBD70  @ =0x00001804
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EBD88
	ldr r2, _080EBD74  @ =0x000016EA
	add r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #143
	bls _080EBD78
	mov r4, #1
	b _080EBD84
	.byte 0x00
	.byte 0x00
_080EBD44:
	.4byte gRam
_080EBD48:
	.4byte 0x00000F62
_080EBD4C:
	.4byte 0x00001062
_080EBD50:
	.4byte 0x00000FA2
_080EBD54:
	.4byte 0x000016C4
_080EBD58:
	.4byte 0x000016C5
_080EBD5C:
	.4byte 0x00001622
_080EBD60:
	.4byte 0x000016C1
_080EBD64:
	.4byte 0x000016F6
_080EBD68:
	.4byte 0x00001142
_080EBD6C:
	.4byte 0x000010D2
_080EBD70:
	.4byte 0x00001804
_080EBD74:
	.4byte 0x000016EA
_080EBD78:
	sub r0, r0, #9
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080EBD84
	mov r7, #1
_080EBD84:
	cmp r7, #0
	beq _080EBDA8
_080EBD88:
	ldr r0, _080EBE1C  @ =gRam
	mov r3, #150
	lsl r3, r3, #4
	add r1, r0, r3
	mov r2, #0
	ldrsb r2, [r1, r2]
	ldr r1, _080EBE20  @ =gUnknown_08178290
	ldr r3, _080EBE24  @ =0x000016D5
	add r0, r0, r3
	ldrb r0, [r0]
	lsr r0, r0, #1
	add r0, r0, r1
	ldrb r0, [r0]
	cmp r2, r0
	beq _080EBDA8
	mov r4, #1
_080EBDA8:
	cmp r4, #0
	beq _080EBE04
	ldr r4, _080EBE1C  @ =gRam
	ldr r1, _080EBE28  @ =0x00000FB2
	add r0, r4, r1
	add r0, r6, r0
	mov r2, #150
	lsl r2, r2, #4
	add r5, r4, r2
	ldrb r1, [r5]
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #32
	bl sub_080C2CB4
	ldr r3, _080EBE2C  @ =0x00000F22
	add r1, r4, r3
	add r1, r6, r1
	ldr r2, _080EBE30  @ =0x00000961
	add r0, r4, r2
	ldrb r0, [r0]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	sub r3, r3, #16
	add r1, r4, r3
	add r1, r6, r1
	ldrb r0, [r5]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EBE34  @ =0x00001152
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #32
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #11
	bl sub_080CF140
	ldr r2, _080EBE38  @ =0x00001142
	add r4, r4, r2
	add r4, r6, r4
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
_080EBE04:
	ldr r5, _080EBE1C  @ =gRam
	ldr r3, _080EBE38  @ =0x00001142
	add r0, r5, r3
	add r7, r6, r0
	ldrb r0, [r7]
	cmp r0, #0
	bne _080EBE3C
	add r0, r6, #0
	bl sub_080EC1E0
	b _080EBFEE
	.byte 0x00
	.byte 0x00
_080EBE1C:
	.4byte gRam
_080EBE20:
	.4byte gUnknown_08178290
_080EBE24:
	.4byte 0x000016D5
_080EBE28:
	.4byte 0x00000FB2
_080EBE2C:
	.4byte 0x00000F22
_080EBE30:
	.4byte 0x00000961
_080EBE34:
	.4byte 0x00001152
_080EBE38:
	.4byte 0x00001142
_080EBE3C:
	ldr r0, _080EBF0C  @ =0x00000F92
	add r1, r5, r0
	add r1, r6, r1
	ldr r2, _080EBF10  @ =gUnknown_08178294
	ldr r3, _080EBF14  @ =0x00000FB2
	add r0, r5, r3
	add r0, r6, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r6, #0
	bl sub_080EC000
	add r0, r6, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	beq _080EBE68
	b _080EBFEE
_080EBE68:
	ldr r2, _080EBF18  @ =0x00001072
	add r0, r5, r2
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EBE7C
	ldr r3, _080EBF1C  @ =0x00001152
	add r0, r5, r3
	add r0, r6, r0
	strb r1, [r0]
_080EBE7C:
	add r0, r6, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	lsr r4, r0, #24
	cmp r4, #0
	beq _080EBE8C
	b _080EBFEE
_080EBE8C:
	add r0, r6, #0
	bl sub_080C5044
	add r0, r6, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	lsr r1, r0, #24
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	beq _080EBEAC
	ldr r2, _080EBF20  @ =0x00000F22
	add r0, r5, r2
	add r0, r6, r0
	strb r4, [r0]
_080EBEAC:
	mov r0, #12
	and r0, r0, r1
	cmp r0, #0
	beq _080EBEBC
	ldr r3, _080EBF24  @ =0x00000F12
	add r0, r5, r3
	add r0, r6, r0
	strb r4, [r0]
_080EBEBC:
	add r0, r6, #0
	bl sub_080C99DC
	ldr r0, _080EBF1C  @ =0x00001152
	add r1, r5, r0
	add r1, r6, r1
	ldrb r0, [r1]
	sub r0, r0, #2
	strb r0, [r1]
	ldrb r0, [r7]
	sub r0, r0, #1
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080EBEDC
	b _080EBFEE
_080EBEDC:
	strb r4, [r7]
	add r0, r6, #0
	bl sub_080C351C
	add r0, r6, #0
	mov r1, #13
	bl sub_080CF0AC
	ldr r1, _080EBF28  @ =0x00001002
	add r0, r5, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EBEFA
	b _080EBFEE
_080EBEFA:
	ldr r2, _080EBF2C  @ =0x000010B2
	add r0, r5, r2
	add r0, r6, r0
	mov r1, #16
	strb r1, [r0]
	ldr r3, _080EBF30  @ =0x00001052
	add r0, r5, r3
	b _080EBFDC
	.byte 0x00
	.byte 0x00
_080EBF0C:
	.4byte 0x00000F92
_080EBF10:
	.4byte gUnknown_08178294
_080EBF14:
	.4byte 0x00000FB2
_080EBF18:
	.4byte 0x00001072
_080EBF1C:
	.4byte 0x00001152
_080EBF20:
	.4byte 0x00000F22
_080EBF24:
	.4byte 0x00000F12
_080EBF28:
	.4byte 0x00001002
_080EBF2C:
	.4byte 0x000010B2
_080EBF30:
	.4byte 0x00001052
_080EBF34:
	ldr r1, _080EBF60  @ =0x00000FC2
	add r0, r5, r1
	add r0, r0, r6
	mov r10, r0
	ldrb r4, [r0]
	cmp r4, #0
	beq _080EBF68
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r6, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EBFEE
	ldr r2, _080EBF64  @ =0x00001172
	add r0, r5, r2
	add r0, r6, r0
	mov r1, #1
	strb r1, [r0]
	b _080EBFEE
_080EBF60:
	.4byte 0x00000FC2
_080EBF64:
	.4byte 0x00001172
_080EBF68:
	ldr r3, _080EBFC8  @ =0x00000F22
	add r0, r5, r3
	add r0, r0, r6
	mov r8, r0
	mov r1, #1
	strb r1, [r0]
	ldr r2, _080EBFCC  @ =0x00000F12
	add r0, r5, r2
	add r7, r6, r0
	strb r1, [r7]
	ldr r3, _080EBFD0  @ =0x00001172
	add r0, r5, r3
	add r0, r6, r0
	strb r4, [r0]
	add r0, r6, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EBFD8
	mov r0, r9
	strb r4, [r0]
	add r0, r6, #0
	mov r1, #21
	bl sub_080CF0AC
	add r0, r6, #0
	bl sub_080CF6C0
	ldr r1, _080EBFD4  @ =0x00000FE2
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #8
	strb r1, [r0]
	mov r0, #64
	mov r2, r10
	strb r0, [r2]
	strb r4, [r7]
	mov r3, r8
	strb r4, [r3]
	mov r0, sp
	add r0, r0, #2
	mov r1, sp
	add r1, r1, #3
	add r2, r6, #0
	bl sub_080C632C
	b _080EBFEE
_080EBFC8:
	.4byte 0x00000F22
_080EBFCC:
	.4byte 0x00000F12
_080EBFD0:
	.4byte 0x00001172
_080EBFD4:
	.4byte 0x00000FE2
_080EBFD8:
	ldr r1, _080EBFE4  @ =0x00000FA2
	add r0, r5, r1
_080EBFDC:
	add r0, r6, r0
	strb r4, [r0]
	b _080EBFEE
	.byte 0x00
	.byte 0x00
_080EBFE4:
	.4byte 0x00000FA2
_080EBFE8:
	add r0, r6, #0
	bl sub_080EC0FC
_080EBFEE:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EBC3C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EC000
sub_080EC000: @ 0x080EC000
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r7, _080EC024  @ =gRam
	ldr r1, _080EC028  @ =0x00000FE2
	add r0, r7, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EC02C
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r6, #0
	bl sub_080C632C
	b _080EC0D4
_080EC024:
	.4byte gRam
_080EC028:
	.4byte 0x00000FE2
_080EC02C:
	ldr r2, _080EC0DC  @ =0x00000F92
	add r4, r7, r2
	add r4, r6, r4
	ldrb r0, [r4]
	lsl r1, r0, #1
	add r1, r1, r0
	lsl r1, r1, #3
	ldr r0, _080EC0E0  @ =gUnknown_08178298
	add r1, r1, r0
	add r0, r6, #0
	mov r2, #3
	bl sub_080C9480
	ldrb r0, [r4]
	cmp r0, #7
	bhi _080EC0CE
	ldr r1, _080EC0E4  @ =0x000010D2
	add r0, r7, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EC0CE
	ldr r2, _080EC0E8  @ =0x00001082
	add r0, r7, r2
	add r0, r6, r0
	ldrb r3, [r0]
	ldr r0, _080EC0EC  @ =gUnknown_03003E74
	ldrh r0, [r0]
	lsl r0, r0, #3
	mov r2, #170
	lsl r2, r2, #3
	add r1, r7, r2
	add r5, r0, r1
	ldrh r4, [r5, #4]
	lsl r0, r4, #22
	lsr r0, r0, #22
	mov r2, #128
	lsl r2, r2, #1
	and r2, r2, r0
	ldr r0, _080EC0F0  @ =gUnknown_081783B8
	add r0, r3, r0
	ldrb r1, [r0]
	orr r1, r1, r2
	ldr r0, _080EC0F4  @ =0xFFFFFC00
	and r0, r0, r4
	orr r0, r0, r1
	strh r0, [r5, #4]
	ldr r0, _080EC0F8  @ =gUnknown_081783BC
	add r3, r3, r0
	ldrb r0, [r3]
	lsl r3, r0, #24
	lsr r1, r3, #30
	mov r0, #1
	and r1, r1, r0
	lsl r1, r1, #4
	ldrb r2, [r5, #3]
	sub r0, r0, #18
	and r0, r0, r2
	orr r0, r0, r1
	strb r0, [r5, #3]
	mov r1, #176
	lsl r1, r1, #4
	add r0, r7, r1
	ldrh r0, [r0]
	cmp r0, #0
	bne _080EC0CE
	lsr r0, r3, #28
	mov r4, #3
	and r0, r0, r4
	ldrb r1, [r5, #5]
	lsr r1, r1, #4
	bl sub_080C6570
	and r4, r4, r0
	lsl r4, r4, #2
	ldrb r1, [r5, #5]
	mov r0, #13
	neg r0, r0
	and r0, r0, r1
	orr r0, r0, r4
	strb r0, [r5, #5]
_080EC0CE:
	add r0, r6, #0
	bl sub_080C6230
_080EC0D4:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080EC0DC:
	.4byte 0x00000F92
_080EC0E0:
	.4byte gUnknown_08178298
_080EC0E4:
	.4byte 0x000010D2
_080EC0E8:
	.4byte 0x00001082
_080EC0EC:
	.4byte gUnknown_03003E74
_080EC0F0:
	.4byte gUnknown_081783B8
_080EC0F4:
	.4byte 0xFFFFFC00
_080EC0F8:
	.4byte gUnknown_081783BC
	THUMB_FUNC_END sub_080EC000

	THUMB_FUNC_START sub_080EC0FC
sub_080EC0FC: @ 0x080EC0FC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080EC1AC
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EC154
	add r0, r4, #0
	bl sub_080C4F98
	ldr r6, _080EC15C  @ =gRam
	ldr r1, _080EC160  @ =0x00001052
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080EC164  @ =0x00000FC2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r5, [r0]
	cmp r5, #0
	bne _080EC154
	add r0, r4, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EC154
	ldr r1, _080EC168  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	add r0, r4, #0
	bl sub_080C4F3C
_080EC154:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EC15C:
	.4byte gRam
_080EC160:
	.4byte 0x00001052
_080EC164:
	.4byte 0x00000FC2
_080EC168:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080EC0FC

	THUMB_FUNC_START sub_080EC16C
sub_080EC16C: @ 0x080EC16C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r4, _080EC19C  @ =gRam
	ldr r0, _080EC1A0  @ =0x00001002
	add r1, r4, r0
	add r1, r3, r1
	ldr r2, _080EC1A4  @ =0x00000EE2
	add r0, r4, r2
	add r0, r3, r0
	ldrb r2, [r0]
	mov r0, #16
	and r0, r0, r2
	strb r0, [r1]
	cmp r0, #0
	beq _080EC196
	ldr r1, _080EC1A8  @ =0x00001122
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #7
	strb r1, [r0]
_080EC196:
	pop {r4}
	pop {r0}
	bx r0
_080EC19C:
	.4byte gRam
_080EC1A0:
	.4byte 0x00001002
_080EC1A4:
	.4byte 0x00000EE2
_080EC1A8:
	.4byte 0x00001122
	THUMB_FUNC_END sub_080EC16C

	THUMB_FUNC_START sub_080EC1AC
sub_080EC1AC: @ 0x080EC1AC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080EC1D4  @ =gRam
	ldr r2, _080EC1D8  @ =0x00001052
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsr r1, r1, #2
	mov r2, #3
	and r1, r1, r2
	lsl r1, r1, #4
	ldr r2, _080EC1DC  @ =gUnknown_081783C0
	add r1, r1, r2
	mov r2, #2
	bl sub_080C9480
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EC1D4:
	.4byte gRam
_080EC1D8:
	.4byte 0x00001052
_080EC1DC:
	.4byte gUnknown_081783C0
	THUMB_FUNC_END sub_080EC1AC

	THUMB_FUNC_START sub_080EC1E0
sub_080EC1E0: @ 0x080EC1E0
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #20
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080EC280  @ =gRam
	ldr r1, _080EC284  @ =0x00000F72
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	cmp r1, #0
	beq _080EC200
	b _080EC300
_080EC200:
	ldr r2, _080EC288  @ =0x000010B2
	add r0, r6, r2
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080EC232
	ldr r2, _080EC28C  @ =0x00000F52
	add r0, r6, r2
	add r0, r5, r0
	strb r1, [r0]
	ldr r1, _080EC290  @ =0x00000FC2
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #32
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080C351C
	add r0, r5, #0
	bl sub_080C2FA8
	ldr r2, _080EC294  @ =0x00001082
	add r1, r6, r2
	add r1, r5, r1
	strb r0, [r1]
_080EC232:
	ldrb r4, [r4]
	cmp r4, #1
	bne _080EC246
	add r0, r5, #0
	bl sub_080EC810
	ldr r1, _080EC298  @ =0x00001052
	add r0, r6, r1
	add r0, r5, r0
	strb r4, [r0]
_080EC246:
	ldr r2, _080EC29C  @ =0x00000F92
	add r3, r6, r2
	add r3, r5, r3
	ldr r4, _080EC2A0  @ =gUnknown_08178408
	ldr r0, _080EC2A4  @ =0x00000FB2
	add r1, r6, r0
	add r1, r5, r1
	add r2, r2, #192
	add r0, r6, r2
	add r0, r5, r0
	ldrb r2, [r0]
	mov r0, #1
	and r0, r0, r2
	lsl r0, r0, #2
	ldrb r1, [r1]
	add r0, r0, r1
	add r0, r0, r4
	ldrb r0, [r0]
	strb r0, [r3]
	ldr r4, _080EC2A8  @ =0x00000FF2
	add r0, r6, r4
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #167
	beq _080EC2AC
	add r0, r5, #0
	bl sub_080EC8CC
	b _080EC2B2
_080EC280:
	.4byte gRam
_080EC284:
	.4byte 0x00000F72
_080EC288:
	.4byte 0x000010B2
_080EC28C:
	.4byte 0x00000F52
_080EC290:
	.4byte 0x00000FC2
_080EC294:
	.4byte 0x00001082
_080EC298:
	.4byte 0x00001052
_080EC29C:
	.4byte 0x00000F92
_080EC2A0:
	.4byte gUnknown_08178408
_080EC2A4:
	.4byte 0x00000FB2
_080EC2A8:
	.4byte 0x00000FF2
_080EC2AC:
	add r0, r5, #0
	bl sub_080EC000
_080EC2B2:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EC2C0
	b _080EC45E
_080EC2C0:
	add r0, r5, #0
	bl sub_080C1FD0
	add r0, r5, #0
	bl sub_080C5044
	add r0, r5, #0
	bl Sprite3_Move
	add r0, r5, #0
	bl sub_080C7A20
	ldr r1, _080EC2F4  @ =gUnknown_08178410
	ldr r0, _080EC2F8  @ =gRam
	ldr r2, _080EC2FC  @ =0x00000F52
	add r0, r0, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
	b _080EC45E
	.byte 0x00
	.byte 0x00
_080EC2F4:
	.4byte gUnknown_08178410
_080EC2F8:
	.4byte gRam
_080EC2FC:
	.4byte 0x00000F52
_080EC300:
	add r0, r5, #0
	bl sub_080EC9D4
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EC314
	b _080EC45E
_080EC314:
	ldr r4, _080EC390  @ =0x00000F92
	add r2, r6, r4
	add r2, r5, r2
	ldr r1, _080EC394  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #1
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	add r0, r5, #0
	bl sub_080C4F98
	add r0, r5, #0
	bl Sprite3_Move
	ldr r2, _080EC398  @ =0x00001622
	add r0, r6, r2
	ldrb r0, [r0]
	str r0, [sp]
	ldr r4, _080EC39C  @ =0x00001623
	add r0, r6, r4
	ldrb r0, [r0]
	str r0, [sp, #4]
	ldr r1, _080EC3A0  @ =0x00001624
	add r0, r6, r1
	ldrb r0, [r0]
	str r0, [sp, #8]
	add r2, r2, #3
	add r0, r6, r2
	ldrb r0, [r0]
	str r0, [sp, #12]
	mov r7, #0
	ldr r4, _080EC3A4  @ =gRam
	ldr r1, _080EC3A8  @ =0x00000F12
	add r0, r4, r1
	add r0, r5, r0
	str r0, [sp, #16]
_080EC360:
	ldr r4, [sp, #4]
	lsl r2, r4, #8
	ldr r0, [sp]
	orr r2, r2, r0
	ldr r1, [sp, #12]
	lsl r3, r1, #8
	ldr r4, [sp, #8]
	orr r3, r3, r4
	ldr r1, _080EC3A4  @ =gRam
	ldr r4, _080EC3AC  @ =0x00000F22
	add r0, r1, r4
	add r0, r5, r0
	ldrb r1, [r0]
	cmp r1, #0
	beq _080EC3BC
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080EC3B0
	mov r0, #8
	lsl r0, r0, r7
	add r0, r2, r0
	b _080EC3B6
	.byte 0x00
	.byte 0x00
_080EC390:
	.4byte 0x00000F92
_080EC394:
	.4byte 0x00000996
_080EC398:
	.4byte 0x00001622
_080EC39C:
	.4byte 0x00001623
_080EC3A0:
	.4byte 0x00001624
_080EC3A4:
	.4byte gRam
_080EC3A8:
	.4byte 0x00000F12
_080EC3AC:
	.4byte 0x00000F22
_080EC3B0:
	mov r0, #8
	lsl r0, r0, r7
	sub r0, r2, r0
_080EC3B6:
	lsl r0, r0, #16
	lsr r2, r0, #16
	b _080EC3DE
_080EC3BC:
	ldr r0, [sp, #16]
	ldrb r1, [r0]
	cmp r1, #0
	beq _080EC3DE
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080EC3D4
	mov r0, #8
	lsl r0, r0, r7
	add r0, r3, r0
	b _080EC3DA
_080EC3D4:
	mov r0, #8
	lsl r0, r0, r7
	sub r0, r3, r0
_080EC3DA:
	lsl r0, r0, #16
	lsr r3, r0, #16
_080EC3DE:
	ldr r4, _080EC470  @ =gRam
	ldr r1, _080EC474  @ =0x00001622
	add r1, r1, r4
	mov r10, r1
	strb r2, [r1]
	lsr r0, r2, #8
	ldr r2, _080EC478  @ =0x00001623
	add r2, r2, r4
	mov r9, r2
	strb r0, [r2]
	ldr r0, _080EC47C  @ =0x00001624
	add r0, r0, r4
	mov r8, r0
	strb r3, [r0]
	lsr r0, r3, #8
	ldr r1, _080EC480  @ =0x00001625
	add r6, r4, r1
	strb r0, [r6]
	add r0, r5, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EC41E
	ldr r2, _080EC484  @ =0x00000FA2
	add r0, r4, r2
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080C444C
_080EC41E:
	add r7, r7, #1
	cmp r7, #1
	ble _080EC360
	mov r2, sp
	ldrb r0, [r2]
	mov r2, r10
	strb r0, [r2]
	mov r1, sp
	ldrb r2, [r1, #4]
	mov r1, r9
	strb r2, [r1]
	mov r0, sp
	ldrb r1, [r0, #8]
	mov r0, r8
	strb r1, [r0]
	mov r2, sp
	ldrb r2, [r2, #12]
	strb r2, [r6]
	add r0, r5, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EC45E
	ldr r1, _080EC484  @ =0x00000FA2
	add r0, r4, r1
	add r0, r5, r0
	mov r2, #0
	strb r2, [r0]
	add r0, r5, #0
	bl sub_080C444C
_080EC45E:
	add sp, sp, #20
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EC470:
	.4byte gRam
_080EC474:
	.4byte 0x00001622
_080EC478:
	.4byte 0x00001623
_080EC47C:
	.4byte 0x00001624
_080EC480:
	.4byte 0x00001625
_080EC484:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080EC1E0

	THUMB_FUNC_START sub_080EC488
sub_080EC488: @ 0x080EC488
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080EC4F0  @ =gRam
	ldr r1, _080EC4F4  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080EC4E8
	bl GetRandomInt
	ldr r2, _080EC4F8  @ =gUnknown_0817841C
	mov r1, #3
	and r1, r1, r0
	add r1, r1, r2
	ldrb r0, [r1]
	strb r0, [r5]
	ldr r0, _080EC4FC  @ =0x00000F52
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EC500  @ =0x00000FB2
	add r3, r6, r1
	add r3, r4, r3
	add r1, r1, #208
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r3]
	ldr r0, _080EC504  @ =0x00000F22
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080EC508  @ =gUnknown_08178420
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EC50C  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080EC510  @ =gUnknown_08178424
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080EC4E8:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EC4F0:
	.4byte gRam
_080EC4F4:
	.4byte 0x00000FC2
_080EC4F8:
	.4byte gUnknown_0817841C
_080EC4FC:
	.4byte 0x00000F52
_080EC500:
	.4byte 0x00000FB2
_080EC504:
	.4byte 0x00000F22
_080EC508:
	.4byte gUnknown_08178420
_080EC50C:
	.4byte 0x00000F12
_080EC510:
	.4byte gUnknown_08178424
	THUMB_FUNC_END sub_080EC488

	THUMB_FUNC_START sub_080EC514
sub_080EC514: @ 0x080EC514
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r0, #16
	mov r10, r0
	mov r1, #0
	mov r9, r1
	ldr r6, _080EC568  @ =gRam
	ldr r2, _080EC56C  @ =0x00001042
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EC5EC
	ldr r1, _080EC570  @ =0x00000FC2
	add r0, r6, r1
	add r7, r5, r0
	ldrb r0, [r7]
	cmp r0, #0
	beq _080EC57C
	ldr r2, _080EC574  @ =0x000010A2
	add r0, r6, r2
	add r1, r5, r0
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	cmp r0, #0
	bge _080EC5E6
	mov r0, #11
	strb r0, [r1]
	ldr r0, _080EC578  @ =0x00001052
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080EC5E6
_080EC568:
	.4byte gRam
_080EC56C:
	.4byte 0x00001042
_080EC570:
	.4byte 0x00000FC2
_080EC574:
	.4byte 0x000010A2
_080EC578:
	.4byte 0x00001052
_080EC57C:
	mov r1, #1
	mov r8, r1
	ldr r2, _080EC660  @ =0x00000FF2
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #166
	bne _080EC5D8
	ldr r0, _080EC664  @ =0x00000FB2
	add r4, r6, r0
	add r4, r5, r4
	add r0, r5, #0
	bl sub_080C2FA8
	ldrb r1, [r4]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r1, r0
	bne _080EC5D8
	mov r1, #161
	lsl r1, r1, #4
	add r0, r6, r1
	ldr r2, _080EC668  @ =0x000010F2
	add r1, r6, r2
	add r1, r5, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080EC5D8
	ldr r0, _080EC66C  @ =0x00000F52
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r1, #48
	strb r1, [r7]
	ldr r2, _080EC670  @ =0x00000FD2
	add r0, r6, r2
	add r0, r5, r0
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080C351C
	mov r0, #0
	mov r8, r0
_080EC5D8:
	mov r1, r8
	cmp r1, #0
	beq _080EC5E6
	mov r2, #32
	mov r10, r2
	mov r0, #1
	mov r9, r0
_080EC5E6:
	mov r1, r9
	cmp r1, #0
	beq _080EC650
_080EC5EC:
	ldr r4, _080EC674  @ =gRam
	ldr r2, _080EC678  @ =0x00000FC2
	add r0, r4, r2
	add r7, r5, r0
	mov r0, #0
	mov r8, r0
	mov r1, r10
	strb r1, [r7]
	bl GetRandomInt
	ldr r2, _080EC67C  @ =0x00001082
	add r1, r4, r2
	add r6, r5, r1
	ldr r3, _080EC680  @ =gUnknown_08178400
	sub r2, r2, #208
	add r1, r4, r2
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #1
	mov r2, #1
	and r2, r2, r0
	orr r1, r1, r2
	add r1, r1, r3
	ldrb r0, [r1]
	strb r0, [r6]
	ldr r1, _080EC66C  @ =0x00000F52
	add r0, r4, r1
	add r0, r5, r0
	mov r2, r8
	strb r2, [r0]
	ldr r0, _080EC684  @ =0x00000F82
	add r4, r4, r0
	add r1, r5, r4
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #4
	bne _080EC64A
	strb r2, [r1]
	add r0, r5, #0
	bl sub_080C2FA8
	strb r0, [r6]
	mov r0, #24
	strb r0, [r7]
_080EC64A:
	add r0, r5, #0
	bl sub_080C351C
_080EC650:
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EC660:
	.4byte 0x00000FF2
_080EC664:
	.4byte 0x00000FB2
_080EC668:
	.4byte 0x000010F2
_080EC66C:
	.4byte 0x00000F52
_080EC670:
	.4byte 0x00000FD2
_080EC674:
	.4byte gRam
_080EC678:
	.4byte 0x00000FC2
_080EC67C:
	.4byte 0x00001082
_080EC680:
	.4byte gUnknown_08178400
_080EC684:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080EC514

	THUMB_FUNC_START sub_080EC688
sub_080EC688: @ 0x080EC688
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r10, r0
	mov r0, #165
	mov r1, r10
	bl sub_080CA538
	add r7, r0, #0
	cmp r7, #0
	bge _080EC6AA
	b _080EC7B0
_080EC6AA:
	ldr r3, _080EC7C4  @ =gRam
	ldr r1, _080EC7C8  @ =0x00000FB2
	add r0, r3, r1
	add r0, r0, r10
	ldrb r6, [r0]
	mov r4, #150
	lsl r4, r4, #4
	add r1, r3, r4
	ldr r0, _080EC7CC  @ =gUnknown_08178430
	add r0, r6, r0
	ldrb r0, [r0]
	ldrh r5, [r1]
	add r5, r5, r0
	ldr r0, _080EC7D0  @ =gUnknown_08178434
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r5, r5, r0
	lsl r5, r5, #16
	lsr r0, r5, #16
	mov r9, r0
	add r4, r4, #4
	add r1, r3, r4
	ldr r0, _080EC7D4  @ =gUnknown_08178438
	add r0, r6, r0
	ldrb r0, [r0]
	ldrh r4, [r1]
	add r4, r4, r0
	ldr r0, _080EC7D8  @ =gUnknown_0817843C
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r4, r4, r0
	lsl r4, r4, #16
	lsr r0, r4, #16
	mov r8, r0
	mov r0, r10
	mov r1, #99
	str r3, [sp]
	bl sub_080CF140
	lsl r0, r7, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r3, [sp]
	ldr r1, _080EC7DC  @ =0x00000EE2
	add r0, r3, r1
	add r0, r7, r0
	mov r1, r9
	strb r1, [r0]
	ldr r1, _080EC7E0  @ =0x00000F02
	add r0, r3, r1
	add r0, r7, r0
	lsr r5, r5, #24
	strb r5, [r0]
	sub r1, r1, #48
	add r0, r3, r1
	add r0, r7, r0
	mov r1, r8
	strb r1, [r0]
	ldr r1, _080EC7E4  @ =0x00000EF2
	add r0, r3, r1
	add r0, r7, r0
	lsr r4, r4, #24
	strb r4, [r0]
	ldr r4, _080EC7E8  @ =0x00000F22
	add r1, r3, r4
	add r1, r7, r1
	ldr r0, _080EC7EC  @ =gUnknown_08178428
	add r0, r6, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EC7F0  @ =0x00000F12
	add r1, r3, r0
	add r1, r7, r1
	ldr r0, _080EC7F4  @ =gUnknown_0817842C
	add r6, r6, r0
	ldrb r0, [r6]
	strb r0, [r1]
	ldr r4, _080EC7F8  @ =0x00001032
	add r1, r3, r4
	add r1, r7, r1
	ldrb r2, [r1]
	mov r0, #64
	orr r0, r0, r2
	strb r0, [r1]
	ldr r1, _080EC7FC  @ =0x00000E75
	add r0, r3, r1
	add r0, r7, r0
	mov r1, #64
	strb r1, [r0]
	sub r4, r4, #32
	add r2, r3, r4
	add r2, r7, r2
	mov r1, #33
	strb r1, [r2]
	sub r4, r4, #160
	add r0, r3, r4
	add r0, r7, r0
	strb r1, [r0]
	ldr r1, _080EC800  @ =0x00001122
	add r0, r3, r1
	add r0, r7, r0
	mov r1, #2
	strb r1, [r0]
	ldr r4, _080EC804  @ =0x00001132
	add r0, r3, r4
	add r0, r7, r0
	mov r1, #20
	strb r1, [r0]
	add r4, r4, #64
	add r0, r3, r4
	add r0, r7, r0
	strb r1, [r0]
	ldr r1, _080EC808  @ =0x00000EA5
	add r0, r3, r1
	add r0, r7, r0
	mov r1, #37
	strb r1, [r0]
	mov r0, #1
	strb r0, [r2]
	ldr r0, _080EC80C  @ =gUnknown_0200233E
	ldrb r0, [r0]
	cmp r0, #2
	bls _080EC7B0
	add r4, r4, #64
	add r0, r3, r4
	add r0, r7, r0
	mov r1, #32
	strb r1, [r0]
_080EC7B0:
	add r0, r7, #0
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080EC7C4:
	.4byte gRam
_080EC7C8:
	.4byte 0x00000FB2
_080EC7CC:
	.4byte gUnknown_08178430
_080EC7D0:
	.4byte gUnknown_08178434
_080EC7D4:
	.4byte gUnknown_08178438
_080EC7D8:
	.4byte gUnknown_0817843C
_080EC7DC:
	.4byte 0x00000EE2
_080EC7E0:
	.4byte 0x00000F02
_080EC7E4:
	.4byte 0x00000EF2
_080EC7E8:
	.4byte 0x00000F22
_080EC7EC:
	.4byte gUnknown_08178428
_080EC7F0:
	.4byte 0x00000F12
_080EC7F4:
	.4byte gUnknown_0817842C
_080EC7F8:
	.4byte 0x00001032
_080EC7FC:
	.4byte 0x00000E75
_080EC800:
	.4byte 0x00001122
_080EC804:
	.4byte 0x00001132
_080EC808:
	.4byte 0x00000EA5
_080EC80C:
	.4byte gUnknown_0200233E
	THUMB_FUNC_END sub_080EC688

	THUMB_FUNC_START sub_080EC810
sub_080EC810: @ 0x080EC810
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r7, r0, #24
	mov r0, #167
	add r1, r7, #0
	bl sub_080CA538
	add r6, r0, #0
	cmp r6, #0
	blt _080EC89C
	ldr r5, _080EC8A4  @ =gRam
	ldr r1, _080EC8A8  @ =0x00000F62
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #1
	strb r1, [r0]
	lsl r4, r6, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080CAE50
	add r0, r4, #0
	mov r1, #32
	bl sub_080C35FC
	ldr r2, _080EC8AC  @ =0x00001012
	add r0, r5, r2
	add r0, r6, r0
	mov r1, #33
	strb r1, [r0]
	ldr r2, _080EC8B0  @ =0x00001172
	add r0, r5, r2
	add r0, r6, r0
	strb r1, [r0]
	ldr r0, _080EC8B4  @ =0x00001032
	add r1, r5, r0
	add r1, r6, r1
	ldrb r2, [r1]
	mov r0, #32
	orr r0, r0, r2
	strb r0, [r1]
	ldr r1, _080EC8B8  @ =0x00000E75
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #64
	strb r1, [r0]
	ldr r2, _080EC8BC  @ =0x00000FC2
	add r0, r5, r2
	add r0, r6, r0
	mov r1, #16
	strb r1, [r0]
	ldr r1, _080EC8C0  @ =0x00001132
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #20
	strb r1, [r0]
	ldr r2, _080EC8C4  @ =0x00001122
	add r0, r5, r2
	add r0, r6, r0
	mov r1, #7
	strb r1, [r0]
	ldr r0, _080EC8C8  @ =0x00000EA5
	add r5, r5, r0
	add r5, r6, r5
	mov r0, #32
	strb r0, [r5]
	add r0, r7, #0
	mov r1, #104
	bl sub_080CF0AC
_080EC89C:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EC8A4:
	.4byte gRam
_080EC8A8:
	.4byte 0x00000F62
_080EC8AC:
	.4byte 0x00001012
_080EC8B0:
	.4byte 0x00001172
_080EC8B4:
	.4byte 0x00001032
_080EC8B8:
	.4byte 0x00000E75
_080EC8BC:
	.4byte 0x00000FC2
_080EC8C0:
	.4byte 0x00001132
_080EC8C4:
	.4byte 0x00001122
_080EC8C8:
	.4byte 0x00000EA5
	THUMB_FUNC_END sub_080EC810

	THUMB_FUNC_START sub_080EC8CC
sub_080EC8CC: @ 0x080EC8CC
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	ldr r7, _080EC96C  @ =gRam
	ldr r1, _080EC970  @ =0x00000F92
	add r0, r7, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r1, r0, #1
	add r1, r1, r0
	lsl r1, r1, #3
	ldr r0, _080EC974  @ =gUnknown_08178440
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #3
	bl sub_080C9480
	ldr r2, _080EC978  @ =0x000010D2
	add r0, r7, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EC962
	ldr r1, _080EC97C  @ =0x00001082
	add r0, r7, r1
	add r0, r4, r0
	ldrb r5, [r0]
	ldr r0, _080EC980  @ =gUnknown_03003E74
	ldrh r0, [r0]
	lsl r0, r0, #3
	mov r2, #170
	lsl r2, r2, #3
	add r1, r7, r2
	add r6, r0, r1
	ldr r1, _080EC984  @ =0x00000FD2
	add r0, r7, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EC928
	add r0, r5, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
_080EC928:
	ldrh r3, [r6, #4]
	lsl r0, r3, #22
	lsr r0, r0, #22
	mov r2, #128
	lsl r2, r2, #1
	and r2, r2, r0
	ldr r0, _080EC988  @ =gUnknown_08178500
	add r0, r5, r0
	ldrb r1, [r0]
	orr r1, r1, r2
	ldr r0, _080EC98C  @ =0xFFFFFC00
	and r0, r0, r3
	orr r0, r0, r1
	strh r0, [r6, #4]
	ldr r0, _080EC990  @ =gUnknown_08178508
	add r0, r5, r0
	ldrb r1, [r0]
	lsr r1, r1, #6
	mov r0, #1
	and r1, r1, r0
	lsl r1, r1, #4
	ldrb r2, [r6, #3]
	sub r0, r0, #18
	and r0, r0, r2
	orr r0, r0, r1
	strb r0, [r6, #3]
	mov r0, r8
	bl sub_080C6230
_080EC962:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080EC96C:
	.4byte gRam
_080EC970:
	.4byte 0x00000F92
_080EC974:
	.4byte gUnknown_08178440
_080EC978:
	.4byte 0x000010D2
_080EC97C:
	.4byte 0x00001082
_080EC980:
	.4byte gUnknown_03003E74
_080EC984:
	.4byte 0x00000FD2
_080EC988:
	.4byte gUnknown_08178500
_080EC98C:
	.4byte 0xFFFFFC00
_080EC990:
	.4byte gUnknown_08178508
	THUMB_FUNC_END sub_080EC8CC

	THUMB_FUNC_START sub_080EC994
sub_080EC994: @ 0x080EC994
	bx lr
	THUMB_FUNC_END sub_080EC994

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EC998
sub_080EC998: @ 0x080EC998
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080EC9B8  @ =gRam
	ldr r1, _080EC9BC  @ =0x00000FC2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	cmp r1, #0
	beq _080EC9C0
	cmp r1, #24
	bne _080EC9C8
	add r0, r2, #0
	bl sub_080EC688
	b _080EC9C8
_080EC9B8:
	.4byte gRam
_080EC9BC:
	.4byte 0x00000FC2
_080EC9C0:
	ldr r4, _080EC9D0  @ =0x00000F52
	add r0, r3, r4
	add r0, r2, r0
	strb r1, [r0]
_080EC9C8:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EC9D0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EC998

	THUMB_FUNC_START sub_080EC9D4
sub_080EC9D4: @ 0x080EC9D4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080ECA00  @ =gRam
	ldr r3, _080ECA04  @ =0x00000FB2
	add r1, r2, r3
	add r1, r0, r1
	ldrb r1, [r1]
	sub r3, r3, #32
	add r2, r2, r3
	add r2, r0, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #4
	ldr r2, _080ECA08  @ =gUnknown_08178510
	add r1, r1, r2
	mov r2, #2
	bl sub_080C9480
	pop {r0}
	bx r0
_080ECA00:
	.4byte gRam
_080ECA04:
	.4byte 0x00000FB2
_080ECA08:
	.4byte gUnknown_08178510
	THUMB_FUNC_END sub_080EC9D4

	THUMB_FUNC_START sub_080ECA0C
sub_080ECA0C: @ 0x080ECA0C
	bx lr
	THUMB_FUNC_END sub_080ECA0C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080ECA10
sub_080ECA10: @ 0x080ECA10
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080EC1E0
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080ECA10

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080ECA20
sub_080ECA20: @ 0x080ECA20
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r1, _080ECB24  @ =gRam
	ldr r2, _080ECB28  @ =0x00000F62
	add r0, r1, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080ECA48
	ldr r3, _080ECB2C  @ =0x00000F52
	add r0, r1, r3
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080ECA56
_080ECA48:
	ldr r7, _080ECB30  @ =0x00000D94
	add r0, r1, r7
	add r0, r5, r0
	ldrb r2, [r0]
	mov r1, #48
	orr r1, r1, r2
	strb r1, [r0]
_080ECA56:
	add r0, r5, #0
	bl sub_080ED07C
	add r0, r5, #0
	bl Sprite3_CheckIfActive_Permissive
	lsl r0, r0, #24
	lsr r4, r0, #24
	cmp r4, #0
	beq _080ECA6C
	b _080ECD98
_080ECA6C:
	ldr r0, _080ECB24  @ =gRam
	ldr r2, _080ECB34  @ =0x00000FA2
	add r1, r0, r2
	add r1, r5, r1
	ldrb r1, [r1]
	add r6, r0, #0
	cmp r1, #9
	beq _080ECA7E
	b _080ECCE0
_080ECA7E:
	add r0, r5, #0
	bl Sprite3_Move
	add r0, r5, #0
	bl sub_080C2C4C
	ldr r3, _080ECB38  @ =0x00001152
	add r0, r6, r3
	add r2, r5, r0
	ldrb r0, [r2]
	sub r0, r0, #4
	strb r0, [r2]
	ldr r7, _080ECB3C  @ =0x00001142
	add r0, r6, r7
	add r3, r5, r0
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080ECACC
	strb r4, [r2]
	strb r4, [r3]
	ldr r1, _080ECB40  @ =0x00001642
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #1
	beq _080ECACC
	ldr r3, _080ECB28  @ =0x00000F62
	add r0, r6, r3
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080ECACC
	mov r0, #48
	strb r0, [r2]
	add r0, r5, #0
	mov r1, #56
	bl sub_080CF140
_080ECACC:
	ldr r6, _080ECB24  @ =gRam
	ldr r7, _080ECB44  @ =0x00001072
	add r0, r6, r7
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080ECAF2
	add r0, r5, #0
	bl sub_080E2614
	ldr r1, _080ECB2C  @ =0x00000F52
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	ldr r2, _080ECB48  @ =0x000010A2
	add r0, r6, r2
	add r0, r5, r0
	strb r1, [r0]
_080ECAF2:
	add r0, r5, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	beq _080ECB00
	b _080ECD98
_080ECB00:
	ldr r3, _080ECB28  @ =0x00000F62
	add r0, r6, r3
	add r2, r5, r0
	ldrb r1, [r2]
	add r7, r1, #0
	cmp r7, #0
	bne _080ECB10
	b _080ECC28
_080ECB10:
	ldr r7, _080ECB40  @ =0x00001642
	add r0, r6, r7
	ldrb r0, [r0]
	cmp r0, #1
	bne _080ECB4C
	add r0, r5, #0
	bl sub_080ECE4C
	b _080ECD98
	.byte 0x00
	.byte 0x00
_080ECB24:
	.4byte gRam
_080ECB28:
	.4byte 0x00000F62
_080ECB2C:
	.4byte 0x00000F52
_080ECB30:
	.4byte 0x00000D94
_080ECB34:
	.4byte 0x00000FA2
_080ECB38:
	.4byte 0x00001152
_080ECB3C:
	.4byte 0x00001142
_080ECB40:
	.4byte 0x00001642
_080ECB44:
	.4byte 0x00001072
_080ECB48:
	.4byte 0x000010A2
_080ECB4C:
	add r0, r5, #0
	bl sub_080C5044
	ldr r1, _080ECB98  @ =0x00000F52
	add r0, r6, r1
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080ECBB8
	ldr r2, _080ECB9C  @ =0x00000EE2
	add r0, r6, r2
	add r0, r5, r0
	ldr r3, _080ECBA0  @ =gUnknown_02003040
	add r1, r5, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r7, _080ECBA4  @ =0x00000F02
	add r0, r6, r7
	add r0, r5, r0
	ldr r2, _080ECBA8  @ =gUnknown_02003050
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r3, _080ECBAC  @ =0x00000ED2
	add r0, r6, r3
	add r0, r5, r0
	ldr r7, _080ECBB0  @ =gUnknown_02003060
	add r1, r5, r7
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080ECBB4  @ =0x00000EF2
	add r0, r6, r1
	add r0, r5, r0
	add r2, r2, #32
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	b _080ECD98
_080ECB98:
	.4byte 0x00000F52
_080ECB9C:
	.4byte 0x00000EE2
_080ECBA0:
	.4byte gUnknown_02003040
_080ECBA4:
	.4byte 0x00000F02
_080ECBA8:
	.4byte gUnknown_02003050
_080ECBAC:
	.4byte 0x00000ED2
_080ECBB0:
	.4byte gUnknown_02003060
_080ECBB4:
	.4byte 0x00000EF2
_080ECBB8:
	add r0, r5, #0
	bl sub_080ECDC4
	add r0, r5, #0
	bl sub_080C1F70
	ldr r3, _080ECC14  @ =0x00000968
	add r2, r6, r3
	ldr r7, _080ECC18  @ =0x00001622
	add r0, r6, r7
	ldrb r1, [r0]
	ldr r3, _080ECC1C  @ =0x00001623
	add r0, r6, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	add r0, r0, #2
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #3
	bls _080ECBE8
	b _080ECD98
_080ECBE8:
	ldr r7, _080ECC20  @ =0x0000096C
	add r2, r6, r7
	ldr r1, _080ECC24  @ =0x00001624
	add r0, r6, r1
	ldrb r1, [r0]
	add r3, r3, #2
	add r0, r6, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	add r0, r0, #2
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #3
	bls _080ECC0C
	b _080ECD98
_080ECC0C:
	ldrb r0, [r4]
	add r0, r0, #1
	b _080ECD96
	.byte 0x00
	.byte 0x00
_080ECC14:
	.4byte 0x00000968
_080ECC18:
	.4byte 0x00001622
_080ECC1C:
	.4byte 0x00001623
_080ECC20:
	.4byte 0x0000096C
_080ECC24:
	.4byte 0x00001624
_080ECC28:
	ldr r3, _080ECC90  @ =0x00000FC2
	add r0, r6, r3
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080ECCA0
	cmp r0, #64
	bne _080ECC40
	mov r0, #45
	mov r1, #0
	bl sub_0812A324
_080ECC40:
	ldrb r0, [r4]
	lsl r1, r0, #24
	lsr r0, r1, #24
	cmp r0, #63
	bhi _080ECC6E
	ldr r0, _080ECC94  @ =0x00000F22
	add r4, r6, r0
	add r4, r5, r4
	ldr r2, _080ECC98  @ =gUnknown_08178590
	lsr r0, r1, #25
	ldr r3, _080ECC9C  @ =0x000015DC
	add r1, r6, r3
	ldrb r1, [r1]
	eor r0, r0, r1
	mov r1, #1
	and r0, r0, r1
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r4]
	add r0, r5, #0
	bl Sprite3_MoveHoriz
	strb r7, [r4]
_080ECC6E:
	mov r0, sp
	add r1, r5, #0
	bl sub_080C4948
	add r0, r5, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080ECC84
	b _080ECD98
_080ECC84:
	bl sub_080AF16C
	bl sub_0809945C
	b _080ECD98
	.byte 0x00
	.byte 0x00
_080ECC90:
	.4byte 0x00000FC2
_080ECC94:
	.4byte 0x00000F22
_080ECC98:
	.4byte gUnknown_08178590
_080ECC9C:
	.4byte 0x000015DC
_080ECCA0:
	add r0, r1, #1
	strb r0, [r2]
	ldr r7, _080ECCD4  @ =0x00001012
	add r1, r6, r7
	add r1, r5, r1
	ldrb r2, [r1]
	mov r0, #127
	and r0, r0, r2
	sub r0, r0, #2
	strb r0, [r1]
	ldr r0, _080ECCD8  @ =0x00000E75
	add r1, r6, r0
	add r1, r5, r1
	ldrb r2, [r1]
	mov r0, #251
	and r0, r0, r2
	strb r0, [r1]
	ldr r2, _080ECCDC  @ =0x00001032
	add r1, r6, r2
	add r1, r5, r1
	ldrb r2, [r1]
	mov r0, #191
	and r0, r0, r2
	strb r0, [r1]
	b _080ECD98
	.byte 0x00
	.byte 0x00
_080ECCD4:
	.4byte 0x00001012
_080ECCD8:
	.4byte 0x00000E75
_080ECCDC:
	.4byte 0x00001032
_080ECCE0:
	ldr r3, _080ECD00  @ =0x00000FC2
	add r0, r6, r3
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080ECD0C
	ldr r7, _080ECD04  @ =0x00000F92
	add r1, r6, r7
	add r1, r5, r1
	ldr r2, _080ECD08  @ =gUnknown_08178598
	lsr r0, r0, #27
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080ECD98
_080ECD00:
	.4byte 0x00000FC2
_080ECD04:
	.4byte 0x00000F92
_080ECD08:
	.4byte gUnknown_08178598
_080ECD0C:
	ldr r0, _080ECDA8  @ =0x00001642
	add r1, r6, r0
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #1
	bne _080ECD5E
	mov r1, #5
	ldr r2, _080ECDAC  @ =0x00001022
	add r2, r2, r6
	mov r8, r2
	mov r2, #0
	ldr r3, _080ECDB0  @ =0x00000F22
	add r3, r3, r6
	mov r12, r3
	ldr r7, _080ECDB4  @ =0x00000F12
	add r7, r7, r6
	mov r9, r7
	mov r4, #48
	ldr r0, _080ECDB8  @ =0x00001152
	add r3, r6, r0
_080ECD3A:
	lsl r0, r1, #24
	asr r0, r0, #24
	mov r7, r8
	add r1, r0, r7
	strb r4, [r1]
	mov r7, r12
	add r1, r0, r7
	strb r2, [r1]
	mov r7, r9
	add r1, r0, r7
	strb r2, [r1]
	add r1, r0, r3
	strb r2, [r1]
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bge _080ECD3A
_080ECD5E:
	ldr r1, _080ECDBC  @ =0x00000FA2
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	ldr r2, _080ECDA8  @ =0x00001642
	add r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080ECD98
	mov r0, #234
	add r1, r5, #0
	bl sub_080CA538
	add r4, r0, #0
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r3, _080ECDB8  @ =0x00001152
	add r0, r6, r3
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	ldr r7, _080ECDC0  @ =0x00000F62
	add r0, r6, r7
	add r4, r4, r0
	mov r0, #1
_080ECD96:
	strb r0, [r4]
_080ECD98:
	add sp, sp, #4
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ECDA8:
	.4byte 0x00001642
_080ECDAC:
	.4byte 0x00001022
_080ECDB0:
	.4byte 0x00000F22
_080ECDB4:
	.4byte 0x00000F12
_080ECDB8:
	.4byte 0x00001152
_080ECDBC:
	.4byte 0x00000FA2
_080ECDC0:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080ECA20

	THUMB_FUNC_START sub_080ECDC4
sub_080ECDC4: @ 0x080ECDC4
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080ECE2C  @ =gRam
	ldr r1, _080ECE30  @ =gUnknown_02003040
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r2, _080ECE34  @ =0x00000968
	add r0, r5, r2
	strb r1, [r0]
	ldr r1, _080ECE38  @ =gUnknown_02003050
	add r0, r4, r1
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r5, r2
	strb r1, [r0]
	ldr r1, _080ECE3C  @ =gUnknown_02003060
	add r0, r4, r1
	ldrb r1, [r0]
	add r2, r2, #3
	add r0, r5, r2
	strb r1, [r0]
	ldr r1, _080ECE40  @ =gUnknown_02003070
	add r0, r4, r1
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r5, r2
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #16
	bl sub_080C2DCC
	ldr r1, _080ECE44  @ =0x00000F12
	add r0, r5, r1
	add r0, r4, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080ECE48  @ =0x00000F22
	add r0, r5, r1
	add r4, r4, r0
	add r2, r2, #1
	add r5, r5, r2
	ldrb r0, [r5]
	strb r0, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ECE2C:
	.4byte gRam
_080ECE30:
	.4byte gUnknown_02003040
_080ECE34:
	.4byte 0x00000968
_080ECE38:
	.4byte gUnknown_02003050
_080ECE3C:
	.4byte gUnknown_02003060
_080ECE40:
	.4byte gUnknown_02003070
_080ECE44:
	.4byte 0x00000F12
_080ECE48:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080ECDC4

	THUMB_FUNC_START sub_080ECE4C
sub_080ECE4C: @ 0x080ECE4C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	ldr r5, _080ECEA8  @ =gRam
	ldr r1, _080ECEAC  @ =0x00001122
	add r0, r5, r1
	add r0, r4, r0
	mov r2, #0
	mov r1, #7
	strb r1, [r0]
	ldr r0, _080ECEB0  @ =0x00000A2A
	add r6, r5, r0
	strh r2, [r6]
	ldr r1, _080ECEB4  @ =0x000010E2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080ECE8A
	mov r2, #1
	and r2, r2, r0
	ldr r3, _080ECEB8  @ =gUnknown_08178594
	add r0, r2, #2
	add r0, r0, r3
	ldrb r1, [r0]
	lsl r1, r1, #8
	add r2, r2, r3
	ldrb r0, [r2]
	add r0, r0, r1
	strh r0, [r6]
_080ECE8A:
	ldr r1, _080ECEBC  @ =gUnknown_081785A0
	ldr r2, _080ECEC0  @ =0x000010A2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ECEA8:
	.4byte gRam
_080ECEAC:
	.4byte 0x00001122
_080ECEB0:
	.4byte 0x00000A2A
_080ECEB4:
	.4byte 0x000010E2
_080ECEB8:
	.4byte gUnknown_08178594
_080ECEBC:
	.4byte gUnknown_081785A0
_080ECEC0:
	.4byte 0x000010A2
	THUMB_FUNC_END sub_080ECE4C

	THUMB_FUNC_START sub_080ECEC4
sub_080ECEC4: @ 0x080ECEC4
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C5044
	ldr r5, _080ECF4C  @ =gRam
	ldr r0, _080ECF50  @ =0x00000FC2
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080ECF54  @ =0x00001142
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	orr r0, r0, r1
	cmp r0, #0
	bne _080ECF46
	add r0, r4, #0
	mov r1, #32
	bl sub_080C35FC
	ldr r1, _080ECF58  @ =0x00001152
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	ldr r2, _080ECF5C  @ =0x000010A2
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080ECF60  @ =0x00000F72
	add r0, r5, r1
	add r0, r4, r0
	ldr r2, _080ECF64  @ =0x000016C4
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080ECF68  @ =0x00000F82
	add r0, r5, r1
	add r0, r4, r0
	add r2, r2, #1
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080ECF6C  @ =0x00001062
	add r0, r5, r1
	add r0, r4, r0
	sub r2, r2, #5
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080ECF70  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	add r2, r2, #1
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #108
	bl sub_080CF0AC
_080ECF46:
	pop {r4,r5}
	pop {r0}
	bx r0
_080ECF4C:
	.4byte gRam
_080ECF50:
	.4byte 0x00000FC2
_080ECF54:
	.4byte 0x00001142
_080ECF58:
	.4byte 0x00001152
_080ECF5C:
	.4byte 0x000010A2
_080ECF60:
	.4byte 0x00000F72
_080ECF64:
	.4byte 0x000016C4
_080ECF68:
	.4byte 0x00000F82
_080ECF6C:
	.4byte 0x00001062
_080ECF70:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080ECEC4

	THUMB_FUNC_START sub_080ECF74
sub_080ECF74: @ 0x080ECF74
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r6, #0
	ldr r5, _080ED048  @ =gRam
	ldr r0, _080ED04C  @ =0x00001152
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #3
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C7A48
	lsl r0, r0, #24
	cmp r0, #0
	bne _080ED018
	add r0, r4, #0
	bl sub_080C1F70
	ldr r1, _080ED050  @ =0x00000F72
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	mov r3, #150
	lsl r3, r3, #4
	add r2, r5, r3
	strb r0, [r2]
	ldr r7, _080ED054  @ =0x00000F82
	add r0, r5, r7
	add r0, r4, r0
	ldrb r1, [r0]
	add r3, r3, #1
	add r0, r5, r3
	strb r1, [r0]
	add r7, r7, #224
	add r0, r5, r7
	add r0, r4, r0
	ldrb r0, [r0]
	ldr r1, _080ED058  @ =0x00000964
	add r3, r5, r1
	strb r0, [r3]
	add r7, r7, #32
	add r0, r5, r7
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r7, _080ED05C  @ =0x00000965
	add r0, r5, r7
	strb r1, [r0]
	ldr r1, _080ED060  @ =0x00001622
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r7, _080ED064  @ =0x00001623
	add r0, r5, r7
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	add r0, r0, #16
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #31
	bhi _080ED014
	ldr r1, _080ED068  @ =0x00001624
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r2, _080ED06C  @ =0x00001625
	add r0, r5, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r3]
	sub r0, r0, r1
	add r0, r0, #16
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #31
	bhi _080ED014
	mov r6, #1
_080ED014:
	cmp r6, #0
	beq _080ED042
_080ED018:
	ldr r2, _080ED048  @ =gRam
	ldr r3, _080ED070  @ =0x000010A2
	add r1, r2, r3
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	mov r3, #0
	strb r0, [r1]
	ldr r7, _080ED074  @ =0x00000FC2
	add r0, r2, r7
	add r0, r4, r0
	mov r1, #16
	strb r1, [r0]
	ldr r1, _080ED078  @ =0x00000F22
	add r0, r2, r1
	add r0, r4, r0
	strb r3, [r0]
	sub r7, r7, #176
	add r2, r2, r7
	add r2, r4, r2
	strb r3, [r2]
_080ED042:
	pop {r4-r7}
	pop {r0}
	bx r0
_080ED048:
	.4byte gRam
_080ED04C:
	.4byte 0x00001152
_080ED050:
	.4byte 0x00000F72
_080ED054:
	.4byte 0x00000F82
_080ED058:
	.4byte 0x00000964
_080ED05C:
	.4byte 0x00000965
_080ED060:
	.4byte 0x00001622
_080ED064:
	.4byte 0x00001623
_080ED068:
	.4byte 0x00001624
_080ED06C:
	.4byte 0x00001625
_080ED070:
	.4byte 0x000010A2
_080ED074:
	.4byte 0x00000FC2
_080ED078:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080ECF74

	THUMB_FUNC_START sub_080ED07C
sub_080ED07C: @ 0x080ED07C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r9
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	beq _080ED0A2
	b _080ED1F8
_080ED0A2:
	ldr r1, _080ED208  @ =gRam
	ldr r2, _080ED20C  @ =0x00000F62
	add r0, r1, r2
	add r0, r0, r9
	ldrb r4, [r0]
	cmp r4, #0
	bne _080ED0C4
	ldr r3, _080ED210  @ =0x000009AD
	add r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #7
	beq _080ED0C4
	mov r0, r9
	bl sub_080C6340
	add r0, sp, #4
	strb r4, [r0]
_080ED0C4:
	mov r2, #3
	add r7, sp, #4
_080ED0C8:
	ldrb r1, [r7]
	ldr r4, _080ED214  @ =gUnknown_03003E74
	ldrh r0, [r4]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	lsl r2, r2, #24
	mov r8, r2
	mov r5, r8
	asr r5, r5, #24
	mov r8, r5
	lsl r3, r5, #1
	ldr r1, _080ED218  @ =gUnknown_030031C2
	add r1, r1, r9
	mov r10, r1
	ldrb r6, [r1]
	lsl r1, r6, #3
	add r3, r3, r1
	ldr r2, _080ED21C  @ =gUnknown_081785B0
	add r1, r3, r2
	ldrh r1, [r1]
	ldr r4, _080ED220  @ =gUnknown_03002B90
	ldrh r4, [r4]
	add r1, r1, r4
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080ED224  @ =gUnknown_081785E0
	add r3, r3, r2
	ldrh r2, [r3]
	ldr r5, _080ED228  @ =gUnknown_03002B94
	ldrh r5, [r5]
	add r2, r2, r5
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080ED22C  @ =gUnknown_08178610
	lsl r6, r6, #2
	add r6, r6, r8
	add r3, r6, r3
	ldrb r3, [r3]
	ldr r4, _080ED230  @ =gUnknown_08178628
	add r4, r6, r4
	ldrb r4, [r4]
	ldr r5, _080ED234  @ =gUnknown_03002B99
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080ED238  @ =gUnknown_08178640
	add r6, r6, r4
	ldrb r4, [r6]
	str r4, [sp]
	bl sub_080C6368
	mov r0, #1
	neg r0, r0
	add r8, r8, r0
	mov r1, r8
	lsl r1, r1, #24
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsr r2, r1, #24
	cmp r1, #0
	bge _080ED0C8
	ldr r2, _080ED208  @ =gRam
	mov r3, r10
	ldrb r0, [r3]
	cmp r0, #0
	bne _080ED1F8
	add r0, sp, #4
	ldrb r1, [r0]
	ldr r4, _080ED214  @ =gUnknown_03003E74
	ldrh r0, [r4]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r8, r0
	ldr r5, _080ED20C  @ =0x00000F62
	add r0, r2, r5
	add r0, r0, r9
	ldrb r0, [r0]
	cmp r0, #0
	beq _080ED184
	ldr r0, _080ED23C  @ =gUnknown_08178658
	mov r3, r9
	lsl r1, r3, #1
	add r1, r1, r0
	ldrh r0, [r1]
	lsr r0, r0, #2
	mov r8, r0
_080ED184:
	ldr r4, _080ED240  @ =0x00001142
	add r0, r2, r4
	add r0, r0, r9
	ldrb r7, [r0]
	cmp r7, #31
	bls _080ED192
	mov r7, #32
_080ED192:
	lsr r7, r7, #3
	ldr r0, _080ED218  @ =gUnknown_030031C2
	sub r0, r0, #192
	add r0, r0, r9
	ldrb r4, [r0]
	ldr r0, _080ED218  @ =gUnknown_030031C2
	sub r0, r0, #160
	add r0, r0, r9
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r4, r4, r0
	ldr r5, _080ED218  @ =gUnknown_030031C2
	ldr r1, _080ED244  @ =0xFFFFF9C6
	add r0, r5, r1
	ldrh r0, [r0]
	sub r4, r4, r0
	ldr r2, _080ED228  @ =gUnknown_03002B94
	strh r4, [r2]
	add r4, r4, #12
	lsl r4, r4, #16
	lsr r4, r4, #16
	ldr r3, _080ED248  @ =0xFFFFF9CE
	add r6, r5, r3
	ldr r5, _080ED24C  @ =0x0000FFF8
	add r1, r7, r5
	ldrh r0, [r6]
	add r1, r1, r0
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080ED250  @ =0x000025D4
	mov r5, #2
	str r5, [sp]
	mov r0, r8
	add r2, r4, #0
	bl sub_080C6368
	mov r0, r8
	add r0, r0, #1
	lsl r0, r0, #16
	lsr r0, r0, #16
	add r2, r7, #0
	sub r2, r2, #8
	ldrh r1, [r6]
	sub r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080ED254  @ =0x000065D4
	str r5, [sp]
	add r2, r4, #0
	bl sub_080C6368
_080ED1F8:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080ED208:
	.4byte gRam
_080ED20C:
	.4byte 0x00000F62
_080ED210:
	.4byte 0x000009AD
_080ED214:
	.4byte gUnknown_03003E74
_080ED218:
	.4byte gUnknown_030031C2
_080ED21C:
	.4byte gUnknown_081785B0
_080ED220:
	.4byte gUnknown_03002B90
_080ED224:
	.4byte gUnknown_081785E0
_080ED228:
	.4byte gUnknown_03002B94
_080ED22C:
	.4byte gUnknown_08178610
_080ED230:
	.4byte gUnknown_08178628
_080ED234:
	.4byte gUnknown_03002B99
_080ED238:
	.4byte gUnknown_08178640
_080ED23C:
	.4byte gUnknown_08178658
_080ED240:
	.4byte 0x00001142
_080ED244:
	.4byte 0xFFFFF9C6
_080ED248:
	.4byte 0xFFFFF9CE
_080ED24C:
	.4byte 0x0000FFF8
_080ED250:
	.4byte 0x000025D4
_080ED254:
	.4byte 0x000065D4
	THUMB_FUNC_END sub_080ED07C

	THUMB_FUNC_START sub_080ED258
sub_080ED258: @ 0x080ED258
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080ED2B4  @ =gRam
	ldr r1, _080ED2B8  @ =0x00000D4B
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080ED2AC
	bl sub_080ED80C
	mov r1, #5
	ldr r7, _080ED2BC  @ =gUnknown_02003040
	ldr r6, _080ED2C0  @ =gUnknown_08178690
	ldr r5, _080ED2C4  @ =gUnknown_02003060
	mov r3, #80
_080ED27A:
	lsl r0, r1, #24
	asr r0, r0, #24
	add r2, r0, r7
	add r1, r0, r6
	ldrb r1, [r1]
	strb r1, [r2]
	add r1, r0, r5
	strb r3, [r1]
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bge _080ED27A
	ldr r2, _080ED2B4  @ =gRam
	ldr r0, _080ED2C8  @ =0x00000D43
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080ED2B8  @ =0x00000D4B
	add r2, r2, r1
	add r2, r4, r2
	mov r0, #255
	strb r0, [r2]
_080ED2AC:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ED2B4:
	.4byte gRam
_080ED2B8:
	.4byte 0x00000D4B
_080ED2BC:
	.4byte gUnknown_02003040
_080ED2C0:
	.4byte gUnknown_08178690
_080ED2C4:
	.4byte gUnknown_02003060
_080ED2C8:
	.4byte 0x00000D43
	THUMB_FUNC_END sub_080ED258

	THUMB_FUNC_START sub_080ED2CC
sub_080ED2CC: @ 0x080ED2CC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080ED31C  @ =gRam
	ldr r1, _080ED320  @ =0x00000D4B
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080ED336
	mov r1, #5
	ldr r3, _080ED324  @ =0x00000D43
	add r0, r2, r3
	add r5, r4, r0
	add r3, r3, #24
	add r0, r2, r3
	add r3, r4, r0
_080ED2EE:
	lsl r0, r1, #24
	asr r2, r0, #24
	ldr r0, _080ED328  @ =gUnknown_02003060
	add r1, r2, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #192
	bne _080ED32C
	mov r0, #1
	strb r0, [r5]
	ldrb r0, [r3]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r3]
	bl sub_080ED80C
	add r0, r4, #0
	bl sub_080ED3D8
	b _080ED336
_080ED31C:
	.4byte gRam
_080ED320:
	.4byte 0x00000D4B
_080ED324:
	.4byte 0x00000D43
_080ED328:
	.4byte gUnknown_02003060
_080ED32C:
	sub r0, r2, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bge _080ED2EE
_080ED336:
	pop {r4,r5}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080ED2CC

	THUMB_FUNC_START sub_080ED33C
sub_080ED33C: @ 0x080ED33C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r3, _080ED37C  @ =gRam
	ldr r0, _080ED380  @ =0x00000D18
	add r1, r3, r0
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #32
	bne _080ED36E
	ldr r0, _080ED384  @ =0x00000D43
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080ED388  @ =0x00000D4B
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #64
	strb r1, [r0]
_080ED36E:
	add r0, r4, #0
	bl sub_080ED3D8
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ED37C:
	.4byte gRam
_080ED380:
	.4byte 0x00000D18
_080ED384:
	.4byte 0x00000D43
_080ED388:
	.4byte 0x00000D4B
	THUMB_FUNC_END sub_080ED33C

	THUMB_FUNC_START sub_080ED38C
sub_080ED38C: @ 0x080ED38C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r5, r2, #0
	ldr r4, _080ED3C8  @ =gRam
	ldr r0, _080ED3CC  @ =0x00000D18
	add r1, r4, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r3, #64
	bne _080ED3BC
	ldr r1, _080ED3D0  @ =0x00000D43
	add r0, r4, r1
	add r0, r2, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	ldr r1, _080ED3D4  @ =0x00000D4B
	add r0, r4, r1
	add r0, r2, r0
	strb r3, [r0]
_080ED3BC:
	add r0, r5, #0
	bl sub_080ED3D8
	pop {r4,r5}
	pop {r0}
	bx r0
_080ED3C8:
	.4byte gRam
_080ED3CC:
	.4byte 0x00000D18
_080ED3D0:
	.4byte 0x00000D43
_080ED3D4:
	.4byte 0x00000D4B
	THUMB_FUNC_END sub_080ED38C

	THUMB_FUNC_START sub_080ED3D8
sub_080ED3D8: @ 0x080ED3D8
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r4, #0
	ldr r3, _080ED470  @ =gRam
	ldr r1, _080ED474  @ =0x00000D5B
	add r0, r3, r1
	add r0, r6, r0
	ldrb r0, [r0]
	add r2, r0, #0
	mov r0, #128
	and r0, r0, r2
	cmp r0, #0
	beq _080ED3FE
	mov r4, #255
_080ED3FE:
	ldr r0, _080ED478  @ =0x00000D16
	add r1, r3, r0
	lsl r0, r4, #8
	orr r0, r0, r2
	ldrh r2, [r1]
	add r0, r0, r2
	mov r2, #0
	strh r0, [r1]
	ldr r4, _080ED47C  @ =0x000015F9
	add r0, r3, r4
	strb r2, [r0]
	mov r12, r3
	add r7, r0, #0
	mov r0, #255
	mov r9, r0
	ldr r1, _080ED480  @ =0x00000D18
	add r1, r1, r12
	mov r8, r1
	mov r2, #128
	lsl r2, r2, #1
	mov r10, r2
_080ED428:
	ldrb r0, [r7]
	lsl r0, r0, #1
	ldr r3, _080ED484  @ =gUnknown_08178696
	add r0, r0, r3
	ldrh r0, [r0]
	ldr r4, _080ED488  @ =gUnknown_03002F46
	ldrh r4, [r4]
	add r0, r0, r4
	lsl r0, r0, #16
	lsr r3, r0, #16
	mov r1, #128
	lsl r1, r1, #16
	add r0, r0, r1
	lsr r5, r0, #16
	add r0, r3, #0
	mov r2, r9
	and r0, r0, r2
	lsl r0, r0, #1
	ldr r4, _080ED48C  @ =gUnknown_08173F38
	add r0, r0, r4
	ldrh r1, [r0]
	add r0, r5, #0
	and r0, r0, r2
	lsl r0, r0, #1
	add r0, r0, r4
	ldrh r4, [r0]
	add r0, r1, #0
	mov r2, #255
	lsl r2, r2, #8
	and r0, r0, r2
	cmp r0, #0
	beq _080ED490
	mov r1, r8
	ldrb r0, [r1]
	b _080ED4AA
	.byte 0x00
	.byte 0x00
_080ED470:
	.4byte gRam
_080ED474:
	.4byte 0x00000D5B
_080ED478:
	.4byte 0x00000D16
_080ED47C:
	.4byte 0x000015F9
_080ED480:
	.4byte 0x00000D18
_080ED484:
	.4byte gUnknown_08178696
_080ED488:
	.4byte gUnknown_03002F46
_080ED48C:
	.4byte gUnknown_08173F38
_080ED490:
	mov r2, r9
	and r1, r1, r2
	mov r2, r8
	ldrb r0, [r2]
	mul r0, r1, r0
	lsl r0, r0, #16
	lsr r2, r0, #24
	lsr r0, r0, #23
	mov r1, #1
	and r0, r0, r1
	add r2, r2, r0
	lsl r2, r2, #24
	lsr r0, r2, #24
_080ED4AA:
	mov r1, r10
	and r3, r3, r1
	cmp r3, #0
	beq _080ED4B8
	lsl r0, r0, #24
	neg r0, r0
	lsr r0, r0, #24
_080ED4B8:
	lsl r0, r0, #24
	asr r0, r0, #8
	lsr r3, r0, #16
	add r0, r4, #0
	mov r2, #255
	lsl r2, r2, #8
	and r0, r0, r2
	cmp r0, #0
	beq _080ED4D0
	mov r4, r8
	ldrb r2, [r4]
	b _080ED4EA
_080ED4D0:
	mov r0, r9
	and r4, r4, r0
	mov r1, r8
	ldrb r0, [r1]
	mul r0, r4, r0
	lsl r0, r0, #16
	lsr r2, r0, #24
	lsr r0, r0, #23
	mov r1, #1
	and r0, r0, r1
	add r2, r2, r0
	lsl r2, r2, #24
	lsr r2, r2, #24
_080ED4EA:
	add r0, r5, #0
	mov r4, r10
	and r0, r0, r4
	cmp r0, #0
	beq _080ED4FA
	lsl r0, r2, #24
	neg r0, r0
	lsr r2, r0, #24
_080ED4FA:
	lsl r0, r2, #24
	asr r0, r0, #24
	lsl r1, r0, #3
	sub r1, r1, r0
	lsl r1, r1, #13
	ldr r0, _080ED578  @ =0x00000D23
	add r0, r0, r12
	add r0, r6, r0
	ldrb r2, [r0]
	add r2, r2, r3
	ldr r0, _080ED57C  @ =0x00000D2B
	add r0, r0, r12
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r0, _080ED580  @ =0x00000D33
	add r0, r0, r12
	add r0, r6, r0
	lsr r1, r1, #16
	ldrb r0, [r0]
	add r1, r1, r0
	ldr r0, _080ED584  @ =0x00000D3B
	add r0, r0, r12
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #4
	ldrb r0, [r7]
	ldr r3, _080ED588  @ =gUnknown_02003040
	add r0, r0, r3
	strb r2, [r0]
	ldrb r0, [r7]
	ldr r4, _080ED58C  @ =gUnknown_02003050
	add r0, r0, r4
	lsr r2, r2, #8
	strb r2, [r0]
	ldrb r0, [r7]
	ldr r2, _080ED590  @ =gUnknown_02003060
	add r0, r0, r2
	strb r1, [r0]
	ldrb r0, [r7]
	add r3, r3, #48
	add r0, r0, r3
	lsr r1, r1, #8
	strb r1, [r0]
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #6
	beq _080ED568
	b _080ED428
_080ED568:
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ED578:
	.4byte 0x00000D23
_080ED57C:
	.4byte 0x00000D2B
_080ED580:
	.4byte 0x00000D33
_080ED584:
	.4byte 0x00000D3B
_080ED588:
	.4byte gUnknown_02003040
_080ED58C:
	.4byte gUnknown_02003050
_080ED590:
	.4byte gUnknown_02003060
	THUMB_FUNC_END sub_080ED3D8

	THUMB_FUNC_START sub_080ED594
sub_080ED594: @ 0x080ED594
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080ED830
	lsl r0, r0, #24
	cmp r0, #0
	bne _080ED5C2
	ldr r2, _080ED5C8  @ =gRam
	ldr r1, _080ED5CC  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r0, _080ED5D0  @ =0x00001642
	add r2, r2, r0
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080C35C0
_080ED5C2:
	pop {r4}
	pop {r0}
	bx r0
_080ED5C8:
	.4byte gRam
_080ED5CC:
	.4byte 0x00000FC2
_080ED5D0:
	.4byte 0x00001642
	THUMB_FUNC_END sub_080ED594

	THUMB_FUNC_START sub_080ED5D4
sub_080ED5D4: @ 0x080ED5D4
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r2, r0, #0
	ldr r3, _080ED60C  @ =gRam
	ldr r1, _080ED610  @ =0x00000D4B
	add r0, r3, r1
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080ED5EE
	sub r0, r0, #1
	strb r0, [r1]
_080ED5EE:
	ldr r1, _080ED614  @ =gUnknown_08178670
	ldr r4, _080ED618  @ =0x00000D43
	add r0, r3, r4
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r2, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ED60C:
	.4byte gRam
_080ED610:
	.4byte 0x00000D4B
_080ED614:
	.4byte gUnknown_08178670
_080ED618:
	.4byte 0x00000D43
	THUMB_FUNC_END sub_080ED5D4

	THUMB_FUNC_START sub_080ED61C
sub_080ED61C: @ 0x080ED61C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080ED648  @ =gRam
	ldr r2, _080ED64C  @ =0x00000FC2
	add r1, r3, r2
	add r1, r0, r1
	mov r4, #0
	mov r2, #35
	strb r2, [r1]
	ldr r2, _080ED650  @ =0x000010C2
	add r1, r3, r2
	add r1, r0, r1
	strb r4, [r1]
	ldr r1, _080ED654  @ =0x00000A2A
	add r3, r3, r1
	strh r4, [r3]
	bl sub_080ED8B8
	pop {r4}
	pop {r0}
	bx r0
_080ED648:
	.4byte gRam
_080ED64C:
	.4byte 0x00000FC2
_080ED650:
	.4byte 0x000010C2
_080ED654:
	.4byte 0x00000A2A
	THUMB_FUNC_END sub_080ED61C

	THUMB_FUNC_START sub_080ED658
sub_080ED658: @ 0x080ED658
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080ED688  @ =gRam
	ldr r1, _080ED68C  @ =0x00001152
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #0
	strb r1, [r0]
	ldr r1, _080ED690  @ =0x00000FC2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080ED682
	ldr r0, _080ED694  @ =0x000010A2
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080ED682:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ED688:
	.4byte gRam
_080ED68C:
	.4byte 0x00001152
_080ED690:
	.4byte 0x00000FC2
_080ED694:
	.4byte 0x000010A2
	THUMB_FUNC_END sub_080ED658

	THUMB_FUNC_START sub_080ED698
sub_080ED698: @ 0x080ED698
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080ED6E8  @ =gRam
	ldr r1, _080ED6EC  @ =0x00001152
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #152
	strb r1, [r0]
	ldr r2, _080ED6F0  @ =0x00001142
	add r0, r6, r2
	add r0, r5, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080ED6E0
	ldr r2, _080ED6F4  @ =0x00000FC2
	add r0, r6, r2
	add r0, r5, r0
	mov r4, #32
	strb r4, [r0]
	add r2, r2, #224
	add r0, r6, r2
	add r0, r5, r0
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #41
	bl sub_080CF0AC
	ldr r1, _080ED6F8  @ =0x000010E2
	add r0, r6, r1
	add r0, r5, r0
	strb r4, [r0]
_080ED6E0:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ED6E8:
	.4byte gRam
_080ED6EC:
	.4byte 0x00001152
_080ED6F0:
	.4byte 0x00001142
_080ED6F4:
	.4byte 0x00000FC2
_080ED6F8:
	.4byte 0x000010E2
	THUMB_FUNC_END sub_080ED698

	THUMB_FUNC_START sub_080ED6FC
sub_080ED6FC: @ 0x080ED6FC
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080ED740  @ =gRam
	ldr r1, _080ED744  @ =0x00000F62
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080ED73A
	ldr r1, _080ED748  @ =0x00000D23
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #120
	strb r1, [r0]
	ldr r1, _080ED74C  @ =0x00000D5B
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #255
	strb r1, [r0]
	ldr r0, _080ED750  @ =0x00000D18
	add r1, r3, r0
	mov r0, #64
	strb r0, [r1]
	ldr r0, _080ED754  @ =0x00000D16
	add r1, r3, r0
	mov r0, #224
	lsl r0, r0, #1
	strh r0, [r1]
	add r0, r2, #0
	bl sub_080ED790
_080ED73A:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ED740:
	.4byte gRam
_080ED744:
	.4byte 0x00000F62
_080ED748:
	.4byte 0x00000D23
_080ED74C:
	.4byte 0x00000D5B
_080ED750:
	.4byte 0x00000D18
_080ED754:
	.4byte 0x00000D16
	THUMB_FUNC_END sub_080ED6FC

	THUMB_FUNC_START sub_080ED758
sub_080ED758: @ 0x080ED758
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	bl sub_080ED7CC
	cmp r0, #0
	beq _080ED77E
	ldr r2, _080ED784  @ =gRam
	ldr r0, _080ED788  @ =0x00000D43
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080ED78C  @ =0x00000D4B
	add r2, r2, r0
	add r2, r4, r2
	mov r0, #255
	strb r0, [r2]
_080ED77E:
	pop {r4}
	pop {r0}
	bx r0
_080ED784:
	.4byte gRam
_080ED788:
	.4byte 0x00000D43
_080ED78C:
	.4byte 0x00000D4B
	THUMB_FUNC_END sub_080ED758

	THUMB_FUNC_START sub_080ED790
sub_080ED790: @ 0x080ED790
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r3, r2, #0
	ldr r1, _080ED7C0  @ =gRam
	ldr r4, _080ED7C4  @ =0x00000D4B
	add r0, r1, r4
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080ED7B2
	ldr r0, _080ED7C8  @ =0x00000D43
	add r1, r1, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080ED7B2:
	add r0, r3, #0
	bl sub_080ED3D8
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ED7C0:
	.4byte gRam
_080ED7C4:
	.4byte 0x00000D4B
_080ED7C8:
	.4byte 0x00000D43
	THUMB_FUNC_END sub_080ED790

	THUMB_FUNC_START sub_080ED7CC
sub_080ED7CC: @ 0x080ED7CC
	push {r4-r6,lr}
	mov r5, #1
	mov r1, #5
	ldr r4, _080ED7F4  @ =gUnknown_030031D2
	add r6, r4, #0
	sub r6, r6, #80
_080ED7D8:
	lsl r0, r1, #24
	asr r2, r0, #24
	add r1, r2, r4
	ldrb r1, [r1]
	add r3, r0, #0
	cmp r1, #0
	beq _080ED7F8
	add r0, r2, r6
	ldrb r0, [r0]
	cmp r0, #0
	bne _080ED7F8
	mov r5, #0
	b _080ED804
	.byte 0x00
	.byte 0x00
_080ED7F4:
	.4byte gUnknown_030031D2
_080ED7F8:
	mov r1, #255
	lsl r1, r1, #24
	add r0, r3, r1
	lsr r1, r0, #24
	cmp r0, #0
	bge _080ED7D8
_080ED804:
	add r0, r5, #0
	pop {r4-r6}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080ED7CC

	THUMB_FUNC_START sub_080ED80C
sub_080ED80C: @ 0x080ED80C
	push {lr}
	mov r1, #5
	ldr r3, _080ED82C  @ =gUnknown_03003182
	mov r2, #0
_080ED814:
	lsl r0, r1, #24
	asr r0, r0, #24
	add r1, r0, r3
	strb r2, [r1]
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bge _080ED814
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ED82C:
	.4byte gUnknown_03003182
	THUMB_FUNC_END sub_080ED80C

	THUMB_FUNC_START sub_080ED830
sub_080ED830: @ 0x080ED830
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r2, _080ED888  @ =gRam
	ldr r3, _080ED88C  @ =0x00000AA8
	add r0, r2, r3
	mov r7, #0
	mov r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #0
	bge _080ED850
	ldr r3, _080ED890  @ =0x000009AC
	add r0, r2, r3
	ldrb r0, [r0]
	cmp r0, #26
	bne _080ED8A0
_080ED850:
	mov r1, #15
	ldr r6, _080ED894  @ =gUnknown_08227796
	ldr r0, _080ED898  @ =0x00000FF2
	add r5, r2, r0
	ldr r3, _080ED89C  @ =0x00000FA2
	add r4, r2, r3
	mov r3, #16
_080ED85E:
	lsl r0, r1, #24
	asr r2, r0, #24
	add r0, r2, r5
	ldrb r0, [r0]
	add r0, r0, r6
	ldrb r1, [r0]
	add r0, r3, #0
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080ED87A
	add r0, r2, r4
	strb r1, [r0]
_080ED87A:
	sub r0, r2, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bge _080ED85E
	b _080ED8AC
	.byte 0x00
	.byte 0x00
_080ED888:
	.4byte gRam
_080ED88C:
	.4byte 0x00000AA8
_080ED890:
	.4byte 0x000009AC
_080ED894:
	.4byte gUnknown_08227796
_080ED898:
	.4byte 0x00000FF2
_080ED89C:
	.4byte 0x00000FA2
_080ED8A0:
	mov r7, #1
	ldr r3, _080ED8B4  @ =0x00000FA2
	add r0, r2, r3
	add r0, r1, r0
	mov r1, #0
	strb r1, [r0]
_080ED8AC:
	add r0, r7, #0
	pop {r4-r7}
	pop {r1}
	bx r1
_080ED8B4:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080ED830

	THUMB_FUNC_START sub_080ED8B8
sub_080ED8B8: @ 0x080ED8B8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #96
	bl sub_080CF140
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080ED8B8

	THUMB_FUNC_START sub_080ED8C8
sub_080ED8C8: @ 0x080ED8C8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080ED8E4  @ =gRam
	ldr r1, _080ED8E8  @ =0x00001649
	add r2, r2, r1
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	mov r1, #96
	bl sub_080CF140
	pop {r0}
	bx r0
_080ED8E4:
	.4byte gRam
_080ED8E8:
	.4byte 0x00001649
	THUMB_FUNC_END sub_080ED8C8

	THUMB_FUNC_START sub_080ED8EC
sub_080ED8EC: @ 0x080ED8EC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	ldr r5, _080ED928  @ =gRam
	ldr r1, _080ED92C  @ =0x00000FF2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #162
	beq _080ED906
	bl sub_080CBB34
_080ED906:
	ldr r1, _080ED930  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	mov r2, #0
	mov r1, #4
	strb r1, [r0]
	ldr r1, _080ED934  @ =0x00000F62
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	add r0, r4, #0
	mov r1, #255
	bl sub_080ED938
	pop {r4,r5}
	pop {r0}
	bx r0
_080ED928:
	.4byte gRam
_080ED92C:
	.4byte 0x00000FF2
_080ED930:
	.4byte 0x00000FA2
_080ED934:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080ED8EC

	THUMB_FUNC_START sub_080ED938
sub_080ED938: @ 0x080ED938
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r3, _080ED96C  @ =gRam
	ldr r4, _080ED970  @ =0x00000FC2
	add r2, r3, r4
	add r2, r0, r2
	strb r1, [r2]
	ldr r4, _080ED974  @ =0x000010C2
	add r2, r3, r4
	add r2, r0, r2
	strb r1, [r2]
	ldr r1, _080ED978  @ =0x00001649
	add r3, r3, r1
	ldrb r1, [r3]
	add r1, r1, #1
	strb r1, [r3]
	mov r1, #96
	bl sub_080CF140
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ED96C:
	.4byte gRam
_080ED970:
	.4byte 0x00000FC2
_080ED974:
	.4byte 0x000010C2
_080ED978:
	.4byte 0x00001649
	THUMB_FUNC_END sub_080ED938

	THUMB_FUNC_START sub_080ED97C
sub_080ED97C: @ 0x080ED97C
	push {lr}
	mov r1, #15
	ldr r3, _080ED99C  @ =gUnknown_0300367C
	mov r2, #0
_080ED984:
	lsl r0, r1, #24
	asr r0, r0, #24
	add r1, r0, r3
	strb r2, [r1]
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bge _080ED984
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080ED99C:
	.4byte gUnknown_0300367C
	THUMB_FUNC_END sub_080ED97C

	THUMB_FUNC_START sub_080ED9A0
sub_080ED9A0: @ 0x080ED9A0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080ED9BC  @ =gRam
	ldr r1, _080ED9C0  @ =0x00000F52
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080ED9C4
	add r0, r4, #0
	bl sub_080EDA58
	b _080ED9CA
_080ED9BC:
	.4byte gRam
_080ED9C0:
	.4byte 0x00000F52
_080ED9C4:
	add r0, r4, #0
	bl sub_080C6240
_080ED9CA:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r7, r0, #24
	cmp r7, #0
	bne _080EDA4C
	ldr r5, _080EDA2C  @ =gRam
	ldr r0, _080EDA30  @ =0x00001052
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EDA34  @ =0x00000F92
	add r2, r5, r1
	add r2, r4, r2
	lsl r0, r0, #24
	lsr r0, r0, #26
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080EDA38  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080EDA40
	add r0, r4, #0
	bl sub_080C5044
	ldr r1, _080EDA3C  @ =0x00000FE2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EDA4C
	add r0, r4, #0
	bl sub_080C79F8
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EDA4C
	mov r0, #16
	strb r0, [r6]
	b _080EDA4C
_080EDA2C:
	.4byte gRam
_080EDA30:
	.4byte 0x00001052
_080EDA34:
	.4byte 0x00000F92
_080EDA38:
	.4byte 0x00000FC2
_080EDA3C:
	.4byte 0x00000FE2
_080EDA40:
	cmp r0, #1
	bne _080EDA4C
	ldr r1, _080EDA54  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	strb r7, [r0]
_080EDA4C:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EDA54:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080ED9A0

	THUMB_FUNC_START sub_080EDA58
sub_080EDA58: @ 0x080EDA58
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EDB14
	ldr r2, _080EDB24  @ =gRam
	ldr r1, _080EDB28  @ =0x00000F92
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	ldr r3, _080EDB2C  @ =0x0000096C
	add r1, r2, r3
	strb r0, [r1]
	mov r6, #3
	add r7, r2, #0
	ldr r4, _080EDB30  @ =0x00000969
	add r4, r4, r7
	mov r9, r4
	ldr r5, _080EDB34  @ =gUnknown_081786AC
	mov r8, r5
_080EDA98:
	ldr r0, _080EDB38  @ =gUnknown_03003E74
	sub r1, r6, #3
	ldrh r0, [r0]
	sub r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r1, r7, r2
	ldrb r2, [r1]
	ldr r3, _080EDB3C  @ =0x00000961
	add r1, r7, r3
	ldrb r1, [r1]
	lsl r1, r1, #8
	add r2, r2, r1
	ldr r1, _080EDB40  @ =gUnknown_081786A4
	add r1, r6, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r4, _080EDB44  @ =0x00000964
	add r2, r7, r4
	ldrb r3, [r2]
	ldr r5, _080EDB48  @ =0x00000965
	add r2, r7, r5
	ldrb r2, [r2]
	lsl r2, r2, #8
	add r3, r3, r2
	ldr r2, _080EDB4C  @ =gUnknown_081786A8
	add r2, r6, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	add r4, r4, #8
	add r3, r7, r4
	ldrb r3, [r3]
	add r3, r3, r6
	add r3, r3, r8
	ldrb r3, [r3]
	ldr r4, _080EDB50  @ =gUnknown_081786B4
	add r4, r6, r4
	ldrb r4, [r4]
	mov r12, r4
	mov r5, r9
	ldrb r4, [r5]
	mov r5, r12
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	sub r6, r6, #1
	cmp r6, #0
	bge _080EDA98
_080EDB14:
	add sp, sp, #8
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EDB24:
	.4byte gRam
_080EDB28:
	.4byte 0x00000F92
_080EDB2C:
	.4byte 0x0000096C
_080EDB30:
	.4byte 0x00000969
_080EDB34:
	.4byte gUnknown_081786AC
_080EDB38:
	.4byte gUnknown_03003E74
_080EDB3C:
	.4byte 0x00000961
_080EDB40:
	.4byte gUnknown_081786A4
_080EDB44:
	.4byte 0x00000964
_080EDB48:
	.4byte 0x00000965
_080EDB4C:
	.4byte gUnknown_081786A8
_080EDB50:
	.4byte gUnknown_081786B4
	THUMB_FUNC_END sub_080EDA58

	THUMB_FUNC_START sub_080EDB54
sub_080EDB54: @ 0x080EDB54
	bx lr
	THUMB_FUNC_END sub_080EDB54

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EDB58
sub_080EDB58: @ 0x080EDB58
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080ED9A0
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EDB58

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EDB68
sub_080EDB68: @ 0x080EDB68
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080EDB88  @ =gRam
	ldr r1, _080EDB8C  @ =0x00000F72
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EDB90
	add r0, r4, #0
	bl sub_080EDD34
	b _080EDD20
_080EDB88:
	.4byte gRam
_080EDB8C:
	.4byte 0x00000F72
_080EDB90:
	add r0, r4, #0
	bl sub_080EDFA4
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EDBA4
	b _080EDD20
_080EDBA4:
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EDBB2
	b _080EDD20
_080EDBB2:
	ldr r2, _080EDCB0  @ =0x00000FD2
	add r0, r5, r2
	add r0, r0, r4
	mov r8, r0
	ldrb r0, [r0]
	cmp r0, #8
	bne _080EDBC6
	add r0, r4, #0
	bl sub_080EC688
_080EDBC6:
	ldr r1, _080EDCB4  @ =0x000016F9
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EDBD2
	b _080EDD08
_080EDBD2:
	ldr r2, _080EDCB8  @ =0x00000545
	add r0, r5, r2
	ldrb r0, [r0]
	mov r2, #15
	and r2, r2, r0
	cmp r2, #0
	bne _080EDBE2
	b _080EDD08
_080EDBE2:
	ldr r1, _080EDCBC  @ =0x00000FF2
	add r0, r5, r1
	add r7, r4, r0
	ldrb r0, [r7]
	cmp r0, #132
	bne _080EDBF2
	mov r0, #16
	orr r2, r2, r0
_080EDBF2:
	ldr r1, _080EDCC0  @ =0x00000FB2
	add r0, r5, r1
	add r6, r4, r0
	ldr r0, _080EDCC4  @ =gUnknown_081786F8
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r6]
	ldr r0, _080EDCC8  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080EDCCC  @ =gUnknown_081786B8
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EDCD0  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080EDCD4  @ =gUnknown_081786D8
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080EDCD8  @ =0x00001042
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EDC2E
	add r0, r4, #0
	bl Sprite3_Move
_080EDC2E:
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl sub_080C7A20
	ldr r2, _080EDCDC  @ =0x00001052
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EDCE0  @ =0x00000F92
	add r2, r5, r1
	add r2, r4, r2
	ldr r3, _080EDCE4  @ =gUnknown_08178718
	mov r1, #12
	and r0, r0, r1
	ldrb r1, [r6]
	orr r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	ldrb r0, [r7]
	cmp r0, #132
	bne _080EDCF0
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r2, _080EDCE8  @ =0x0000097D
	add r0, r5, r2
	ldrb r0, [r0]
	add r0, r0, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #15
	bls _080EDC8C
	sub r2, r2, #1
	add r0, r5, r2
	ldrb r0, [r0]
	add r0, r0, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #15
	bhi _080EDCF0
_080EDC8C:
	ldrb r6, [r6]
	cmp r1, r6
	bne _080EDCF0
	ldr r1, _080EDCEC  @ =0x00000F62
	add r0, r5, r1
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #31
	and r0, r0, r1
	cmp r0, #0
	bne _080EDCA8
	mov r0, #16
	mov r1, r8
	strb r0, [r1]
_080EDCA8:
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	b _080EDD20
_080EDCB0:
	.4byte 0x00000FD2
_080EDCB4:
	.4byte 0x000016F9
_080EDCB8:
	.4byte 0x00000545
_080EDCBC:
	.4byte 0x00000FF2
_080EDCC0:
	.4byte 0x00000FB2
_080EDCC4:
	.4byte gUnknown_081786F8
_080EDCC8:
	.4byte 0x00000F22
_080EDCCC:
	.4byte gUnknown_081786B8
_080EDCD0:
	.4byte 0x00000F12
_080EDCD4:
	.4byte gUnknown_081786D8
_080EDCD8:
	.4byte 0x00001042
_080EDCDC:
	.4byte 0x00001052
_080EDCE0:
	.4byte 0x00000F92
_080EDCE4:
	.4byte gUnknown_08178718
_080EDCE8:
	.4byte 0x0000097D
_080EDCEC:
	.4byte 0x00000F62
_080EDCF0:
	ldr r0, _080EDD00  @ =gRam
	ldr r2, _080EDD04  @ =0x00000F62
	add r0, r0, r2
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080EDD20
	.byte 0x00
	.byte 0x00
_080EDD00:
	.4byte gRam
_080EDD04:
	.4byte 0x00000F62
_080EDD08:
	ldr r0, _080EDD2C  @ =gRam
	ldr r1, _080EDD30  @ =0x00000F62
	add r0, r0, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl sub_080C7A20
_080EDD20:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EDD2C:
	.4byte gRam
_080EDD30:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080EDB68

	THUMB_FUNC_START sub_080EDD34
sub_080EDD34: @ 0x080EDD34
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080EE12C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EDD92
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EDD92
	add r0, r4, #0
	bl sub_080C5044
	ldr r2, _080EDD98  @ =gRam
	ldr r0, _080EDD9C  @ =0x00001032
	add r1, r2, r0
	add r1, r4, r1
	ldrb r3, [r1]
	mov r0, #64
	orr r0, r0, r3
	strb r0, [r1]
	ldr r0, _080EDDA0  @ =0x00000E75
	add r1, r2, r0
	add r1, r4, r1
	ldrb r3, [r1]
	mov r0, #4
	orr r0, r0, r3
	strb r0, [r1]
	ldr r1, _080EDDA4  @ =gUnknown_08178728
	ldr r0, _080EDDA8  @ =0x00000F52
	add r2, r2, r0
	add r2, r4, r2
	ldrb r0, [r2]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080EDD92:
	pop {r4}
	pop {r0}
	bx r0
_080EDD98:
	.4byte gRam
_080EDD9C:
	.4byte 0x00001032
_080EDDA0:
	.4byte 0x00000E75
_080EDDA4:
	.4byte gUnknown_08178728
_080EDDA8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EDD34

	THUMB_FUNC_START sub_080EDDAC
sub_080EDDAC: @ 0x080EDDAC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080EDDFC  @ =gRam
	ldr r1, _080EDE00  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080EDDF6
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r1, _080EDE04  @ =0x0000097C
	add r0, r5, r1
	ldrb r0, [r0]
	add r0, r0, #48
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #95
	bhi _080EDDF6
	add r1, r1, #1
	add r0, r5, r1
	ldrb r0, [r0]
	add r0, r0, #48
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #95
	bhi _080EDDF6
	ldr r1, _080EDE08  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #63
	strb r0, [r6]
_080EDDF6:
	pop {r4-r6}
	pop {r0}
	bx r0
_080EDDFC:
	.4byte gRam
_080EDE00:
	.4byte 0x00000FC2
_080EDE04:
	.4byte 0x0000097C
_080EDE08:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EDDAC

	THUMB_FUNC_START sub_080EDE0C
sub_080EDE0C: @ 0x080EDE0C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080EDE34  @ =gRam
	ldr r1, _080EDE38  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EDE44
	ldr r2, _080EDE3C  @ =0x00000F92
	add r1, r5, r2
	add r1, r4, r1
	ldr r2, _080EDE40  @ =gUnknown_0817873C
	lsr r0, r0, #27
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080EDE6E
_080EDE34:
	.4byte gRam
_080EDE38:
	.4byte 0x00000FC2
_080EDE3C:
	.4byte 0x00000F92
_080EDE40:
	.4byte gUnknown_0817873C
_080EDE44:
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r2, _080EDE74  @ =0x00000FB2
	add r1, r5, r2
	add r1, r4, r1
	strb r0, [r1]
	ldr r0, _080EDE78  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	bl GetRandomInt
	ldr r2, _080EDE7C  @ =gUnknown_08178744
	mov r1, #3
	and r1, r1, r0
	add r1, r1, r2
	ldrb r0, [r1]
	strb r0, [r6]
_080EDE6E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080EDE74:
	.4byte 0x00000FB2
_080EDE78:
	.4byte 0x00000F52
_080EDE7C:
	.4byte gUnknown_08178744
	THUMB_FUNC_END sub_080EDE0C

	THUMB_FUNC_START sub_080EDE80
sub_080EDE80: @ 0x080EDE80
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r3, r4, #0
	ldr r5, _080EDF40  @ =gRam
	ldr r0, _080EDF44  @ =0x00001032
	add r1, r5, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #191
	and r0, r0, r2
	strb r0, [r1]
	ldr r1, _080EDF48  @ =0x00000FF2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #132
	beq _080EDEB2
	ldr r2, _080EDF4C  @ =0x00000E75
	add r0, r5, r2
	add r0, r4, r0
	ldrb r2, [r0]
	mov r1, #251
	and r1, r1, r2
	strb r1, [r0]
_080EDEB2:
	ldr r1, _080EDF50  @ =0x00000FC2
	add r0, r5, r1
	add r1, r4, r0
	ldrb r2, [r1]
	cmp r2, #0
	beq _080EDF7C
	ldr r2, _080EDF54  @ =0x00000996
	add r0, r5, r2
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #31
	and r0, r0, r1
	cmp r0, #0
	bne _080EDEDE
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r3, _080EDF58  @ =0x00000FB2
	add r1, r5, r3
	add r1, r4, r1
	strb r0, [r1]
_080EDEDE:
	ldr r0, _080EDF5C  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080EDF60  @ =gUnknown_08178748
	ldr r3, _080EDF58  @ =0x00000FB2
	add r0, r5, r3
	add r6, r4, r0
	ldrb r0, [r6]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EDF64  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080EDF68  @ =gUnknown_0817874C
	ldrb r0, [r6]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080EDF6C  @ =0x00001042
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EDF16
	add r0, r4, #0
	bl Sprite3_Move
_080EDF16:
	add r0, r4, #0
	bl sub_080C7A20
	ldr r2, _080EDF70  @ =0x00001052
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r3, _080EDF74  @ =0x00000F92
	add r2, r5, r3
	add r2, r4, r2
	ldr r3, _080EDF78  @ =gUnknown_08178750
	mov r1, #12
	and r0, r0, r1
	ldrb r1, [r6]
	orr r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	b _080EDF94
_080EDF40:
	.4byte gRam
_080EDF44:
	.4byte 0x00001032
_080EDF48:
	.4byte 0x00000FF2
_080EDF4C:
	.4byte 0x00000E75
_080EDF50:
	.4byte 0x00000FC2
_080EDF54:
	.4byte 0x00000996
_080EDF58:
	.4byte 0x00000FB2
_080EDF5C:
	.4byte 0x00000F22
_080EDF60:
	.4byte gUnknown_08178748
_080EDF64:
	.4byte 0x00000F12
_080EDF68:
	.4byte gUnknown_0817874C
_080EDF6C:
	.4byte 0x00001042
_080EDF70:
	.4byte 0x00001052
_080EDF74:
	.4byte 0x00000F92
_080EDF78:
	.4byte gUnknown_08178750
_080EDF7C:
	mov r0, #63
	strb r0, [r1]
	ldr r0, _080EDF9C  @ =0x00000F52
	add r1, r5, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EDFA0  @ =0x00000F92
	add r0, r5, r1
	add r0, r3, r0
	strb r2, [r0]
_080EDF94:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EDF9C:
	.4byte 0x00000F52
_080EDFA0:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080EDE80

	THUMB_FUNC_START sub_080EDFA4
sub_080EDFA4: @ 0x080EDFA4
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r1, _080EE014  @ =gRam
	ldr r2, _080EE018  @ =0x00000FD2
	add r0, r1, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EDFD4
	sub r2, r2, #32
	add r0, r1, r2
	add r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #3
	beq _080EDFD4
	add r1, r0, #0
	lsl r1, r1, #3
	ldr r0, _080EE01C  @ =gUnknown_081788E8
	add r1, r1, r0
	add r0, r5, #0
	mov r2, #1
	bl sub_080C9480
_080EDFD4:
	ldr r1, _080EE020  @ =gUnknown_0817890A
	ldr r4, _080EE014  @ =gRam
	ldr r2, _080EE024  @ =0x00000F92
	add r0, r4, r2
	add r0, r5, r0
	ldrb r2, [r0]
	add r1, r2, r1
	ldrb r1, [r1]
	lsl r1, r1, #3
	ldr r0, _080EE028  @ =gUnknown_08178914
	add r1, r1, r0
	ldr r0, _080EE02C  @ =gUnknown_08178900
	add r2, r2, r0
	ldrb r2, [r2]
	add r0, r5, #0
	bl sub_080C9480
	ldr r0, _080EE030  @ =0x00001012
	add r4, r4, r0
	add r4, r5, r4
	ldrb r0, [r4]
	sub r0, r0, #1
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080C6230
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
_080EE014:
	.4byte gRam
_080EE018:
	.4byte 0x00000FD2
_080EE01C:
	.4byte gUnknown_081788E8
_080EE020:
	.4byte gUnknown_0817890A
_080EE024:
	.4byte 0x00000F92
_080EE028:
	.4byte gUnknown_08178914
_080EE02C:
	.4byte gUnknown_08178900
_080EE030:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080EDFA4

	THUMB_FUNC_START sub_080EE034
sub_080EE034: @ 0x080EE034
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080EE074
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EE034

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EE044
sub_080EE044: @ 0x080EE044
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080EE074
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EE044

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EE054
sub_080EE054: @ 0x080EE054
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080EDB68
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EE054

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EE064
sub_080EE064: @ 0x080EE064
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080EDB68
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EE064

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EE074
sub_080EE074: @ 0x080EE074
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080EE094  @ =gRam
	ldr r3, _080EE098  @ =0x00000B36
	add r0, r1, r3
	ldrh r0, [r0]
	add r3, r1, #0
	cmp r0, #27
	beq _080EE0A4
	cmp r0, #27
	bgt _080EE09C
	cmp r0, #12
	beq _080EE0A4
	b _080EE0C6
	.byte 0x00
	.byte 0x00
_080EE094:
	.4byte gRam
_080EE098:
	.4byte 0x00000B36
_080EE09C:
	cmp r0, #75
	beq _080EE0A4
	cmp r0, #107
	bne _080EE0C6
_080EE0A4:
	ldr r0, _080EE0CC  @ =0x00000F72
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EE0D0  @ =0x00000FF2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #131
	bne _080EE0C6
	ldr r1, _080EE0D4  @ =0x00000E75
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #0
	strb r1, [r0]
_080EE0C6:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EE0CC:
	.4byte 0x00000F72
_080EE0D0:
	.4byte 0x00000FF2
_080EE0D4:
	.4byte 0x00000E75
	THUMB_FUNC_END sub_080EE074

	THUMB_FUNC_START sub_080EE0D8
sub_080EE0D8: @ 0x080EE0D8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080EE104  @ =gRam
	ldr r3, _080EE108  @ =0x00000FC2
	add r0, r1, r3
	add r4, r2, r0
	ldrb r0, [r4]
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r3, #0
	beq _080EE114
	ldr r5, _080EE10C  @ =0x00000F92
	add r1, r1, r5
	add r1, r2, r1
	ldr r2, _080EE110  @ =gUnknown_08178760
	lsr r0, r0, #27
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080EE120
	.byte 0x00
	.byte 0x00
_080EE104:
	.4byte gRam
_080EE108:
	.4byte 0x00000FC2
_080EE10C:
	.4byte 0x00000F92
_080EE110:
	.4byte gUnknown_08178760
_080EE114:
	ldr r5, _080EE128  @ =0x00000F52
	add r0, r1, r5
	add r0, r2, r0
	strb r3, [r0]
	mov r0, #96
	strb r0, [r4]
_080EE120:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EE128:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EE0D8

	THUMB_FUNC_START sub_080EE12C
sub_080EE12C: @ 0x080EE12C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080EE164  @ =gRam
	ldr r1, _080EE168  @ =0x00000F92
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #5
	ldr r0, _080EE16C  @ =gUnknown_08178768
	add r1, r1, r0
	add r0, r5, #0
	mov r2, #4
	bl sub_080C9480
	ldr r0, _080EE170  @ =0x000010D2
	add r4, r4, r0
	add r4, r5, r4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080EE15E
	add r0, r5, #0
	mov r1, #14
	bl sub_080C57F8
_080EE15E:
	pop {r4,r5}
	pop {r0}
	bx r0
_080EE164:
	.4byte gRam
_080EE168:
	.4byte 0x00000F92
_080EE16C:
	.4byte gUnknown_08178768
_080EE170:
	.4byte 0x000010D2
	THUMB_FUNC_END sub_080EE12C

	THUMB_FUNC_START sub_080EE174
sub_080EE174: @ 0x080EE174
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080EE1BC  @ =gRam
	ldr r1, _080EE1C0  @ =0x00000F62
	add r0, r4, r1
	add r0, r5, r0
	ldr r1, _080EE1C4  @ =0x00000DA6
	add r2, r4, r1
	ldrb r1, [r2]
	strb r1, [r0]
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	add r0, r5, #0
	bl sub_080C35C0
	ldr r2, _080EE1C8  @ =0x00000EE2
	add r4, r4, r2
	add r4, r5, r4
	ldrb r0, [r4]
	mov r1, #1
	cmp r0, #48
	bls _080EE1AC
	mov r1, #3
	cmp r0, #223
	bls _080EE1AC
	mov r1, #2
_080EE1AC:
	ldr r0, _080EE1BC  @ =gRam
	ldr r2, _080EE1CC  @ =0x00000FB2
	add r0, r0, r2
	add r0, r5, r0
	strb r1, [r0]
	pop {r4,r5}
	pop {r0}
	bx r0
_080EE1BC:
	.4byte gRam
_080EE1C0:
	.4byte 0x00000F62
_080EE1C4:
	.4byte 0x00000DA6
_080EE1C8:
	.4byte 0x00000EE2
_080EE1CC:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080EE174

	THUMB_FUNC_START sub_080EE1D0
sub_080EE1D0: @ 0x080EE1D0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080EE338
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EE1EA
	b _080EE2F0
_080EE1EA:
	add r0, r5, #0
	bl sub_080C500C
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r7, r0, #0
	cmp r7, #0
	beq _080EE202
	bl sub_080AF16C
	bl sub_0809945C
_080EE202:
	ldr r4, _080EE2F8  @ =gRam
	ldr r1, _080EE2FC  @ =0x00000FC2
	add r0, r4, r1
	add r3, r5, r0
	ldrb r0, [r3]
	cmp r0, #0
	bne _080EE2F0
	ldr r2, _080EE300  @ =0x00000F52
	add r0, r4, r2
	add r2, r5, r0
	ldrb r1, [r2]
	mov r6, #128
	add r0, r6, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080EE2F0
	cmp r1, #0
	bne _080EE23C
	ldr r1, _080EE304  @ =0x0000177E
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EE2F0
	strb r0, [r2]
	strb r6, [r3]
	ldr r2, _080EE308  @ =0x00000A3E
	add r1, r4, r2
	mov r0, #5
	strb r0, [r1]
_080EE23C:
	cmp r7, #0
	beq _080EE270
	ldr r3, _080EE30C  @ =0x000016F8
	add r1, r4, r3
	ldrb r0, [r1]
	cmp r0, #0
	bne _080EE270
	mov r0, #16
	strb r0, [r1]
	add r0, r5, #0
	mov r1, #32
	bl sub_080C35FC
	ldr r1, _080EE310  @ =0x00000961
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r2, _080EE314  @ =0x000016CE
	add r0, r4, r2
	strb r1, [r0]
	mov r3, #150
	lsl r3, r3, #4
	add r0, r4, r3
	ldrb r1, [r0]
	sub r2, r2, #1
	add r0, r4, r2
	strb r1, [r0]
_080EE270:
	ldr r6, _080EE2F8  @ =gRam
	ldr r3, _080EE318  @ =0x00000F22
	add r1, r6, r3
	add r1, r5, r1
	ldr r2, _080EE31C  @ =gUnknown_08178A14
	add r3, r3, #144
	add r0, r6, r3
	add r4, r5, r0
	ldrb r0, [r4]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EE320  @ =0x00000F12
	add r1, r6, r0
	add r1, r5, r1
	ldr r2, _080EE324  @ =gUnknown_08178A18
	ldrb r0, [r4]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r5, #0
	bl Sprite3_Move
	add r0, r5, #0
	bl sub_080C79F8
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EE2B4
	ldr r0, _080EE328  @ =gUnknown_08178A1C
	ldrb r1, [r4]
	add r1, r1, r0
	ldrb r0, [r1]
	strb r0, [r4]
_080EE2B4:
	ldr r1, _080EE32C  @ =0x00001770
	add r4, r6, r1
	mov r0, #1
	strb r0, [r4]
	ldr r2, _080EE330  @ =0x00001052
	add r1, r6, r2
	add r1, r5, r1
	ldrb r2, [r1]
	add r2, r2, #1
	strb r2, [r1]
	add r3, r0, #0
	and r3, r3, r2
	cmp r3, #0
	bne _080EE2F0
	ldr r0, _080EE334  @ =0x000010A2
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #130
	bne _080EE2F0
	ldr r1, _080EE300  @ =0x00000F52
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #128
	strb r1, [r0]
	strb r3, [r4]
_080EE2F0:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EE2F8:
	.4byte gRam
_080EE2FC:
	.4byte 0x00000FC2
_080EE300:
	.4byte 0x00000F52
_080EE304:
	.4byte 0x0000177E
_080EE308:
	.4byte 0x00000A3E
_080EE30C:
	.4byte 0x000016F8
_080EE310:
	.4byte 0x00000961
_080EE314:
	.4byte 0x000016CE
_080EE318:
	.4byte 0x00000F22
_080EE31C:
	.4byte gUnknown_08178A14
_080EE320:
	.4byte 0x00000F12
_080EE324:
	.4byte gUnknown_08178A18
_080EE328:
	.4byte gUnknown_08178A1C
_080EE32C:
	.4byte 0x00001770
_080EE330:
	.4byte 0x00001052
_080EE334:
	.4byte 0x000010A2
	THUMB_FUNC_END sub_080EE1D0

	THUMB_FUNC_START sub_080EE338
sub_080EE338: @ 0x080EE338
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080EE3A4  @ =gRam
	ldr r1, _080EE3A8  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #1
	bne _080EE35C
	mov r0, #123
	mov r1, #0
	bl sub_0812A324
	ldr r0, _080EE3AC  @ =0x00000A3E
	add r1, r6, r0
	mov r0, #255
	strb r0, [r1]
_080EE35C:
	ldr r1, _080EE3B0  @ =0x00001622
	add r2, r6, r1
	ldrb r1, [r5]
	lsr r1, r1, #1
	mov r0, #1
	and r1, r1, r0
	ldrb r0, [r2]
	add r0, r0, r1
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r1, _080EE3B4  @ =0x0000097D
	add r0, r6, r1
	ldrb r0, [r0]
	add r0, r0, #32
	cmp r0, #63
	bgt _080EE392
	sub r1, r1, #1
	add r0, r6, r1
	ldrb r0, [r0]
	add r0, r0, #32
	cmp r0, #63
	bgt _080EE392
	mov r0, #16
	bl sub_080CF388
_080EE392:
	ldr r1, _080EE3B8  @ =gUnknown_08178A20
	add r0, r4, #0
	mov r2, #4
	bl sub_080C9480
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EE3A4:
	.4byte gRam
_080EE3A8:
	.4byte 0x00000FC2
_080EE3AC:
	.4byte 0x00000A3E
_080EE3B0:
	.4byte 0x00001622
_080EE3B4:
	.4byte 0x0000097D
_080EE3B8:
	.4byte gUnknown_08178A20
	THUMB_FUNC_END sub_080EE338

	THUMB_FUNC_START sub_080EE3BC
sub_080EE3BC: @ 0x080EE3BC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080EE1D0
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EE3BC

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EE3CC
sub_080EE3CC: @ 0x080EE3CC
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080EE440  @ =gRam
	ldr r0, _080EE444  @ =0x00000F62
	add r3, r5, r0
	add r3, r4, r3
	ldr r1, _080EE448  @ =0x00000EE2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsr r0, r0, #4
	mov r1, #1
	and r0, r0, r1
	strb r0, [r3]
	ldr r0, _080EE44C  @ =0x00001122
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080EE450  @ =gUnknown_08178A40
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EE454  @ =0x00001022
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080EE458  @ =gUnknown_08178A42
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EE45C  @ =0x00000EA5
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080EE460  @ =gUnknown_08178A44
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #16
	bl sub_080C35FC
	ldr r1, _080EE464  @ =0x00001152
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	ldr r0, _080EE468  @ =0x00000F52
	add r5, r5, r0
	add r4, r4, r5
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
_080EE440:
	.4byte gRam
_080EE444:
	.4byte 0x00000F62
_080EE448:
	.4byte 0x00000EE2
_080EE44C:
	.4byte 0x00001122
_080EE450:
	.4byte gUnknown_08178A40
_080EE454:
	.4byte 0x00001022
_080EE458:
	.4byte gUnknown_08178A42
_080EE45C:
	.4byte 0x00000EA5
_080EE460:
	.4byte gUnknown_08178A44
_080EE464:
	.4byte 0x00001152
_080EE468:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EE3CC

	THUMB_FUNC_START sub_080EE46C
sub_080EE46C: @ 0x080EE46C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080EE504  @ =gRam
	ldr r2, _080EE508  @ =0x00001092
	add r0, r1, r2
	add r5, r4, r0
	ldrb r2, [r5]
	add r3, r2, #0
	add r6, r1, #0
	cmp r3, #0
	bne _080EE520
	ldr r1, _080EE50C  @ =0x00000FD2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EE498
	ldr r2, _080EE510  @ =0x00000F92
	add r0, r6, r2
	add r0, r4, r0
	strb r3, [r0]
_080EE498:
	add r0, r4, #0
	bl sub_080EEFEC
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EE55E
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	lsr r5, r0, #24
	cmp r5, #0
	bne _080EE55E
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl sub_080C99DC
	add r0, r4, #0
	bl sub_080CA2A4
	ldr r1, _080EE514  @ =0x00001152
	add r0, r6, r1
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	sub r1, r1, #16
	add r0, r6, r1
	add r3, r4, r0
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080EE4EA
	strb r5, [r3]
	strb r5, [r2]
_080EE4EA:
	ldr r1, _080EE518  @ =gUnknown_08178A48
	ldr r2, _080EE51C  @ =0x00000F52
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	b _080EE55E
	.byte 0x00
	.byte 0x00
_080EE504:
	.4byte gRam
_080EE508:
	.4byte 0x00001092
_080EE50C:
	.4byte 0x00000FD2
_080EE510:
	.4byte 0x00000F92
_080EE514:
	.4byte 0x00001152
_080EE518:
	.4byte gUnknown_08178A48
_080EE51C:
	.4byte 0x00000F52
_080EE520:
	ldr r1, _080EE564  @ =0x00001172
	add r0, r6, r1
	add r0, r4, r0
	strb r2, [r0]
	ldr r2, _080EE568  @ =0x000009AD
	add r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #1
	beq _080EE546
	cmp r0, #11
	beq _080EE546
	ldrb r0, [r5]
	cmp r0, #1
	bne _080EE546
	ldr r1, _080EE56C  @ =0x00000D94
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #48
	strb r1, [r0]
_080EE546:
	ldr r1, _080EE570  @ =gUnknown_08178A54
	ldr r2, _080EE574  @ =0x00001092
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	sub r0, r0, #1
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080EE55E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080EE564:
	.4byte 0x00001172
_080EE568:
	.4byte 0x000009AD
_080EE56C:
	.4byte 0x00000D94
_080EE570:
	.4byte gUnknown_08178A54
_080EE574:
	.4byte 0x00001092
	THUMB_FUNC_END sub_080EE46C

	THUMB_FUNC_START sub_080EE578
sub_080EE578: @ 0x080EE578
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r5, r6, #0
	add r0, r6, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r4, _080EE618  @ =gRam
	ldr r1, _080EE61C  @ =0x0000097C
	add r0, r4, r1
	ldrb r0, [r0]
	add r0, r0, #40
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #79
	bhi _080EE5F4
	ldr r3, _080EE620  @ =0x0000097D
	add r0, r4, r3
	ldrb r0, [r0]
	add r0, r0, #40
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #79
	bhi _080EE5F4
	ldr r1, _080EE624  @ =0x000016F6
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #128
	beq _080EE5F4
	ldr r3, _080EE628  @ =0x00001142
	add r1, r4, r3
	add r1, r6, r1
	sub r3, r3, #112
	add r0, r4, r3
	add r0, r6, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	orr r0, r0, r1
	cmp r0, #0
	bne _080EE5F4
	mov r1, #161
	lsl r1, r1, #4
	add r0, r4, r1
	add r3, r3, #32
	add r1, r4, r3
	add r1, r6, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080EE5F4
	ldr r1, _080EE62C  @ =gUnknown_08178A68
	ldr r3, _080EE630  @ =0x000016D5
	add r0, r4, r3
	ldrb r0, [r0]
	lsr r0, r0, #1
	add r0, r0, r1
	ldrb r0, [r0]
	cmp r2, r0
	beq _080EE5F4
	b _080EE6EC
_080EE5F4:
	ldr r4, _080EE618  @ =gRam
	ldr r1, _080EE634  @ =0x00000FC2
	add r0, r4, r1
	add r6, r5, r0
	ldrb r0, [r6]
	lsl r1, r0, #24
	lsr r3, r1, #24
	cmp r3, #0
	beq _080EE63C
	ldr r2, _080EE638  @ =0x00000F92
	add r0, r4, r2
	add r0, r5, r0
	lsr r1, r1, #28
	mov r2, #1
	and r1, r1, r2
	strb r1, [r0]
	b _080EE72C
	.byte 0x00
	.byte 0x00
_080EE618:
	.4byte gRam
_080EE61C:
	.4byte 0x0000097C
_080EE620:
	.4byte 0x0000097D
_080EE624:
	.4byte 0x000016F6
_080EE628:
	.4byte 0x00001142
_080EE62C:
	.4byte gUnknown_08178A68
_080EE630:
	.4byte 0x000016D5
_080EE634:
	.4byte 0x00000FC2
_080EE638:
	.4byte 0x00000F92
_080EE63C:
	ldr r1, _080EE678  @ =0x00000F52
	add r0, r4, r1
	add r2, r5, r0
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	add r1, r1, #32
	add r0, r4, r1
	add r1, r5, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #4
	beq _080EE680
	bl GetRandomInt
	ldr r3, _080EE67C  @ =0x00001152
	add r2, r4, r3
	add r2, r5, r2
	mov r1, #7
	and r1, r1, r0
	add r1, r1, #24
	strb r1, [r2]
	bl GetRandomInt
	mov r4, #3
	and r4, r4, r0
	b _080EE6B4
_080EE678:
	.4byte 0x00000F52
_080EE67C:
	.4byte 0x00001152
_080EE680:
	strb r3, [r1]
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	bl GetRandomInt
	mov r1, #63
	and r1, r1, r0
	add r1, r1, #48
	strb r1, [r6]
	ldr r1, _080EE6D4  @ =0x00001152
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #12
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080C3028
	add r4, r0, #0
	add r0, r5, #0
	bl sub_080C36D8
	lsl r4, r4, #1
	orr r4, r4, r0
	lsl r4, r4, #24
	lsr r4, r4, #24
_080EE6B4:
	ldr r2, _080EE6D8  @ =gRam
	ldr r3, _080EE6DC  @ =0x00000F22
	add r1, r2, r3
	add r1, r5, r1
	ldr r0, _080EE6E0  @ =gUnknown_08178A6C
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EE6E4  @ =0x00000F12
	add r2, r2, r0
	add r2, r5, r2
	ldr r0, _080EE6E8  @ =gUnknown_08178A70
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r2]
	b _080EE72C
_080EE6D4:
	.4byte 0x00001152
_080EE6D8:
	.4byte gRam
_080EE6DC:
	.4byte 0x00000F22
_080EE6E0:
	.4byte gUnknown_08178A6C
_080EE6E4:
	.4byte 0x00000F12
_080EE6E8:
	.4byte gUnknown_08178A70
_080EE6EC:
	add r0, r5, #0
	mov r1, #32
	bl sub_080C2CB4
	ldr r2, _080EE734  @ =0x00000F22
	add r1, r4, r2
	add r1, r5, r1
	ldr r3, _080EE738  @ =0x00000961
	add r0, r4, r3
	ldrb r0, [r0]
	neg r0, r0
	strb r0, [r1]
	ldr r0, _080EE73C  @ =0x00000F12
	add r1, r4, r0
	add r1, r5, r1
	mov r2, #150
	lsl r2, r2, #4
	add r0, r4, r2
	ldrb r0, [r0]
	neg r0, r0
	strb r0, [r1]
	ldr r3, _080EE740  @ =0x00001152
	add r0, r4, r3
	add r0, r5, r0
	mov r1, #16
	strb r1, [r0]
	ldr r0, _080EE744  @ =0x00000F52
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080EE72C:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EE734:
	.4byte 0x00000F22
_080EE738:
	.4byte 0x00000961
_080EE73C:
	.4byte 0x00000F12
_080EE740:
	.4byte 0x00001152
_080EE744:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EE578

	THUMB_FUNC_START sub_080EE748
sub_080EE748: @ 0x080EE748
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r3, r4, #0
	ldr r6, _080EE784  @ =gRam
	ldr r1, _080EE788  @ =0x00000FC2
	add r0, r6, r1
	add r7, r4, r0
	ldrb r5, [r7]
	cmp r5, #0
	bne _080EE790
	sub r1, r1, #112
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	bl GetRandomInt
	mov r1, #63
	and r1, r1, r0
	add r1, r1, #72
	strb r1, [r7]
	ldr r1, _080EE78C  @ =0x00000F12
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	add r1, r1, #16
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	b _080EE7C0
_080EE784:
	.4byte gRam
_080EE788:
	.4byte 0x00000FC2
_080EE78C:
	.4byte 0x00000F12
_080EE790:
	ldr r1, _080EE7C8  @ =0x00001142
	add r0, r6, r1
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080EE7B6
	add r1, r1, #16
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #12
	strb r1, [r0]
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	ldr r1, _080EE7CC  @ =0x00000FD2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #8
	strb r1, [r0]
_080EE7B6:
	ldr r1, _080EE7D0  @ =0x00000F92
	add r0, r6, r1
	add r0, r3, r0
	mov r1, #2
	strb r1, [r0]
_080EE7C0:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EE7C8:
	.4byte 0x00001142
_080EE7CC:
	.4byte 0x00000FD2
_080EE7D0:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080EE748

	THUMB_FUNC_START sub_080EE7D4
sub_080EE7D4: @ 0x080EE7D4
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r10, r5
	ldr r6, _080EE87C  @ =gRam
	ldr r1, _080EE880  @ =0x00000F52
	add r0, r6, r1
	add r7, r5, r0
	ldrb r0, [r7]
	cmp r0, #0
	bne _080EE7F4
	b _080EE9BC
_080EE7F4:
	add r0, r5, #0
	bl sub_080EF024
	ldr r2, _080EE884  @ =0x000010D2
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EE820
	ldr r3, _080EE888  @ =0x00000FA2
	add r0, r6, r3
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	ldr r7, _080EE88C  @ =0x00000AA8
	add r2, r6, r7
	ldrh r1, [r2]
	mov r3, #128
	lsl r3, r3, #8
	add r0, r3, #0
	orr r0, r0, r1
	strh r0, [r2]
_080EE820:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EE82E
	b _080EEA22
_080EE82E:
	ldr r7, _080EE890  @ =0x00000F92
	add r2, r6, r7
	add r2, r5, r2
	ldr r3, _080EE894  @ =gUnknown_08178AA8
	ldr r1, _080EE898  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #2
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r2, _080EE89C  @ =0x00000FC2
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EE8A4
	add r0, r5, #0
	bl Sprite3_Move
	ldr r3, _080EE8A0  @ =0x00000F22
	add r0, r6, r3
	add r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #64
	bne _080EE868
	b _080EEA22
_080EE868:
	add r0, r0, #1
	strb r0, [r1]
	sub r7, r7, #128
	add r1, r6, r7
	add r1, r5, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	b _080EEA22
	.byte 0x00
	.byte 0x00
_080EE87C:
	.4byte gRam
_080EE880:
	.4byte 0x00000F52
_080EE884:
	.4byte 0x000010D2
_080EE888:
	.4byte 0x00000FA2
_080EE88C:
	.4byte 0x00000AA8
_080EE890:
	.4byte 0x00000F92
_080EE894:
	.4byte gUnknown_08178AA8
_080EE898:
	.4byte 0x00000996
_080EE89C:
	.4byte 0x00000FC2
_080EE8A0:
	.4byte 0x00000F22
_080EE8A4:
	cmp r0, #207
	bhi _080EE91A
	ldr r1, _080EE984  @ =0x00001082
	add r0, r6, r1
	add r2, r5, r0
	ldrb r0, [r2]
	mov r3, #1
	mov r8, r3
	mov r4, r8
	and r4, r4, r0
	ldr r7, _080EE988  @ =0x00000F12
	add r1, r6, r7
	add r1, r5, r1
	ldr r3, _080EE98C  @ =gUnknown_08178AA4
	add r0, r4, r3
	ldrb r0, [r0]
	ldrb r7, [r1]
	add r0, r0, r7
	strb r0, [r1]
	ldr r1, _080EE990  @ =gUnknown_08178AAE
	add r1, r4, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r1, [r1]
	cmp r0, r1
	bne _080EE8DE
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
_080EE8DE:
	ldr r1, _080EE994  @ =0x00000FB2
	add r0, r6, r1
	add r7, r5, r0
	ldrb r0, [r7]
	mov r4, r8
	and r4, r4, r0
	ldr r2, _080EE998  @ =0x00000F22
	add r0, r6, r2
	add r6, r5, r0
	add r0, r4, r3
	ldrb r0, [r0]
	ldrb r3, [r6]
	add r0, r0, r3
	strb r0, [r6]
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EE908
	add r0, r5, #0
	mov r1, #100
	bl sub_080CF140
_080EE908:
	ldr r0, _080EE99C  @ =gUnknown_08178AAC
	add r0, r4, r0
	ldrb r1, [r6]
	ldrb r0, [r0]
	cmp r1, r0
	bne _080EE91A
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
_080EE91A:
	ldr r4, _080EE9A0  @ =gRam
	ldr r7, _080EE9A4  @ =0x00000968
	add r1, r4, r7
	mov r0, #120
	strb r0, [r1]
	ldr r0, _080EE9A8  @ =0x0000096C
	add r1, r4, r0
	mov r0, #80
	strb r0, [r1]
	ldr r1, _080EE9AC  @ =0x000016C5
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r2, _080EE9B0  @ =0x00000969
	add r0, r4, r2
	strb r1, [r0]
	ldr r3, _080EE9B4  @ =0x000016C1
	add r0, r4, r3
	ldrb r1, [r0]
	add r7, r7, #5
	add r0, r4, r7
	strb r1, [r0]
	mov r0, r10
	mov r1, #5
	bl sub_080C2DCC
	ldr r0, _080EE998  @ =0x00000F22
	add r6, r4, r0
	add r6, r6, r10
	ldrb r1, [r6]
	mov r9, r1
	ldr r2, _080EE9B8  @ =0x00000961
	add r0, r4, r2
	ldrb r0, [r0]
	add r0, r0, r9
	strb r0, [r6]
	ldr r3, _080EE988  @ =0x00000F12
	add r5, r4, r3
	add r5, r5, r10
	ldrb r7, [r5]
	mov r8, r7
	mov r0, #150
	lsl r0, r0, #4
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, r8
	strb r0, [r5]
	mov r0, r10
	bl Sprite3_Move
	strb r7, [r5]
	mov r1, r9
	strb r1, [r6]
	b _080EEA22
_080EE984:
	.4byte 0x00001082
_080EE988:
	.4byte 0x00000F12
_080EE98C:
	.4byte gUnknown_08178AA4
_080EE990:
	.4byte gUnknown_08178AAE
_080EE994:
	.4byte 0x00000FB2
_080EE998:
	.4byte 0x00000F22
_080EE99C:
	.4byte gUnknown_08178AAC
_080EE9A0:
	.4byte gRam
_080EE9A4:
	.4byte 0x00000968
_080EE9A8:
	.4byte 0x0000096C
_080EE9AC:
	.4byte 0x000016C5
_080EE9B0:
	.4byte 0x00000969
_080EE9B4:
	.4byte 0x000016C1
_080EE9B8:
	.4byte 0x00000961
_080EE9BC:
	add r0, r5, #0
	bl sub_080EF050
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EEA22
	add r0, r5, #0
	bl Sprite3_MoveVert
	ldr r2, _080EEA30  @ =0x00001052
	add r0, r6, r2
	add r0, r5, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #31
	and r1, r1, r0
	cmp r1, #0
	bne _080EEA22
	ldr r3, _080EEA34  @ =0x00000F12
	add r0, r6, r3
	add r4, r5, r0
	ldrb r0, [r4]
	sub r0, r0, #1
	strb r0, [r4]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #252
	bne _080EEA08
	add r0, r5, #0
	bl sub_08100840
	add r0, r5, #0
	bl sub_08100840
_080EEA08:
	ldrb r0, [r4]
	cmp r0, #251
	bne _080EEA22
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	ldr r7, _080EEA38  @ =0x00000FC2
	add r0, r6, r7
	add r0, r0, r10
	mov r1, #255
	strb r1, [r0]
	mov r0, #252
	strb r0, [r4]
_080EEA22:
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080EEA30:
	.4byte 0x00001052
_080EEA34:
	.4byte 0x00000F12
_080EEA38:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080EE7D4

	THUMB_FUNC_START sub_080EEA3C
sub_080EEA3C: @ 0x080EEA3C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_08109FE4
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EEA58
	b _080EEB5E
_080EEA58:
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl sub_0810A48C
	add r0, r4, #0
	bl Sprite3_Move
	ldr r5, _080EEB14  @ =gRam
	ldr r0, _080EEB18  @ =0x00001052
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EEB1C  @ =0x000010A2
	add r2, r5, r1
	add r2, r4, r2
	ldr r3, _080EEB20  @ =gUnknown_08178B60
	lsl r0, r0, #24
	lsr r0, r0, #26
	mov r1, #7
	and r0, r0, r1
	lsl r0, r0, #1
	add r0, r0, r3
	ldrh r0, [r0]
	strb r0, [r2]
	ldr r2, _080EEB24  @ =0x00000FC2
	add r7, r5, r2
	add r0, r4, r7
	ldrb r1, [r0]
	cmp r1, #0
	bne _080EEB48
	ldr r1, _080EEB28  @ =0x00000FB2
	add r0, r5, r1
	ldrb r3, [r0]
	sub r2, r2, #224
	add r0, r5, r2
	ldrb r2, [r0]
	sub r1, r1, #176
	add r0, r5, r1
	ldrb r1, [r0]
	lsl r1, r1, #8
	ldr r0, _080EEB2C  @ =gUnknown_08178B90
	add r0, r3, r0
	orr r2, r2, r1
	ldrb r0, [r0]
	add r2, r2, r0
	ldr r0, _080EEB30  @ =gUnknown_08178B92
	add r3, r3, r0
	ldrb r0, [r3]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r1, _080EEB34  @ =0x00000968
	add r0, r5, r1
	strh r2, [r0]
	ldr r2, _080EEB38  @ =0x00000ED2
	add r0, r5, r2
	ldrb r1, [r0]
	add r2, r2, #32
	add r0, r5, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r1, r1, #16
	ldr r2, _080EEB3C  @ =0x0000096C
	add r0, r5, r2
	strh r1, [r0]
	bl sub_0810A3D0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EEB02
	ldr r1, _080EEB40  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r2, _080EEB44  @ =0x00000F52
	add r1, r5, r2
	mov r0, #3
	strb r0, [r1]
	mov r0, #16
	strb r0, [r7]
_080EEB02:
	add r0, r4, #0
	mov r1, #32
	bl sub_080C2DCC
	add r0, r4, #0
	bl sub_080EEB64
	b _080EEB5E
	.byte 0x00
	.byte 0x00
_080EEB14:
	.4byte gRam
_080EEB18:
	.4byte 0x00001052
_080EEB1C:
	.4byte 0x000010A2
_080EEB20:
	.4byte gUnknown_08178B60
_080EEB24:
	.4byte 0x00000FC2
_080EEB28:
	.4byte 0x00000FB2
_080EEB2C:
	.4byte gUnknown_08178B90
_080EEB30:
	.4byte gUnknown_08178B92
_080EEB34:
	.4byte 0x00000968
_080EEB38:
	.4byte 0x00000ED2
_080EEB3C:
	.4byte 0x0000096C
_080EEB40:
	.4byte 0x00000FA2
_080EEB44:
	.4byte 0x00000F52
_080EEB48:
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080EEB5E
	add r0, r6, #0
	mov r1, #32
	bl sub_080C2CB4
	add r0, r6, #0
	bl sub_080EEB64
_080EEB5E:
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EEA3C

	THUMB_FUNC_START sub_080EEB64
sub_080EEB64: @ 0x080EEB64
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r1, _080EEB94  @ =gRam
	mov r0, #150
	lsl r0, r0, #4
	add r5, r1, r0
	mov r2, #0
	ldrsb r2, [r5, r2]
	ldr r3, _080EEB98  @ =0x00000F12
	add r0, r1, r3
	add r4, r6, r0
	ldrb r3, [r4]
	add r7, r1, #0
	cmp r2, r3
	beq _080EEBA0
	ldrb r0, [r5]
	sub r0, r0, r3
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080EEB9C
	add r0, r3, #1
	b _080EEB9E
_080EEB94:
	.4byte gRam
_080EEB98:
	.4byte 0x00000F12
_080EEB9C:
	sub r0, r3, #1
_080EEB9E:
	strb r0, [r4]
_080EEBA0:
	ldr r0, _080EEBC4  @ =0x00000961
	add r4, r7, r0
	mov r1, #0
	ldrsb r1, [r4, r1]
	ldr r2, _080EEBC8  @ =0x00000F22
	add r0, r7, r2
	add r3, r6, r0
	ldrb r2, [r3]
	cmp r1, r2
	beq _080EEBD0
	ldrb r0, [r4]
	sub r0, r0, r2
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080EEBCC
	add r0, r2, #1
	b _080EEBCE
_080EEBC4:
	.4byte 0x00000961
_080EEBC8:
	.4byte 0x00000F22
_080EEBCC:
	sub r0, r2, #1
_080EEBCE:
	strb r0, [r3]
_080EEBD0:
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EEB64

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EEBD8
sub_080EEBD8: @ 0x080EEBD8
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	bl sub_080EEE94
	add r0, r7, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EEC48
	add r0, r7, #0
	bl sub_080CA3A0
	add r0, r7, #0
	mov r1, #2
	bl sub_080C2DCC
	ldr r4, _080EEC54  @ =gRam
	ldr r0, _080EEC58  @ =0x00000F12
	add r6, r4, r0
	add r6, r7, r6
	mov r1, #150
	lsl r1, r1, #4
	add r1, r1, r4
	mov r8, r1
	ldrb r0, [r1]
	strb r0, [r6]
	ldr r2, _080EEC5C  @ =0x00000F22
	add r5, r4, r2
	add r5, r7, r5
	ldr r0, _080EEC60  @ =0x00000961
	add r4, r4, r0
	ldrb r0, [r4]
	strb r0, [r5]
	add r0, r7, #0
	mov r1, #80
	bl sub_080C2DCC
	ldrb r1, [r5]
	mov r2, r8
	ldrb r0, [r2]
	sub r0, r0, r1
	strb r0, [r5]
	ldrb r0, [r6]
	mvn r0, r0
	strb r0, [r2]
	ldrb r1, [r4]
	sub r0, r0, r1
	strb r0, [r6]
	add r0, r7, #0
	bl sub_080EEC64
_080EEC48:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EEC54:
	.4byte gRam
_080EEC58:
	.4byte 0x00000F12
_080EEC5C:
	.4byte 0x00000F22
_080EEC60:
	.4byte 0x00000961
	THUMB_FUNC_END sub_080EEBD8

	THUMB_FUNC_START sub_080EEC64
sub_080EEC64: @ 0x080EEC64
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080EF19C
	add r0, r4, #0
	bl Sprite3_Move
	ldr r5, _080EECC0  @ =gRam
	ldr r1, _080EECC4  @ =0x00001052
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080EECE2
	add r0, r4, #0
	mov r1, #14
	bl sub_08106FA4
	mov r3, #150
	lsl r3, r3, #4
	add r2, r5, r3
	mov r0, #0
	ldrsb r0, [r2, r0]
	ldr r3, _080EECC8  @ =0x000011D2
	add r1, r5, r3
	add r0, r0, r1
	mov r1, #16
	strb r1, [r0]
	ldr r1, _080EECCC  @ =0x00001092
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #5
	beq _080EECD4
	mov r0, #0
	ldrsb r0, [r2, r0]
	ldr r2, _080EECD0  @ =0x000012FE
	add r1, r5, r2
	add r0, r0, r1
	mov r1, #79
	b _080EECE0
	.byte 0x00
	.byte 0x00
_080EECC0:
	.4byte gRam
_080EECC4:
	.4byte 0x00001052
_080EECC8:
	.4byte 0x000011D2
_080EECCC:
	.4byte 0x00001092
_080EECD0:
	.4byte 0x000012FE
_080EECD4:
	mov r0, #0
	ldrsb r0, [r2, r0]
	ldr r3, _080EECE8  @ =0x000012FE
	add r1, r5, r3
	add r0, r0, r1
	mov r1, #47
_080EECE0:
	strb r1, [r0]
_080EECE2:
	pop {r4,r5}
	pop {r0}
	bx r0
_080EECE8:
	.4byte 0x000012FE
	THUMB_FUNC_END sub_080EEC64

	THUMB_FUNC_START sub_080EECEC
sub_080EECEC: @ 0x080EECEC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r4, _080EED64  @ =gRam
	ldr r2, _080EED68  @ =0x00000FB2
	add r1, r4, r2
	ldrb r5, [r1]
	ldr r3, _080EED6C  @ =gUnknown_02003040
	add r1, r0, r3
	ldrb r3, [r1]
	ldr r2, _080EED70  @ =gUnknown_02003050
	add r1, r0, r2
	ldrb r2, [r1]
	lsl r2, r2, #8
	ldr r1, _080EED74  @ =gUnknown_08178BA0
	add r1, r5, r1
	orr r3, r3, r2
	ldrb r1, [r1]
	add r3, r3, r1
	ldr r1, _080EED78  @ =gUnknown_08178BA2
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #8
	add r3, r3, r1
	ldr r2, _080EED7C  @ =0x00000EE2
	add r1, r4, r2
	add r1, r0, r1
	strb r3, [r1]
	add r2, r2, #32
	add r1, r4, r2
	add r1, r0, r1
	lsr r3, r3, #8
	strb r3, [r1]
	ldr r3, _080EED80  @ =gUnknown_02003060
	add r1, r0, r3
	ldrb r2, [r1]
	add r3, r3, #16
	add r1, r0, r3
	ldrb r1, [r1]
	lsl r1, r1, #8
	ldr r3, _080EED84  @ =gUnknown_08178BA4
	add r5, r5, r3
	orr r2, r2, r1
	ldrb r5, [r5]
	add r2, r2, r5
	ldr r1, _080EED88  @ =0xFFFFFF00
	add r2, r2, r1
	ldr r3, _080EED8C  @ =0x00000ED2
	add r1, r4, r3
	add r1, r0, r1
	strb r2, [r1]
	ldr r1, _080EED90  @ =0x00000EF2
	add r4, r4, r1
	add r0, r0, r4
	lsr r2, r2, #8
	strb r2, [r0]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EED64:
	.4byte gRam
_080EED68:
	.4byte 0x00000FB2
_080EED6C:
	.4byte gUnknown_02003040
_080EED70:
	.4byte gUnknown_02003050
_080EED74:
	.4byte gUnknown_08178BA0
_080EED78:
	.4byte gUnknown_08178BA2
_080EED7C:
	.4byte 0x00000EE2
_080EED80:
	.4byte gUnknown_02003060
_080EED84:
	.4byte gUnknown_08178BA4
_080EED88:
	.4byte 0xFFFFFF00
_080EED8C:
	.4byte 0x00000ED2
_080EED90:
	.4byte 0x00000EF2
	THUMB_FUNC_END sub_080EECEC

	THUMB_FUNC_START sub_080EED94
sub_080EED94: @ 0x080EED94
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl Sprite3_Move
	ldr r5, _080EEDD4  @ =gRam
	ldr r1, _080EEDD8  @ =0x00000E75
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
	ldr r2, _080EEDDC  @ =0x00000FD2
	add r0, r5, r2
	add r3, r4, r0
	ldrb r0, [r3]
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080EEE1C
	ldr r1, _080EEDE0  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	add r1, r0, #0
	cmp r1, #0
	bne _080EEDE8
	ldr r2, _080EEDE4  @ =0x00001052
	add r1, r5, r2
	b _080EEE34
	.byte 0x00
	.byte 0x00
_080EEDD4:
	.4byte gRam
_080EEDD8:
	.4byte 0x00000E75
_080EEDDC:
	.4byte 0x00000FD2
_080EEDE0:
	.4byte 0x00000FC2
_080EEDE4:
	.4byte 0x00001052
_080EEDE8:
	cmp r1, #1
	beq _080EEE08
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080EEE04  @ =0x00000F92
	add r2, r5, r1
	add r2, r4, r2
	mov r1, #4
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #26
	strb r0, [r2]
	b _080EEE84
_080EEE04:
	.4byte 0x00000F92
_080EEE08:
	mov r0, #35
	strb r0, [r3]
	ldr r3, _080EEE18  @ =0x00000F92
	add r0, r5, r3
	add r0, r4, r0
	strb r2, [r0]
	b _080EEE84
	.byte 0x00
	.byte 0x00
_080EEE18:
	.4byte 0x00000F92
_080EEE1C:
	cmp r2, #1
	bne _080EEE74
	add r0, r4, #0
	mov r1, #48
	bl sub_080C35FC
	add r0, r4, #0
	mov r1, #100
	bl sub_080CF140
	ldr r0, _080EEE68  @ =0x00001052
	add r1, r5, r0
_080EEE34:
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r3, _080EEE6C  @ =0x00000F92
	add r2, r5, r3
	add r2, r4, r2
	ldr r4, _080EEE70  @ =gUnknown_08178BA6
	lsl r0, r0, #24
	lsr r0, r0, #26
	mov r3, #3
	and r0, r0, r3
	add r0, r0, r4
	ldrb r0, [r0]
	strb r0, [r2]
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #26
	and r0, r0, r3
	add r0, r0, r4
	ldrb r0, [r0]
	strb r0, [r2]
	b _080EEE84
	.byte 0x00
	.byte 0x00
_080EEE68:
	.4byte 0x00001052
_080EEE6C:
	.4byte 0x00000F92
_080EEE70:
	.4byte gUnknown_08178BA6
_080EEE74:
	ldr r2, _080EEE8C  @ =0x00000F92
	add r1, r5, r2
	add r1, r6, r1
	ldr r2, _080EEE90  @ =gUnknown_08178BAA
	lsr r0, r0, #26
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080EEE84:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EEE8C:
	.4byte 0x00000F92
_080EEE90:
	.4byte gUnknown_08178BAA
	THUMB_FUNC_END sub_080EED94

	THUMB_FUNC_START sub_080EEE94
sub_080EEE94: @ 0x080EEE94
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EEF34
	mov r1, #1
	ldr r0, _080EEF44  @ =gRam
	mov r8, r0
	ldr r0, _080EEF48  @ =0x00000F92
	add r0, r0, r8
	add r4, r4, r0
	mov r9, r4
	add r7, sp, #4
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r8
	mov r10, r2
_080EEECE:
	lsl r6, r1, #24
	asr r6, r6, #24
	ldr r0, _080EEF4C  @ =gUnknown_03003E74
	ldrb r1, [r7]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r2, _080EEF50  @ =gUnknown_08178BB4
	lsl r1, r6, #1
	add r1, r1, r2
	ldrh r1, [r1]
	mov r3, r10
	ldrh r3, [r3]
	add r1, r1, r3
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080EEF54  @ =0x00000964
	add r2, r2, r8
	ldrh r2, [r2]
	ldr r3, _080EEF58  @ =gUnknown_08178BB8
	mov r5, r9
	ldrb r4, [r5]
	add r3, r4, r3
	ldrb r3, [r3]
	ldr r5, _080EEF5C  @ =gUnknown_08178BBF
	lsl r4, r4, #1
	add r4, r4, r6
	add r4, r4, r5
	ldrb r4, [r4]
	ldr r5, _080EEF60  @ =gUnknown_03002B99
	ldrb r5, [r5]
	lsl r5, r5, #24
	asr r5, r5, #24
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	sub r6, r6, #1
	lsl r6, r6, #24
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsr r1, r6, #24
	cmp r6, #0
	bge _080EEECE
_080EEF34:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080EEF44:
	.4byte gRam
_080EEF48:
	.4byte 0x00000F92
_080EEF4C:
	.4byte gUnknown_03003E74
_080EEF50:
	.4byte gUnknown_08178BB4
_080EEF54:
	.4byte 0x00000964
_080EEF58:
	.4byte gUnknown_08178BB8
_080EEF5C:
	.4byte gUnknown_08178BBF
_080EEF60:
	.4byte gUnknown_03002B99
	THUMB_FUNC_END sub_080EEE94

	THUMB_FUNC_START sub_080EEF64
sub_080EEF64: @ 0x080EEF64
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r2, _080EEF84  @ =gRam
	ldr r3, _080EEF88  @ =0x00001142
	add r0, r2, r3
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EEF90
	ldr r3, _080EEF8C  @ =0x00000F92
	add r0, r2, r3
	add r0, r1, r0
	mov r1, #2
	strb r1, [r0]
	b _080EEF96
_080EEF84:
	.4byte gRam
_080EEF88:
	.4byte 0x00001142
_080EEF8C:
	.4byte 0x00000F92
_080EEF90:
	add r0, r1, #0
	bl sub_080EEF9C
_080EEF96:
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EEF64

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080EEF9C
sub_080EEF9C: @ 0x080EEF9C
	push {r4-r6,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080EEFD8  @ =gRam
	ldr r1, _080EEFDC  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r6, #0
	strb r6, [r0]
	bl GetRandomInt
	ldr r1, _080EEFE0  @ =0x00000FC2
	add r2, r5, r1
	add r2, r4, r2
	mov r1, #63
	and r1, r1, r0
	add r1, r1, #72
	strb r1, [r2]
	ldr r1, _080EEFE4  @ =0x00000F12
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
	ldr r0, _080EEFE8  @ =0x00000F22
	add r5, r5, r0
	add r4, r4, r5
	strb r6, [r4]
	pop {r4-r6}
	pop {r0}
	bx r0
_080EEFD8:
	.4byte gRam
_080EEFDC:
	.4byte 0x00000F52
_080EEFE0:
	.4byte 0x00000FC2
_080EEFE4:
	.4byte 0x00000F12
_080EEFE8:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080EEF9C

	THUMB_FUNC_START sub_080EEFEC
sub_080EEFEC: @ 0x080EEFEC
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080EF018  @ =gRam
	ldr r1, _080EF01C  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080EF020  @ =gUnknown_08178A74
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #2
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
_080EF018:
	.4byte gRam
_080EF01C:
	.4byte 0x00000F92
_080EF020:
	.4byte gUnknown_08178A74
	THUMB_FUNC_END sub_080EEFEC

	THUMB_FUNC_START sub_080EF024
sub_080EF024: @ 0x080EF024
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080EF044  @ =gRam
	ldr r2, _080EF048  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #4
	ldr r2, _080EF04C  @ =gUnknown_08178AB0
	add r1, r1, r2
	mov r2, #2
	bl sub_080C9480
	pop {r0}
	bx r0
_080EF044:
	.4byte gRam
_080EF048:
	.4byte 0x00000F92
_080EF04C:
	.4byte gUnknown_08178AB0
	THUMB_FUNC_END sub_080EF024

	THUMB_FUNC_START sub_080EF050
sub_080EF050: @ 0x080EF050
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080EF078  @ =gUnknown_03003E74
	mov r1, #84
	strh r1, [r2]
	ldr r1, _080EF07C  @ =gRam
	ldr r2, _080EF080  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #6
	ldr r2, _080EF084  @ =gUnknown_08178AE0
	add r1, r1, r2
	mov r2, #8
	bl sub_080C9480
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EF078:
	.4byte gUnknown_03003E74
_080EF07C:
	.4byte gRam
_080EF080:
	.4byte 0x00000F92
_080EF084:
	.4byte gUnknown_08178AE0
	THUMB_FUNC_END sub_080EF050

	THUMB_FUNC_START sub_080EF088
sub_080EF088: @ 0x080EF088
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080EEE94
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EF0A6
	add r0, r4, #0
	bl sub_080EEC64
_080EF0A6:
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080EF088

	THUMB_FUNC_START sub_080EF0AC
sub_080EF0AC: @ 0x080EF0AC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080EEE94
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EF0E2
	add r0, r4, #0
	bl sub_080C4F98
	ldr r1, _080EF0E8  @ =gUnknown_08178B94
	ldr r0, _080EF0EC  @ =gRam
	ldr r2, _080EF0F0  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080EF0E2:
	pop {r4}
	pop {r0}
	bx r0
_080EF0E8:
	.4byte gUnknown_08178B94
_080EF0EC:
	.4byte gRam
_080EF0F0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EF0AC

	THUMB_FUNC_START sub_080EF0F4
sub_080EF0F4: @ 0x080EF0F4
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080EECEC
	ldr r1, _080EF118  @ =gRam
	ldr r2, _080EF11C  @ =0x00000FC2
	add r0, r1, r2
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	beq _080EF120
	add r1, r0, #0
	add r0, r4, #0
	bl sub_080EF138
	b _080EF12C
_080EF118:
	.4byte gRam
_080EF11C:
	.4byte 0x00000FC2
_080EF120:
	ldr r0, _080EF134  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080EF12C:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EF134:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EF0F4

	THUMB_FUNC_START sub_080EF138
sub_080EF138: @ 0x080EF138
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r2, _080EF154  @ =gRam
	ldr r3, _080EF158  @ =0x00000F92
	add r2, r2, r3
	add r0, r0, r2
	mov r2, #4
	and r1, r1, r2
	lsl r1, r1, #24
	lsr r1, r1, #26
	strb r1, [r0]
	bx lr
_080EF154:
	.4byte gRam
_080EF158:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080EF138

	THUMB_FUNC_START sub_080EF15C
sub_080EF15C: @ 0x080EF15C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080EECEC
	ldr r2, _080EF190  @ =gRam
	ldr r0, _080EF194  @ =0x00001052
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldrb r0, [r1]
	ldr r1, _080EF198  @ =0x00000F92
	add r2, r2, r1
	add r4, r4, r2
	mov r1, #4
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #26
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
_080EF190:
	.4byte gRam
_080EF194:
	.4byte 0x00001052
_080EF198:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080EF15C

	THUMB_FUNC_START sub_080EF19C
sub_080EF19C: @ 0x080EF19C
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080EF1C8  @ =gRam
	ldr r1, _080EF1CC  @ =0x00001052
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	ldr r2, _080EF1D0  @ =0x00000F92
	add r3, r3, r2
	add r0, r0, r3
	ldr r3, _080EF1D4  @ =gUnknown_08178BA6
	lsl r1, r1, #24
	lsr r1, r1, #26
	mov r2, #3
	and r1, r1, r2
	add r1, r1, r3
	ldrb r1, [r1]
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080EF1C8:
	.4byte gRam
_080EF1CC:
	.4byte 0x00001052
_080EF1D0:
	.4byte 0x00000F92
_080EF1D4:
	.4byte gUnknown_08178BA6
	THUMB_FUNC_END sub_080EF19C

	THUMB_FUNC_START sub_080EF1D8
sub_080EF1D8: @ 0x080EF1D8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080ED830
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EF234
	ldr r2, _080EF23C  @ =gRam
	ldr r0, _080EF240  @ =0x00000FC2
	add r1, r2, r0
	add r1, r4, r1
	ldr r0, _080EF244  @ =gUnknown_08178BE4
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080EF248  @ =0x00001142
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	mov r5, #63
	ldr r0, _080EF24C  @ =gUnknown_08178BE0
	add r0, r4, r0
	ldrb r3, [r0]
	add r7, r2, #0
	ldr r6, _080EF250  @ =gUnknown_0200EE18
	mov r2, #255
_080EF212:
	add r0, r3, r6
	strb r2, [r0]
	lsl r1, r5, #24
	mov r0, #255
	lsl r0, r0, #24
	add r1, r1, r0
	add r0, r3, #1
	lsl r0, r0, #24
	lsr r3, r0, #24
	lsr r5, r1, #24
	cmp r1, #0
	bge _080EF212
	ldr r1, _080EF254  @ =0x000011F0
	add r0, r7, r1
	add r0, r4, r0
	mov r1, #7
	strb r1, [r0]
_080EF234:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EF23C:
	.4byte gRam
_080EF240:
	.4byte 0x00000FC2
_080EF244:
	.4byte gUnknown_08178BE4
_080EF248:
	.4byte 0x00001142
_080EF24C:
	.4byte gUnknown_08178BE0
_080EF250:
	.4byte gUnknown_0200EE18
_080EF254:
	.4byte 0x000011F0
	THUMB_FUNC_END sub_080EF1D8

	THUMB_FUNC_START sub_080EF258
sub_080EF258: @ 0x080EF258
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080EF2D8  @ =gRam
	ldr r1, _080EF2DC  @ =0x00000FC2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r7, [r0]
	cmp r7, #0
	bne _080EF2D2
	add r0, r5, #0
	bl sub_080E77E4
	mov r0, #102
	mov r1, #0
	bl sub_0812A324
	bl GetRandomInt
	ldr r1, _080EF2E0  @ =0x00000F72
	add r2, r6, r1
	add r2, r5, r2
	ldr r3, _080EF2E4  @ =gUnknown_08178BD0
	mov r4, #7
	add r1, r4, #0
	and r1, r1, r0
	add r1, r1, r3
	ldrb r0, [r1]
	strb r0, [r2]
	bl GetRandomInt
	ldr r2, _080EF2E8  @ =0x00000F82
	add r1, r6, r2
	add r1, r5, r1
	ldr r2, _080EF2EC  @ =gUnknown_08178BD8
	and r4, r4, r0
	add r4, r4, r2
	ldrb r0, [r4]
	strb r0, [r1]
	ldr r0, _080EF2F0  @ =0x00000F52
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EF2F4  @ =0x00001152
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #24
	strb r1, [r0]
	ldr r2, _080EF2F8  @ =0x00001092
	add r0, r6, r2
	add r0, r5, r0
	strb r7, [r0]
	ldr r1, _080EF2FC  @ =0x000010A2
	add r0, r6, r1
	add r0, r5, r0
	strb r7, [r0]
	add r0, r5, #0
	bl sub_080EFD3C
_080EF2D2:
	pop {r4-r7}
	pop {r0}
	bx r0
_080EF2D8:
	.4byte gRam
_080EF2DC:
	.4byte 0x00000FC2
_080EF2E0:
	.4byte 0x00000F72
_080EF2E4:
	.4byte gUnknown_08178BD0
_080EF2E8:
	.4byte 0x00000F82
_080EF2EC:
	.4byte gUnknown_08178BD8
_080EF2F0:
	.4byte 0x00000F52
_080EF2F4:
	.4byte 0x00001152
_080EF2F8:
	.4byte 0x00001092
_080EF2FC:
	.4byte 0x000010A2
	THUMB_FUNC_END sub_080EF258

	THUMB_FUNC_START sub_080EF300
sub_080EF300: @ 0x080EF300
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	bl sub_080C5044
	add r0, r7, #0
	bl sub_080C2C4C
	ldr r4, _080EF364  @ =gRam
	ldr r1, _080EF368  @ =0x00001092
	add r0, r4, r1
	add r2, r7, r0
	ldrb r0, [r2]
	cmp r0, #0
	beq _080EF380
	ldr r2, _080EF36C  @ =0x00000996
	add r0, r4, r2
	ldrb r1, [r0]
	mov r2, #1
	add r0, r2, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080EF398
	ldr r3, _080EF370  @ =0x000010A2
	add r0, r4, r3
	add r3, r7, r0
	ldrb r0, [r3]
	and r2, r2, r0
	ldr r0, _080EF374  @ =0x00001152
	add r1, r4, r0
	add r1, r7, r1
	ldr r0, _080EF378  @ =gUnknown_08178C00
	add r0, r2, r0
	ldrb r0, [r0]
	ldrb r4, [r1]
	add r0, r0, r4
	strb r0, [r1]
	ldr r1, _080EF37C  @ =gUnknown_08178C02
	add r2, r2, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r2, [r2]
	cmp r0, r2
	bne _080EF398
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
	b _080EF398
	.byte 0x00
	.byte 0x00
_080EF364:
	.4byte gRam
_080EF368:
	.4byte 0x00001092
_080EF36C:
	.4byte 0x00000996
_080EF370:
	.4byte 0x000010A2
_080EF374:
	.4byte 0x00001152
_080EF378:
	.4byte gUnknown_08178C00
_080EF37C:
	.4byte gUnknown_08178C02
_080EF380:
	ldr r0, _080EF464  @ =0x00001152
	add r1, r4, r0
	add r1, r7, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EF398
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
_080EF398:
	ldr r6, _080EF468  @ =gRam
	ldr r1, _080EF46C  @ =0x00000F72
	add r0, r6, r1
	add r0, r7, r0
	ldrb r0, [r0]
	ldr r2, _080EF470  @ =0x00000968
	add r2, r2, r6
	mov r12, r2
	strb r0, [r2]
	ldr r4, _080EF474  @ =0x00000F02
	add r3, r6, r4
	add r3, r7, r3
	ldrb r1, [r3]
	ldr r2, _080EF478  @ =0x00000969
	add r0, r6, r2
	strb r1, [r0]
	add r4, r4, #128
	add r0, r6, r4
	add r0, r7, r0
	ldrb r0, [r0]
	ldr r1, _080EF47C  @ =0x0000096C
	add r5, r6, r1
	strb r0, [r5]
	sub r4, r4, #144
	add r2, r6, r4
	add r2, r7, r2
	ldrb r1, [r2]
	ldr r4, _080EF480  @ =0x0000096D
	add r0, r6, r4
	strb r1, [r0]
	ldr r1, _080EF484  @ =0x00000EE2
	add r0, r6, r1
	add r0, r7, r0
	ldrb r0, [r0]
	mov r1, #150
	lsl r1, r1, #4
	add r4, r6, r1
	strb r0, [r4]
	ldrb r1, [r3]
	ldr r3, _080EF488  @ =0x00000961
	add r0, r6, r3
	strb r1, [r0]
	ldr r1, _080EF48C  @ =0x00000ED2
	add r0, r6, r1
	add r0, r7, r0
	ldrb r0, [r0]
	ldr r1, _080EF490  @ =0x00000964
	add r3, r6, r1
	strb r0, [r3]
	ldrb r1, [r2]
	ldr r2, _080EF494  @ =0x00000965
	add r0, r6, r2
	strb r1, [r0]
	ldrh r0, [r4]
	mov r4, r12
	ldrh r1, [r4]
	sub r0, r0, r1
	add r0, r0, #2
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #3
	bhi _080EF430
	ldrh r0, [r3]
	ldrh r1, [r5]
	sub r0, r0, r1
	add r0, r0, #2
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #3
	bhi _080EF430
	ldr r0, _080EF498  @ =0x00000F52
	add r1, r6, r0
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080EF430:
	add r0, r7, #0
	mov r1, #10
	bl sub_080C2DCC
	ldr r2, _080EF468  @ =gRam
	ldr r1, _080EF49C  @ =0x00000F12
	add r0, r2, r1
	add r0, r7, r0
	mov r3, #150
	lsl r3, r3, #4
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r4, _080EF4A0  @ =0x00000F22
	add r0, r2, r4
	add r0, r7, r0
	ldr r1, _080EF488  @ =0x00000961
	add r2, r2, r1
	ldrb r1, [r2]
	strb r1, [r0]
	add r0, r7, #0
	bl Sprite3_Move
	pop {r4-r7}
	pop {r0}
	bx r0
_080EF464:
	.4byte 0x00001152
_080EF468:
	.4byte gRam
_080EF46C:
	.4byte 0x00000F72
_080EF470:
	.4byte 0x00000968
_080EF474:
	.4byte 0x00000F02
_080EF478:
	.4byte 0x00000969
_080EF47C:
	.4byte 0x0000096C
_080EF480:
	.4byte 0x0000096D
_080EF484:
	.4byte 0x00000EE2
_080EF488:
	.4byte 0x00000961
_080EF48C:
	.4byte 0x00000ED2
_080EF490:
	.4byte 0x00000964
_080EF494:
	.4byte 0x00000965
_080EF498:
	.4byte 0x00000F52
_080EF49C:
	.4byte 0x00000F12
_080EF4A0:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080EF300

	THUMB_FUNC_START sub_080EF4A4
sub_080EF4A4: @ 0x080EF4A4
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	bl sub_080C5044
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r2, _080EF52C  @ =gRam
	ldr r1, _080EF530  @ =0x00001152
	add r0, r2, r1
	add r3, r4, r0
	ldrb r1, [r3]
	add r0, r1, #0
	sub r0, r0, #236
	mov r5, #128
	and r0, r0, r5
	cmp r0, #0
	bne _080EF4D6
	sub r0, r1, #1
	strb r0, [r3]
_080EF4D6:
	ldr r3, _080EF534  @ =0x00001142
	add r0, r2, r3
	add r0, r4, r0
	ldrb r1, [r0]
	add r0, r5, #0
	and r0, r0, r1
	cmp r0, #0
	beq _080EF524
	ldr r0, _080EF538  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080EF53C  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	strb r5, [r0]
	ldr r3, _080EF540  @ =0x00000FB2
	add r1, r2, r3
	add r1, r4, r1
	sub r3, r3, #208
	add r0, r2, r3
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080EF544  @ =0x00001042
	add r1, r2, r0
	add r1, r4, r1
	sub r3, r3, #16
	add r0, r2, r3
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080EF548  @ =0x00000FD2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #74
	strb r1, [r0]
_080EF524:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EF52C:
	.4byte gRam
_080EF530:
	.4byte 0x00001152
_080EF534:
	.4byte 0x00001142
_080EF538:
	.4byte 0x00000F52
_080EF53C:
	.4byte 0x00000FC2
_080EF540:
	.4byte 0x00000FB2
_080EF544:
	.4byte 0x00001042
_080EF548:
	.4byte 0x00000FD2
	THUMB_FUNC_END sub_080EF4A4

	THUMB_FUNC_START sub_080EF54C
sub_080EF54C: @ 0x080EF54C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080EF6D0  @ =gRam
	ldr r1, _080EF6D4  @ =0x00000FC2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080EF5A0
	ldr r2, _080EF6D8  @ =0x00000FA2
	add r0, r6, r2
	add r0, r5, r0
	strb r1, [r0]
	bl sub_080CAEC0
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EF5A0
	mov r0, #234
	add r1, r5, #0
	bl sub_080CA538
	add r4, r0, #0
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r3, _080EF6DC  @ =0x00001152
	add r0, r6, r3
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	ldr r1, _080EF6E0  @ =0x00000F62
	add r0, r6, r1
	add r4, r4, r0
	mov r0, #3
	strb r0, [r4]
_080EF5A0:
	ldr r4, _080EF6D0  @ =gRam
	ldr r2, _080EF6E4  @ =gUnknown_030031F2
	add r0, r5, r2
	ldrb r1, [r0]
	add r0, r1, #0
	sub r0, r0, #32
	lsl r0, r0, #24
	cmp r0, #0
	bge _080EF5B4
	b _080EF6C0
_080EF5B4:
	mov r0, #15
	and r0, r0, r1
	cmp r0, #0
	beq _080EF5BE
	b _080EF6C0
_080EF5BE:
	ldr r3, _080EF6E8  @ =0x00001052
	add r1, r4, r3
	add r1, r5, r1
	ldr r2, _080EF6EC  @ =gUnknown_08178C04
	ldr r3, _080EF6F0  @ =0x000011F0
	add r0, r4, r3
	add r7, r5, r0
	ldrb r0, [r7]
	add r0, r0, r2
	ldrb r1, [r1]
	ldrb r0, [r0]
	sub r1, r1, r0
	mov r2, #63
	ldr r0, _080EF6F4  @ =gUnknown_08178BE0
	add r0, r5, r0
	and r1, r1, r2
	ldrb r0, [r0]
	add r1, r1, r0
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r2, _080EF6F8  @ =gUnknown_0200EC18
	add r0, r1, r2
	ldrb r2, [r0]
	ldr r3, _080EF6FC  @ =gUnknown_03003132
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r0, _080EF700  @ =0x00000952
	add r0, r0, r4
	mov r10, r0
	ldrh r0, [r0]
	sub r2, r2, r0
	lsl r2, r2, #16
	lsr r2, r2, #16
	mov r8, r2
	ldr r2, _080EF704  @ =gUnknown_0200ED18
	add r0, r1, r2
	ldrb r2, [r0]
	ldr r3, _080EF708  @ =gUnknown_0200EE18
	add r1, r1, r3
	ldrb r0, [r1]
	sub r2, r2, r0
	ldr r1, _080EF70C  @ =gUnknown_03003122
	add r0, r5, r1
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r3, _080EF710  @ =0x00000958
	add r3, r3, r4
	mov r9, r3
	ldrh r0, [r3]
	sub r2, r2, r0
	lsl r2, r2, #16
	lsr r6, r2, #16
	ldr r1, _080EF714  @ =0x00000974
	add r0, r4, r1
	mov r2, r8
	strb r2, [r0]
	ldr r3, _080EF718  @ =0x00000975
	add r0, r4, r3
	strb r6, [r0]
	mov r0, #0
	add r1, r5, #0
	bl sub_080CA538
	add r2, r0, #0
	cmp r2, #0
	blt _080EF6C0
	ldr r0, _080EF71C  @ =0x00000CA2
	add r1, r4, r0
	mov r0, #11
	strh r0, [r1]
	ldr r1, _080EF6D8  @ =0x00000FA2
	add r0, r4, r1
	add r0, r2, r0
	mov r1, #4
	strb r1, [r0]
	ldr r3, _080EF6E4  @ =gUnknown_030031F2
	add r0, r2, r3
	mov r1, #31
	strb r1, [r0]
	ldr r3, _080EF6E0  @ =0x00000F62
	add r0, r4, r3
	add r0, r2, r0
	strb r1, [r0]
	mov r0, r10
	ldrh r1, [r0]
	add r1, r1, r8
	sub r3, r3, #128
	add r0, r4, r3
	add r0, r2, r0
	strb r1, [r0]
	ldr r3, _080EF6FC  @ =gUnknown_03003132
	add r0, r2, r3
	lsr r1, r1, #8
	strb r1, [r0]
	mov r0, r9
	ldrh r1, [r0]
	add r1, r6, r1
	ldr r3, _080EF720  @ =0x00000ED2
	add r0, r4, r3
	add r0, r2, r0
	strb r1, [r0]
	ldr r3, _080EF70C  @ =gUnknown_03003122
	add r0, r2, r3
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080EF724  @ =0x00001012
	add r0, r4, r1
	add r0, r2, r0
	mov r1, #3
	strb r1, [r0]
	ldr r3, _080EF728  @ =0x00001122
	add r0, r4, r3
	add r0, r2, r0
	mov r1, #12
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #41
	bl sub_080CF0AC
	ldrb r1, [r7]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080EF6C0
	sub r0, r1, #1
	strb r0, [r7]
_080EF6C0:
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EF6D0:
	.4byte gRam
_080EF6D4:
	.4byte 0x00000FC2
_080EF6D8:
	.4byte 0x00000FA2
_080EF6DC:
	.4byte 0x00001152
_080EF6E0:
	.4byte 0x00000F62
_080EF6E4:
	.4byte gUnknown_030031F2
_080EF6E8:
	.4byte 0x00001052
_080EF6EC:
	.4byte gUnknown_08178C04
_080EF6F0:
	.4byte 0x000011F0
_080EF6F4:
	.4byte gUnknown_08178BE0
_080EF6F8:
	.4byte gUnknown_0200EC18
_080EF6FC:
	.4byte gUnknown_03003132
_080EF700:
	.4byte 0x00000952
_080EF704:
	.4byte gUnknown_0200ED18
_080EF708:
	.4byte gUnknown_0200EE18
_080EF70C:
	.4byte gUnknown_03003122
_080EF710:
	.4byte 0x00000958
_080EF714:
	.4byte 0x00000974
_080EF718:
	.4byte 0x00000975
_080EF71C:
	.4byte 0x00000CA2
_080EF720:
	.4byte 0x00000ED2
_080EF724:
	.4byte 0x00001012
_080EF728:
	.4byte 0x00001122
	THUMB_FUNC_END sub_080EF54C

	THUMB_FUNC_START sub_080EF72C
sub_080EF72C: @ 0x080EF72C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #20
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r1, _080EF838  @ =gUnknown_08178C0C
	lsl r0, r7, #1
	add r0, r0, r1
	ldrh r0, [r0]
	str r0, [sp, #4]
	ldr r0, _080EF83C  @ =gUnknown_08178BE0
	add r0, r7, r0
	ldrb r0, [r0]
	str r0, [sp, #8]
	ldr r4, _080EF840  @ =gRam
	ldr r1, _080EF844  @ =0x00001052
	add r0, r4, r1
	add r5, r7, r0
	ldrb r2, [r5]
	mov r8, r2
	ldr r3, _080EF848  @ =0x00000F12
	add r1, r4, r3
	add r1, r7, r1
	ldr r6, _080EF84C  @ =0x00001152
	add r0, r4, r6
	add r0, r7, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	sub r1, r1, r0
	mov r2, #150
	lsl r2, r2, #4
	add r0, r4, r2
	strb r1, [r0]
	add r3, r3, #16
	add r0, r4, r3
	add r0, r7, r0
	ldrb r1, [r0]
	ldr r6, _080EF850  @ =0x00000961
	add r0, r4, r6
	strb r1, [r0]
	bl sub_080CA32C
	ldr r2, _080EF854  @ =0x00000F92
	add r1, r4, r2
	add r1, r7, r1
	strb r0, [r1]
	ldrb r2, [r5]
	ldr r3, [sp, #8]
	add r2, r3, r2
	lsl r2, r2, #24
	lsr r2, r2, #24
	ldr r6, _080EF858  @ =gUnknown_0200EF18
	add r1, r2, r6
	strb r0, [r1]
	ldr r0, _080EF85C  @ =gUnknown_0200EE18
	add r1, r2, r0
	ldr r3, _080EF860  @ =0x00001142
	add r0, r4, r3
	add r0, r7, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r6, _080EF864  @ =gUnknown_0200ED18
	add r1, r2, r6
	ldr r3, _080EF868  @ =0x00000ED2
	add r0, r4, r3
	add r0, r7, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r6, _080EF86C  @ =gUnknown_0200EC18
	add r2, r2, r6
	ldr r1, _080EF870  @ =0x00000EE2
	add r0, r4, r1
	add r0, r7, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r2, _080EF874  @ =0x00000FA2
	add r0, r4, r2
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #9
	bne _080EF7F0
	ldr r3, _080EF878  @ =0x000009AD
	add r0, r4, r3
	ldr r6, _080EF87C  @ =0x00001605
	add r1, r4, r6
	ldrb r2, [r0]
	ldrb r0, [r1]
	orr r0, r0, r2
	cmp r0, #0
	bne _080EF7F0
	ldrb r0, [r5]
	add r0, r0, #1
	mov r1, #63
	and r0, r0, r1
	strb r0, [r5]
_080EF7F0:
	ldr r2, _080EF840  @ =gRam
	ldr r0, _080EF880  @ =0x00001122
	add r1, r2, r0
	add r1, r7, r1
	ldr r3, _080EF884  @ =0x00000D94
	add r0, r2, r3
	add r0, r7, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	add r4, r0, #0
	orr r4, r4, r1
	str r4, [sp, #12]
	ldr r6, _080EF888  @ =0x000011F0
	add r0, r2, r6
	add r3, r7, r0
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080EF81A
	b _080EFC32
_080EF81A:
	add r1, r2, #0
	ldr r2, _080EF848  @ =0x00000F12
	add r0, r1, r2
	add r0, r7, r0
	ldrb r0, [r0]
	lsr r0, r0, #7
	str r0, [sp, #16]
	ldr r0, _080EF88C  @ =gUnknown_08178C14
	ldr r4, [sp, #16]
	add r0, r4, r0
	ldrb r0, [r0]
	mov r9, r0
	ldrb r4, [r3]
	b _080EF96E
	.byte 0x00
	.byte 0x00
_080EF838:
	.4byte gUnknown_08178C0C
_080EF83C:
	.4byte gUnknown_08178BE0
_080EF840:
	.4byte gRam
_080EF844:
	.4byte 0x00001052
_080EF848:
	.4byte 0x00000F12
_080EF84C:
	.4byte 0x00001152
_080EF850:
	.4byte 0x00000961
_080EF854:
	.4byte 0x00000F92
_080EF858:
	.4byte gUnknown_0200EF18
_080EF85C:
	.4byte gUnknown_0200EE18
_080EF860:
	.4byte 0x00001142
_080EF864:
	.4byte gUnknown_0200ED18
_080EF868:
	.4byte 0x00000ED2
_080EF86C:
	.4byte gUnknown_0200EC18
_080EF870:
	.4byte 0x00000EE2
_080EF874:
	.4byte 0x00000FA2
_080EF878:
	.4byte 0x000009AD
_080EF87C:
	.4byte 0x00001605
_080EF880:
	.4byte 0x00001122
_080EF884:
	.4byte 0x00000D94
_080EF888:
	.4byte 0x000011F0
_080EF88C:
	.4byte gUnknown_08178C14
_080EF890:
	ldr r0, [sp, #8]
	add r0, r0, r8
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r6, #8
	neg r6, r6
	add r8, r8, r6
	mov r0, #63
	mov r1, r8
	and r1, r1, r0
	mov r8, r1
	ldr r3, _080EF8E0  @ =gUnknown_0200EE18
	add r0, r5, r3
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	lsl r4, r4, #24
	mov r10, r4
	cmp r0, #0
	bne _080EF952
	ldr r4, _080EF8E4  @ =gRam
	ldr r6, _080EF8E8  @ =0x000011F0
	add r0, r4, r6
	add r1, r7, r0
	ldrb r0, [r1]
	cmp r0, #7
	bne _080EF8CA
	cmp r2, #0
	beq _080EF8F4
_080EF8CA:
	mov r6, #150
	mov r2, r10
	asr r0, r2, #24
	ldrb r1, [r1]
	cmp r0, r1
	bne _080EF900
	ldr r1, _080EF8EC  @ =gUnknown_08178C18
	ldr r3, _080EF8F0  @ =gUnknown_0200EF18
	add r0, r5, r3
	b _080EF8FA
	.byte 0x00
	.byte 0x00
_080EF8E0:
	.4byte gUnknown_0200EE18
_080EF8E4:
	.4byte gRam
_080EF8E8:
	.4byte 0x000011F0
_080EF8EC:
	.4byte gUnknown_08178C18
_080EF8F0:
	.4byte gUnknown_0200EF18
_080EF8F4:
	ldr r1, _080EFA4C  @ =gUnknown_08178C28
	ldr r4, _080EFA50  @ =gUnknown_0200EF18
	add r0, r5, r4
_080EF8FA:
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r6, [r0]
_080EF900:
	ldr r0, [sp, #4]
	add r0, r0, r9
	lsr r0, r0, #2
	ldr r2, _080EFA54  @ =gUnknown_0200EC18
	add r1, r5, r2
	ldrb r1, [r1]
	ldr r3, _080EFA58  @ =gRam
	ldr r4, _080EFA5C  @ =0x00000952
	add r2, r3, r4
	ldrh r2, [r2]
	sub r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080EFA60  @ =gUnknown_0200ED18
	add r2, r5, r3
	ldrb r2, [r2]
	ldr r4, _080EFA64  @ =gUnknown_0200EE18
	add r3, r5, r4
	ldrb r3, [r3]
	sub r2, r2, r3
	ldr r4, _080EFA68  @ =gUnknown_03002B88
	ldrh r3, [r4]
	sub r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080EFA6C  @ =gUnknown_08178C38
	mov r12, r3
	ldr r4, _080EFA50  @ =gUnknown_0200EF18
	add r3, r5, r4
	ldrb r3, [r3]
	add r3, r3, r12
	ldrb r4, [r3]
	ldr r3, [sp, #12]
	orr r3, r3, r4
	lsl r3, r3, #8
	orr r6, r6, r3
	mov r3, #2
	str r3, [sp]
	add r3, r6, #0
	bl sub_080C6004
_080EF952:
	mov r0, #255
	lsl r0, r0, #24
	add r0, r0, r10
	lsr r4, r0, #24
	ldr r1, _080EFA70  @ =gUnknown_08178C16
	ldr r6, [sp, #16]
	add r1, r6, r1
	mov r0, r9
	add r0, r0, #3
	ldrb r1, [r1]
	add r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
_080EF96E:
	lsl r2, r4, #24
	cmp r2, #0
	bge _080EF890
	ldr r1, _080EFA58  @ =gRam
	ldr r2, _080EFA74  @ =0x00001052
	add r0, r1, r2
	add r0, r7, r0
	ldrb r0, [r0]
	mov r8, r0
	ldr r3, _080EFA78  @ =0x000011F0
	add r0, r1, r3
	add r0, r7, r0
	mov r4, #32
	mov r9, r4
	ldrb r4, [r0]
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	blt _080EFA0A
	mov r10, r1
	ldr r6, _080EFA7C  @ =0x00000958
	add r5, r1, r6
_080EF99C:
	ldr r0, [sp, #8]
	add r0, r0, r8
	lsl r0, r0, #24
	lsr r3, r0, #24
	mov r0, #8
	neg r0, r0
	add r8, r8, r0
	mov r0, #63
	mov r1, r8
	and r1, r1, r0
	mov r8, r1
	ldr r2, _080EFA64  @ =gUnknown_0200EE18
	add r0, r3, r2
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080EF9F2
	ldr r0, [sp, #4]
	add r0, r0, r9
	lsr r0, r0, #2
	ldr r6, _080EFA54  @ =gUnknown_0200EC18
	add r1, r3, r6
	ldrb r1, [r1]
	ldr r2, _080EFA5C  @ =0x00000952
	add r2, r2, r10
	ldrh r2, [r2]
	sub r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r6, _080EFA60  @ =gUnknown_0200ED18
	add r2, r3, r6
	ldrb r2, [r2]
	ldrh r3, [r5]
	sub r3, r3, #10
	sub r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	mov r3, #2
	str r3, [sp]
	ldr r3, _080EFA80  @ =0x000004CC
	bl sub_080C6004
_080EF9F2:
	lsl r1, r4, #24
	mov r0, #255
	lsl r0, r0, #24
	add r1, r1, r0
	mov r0, r9
	add r0, r0, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	lsr r4, r1, #24
	cmp r1, #0
	bge _080EF99C
_080EFA0A:
	ldr r1, _080EFA58  @ =gRam
	ldr r2, _080EFA84  @ =0x00000F52
	add r0, r1, r2
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #1
	bne _080EFA1A
	b _080EFBB8
_080EFA1A:
	cmp r0, #5
	bne _080EFA20
	b _080EFC32
_080EFA20:
	ldr r3, _080EFA88  @ =0x00000FD2
	add r0, r1, r3
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EFA2E
	b _080EFC32
_080EFA2E:
	ldr r4, _080EFA8C  @ =0x00000F12
	add r0, r1, r4
	add r0, r7, r0
	ldrb r1, [r0]
	lsr r1, r1, #7
	ldrb r0, [r0]
	lsl r0, r0, #3
	orr r1, r1, r0
	cmp r1, #0
	beq _080EFA90
	mov r0, #8
	bl sub_080CF3A0
	b _080EFA96
	.byte 0x00
	.byte 0x00
_080EFA4C:
	.4byte gUnknown_08178C28
_080EFA50:
	.4byte gUnknown_0200EF18
_080EFA54:
	.4byte gUnknown_0200EC18
_080EFA58:
	.4byte gRam
_080EFA5C:
	.4byte 0x00000952
_080EFA60:
	.4byte gUnknown_0200ED18
_080EFA64:
	.4byte gUnknown_0200EE18
_080EFA68:
	.4byte gUnknown_03002B88
_080EFA6C:
	.4byte gUnknown_08178C38
_080EFA70:
	.4byte gUnknown_08178C16
_080EFA74:
	.4byte 0x00001052
_080EFA78:
	.4byte 0x000011F0
_080EFA7C:
	.4byte 0x00000958
_080EFA80:
	.4byte 0x000004CC
_080EFA84:
	.4byte 0x00000F52
_080EFA88:
	.4byte 0x00000FD2
_080EFA8C:
	.4byte 0x00000F12
_080EFA90:
	mov r0, #8
	bl sub_080CF388
_080EFA96:
	ldr r2, _080EFB84  @ =gRam
	ldr r6, _080EFB88  @ =0x00000FD2
	add r0, r2, r6
	add r0, r7, r0
	ldrb r1, [r0]
	lsr r1, r1, #2
	mov r0, #3
	bic r0, r0, r1
	lsl r0, r0, #1
	ldr r3, _080EFB8C  @ =0x0000096C
	add r1, r2, r3
	strb r0, [r1]
	ldr r4, _080EFB90  @ =0x00000FB2
	add r0, r2, r4
	add r0, r7, r0
	ldrb r1, [r0]
	sub r6, r6, #208
	add r0, r2, r6
	add r0, r7, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r3, r3, #26
	add r0, r2, r3
	ldrh r0, [r0]
	sub r1, r1, r0
	mov r4, #150
	lsl r4, r4, #4
	add r0, r2, r4
	strh r1, [r0]
	ldr r6, _080EFB94  @ =0x00001042
	add r0, r2, r6
	add r0, r7, r0
	ldrb r1, [r0]
	ldr r3, _080EFB98  @ =0x00000EF2
	add r0, r2, r3
	add r0, r7, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r4, r4, #8
	add r0, r2, r4
	ldrh r0, [r0]
	sub r1, r1, r0
	ldr r6, _080EFB9C  @ =0x00000964
	add r0, r2, r6
	strh r1, [r0]
	mov r4, #1
	mov r7, #0
	mov r9, r7
	add r7, r2, #0
	mov r10, r0
_080EFAFE:
	ldr r1, _080EFB8C  @ =0x0000096C
	add r0, r7, r1
	ldrb r6, [r0]
	lsl r4, r4, #24
	mov r8, r4
	mov r2, r8
	asr r2, r2, #24
	mov r8, r2
	add r6, r6, r8
	lsl r6, r6, #24
	lsr r6, r6, #24
	ldr r1, _080EFBA0  @ =gUnknown_08178C48
	add r1, r6, r1
	ldr r3, _080EFBA4  @ =gUnknown_08178C50
	add r3, r6, r3
	ldr r0, _080EFBA8  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r9
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r4, #150
	lsl r4, r4, #4
	add r2, r7, r4
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	mov r2, #0
	ldrsb r2, [r3, r2]
	mov r3, r10
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080EFBAC  @ =gUnknown_08178C58
	add r3, r6, r3
	ldrb r3, [r3]
	ldr r4, _080EFBB0  @ =gUnknown_08178C60
	add r4, r6, r4
	ldrb r5, [r4]
	mov r4, #49
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	ldr r4, _080EFBB4  @ =gUnknown_08178C68
	add r6, r6, r4
	ldrb r4, [r6]
	str r4, [sp]
	bl sub_080C6004
	mov r4, #1
	neg r4, r4
	add r8, r8, r4
	mov r6, r8
	lsl r6, r6, #24
	mov r0, r9
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	lsr r4, r6, #24
	cmp r6, #0
	bge _080EFAFE
	b _080EFC32
_080EFB84:
	.4byte gRam
_080EFB88:
	.4byte 0x00000FD2
_080EFB8C:
	.4byte 0x0000096C
_080EFB90:
	.4byte 0x00000FB2
_080EFB94:
	.4byte 0x00001042
_080EFB98:
	.4byte 0x00000EF2
_080EFB9C:
	.4byte 0x00000964
_080EFBA0:
	.4byte gUnknown_08178C48
_080EFBA4:
	.4byte gUnknown_08178C50
_080EFBA8:
	.4byte gUnknown_03003E74
_080EFBAC:
	.4byte gUnknown_08178C58
_080EFBB0:
	.4byte gUnknown_08178C60
_080EFBB4:
	.4byte gUnknown_08178C68
_080EFBB8:
	ldr r0, _080EFC44  @ =gRam
	ldr r2, _080EFC48  @ =0x00000D94
	add r1, r0, r2
	add r1, r7, r1
	ldr r3, _080EFC4C  @ =0x00001122
	add r0, r0, r3
	add r0, r7, r0
	ldrb r5, [r1]
	ldrb r0, [r0]
	eor r5, r5, r0
	mov r0, #48
	and r5, r5, r0
	mov r0, #4
	bl sub_080CF388
	ldr r1, _080EFC50  @ =gUnknown_08178C7C
	ldr r4, _080EFC44  @ =gRam
	ldr r6, _080EFC54  @ =0x00000FC2
	add r0, r4, r6
	add r0, r7, r0
	ldrb r0, [r0]
	lsr r0, r0, #3
	add r0, r0, r1
	ldrb r6, [r0]
	ldr r0, _080EFC58  @ =gUnknown_03003E74
	ldrh r0, [r0]
	ldr r2, _080EFC5C  @ =0x00000EE2
	add r1, r4, r2
	add r1, r7, r1
	ldrb r1, [r1]
	ldr r3, _080EFC60  @ =0x00000952
	add r2, r4, r3
	ldrh r2, [r2]
	sub r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080EFC64  @ =0x00000ED2
	add r2, r4, r3
	add r2, r7, r2
	ldrb r2, [r2]
	ldr r7, _080EFC68  @ =0x00000958
	add r3, r4, r7
	ldrh r3, [r3]
	sub r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080EFC6C  @ =gUnknown_08178C70
	add r3, r6, r3
	ldrb r3, [r3]
	ldr r4, _080EFC70  @ =gUnknown_08178C76
	add r6, r6, r4
	mov r4, #1
	orr r5, r5, r4
	ldrb r4, [r6]
	orr r5, r5, r4
	lsl r5, r5, #8
	orr r3, r3, r5
	mov r4, #2
	str r4, [sp]
	bl sub_080C6004
_080EFC32:
	add sp, sp, #20
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EFC44:
	.4byte gRam
_080EFC48:
	.4byte 0x00000D94
_080EFC4C:
	.4byte 0x00001122
_080EFC50:
	.4byte gUnknown_08178C7C
_080EFC54:
	.4byte 0x00000FC2
_080EFC58:
	.4byte gUnknown_03003E74
_080EFC5C:
	.4byte 0x00000EE2
_080EFC60:
	.4byte 0x00000952
_080EFC64:
	.4byte 0x00000ED2
_080EFC68:
	.4byte 0x00000958
_080EFC6C:
	.4byte gUnknown_08178C70
_080EFC70:
	.4byte gUnknown_08178C76
	THUMB_FUNC_END sub_080EF72C

	THUMB_FUNC_START sub_080EFC74
sub_080EFC74: @ 0x080EFC74
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EFCB8
	add r0, r4, #0
	bl sub_080EF72C
	add r0, r4, #0
	bl Sprite3_CheckIfActive_Permissive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080EFCB8
	ldr r1, _080EFCC0  @ =gUnknown_08178BE8
	ldr r0, _080EFCC4  @ =gRam
	ldr r2, _080EFCC8  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080EFCB8:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080EFCC0:
	.4byte gUnknown_08178BE8
_080EFCC4:
	.4byte gRam
_080EFCC8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EFC74

	THUMB_FUNC_START sub_080EFCCC
sub_080EFCCC: @ 0x080EFCCC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080EFCE8  @ =gRam
	ldr r2, _080EFCEC  @ =0x00000F52
	add r1, r1, r2
	add r1, r0, r1
	mov r2, #5
	strb r2, [r1]
	mov r1, #192
	bl sub_080ED938
	pop {r0}
	bx r0
_080EFCE8:
	.4byte gRam
_080EFCEC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EFCCC

	THUMB_FUNC_START sub_080EFCF0
sub_080EFCF0: @ 0x080EFCF0
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r4, _080EFD2C  @ =gRam
	ldr r1, _080EFD30  @ =0x00000FC2
	add r0, r4, r1
	add r3, r2, r0
	ldr r1, _080EFD34  @ =0x000010D2
	add r0, r4, r1
	add r0, r2, r0
	ldrb r1, [r3]
	ldrb r0, [r0]
	orr r0, r0, r1
	cmp r0, #0
	bne _080EFD26
	mov r0, #127
	strb r0, [r3]
	ldr r0, _080EFD38  @ =0x00000F52
	add r1, r4, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r2, #0
	mov r1, #45
	bl sub_080CF0AC
_080EFD26:
	pop {r4}
	pop {r0}
	bx r0
_080EFD2C:
	.4byte gRam
_080EFD30:
	.4byte 0x00000FC2
_080EFD34:
	.4byte 0x000010D2
_080EFD38:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EFCF0

	THUMB_FUNC_START sub_080EFD3C
sub_080EFD3C: @ 0x080EFD3C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080EFD74  @ =gRam
	ldr r1, _080EFD78  @ =0x00000FB2
	add r3, r2, r1
	add r3, r0, r3
	ldr r4, _080EFD7C  @ =0x00000EE2
	add r1, r2, r4
	add r1, r0, r1
	ldrb r1, [r1]
	strb r1, [r3]
	ldr r1, _080EFD80  @ =0x00001042
	add r3, r2, r1
	add r3, r0, r3
	sub r4, r4, #16
	add r1, r2, r4
	add r1, r0, r1
	ldrb r1, [r1]
	strb r1, [r3]
	ldr r1, _080EFD84  @ =0x00000FD2
	add r2, r2, r1
	add r0, r0, r2
	mov r1, #74
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
_080EFD74:
	.4byte gRam
_080EFD78:
	.4byte 0x00000FB2
_080EFD7C:
	.4byte 0x00000EE2
_080EFD80:
	.4byte 0x00001042
_080EFD84:
	.4byte 0x00000FD2
	THUMB_FUNC_END sub_080EFD3C

	THUMB_FUNC_START sub_080EFD88
sub_080EFD88: @ 0x080EFD88
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080EFDD8  @ =gRam
	ldr r1, _080EFDDC  @ =0x00000FC2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080EFDD0
	ldr r2, _080EFDE0  @ =0x00000F52
	add r0, r6, r2
	add r0, r5, r0
	strb r1, [r0]
	bl GetRandomInt
	ldr r1, _080EFDE4  @ =0x00000EE2
	add r2, r6, r1
	add r2, r5, r2
	ldr r3, _080EFDE8  @ =gUnknown_08178BD0
	mov r4, #7
	add r1, r4, #0
	and r1, r1, r0
	add r1, r1, r3
	ldrb r0, [r1]
	strb r0, [r2]
	bl GetRandomInt
	ldr r2, _080EFDEC  @ =0x00000ED2
	add r1, r6, r2
	add r1, r5, r1
	ldr r2, _080EFDF0  @ =gUnknown_08178BD8
	and r4, r4, r0
	add r4, r4, r2
	ldrb r0, [r4]
	strb r0, [r1]
_080EFDD0:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080EFDD8:
	.4byte gRam
_080EFDDC:
	.4byte 0x00000FC2
_080EFDE0:
	.4byte 0x00000F52
_080EFDE4:
	.4byte 0x00000EE2
_080EFDE8:
	.4byte gUnknown_08178BD0
_080EFDEC:
	.4byte 0x00000ED2
_080EFDF0:
	.4byte gUnknown_08178BD8
	THUMB_FUNC_END sub_080EFD88

	THUMB_FUNC_START sub_080EFDF4
sub_080EFDF4: @ 0x080EFDF4
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F0224
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	beq _080EFE12
	b _080EFF84
_080EFE12:
	ldr r5, _080EFECC  @ =gRam
	ldr r2, _080EFED0  @ =0x00000F92
	add r0, r5, r2
	add r6, r4, r0
	strb r1, [r6]
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080EFED4  @ =0x00000FC2
	add r0, r5, r3
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080EFE56
	ldr r3, _080EFED8  @ =0x0000097C
	add r0, r5, r3
	ldrb r0, [r0]
	add r0, r0, #48
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #95
	bhi _080EFEAE
	add r3, r3, #1
	add r0, r5, r3
	ldrb r0, [r0]
	add r0, r0, #32
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #63
	bhi _080EFEAE
	mov r0, #32
	strb r0, [r1]
_080EFE56:
	ldr r0, _080EFEDC  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080EFEE0  @ =gUnknown_08178C90
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r3, _080EFEE4  @ =0x00000F12
	add r1, r5, r3
	add r1, r4, r1
	ldr r0, _080EFEE8  @ =gUnknown_08178C94
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080EFEEC  @ =0x00001042
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EFE84
	add r0, r4, #0
	bl Sprite3_Move
_080EFE84:
	add r0, r4, #0
	bl sub_080C6F48
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	ldr r2, _080EFEF0  @ =0x00001052
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r2, _080EFEF4  @ =gUnknown_08178C8C
	lsl r0, r0, #24
	lsr r0, r0, #25
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r6]
_080EFEAE:
	ldr r0, _080EFECC  @ =gRam
	ldr r3, _080EFEF8  @ =0x00000FF2
	add r0, r0, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #62
	bne _080EFF00
	ldr r0, _080EFEFC  @ =gUnknown_02002338
	ldrb r0, [r0]
	cmp r0, #0
	beq _080EFF06
	add r0, r4, #0
	bl sub_080C3138
	b _080EFF06
_080EFECC:
	.4byte gRam
_080EFED0:
	.4byte 0x00000F92
_080EFED4:
	.4byte 0x00000FC2
_080EFED8:
	.4byte 0x0000097C
_080EFEDC:
	.4byte 0x00000F22
_080EFEE0:
	.4byte gUnknown_08178C90
_080EFEE4:
	.4byte 0x00000F12
_080EFEE8:
	.4byte gUnknown_08178C94
_080EFEEC:
	.4byte 0x00001042
_080EFEF0:
	.4byte 0x00001052
_080EFEF4:
	.4byte gUnknown_08178C8C
_080EFEF8:
	.4byte 0x00000FF2
_080EFEFC:
	.4byte gUnknown_02002338
_080EFF00:
	add r0, r4, #0
	bl sub_080C3138
_080EFF06:
	ldr r5, _080EFF8C  @ =gRam
	ldr r1, _080EFF90  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #9
	beq _080EFF84
	ldr r2, _080EFF94  @ =0x00000F82
	add r0, r5, r2
	add r6, r4, r0
	ldr r3, _080EFF98  @ =0x00000FF2
	add r0, r5, r3
	add r2, r4, r0
	ldrb r0, [r2]
	mov r1, #2
	cmp r0, #23
	beq _080EFF2A
	mov r1, #1
_080EFF2A:
	mov r3, #0
	strb r1, [r6]
	mov r0, #236
	strb r0, [r2]
	ldr r0, _080EFF9C  @ =0x00001122
	add r6, r5, r0
	add r2, r4, r6
	ldrb r1, [r2]
	mov r0, #254
	and r0, r0, r1
	strb r0, [r2]
	ldr r1, _080EFFA0  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	strb r3, [r0]
	mov r0, #62
	add r1, r4, #0
	bl sub_080CA538
	lsl r0, r0, #24
	asr r4, r0, #24
	cmp r4, #0
	blt _080EFF84
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080EFFA4  @ =0x00001012
	add r1, r5, r2
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #127
	and r0, r0, r2
	strb r0, [r1]
	ldr r3, _080EFFA8  @ =0x00000FE2
	add r0, r5, r3
	add r0, r4, r0
	mov r1, #128
	strb r1, [r0]
	add r0, r4, r6
	mov r1, #9
	strb r1, [r0]
	ldr r2, _080EFFAC  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
_080EFF84:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080EFF8C:
	.4byte gRam
_080EFF90:
	.4byte 0x00000FA2
_080EFF94:
	.4byte 0x00000F82
_080EFF98:
	.4byte 0x00000FF2
_080EFF9C:
	.4byte 0x00001122
_080EFFA0:
	.4byte 0x00000F92
_080EFFA4:
	.4byte 0x00001012
_080EFFA8:
	.4byte 0x00000FE2
_080EFFAC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080EFDF4

	THUMB_FUNC_START sub_080EFFB0
sub_080EFFB0: @ 0x080EFFB0
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EFFCC
	b _080F0160
_080EFFCC:
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	beq _080EFFDA
	b _080F0160
_080EFFDA:
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	ldr r5, _080F0044  @ =gRam
	ldr r1, _080F0048  @ =0x00000FE2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080EFFF6
	add r0, r4, #0
	bl sub_080C4F98
_080EFFF6:
	ldr r2, _080F004C  @ =0x00001052
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r3, r0, #25
	mov r0, #3
	and r3, r3, r0
	ldr r0, _080F0050  @ =0x00000F92
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080F0054  @ =gUnknown_08178CA0
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080F0058  @ =0x00001122
	add r2, r5, r1
	add r2, r4, r2
	ldrb r0, [r2]
	mov r1, #191
	and r1, r1, r0
	strb r1, [r2]
	ldr r0, _080F005C  @ =gUnknown_08178CA4
	add r0, r3, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
	ldr r2, _080F0060  @ =0x00001042
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F0064
	add r0, r4, #0
	bl Sprite3_Move
	b _080F0092
_080F0044:
	.4byte gRam
_080F0048:
	.4byte 0x00000FE2
_080F004C:
	.4byte 0x00001052
_080F0050:
	.4byte 0x00000F92
_080F0054:
	.4byte gUnknown_08178CA0
_080F0058:
	.4byte 0x00001122
_080F005C:
	.4byte gUnknown_08178CA4
_080F0060:
	.4byte 0x00001042
_080F0064:
	ldr r1, _080F0120  @ =0x000010E2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #16
	strb r1, [r0]
	bl GetRandomInt
	mov r3, #3
	and r3, r3, r0
	ldr r2, _080F0124  @ =0x00000F22
	add r1, r5, r2
	add r1, r4, r1
	ldr r0, _080F0128  @ =gUnknown_08178C98
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F012C  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080F0130  @ =gUnknown_08178C9C
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
_080F0092:
	add r0, r4, #0
	bl sub_080C6F48
	ldr r5, _080F0134  @ =gRam
	ldr r1, _080F0120  @ =0x000010E2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F00E6
	ldr r2, _080F0138  @ =0x00000996
	add r0, r5, r2
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #31
	and r0, r0, r1
	cmp r0, #0
	bne _080F00E6
	add r0, r4, #0
	mov r1, #16
	bl sub_080C2CB4
	ldr r0, _080F012C  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	mov r2, #150
	lsl r2, r2, #4
	add r0, r5, r2
	ldrb r0, [r0]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F0124  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	add r2, r2, #1
	add r0, r5, r2
	ldrb r0, [r0]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
_080F00E6:
	ldr r2, _080F0134  @ =gRam
	ldr r1, _080F0138  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080F0160
	ldr r1, _080F013C  @ =0x000010A2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	lsl r0, r1, #24
	lsr r0, r0, #24
	cmp r0, #192
	bne _080F0140
	add r0, r4, #0
	mov r1, #15
	bl sub_080C6E4C
	add r0, r4, #0
	mov r1, #1
	mov r2, #217
	bl sub_080F016C
	b _080F0160
	.byte 0x00
	.byte 0x00
_080F0120:
	.4byte 0x000010E2
_080F0124:
	.4byte 0x00000F22
_080F0128:
	.4byte gUnknown_08178C98
_080F012C:
	.4byte 0x00000F12
_080F0130:
	.4byte gUnknown_08178C9C
_080F0134:
	.4byte gRam
_080F0138:
	.4byte 0x00000996
_080F013C:
	.4byte 0x000010A2
_080F0140:
	mov r0, #15
	and r1, r1, r0
	cmp r1, #0
	bne _080F0160
	ldr r1, _080F0168  @ =0x00001082
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	mov r2, #219
	cmp r0, #6
	beq _080F0158
	mov r2, #217
_080F0158:
	add r0, r4, #0
	mov r1, #0
	bl sub_080F016C
_080F0160:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080F0168:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080EFFB0

	THUMB_FUNC_START sub_080F016C
sub_080F016C: @ 0x080F016C
	push {r4-r7,lr}
	add r3, r1, #0
	lsl r0, r0, #24
	lsr r7, r0, #24
	lsl r3, r3, #24
	lsr r3, r3, #24
	lsl r2, r2, #24
	lsr r2, r2, #24
	add r0, r2, #0
	add r1, r7, #0
	add r2, r3, #0
	bl sub_080C9AAC
	lsl r2, r0, #24
	asr r6, r2, #24
	cmp r6, #0
	blt _080F01FC
	ldr r4, _080F0204  @ =gRam
	ldr r0, _080F0208  @ =0x00001082
	add r1, r4, r0
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsr r0, r2, #24
	bl sub_080CAE50
	mov r1, #150
	lsl r1, r1, #4
	add r5, r4, r1
	ldrh r1, [r5]
	add r1, r1, #8
	ldr r2, _080F020C  @ =0x00000EE2
	add r0, r4, r2
	add r0, r6, r0
	strb r1, [r0]
	add r2, r2, #32
	add r0, r4, r2
	add r0, r6, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080F0210  @ =0x00001152
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #32
	strb r1, [r0]
	ldr r2, _080F0214  @ =0x000010E2
	add r0, r4, r2
	add r0, r6, r0
	mov r1, #16
	strb r1, [r0]
	add r0, r7, #0
	bl sub_080C35FC
	ldr r0, _080F0218  @ =0x00000F12
	add r1, r4, r0
	add r1, r6, r1
	ldrb r0, [r5]
	neg r0, r0
	strb r0, [r1]
	ldr r2, _080F021C  @ =0x00000F22
	add r1, r4, r2
	add r1, r6, r1
	ldr r0, _080F0220  @ =0x00000961
	add r4, r4, r0
	ldrb r0, [r4]
	neg r0, r0
	strb r0, [r1]
	add r0, r7, #0
	mov r1, #94
	bl sub_080CF140
_080F01FC:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0204:
	.4byte gRam
_080F0208:
	.4byte 0x00001082
_080F020C:
	.4byte 0x00000EE2
_080F0210:
	.4byte 0x00001152
_080F0214:
	.4byte 0x000010E2
_080F0218:
	.4byte 0x00000F12
_080F021C:
	.4byte 0x00000F22
_080F0220:
	.4byte 0x00000961
	THUMB_FUNC_END sub_080F016C

	THUMB_FUNC_START sub_080F0224
sub_080F0224: @ 0x080F0224
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F02F4
	ldr r3, _080F0304  @ =gRam
	ldr r1, _080F0308  @ =0x00001610
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080F02F4
	ldr r1, _080F030C  @ =0x00000FF2
	add r0, r3, r1
	add r0, r4, r0
	ldrb r0, [r0]
	mov r1, #0
	cmp r0, #23
	bne _080F0264
	mov r1, #2
_080F0264:
	ldr r4, _080F0310  @ =0x0000096D
	add r2, r3, r4
	strb r1, [r2]
	ldr r1, _080F0314  @ =0x00000F92
	add r0, r3, r1
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #1
	sub r4, r4, #1
	add r1, r3, r4
	strb r0, [r1]
	mov r5, #1
	mov r8, r3
	mov r10, r2
	ldr r0, _080F0318  @ =0x00000969
	add r0, r0, r8
	mov r9, r0
_080F0286:
	ldr r0, _080F031C  @ =0x0000096C
	add r0, r0, r8
	ldrb r0, [r0]
	add r0, r0, r5
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r0, _080F0320  @ =gUnknown_08178CB4
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #132
	bne _080F02A4
	mov r1, r10
	mov r0, #0
	ldrsb r0, [r1, r0]
	add r0, r0, #132
_080F02A4:
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r0, _080F0324  @ =gUnknown_03003E74
	sub r5, r5, #1
	ldrh r0, [r0]
	sub r0, r0, r5
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r1, #150
	lsl r1, r1, #4
	add r1, r1, r8
	ldrh r1, [r1]
	ldr r3, _080F0328  @ =0x00000964
	add r3, r3, r8
	ldr r2, _080F032C  @ =gUnknown_08178CA8
	add r2, r7, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	mov r4, r9
	ldrb r3, [r4]
	mov r4, #254
	and r4, r4, r3
	ldr r3, _080F0330  @ =gUnknown_08178CC0
	add r3, r7, r3
	ldrb r3, [r3]
	orr r4, r4, r3
	lsl r4, r4, #8
	orr r6, r6, r4
	mov r3, #2
	str r3, [sp]
	add r3, r6, #0
	bl sub_080C6368
	cmp r5, #0
	bge _080F0286
_080F02F4:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080F0304:
	.4byte gRam
_080F0308:
	.4byte 0x00001610
_080F030C:
	.4byte 0x00000FF2
_080F0310:
	.4byte 0x0000096D
_080F0314:
	.4byte 0x00000F92
_080F0318:
	.4byte 0x00000969
_080F031C:
	.4byte 0x0000096C
_080F0320:
	.4byte gUnknown_08178CB4
_080F0324:
	.4byte gUnknown_03003E74
_080F0328:
	.4byte 0x00000964
_080F032C:
	.4byte gUnknown_08178CA8
_080F0330:
	.4byte gUnknown_08178CC0
	THUMB_FUNC_END sub_080F0224

	THUMB_FUNC_START sub_080F0334
sub_080F0334: @ 0x080F0334
	bx lr
	THUMB_FUNC_END sub_080F0334

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F0338
sub_080F0338: @ 0x080F0338
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r0, _080F0354  @ =gRam
	ldr r2, _080F0358  @ =0x00000F52
	add r0, r0, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F035C
	add r0, r1, #0
	bl sub_080EFDF4
	b _080F0362
_080F0354:
	.4byte gRam
_080F0358:
	.4byte 0x00000F52
_080F035C:
	add r0, r1, #0
	bl sub_080EFFB0
_080F0362:
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F0338

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F0368
sub_080F0368: @ 0x080F0368
	bx lr
	THUMB_FUNC_END sub_080F0368

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F036C
sub_080F036C: @ 0x080F036C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080F0338
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F036C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F037C
sub_080F037C: @ 0x080F037C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080F053C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F03FC
	add r0, r4, #0
	bl sub_080F048C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F03E0
	ldr r2, _080F03D0  @ =gRam
	ldr r1, _080F03D4  @ =0x00000FC2
	add r0, r2, r1
	add r5, r4, r0
	ldrb r0, [r5]
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080F03DC
	ldr r1, _080F03D8  @ =0x00001122
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F03FC
	mov r0, #8
	strb r0, [r5]
	b _080F03FC
_080F03D0:
	.4byte gRam
_080F03D4:
	.4byte 0x00000FC2
_080F03D8:
	.4byte 0x00001122
_080F03DC:
	cmp r1, #1
	bne _080F03E8
_080F03E0:
	add r0, r4, #0
	bl sub_080F040C
	b _080F03FC
_080F03E8:
	ldr r1, _080F0404  @ =0x00001122
	add r2, r2, r1
	add r2, r6, r2
	ldr r3, _080F0408  @ =gUnknown_08178CCC
	lsr r0, r0, #25
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
_080F03FC:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0404:
	.4byte 0x00001122
_080F0408:
	.4byte gUnknown_08178CCC
	THUMB_FUNC_END sub_080F037C

	THUMB_FUNC_START sub_080F040C
sub_080F040C: @ 0x080F040C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080F0470  @ =gRam
	ldr r0, _080F0474  @ =0x00000FA2
	add r6, r5, r0
	add r1, r4, r6
	mov r0, #0
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080F04D8
	lsl r0, r0, #24
	asr r2, r0, #24
	cmp r2, #0
	blt _080F046A
	add r1, r2, r6
	mov r0, #6
	strb r0, [r1]
	ldr r1, _080F0478  @ =0x00000F82
	add r0, r5, r1
	add r0, r2, r0
	mov r1, #2
	strb r1, [r0]
	ldr r3, _080F047C  @ =0x00001122
	add r0, r5, r3
	add r0, r2, r0
	strb r1, [r0]
	ldr r1, _080F0480  @ =0x00001132
	add r0, r5, r1
	add r0, r2, r0
	mov r1, #9
	strb r1, [r0]
	ldr r3, _080F0484  @ =0x00000FD2
	add r0, r5, r3
	add r0, r2, r0
	mov r1, #31
	strb r1, [r0]
	ldr r1, _080F0488  @ =0x00001012
	add r0, r5, r1
	add r0, r2, r0
	mov r1, #3
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #41
	bl sub_080CF0AC
_080F046A:
	pop {r4-r6}
	pop {r0}
	bx r0
_080F0470:
	.4byte gRam
_080F0474:
	.4byte 0x00000FA2
_080F0478:
	.4byte 0x00000F82
_080F047C:
	.4byte 0x00001122
_080F0480:
	.4byte 0x00001132
_080F0484:
	.4byte 0x00000FD2
_080F0488:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080F040C

	THUMB_FUNC_START sub_080F048C
sub_080F048C: @ 0x080F048C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080F04C4  @ =gRam
	ldr r1, _080F04C8  @ =0x0000178A
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #10
	and r0, r0, r1
	cmp r0, #0
	beq _080F04D0
	ldr r1, _080F04CC  @ =0x000016F6
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F04D0
	bl sub_080C3C98
	add r0, r4, #0
	bl sub_080C4574
	bl sub_080C466C
	lsl r0, r0, #24
	lsr r0, r0, #24
	b _080F04D2
_080F04C4:
	.4byte gRam
_080F04C8:
	.4byte 0x0000178A
_080F04CC:
	.4byte 0x000016F6
_080F04D0:
	mov r0, #0
_080F04D2:
	pop {r4}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080F048C

	THUMB_FUNC_START sub_080F04D8
sub_080F04D8: @ 0x080F04D8
	push {r4,r5,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #74
	bl sub_080CA538
	add r5, r0, #0
	cmp r5, #0
	blt _080F0530
	lsl r4, r5, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080CAE50
	add r0, r4, #0
	bl sub_080C2914
	ldr r1, _080F0520  @ =gRam
	ldr r2, _080F0524  @ =0x00000FD2
	add r0, r1, r2
	add r0, r5, r0
	mov r2, #80
	strb r2, [r0]
	ldr r2, _080F0528  @ =0x00000F22
	add r0, r1, r2
	add r0, r5, r0
	mov r2, #24
	strb r2, [r0]
	ldr r0, _080F052C  @ =0x00001152
	add r1, r1, r0
	add r1, r5, r1
	mov r0, #48
	strb r0, [r1]
	add r0, r5, #0
	b _080F0534
_080F0520:
	.4byte gRam
_080F0524:
	.4byte 0x00000FD2
_080F0528:
	.4byte 0x00000F22
_080F052C:
	.4byte 0x00001152
_080F0530:
	mov r0, #1
	neg r0, r0
_080F0534:
	pop {r4,r5}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080F04D8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F053C
sub_080F053C: @ 0x080F053C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r0, #8
	bl sub_080CF388
	ldr r0, _080F0564  @ =gRam
	ldr r1, _080F0568  @ =0x00001610
	add r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080F055E
	ldr r1, _080F056C  @ =gUnknown_08178CD0
	add r0, r4, #0
	mov r2, #2
	bl sub_080C9480
_080F055E:
	pop {r4}
	pop {r0}
	bx r0
_080F0564:
	.4byte gRam
_080F0568:
	.4byte 0x00001610
_080F056C:
	.4byte gUnknown_08178CD0
	THUMB_FUNC_END sub_080F053C

	THUMB_FUNC_START sub_080F0570
sub_080F0570: @ 0x080F0570
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080F05BC  @ =gRam
	ldr r0, _080F05C0  @ =0x00001142
	add r2, r4, r0
	add r2, r5, r2
	ldr r3, _080F05C4  @ =gUnknown_08178CE4
	ldr r1, _080F05C8  @ =0x00001052
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #7
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	add r0, r5, #0
	bl sub_080F06F0
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F0604
	ldr r1, _080F05CC  @ =0x00000FC2
	add r0, r4, r1
	add r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080F05D0
_080F05B2:
	add r0, r5, #0
	bl sub_080F0610
	b _080F0604
	.byte 0x00
	.byte 0x00
_080F05BC:
	.4byte gRam
_080F05C0:
	.4byte 0x00001142
_080F05C4:
	.4byte gUnknown_08178CE4
_080F05C8:
	.4byte 0x00001052
_080F05CC:
	.4byte 0x00000FC2
_080F05D0:
	mov r0, #3
	strb r0, [r1]
	mov r1, #15
	ldr r0, _080F060C  @ =0x00000FA2
	add r3, r4, r0
	add r0, r0, #80
	add r2, r4, r0
_080F05DE:
	add r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F05EE
	add r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #16
	beq _080F05B2
_080F05EE:
	sub r1, r1, #1
	cmp r1, #0
	bge _080F05DE
	ldr r1, _080F060C  @ =0x00000FA2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #6
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080F0990
_080F0604:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F060C:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F0570

	THUMB_FUNC_START sub_080F0610
sub_080F0610: @ 0x080F0610
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F06D2
	ldr r5, _080F06DC  @ =gRam
	ldr r0, _080F06E0  @ =0x00001052
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F06E4  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080F06A6
	add r0, r4, #0
	mov r1, #4
	bl sub_080C2CB4
	ldr r2, _080F06E8  @ =0x00000F12
	add r0, r5, r2
	add r0, r4, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	ldrb r0, [r0]
	ldrb r1, [r1]
	sub r0, r0, r1
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	beq _080F067C
	mov r2, #1
	neg r2, r2
	cmp r0, #0
	ble _080F0670
	mov r2, #1
_080F0670:
	ldr r0, _080F06EC  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, r2
	strb r0, [r1]
_080F067C:
	ldr r0, _080F06DC  @ =gRam
	ldr r2, _080F06E8  @ =0x00000F12
	add r1, r0, r2
	add r3, r4, r1
	mov r1, #150
	lsl r1, r1, #4
	add r0, r0, r1
	ldrb r2, [r3]
	ldrb r0, [r0]
	sub r0, r2, r0
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	beq _080F06A6
	mov r1, #1
	neg r1, r1
	cmp r0, #0
	ble _080F06A2
	mov r1, #1
_080F06A2:
	sub r0, r2, r1
	strb r0, [r3]
_080F06A6:
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F06BE
	add r0, r4, #0
	bl sub_080F09BC
_080F06BE:
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	add r0, r4, #0
	bl sub_080C6F48
	add r0, r4, #0
	bl Sprite_WallInducedSpeedInversion
_080F06D2:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F06DC:
	.4byte gRam
_080F06E0:
	.4byte 0x00001052
_080F06E4:
	.4byte 0x00000996
_080F06E8:
	.4byte 0x00000F12
_080F06EC:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080F0610

	THUMB_FUNC_START sub_080F06F0
sub_080F06F0: @ 0x080F06F0
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	ldr r2, _080F07F0  @ =gRam
	ldr r0, _080F07F4  @ =0x00000974
	add r1, r2, r0
	mov r0, #0
	strb r0, [r1]
	ldr r1, _080F07F8  @ =0x00000FA2
	add r0, r2, r1
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #6
	bne _080F074C
	ldr r3, _080F07FC  @ =0x00000FC2
	add r0, r2, r3
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #6
	bne _080F0734
	ldr r5, _080F0800  @ =0x000009AD
	add r0, r2, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F0734
	mov r0, r8
	bl sub_080F0820
_080F0734:
	ldr r2, _080F07F0  @ =gRam
	ldr r1, _080F07FC  @ =0x00000FC2
	add r0, r2, r1
	add r0, r0, r8
	ldrb r0, [r0]
	lsr r0, r0, #1
	mov r1, #4
	and r0, r0, r1
	add r0, r0, #4
	ldr r3, _080F07F4  @ =0x00000974
	add r2, r2, r3
	strb r0, [r2]
_080F074C:
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r8
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F07E0
	mov r6, #3
	ldr r7, _080F07F0  @ =gRam
	ldr r5, _080F0804  @ =0x00000969
	add r5, r5, r7
	mov r10, r5
	mov r0, #150
	lsl r0, r0, #4
	add r0, r0, r7
	mov r9, r0
_080F0770:
	ldr r1, _080F07F4  @ =0x00000974
	add r0, r7, r1
	ldrb r5, [r0]
	add r5, r5, r6
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r0, _080F0808  @ =gUnknown_03003E74
	sub r1, r6, #3
	ldrh r0, [r0]
	sub r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r1, _080F080C  @ =gUnknown_08178CEC
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	mov r2, r9
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080F0810  @ =0x00000964
	add r3, r7, r2
	ldr r2, _080F0814  @ =gUnknown_08178CF8
	add r2, r5, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080F0818  @ =gUnknown_08178D04
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080F081C  @ =gUnknown_08178D10
	add r5, r5, r4
	ldrb r5, [r5]
	mov r12, r5
	mov r5, r10
	ldrb r4, [r5]
	mov r5, r12
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	sub r6, r6, #1
	cmp r6, #0
	bge _080F0770
	mov r0, r8
	bl sub_080C6230
_080F07E0:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080F07F0:
	.4byte gRam
_080F07F4:
	.4byte 0x00000974
_080F07F8:
	.4byte 0x00000FA2
_080F07FC:
	.4byte 0x00000FC2
_080F0800:
	.4byte 0x000009AD
_080F0804:
	.4byte 0x00000969
_080F0808:
	.4byte gUnknown_03003E74
_080F080C:
	.4byte gUnknown_08178CEC
_080F0810:
	.4byte 0x00000964
_080F0814:
	.4byte gUnknown_08178CF8
_080F0818:
	.4byte gUnknown_08178D04
_080F081C:
	.4byte gUnknown_08178D10
	THUMB_FUNC_END sub_080F06F0

	THUMB_FUNC_START sub_080F0820
sub_080F0820: @ 0x080F0820
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	mov r1, #41
	bl sub_080CF0AC
	mov r5, #5
	ldr r6, _080F0890  @ =gRam
	ldr r0, _080F0894  @ =0x00001052
	add r0, r0, r6
	mov r8, r0
_080F083C:
	mov r0, #16
	add r1, r7, #0
	bl sub_080CA538
	lsl r0, r0, #24
	asr r4, r0, #24
	cmp r4, #0
	blt _080F0880
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r0, _080F0898  @ =0x00000F22
	add r1, r6, r0
	add r1, r4, r1
	ldr r0, _080F089C  @ =gUnknown_08178D1C
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F08A0  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldr r0, _080F08A4  @ =gUnknown_08178D22
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080F08A8  @ =0x00001152
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #48
	strb r1, [r0]
	mov r0, r8
	add r1, r4, r0
	mov r0, #255
	strb r0, [r1]
_080F0880:
	sub r5, r5, #1
	cmp r5, #0
	bge _080F083C
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080F0890:
	.4byte gRam
_080F0894:
	.4byte 0x00001052
_080F0898:
	.4byte 0x00000F22
_080F089C:
	.4byte gUnknown_08178D1C
_080F08A0:
	.4byte 0x00000F12
_080F08A4:
	.4byte gUnknown_08178D22
_080F08A8:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080F0820

	THUMB_FUNC_START sub_080F08AC
sub_080F08AC: @ 0x080F08AC
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080F0954  @ =gRam
	ldr r1, _080F0958  @ =0x00001052
	add r0, r3, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r2, r1, #0
	cmp r1, #0
	bne _080F08CA
	ldr r5, _080F095C  @ =0x00000FA2
	add r0, r3, r5
	add r0, r4, r0
	strb r1, [r0]
_080F08CA:
	cmp r2, #63
	bhi _080F08D6
	mov r0, #1
	and r2, r2, r0
	cmp r2, #0
	bne _080F08DC
_080F08D6:
	add r0, r4, #0
	bl sub_080C58F0
_080F08DC:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F094E
	add r0, r4, #0
	bl sub_080C841C
	cmp r0, #0
	bne _080F094E
	ldr r6, _080F0954  @ =gRam
	ldr r1, _080F0958  @ =0x00001052
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	sub r1, r1, #1
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	lsr r7, r0, #24
	cmp r7, #0
	bne _080F094E
	ldr r5, _080F0960  @ =0x00001152
	add r0, r6, r5
	add r5, r4, r0
	ldrb r0, [r5]
	sub r0, r0, #1
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r1, _080F0964  @ =0x00001142
	add r0, r6, r1
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F0936
	strb r7, [r2]
	mov r0, #16
	strb r0, [r5]
_080F0936:
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C6F48
	add r0, r4, #0
	bl Sprite_WallInducedSpeedInversion
	add r0, r4, #0
	bl sub_080C5044
_080F094E:
	pop {r4-r7}
	pop {r0}
	bx r0
_080F0954:
	.4byte gRam
_080F0958:
	.4byte 0x00001052
_080F095C:
	.4byte 0x00000FA2
_080F0960:
	.4byte 0x00001152
_080F0964:
	.4byte 0x00001142
	THUMB_FUNC_END sub_080F08AC

	THUMB_FUNC_START sub_080F0968
sub_080F0968: @ 0x080F0968
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F0984  @ =gRam
	ldr r1, _080F0988  @ =0x00000FC2
	add r2, r2, r1
	add r2, r0, r2
	ldr r3, _080F098C  @ =gUnknown_08178CE0
	mov r1, #3
	and r1, r1, r0
	add r1, r1, r3
	ldrb r0, [r1]
	strb r0, [r2]
	bx lr
	.byte 0x00
	.byte 0x00
_080F0984:
	.4byte gRam
_080F0988:
	.4byte 0x00000FC2
_080F098C:
	.4byte gUnknown_08178CE0
	THUMB_FUNC_END sub_080F0968

	THUMB_FUNC_START sub_080F0990
sub_080F0990: @ 0x080F0990
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080F09AC  @ =gRam
	ldr r2, _080F09B0  @ =0x000010C2
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #0
	strb r2, [r1]
	ldr r1, _080F09B4  @ =0x00000FC2
	add r3, r3, r1
	add r0, r0, r3
	mov r1, #15
	strb r1, [r0]
	bx lr
_080F09AC:
	.4byte gRam
_080F09B0:
	.4byte 0x000010C2
_080F09B4:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080F0990

	THUMB_FUNC_START sub_080F09B8
sub_080F09B8: @ 0x080F09B8
	bx lr
	THUMB_FUNC_END sub_080F09B8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F09BC
sub_080F09BC: @ 0x080F09BC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080F09E8  @ =gRam
	ldr r2, _080F09EC  @ =0x000016F8
	add r1, r0, r2
	ldrb r0, [r1]
	cmp r0, #0
	bne _080F09E0
	mov r0, #4
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #16
	bl sub_080C4378
	add r0, r4, #0
	bl Sprite_Invert_XY_Speeds
_080F09E0:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F09E8:
	.4byte gRam
_080F09EC:
	.4byte 0x000016F8
	THUMB_FUNC_END sub_080F09BC

	THUMB_FUNC_START sub_080F09F0
sub_080F09F0: @ 0x080F09F0
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080F0A74
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F0A6A
	add r0, r4, #0
	bl sub_080C5080
	add r0, r4, #0
	bl sub_080C90F4
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080F0A48  @ =gRam
	ldr r2, _080F0A4C  @ =0x00001082
	add r1, r3, r2
	add r1, r4, r1
	mov r2, #3
	eor r0, r0, r2
	strb r0, [r1]
	mov r0, #179
	lsl r0, r0, #5
	add r5, r3, r0
	ldrb r0, [r5]
	cmp r0, #2
	bls _080F0A54
	ldr r1, _080F0A50  @ =0x0000014B
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	b _080F0A6A
_080F0A48:
	.4byte gRam
_080F0A4C:
	.4byte 0x00001082
_080F0A50:
	.4byte 0x0000014B
_080F0A54:
	mov r1, #165
	lsl r1, r1, #1
	add r0, r6, #0
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F0A6A
	mov r0, #2
	strb r0, [r5]
_080F0A6A:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F09F0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F0A74
sub_080F0A74: @ 0x080F0A74
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080F0AB0  @ =gRam
	ldr r1, _080F0AB4  @ =0x0000096C
	add r2, r0, r1
	mov r3, #0
	mov r1, #2
	strb r1, [r2]
	ldr r2, _080F0AB8  @ =0x0000096D
	add r1, r0, r2
	strb r3, [r1]
	ldr r1, _080F0ABC  @ =0x00000FB2
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080F0AC0  @ =gUnknown_08178D38
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0AB0:
	.4byte gRam
_080F0AB4:
	.4byte 0x0000096C
_080F0AB8:
	.4byte 0x0000096D
_080F0ABC:
	.4byte 0x00000FB2
_080F0AC0:
	.4byte gUnknown_08178D38
	THUMB_FUNC_END sub_080F0A74

	THUMB_FUNC_START sub_080F0AC4
sub_080F0AC4: @ 0x080F0AC4
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	add r0, r4, #0
	bl sub_080F0E8C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F0B44
	add r0, r4, #0
	bl sub_080C90F4
	add r0, r4, #0
	bl sub_080C5080
	ldr r6, _080F0B50  @ =gRam
	ldr r1, _080F0B54  @ =0x00001002
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C79F8
	ldr r2, _080F0B58  @ =0x00001132
	add r0, r6, r2
	add r5, r4, r0
	ldrb r7, [r5]
	mov r0, #7
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F0B2C
	ldr r0, _080F0B5C  @ =0x00000F82
	add r2, r6, r0
	add r2, r4, r2
	ldr r1, _080F0B60  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	strb r1, [r2]
	mov r1, #3
	strb r1, [r0]
_080F0B2C:
	strb r7, [r5]
	ldr r1, _080F0B64  @ =gUnknown_08178D78
	ldr r2, _080F0B60  @ =0x00000F52
	add r0, r6, r2
	add r0, r0, r8
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	mov r0, r8
	bl _call_via_r1
_080F0B44:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0B50:
	.4byte gRam
_080F0B54:
	.4byte 0x00001002
_080F0B58:
	.4byte 0x00001132
_080F0B5C:
	.4byte 0x00000F82
_080F0B60:
	.4byte 0x00000F52
_080F0B64:
	.4byte gUnknown_08178D78
	THUMB_FUNC_END sub_080F0AC4

	THUMB_FUNC_START sub_080F0B68
sub_080F0B68: @ 0x080F0B68
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C90F4
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r5, _080F0BAC  @ =gRam
	ldr r1, _080F0BB0  @ =0x00001082
	add r0, r5, r1
	add r6, r4, r0
	mov r7, #3
	eor r2, r2, r7
	strb r2, [r6]
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080F0BB8
	ldr r1, _080F0BB4  @ =0x00000F22
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	sub r1, r1, #16
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	b _080F0C00
_080F0BAC:
	.4byte gRam
_080F0BB0:
	.4byte 0x00001082
_080F0BB4:
	.4byte 0x00000F22
_080F0BB8:
	bl sub_08093078
	add r0, r4, #0
	bl sub_080C2FA8
	eor r0, r0, r7
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080F0C08  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	mov r0, #1
	eor r2, r2, r0
	mov r0, #2
	orr r2, r2, r0
	strb r2, [r6]
	ldr r0, _080F0C0C  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	mov r0, #1
	and r0, r0, r2
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F0C10  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080F0C14  @ =gUnknown_08178D88
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080F0C18  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
_080F0C00:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0C08:
	.4byte 0x00000FB2
_080F0C0C:
	.4byte 0x00000F52
_080F0C10:
	.4byte 0x00000F22
_080F0C14:
	.4byte gUnknown_08178D88
_080F0C18:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080F0B68

	THUMB_FUNC_START sub_080F0C1C
sub_080F0C1C: @ 0x080F0C1C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	ldr r5, _080F0C3C  @ =gRam
	ldr r1, _080F0C40  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F0C44
	add r0, r4, #0
	bl sub_080F0DD4
	b _080F0C78
	.byte 0x00
	.byte 0x00
_080F0C3C:
	.4byte gRam
_080F0C40:
	.4byte 0x00000FC2
_080F0C44:
	add r0, r4, #0
	bl sub_080F0E04
	add r0, r4, #0
	bl sub_080F0E3C
	ldr r1, _080F0C64  @ =0x00000F62
	add r0, r5, r1
	add r2, r4, r0
	ldrb r1, [r2]
	cmp r1, #0
	beq _080F0C68
	sub r0, r1, #1
	strb r0, [r2]
	b _080F0C78
	.byte 0x00
	.byte 0x00
_080F0C64:
	.4byte 0x00000F62
_080F0C68:
	mov r0, #255
	orr r0, r0, r1
	strb r0, [r2]
	ldr r1, _080F0C80  @ =0x00001082
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #2
	strb r1, [r0]
_080F0C78:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0C80:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080F0C1C

	THUMB_FUNC_START sub_080F0C84
sub_080F0C84: @ 0x080F0C84
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r6, _080F0CB8  @ =gRam
	ldr r1, _080F0CBC  @ =0x00000FC2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F0CC8
	ldr r0, _080F0CC0  @ =0x00000F92
	add r2, r6, r0
	add r2, r4, r2
	ldr r1, _080F0CC4  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	add r0, r4, #0
	bl Sprite3_Move
	b _080F0D3C
	.byte 0x00
	.byte 0x00
_080F0CB8:
	.4byte gRam
_080F0CBC:
	.4byte 0x00000FC2
_080F0CC0:
	.4byte 0x00000F92
_080F0CC4:
	.4byte 0x00000996
_080F0CC8:
	add r0, r4, #0
	bl sub_080F0E04
	add r0, r4, #0
	bl sub_080F0E3C
	ldr r1, _080F0CE8  @ =0x00000F62
	add r0, r6, r1
	add r3, r4, r0
	ldrb r0, [r3]
	add r5, r0, #0
	cmp r5, #0
	beq _080F0CEC
	sub r0, r0, #1
	strb r0, [r3]
	b _080F0D3C
_080F0CE8:
	.4byte 0x00000F62
_080F0CEC:
	ldr r1, _080F0D20  @ =0x00000F72
	add r0, r6, r1
	add r0, r4, r0
	ldrb r2, [r0]
	add r1, r2, #1
	strb r1, [r0]
	ldr r0, _080F0D24  @ =gUnknown_08178D8C
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r3]
	ldr r0, _080F0D28  @ =gUnknown_08178D8F
	add r2, r2, r0
	ldrb r2, [r2]
	mov r0, #128
	and r0, r0, r2
	cmp r0, #0
	beq _080F0D34
	ldr r1, _080F0D2C  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	ldr r1, _080F0D30  @ =0x00001052
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	b _080F0D3C
_080F0D20:
	.4byte 0x00000F72
_080F0D24:
	.4byte gUnknown_08178D8C
_080F0D28:
	.4byte gUnknown_08178D8F
_080F0D2C:
	.4byte 0x00000F52
_080F0D30:
	.4byte 0x00001052
_080F0D34:
	ldr r1, _080F0D44  @ =0x00001082
	add r0, r6, r1
	add r0, r7, r0
	strb r2, [r0]
_080F0D3C:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0D44:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080F0C84

	THUMB_FUNC_START sub_080F0D48
sub_080F0D48: @ 0x080F0D48
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F0D74  @ =gRam
	ldr r3, _080F0D78  @ =0x00001082
	add r1, r2, r3
	add r1, r0, r1
	mov r3, #2
	strb r3, [r1]
	ldr r4, _080F0D7C  @ =0x00000FB2
	add r1, r2, r4
	add r1, r0, r1
	strb r3, [r1]
	ldr r1, _080F0D80  @ =0x00001172
	add r2, r2, r1
	add r0, r0, r2
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
_080F0D74:
	.4byte gRam
_080F0D78:
	.4byte 0x00001082
_080F0D7C:
	.4byte 0x00000FB2
_080F0D80:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080F0D48

	THUMB_FUNC_START sub_080F0D84
sub_080F0D84: @ 0x080F0D84
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	mov r1, #169
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F0DAC
	ldr r0, _080F0DC8  @ =gRam
	ldr r1, _080F0DCC  @ =0x00000FB2
	add r0, r0, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
_080F0DAC:
	ldr r0, _080F0DC8  @ =gRam
	ldr r2, _080F0DD0  @ =0x00000F52
	add r1, r0, r2
	add r1, r5, r1
	add r2, r2, #48
	add r0, r0, r2
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0DC8:
	.4byte gRam
_080F0DCC:
	.4byte 0x00000FB2
_080F0DD0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F0D84

	THUMB_FUNC_START sub_080F0DD4
sub_080F0DD4: @ 0x080F0DD4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F0DF8  @ =gRam
	ldr r2, _080F0DFC  @ =0x00000F92
	add r3, r1, r2
	add r3, r0, r3
	ldr r2, _080F0E00  @ =0x00000996
	add r1, r1, r2
	ldrb r1, [r1]
	lsr r1, r1, #3
	mov r2, #1
	and r1, r1, r2
	strb r1, [r3]
	bl Sprite3_Move
	pop {r0}
	bx r0
_080F0DF8:
	.4byte gRam
_080F0DFC:
	.4byte 0x00000F92
_080F0E00:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F0DD4

	THUMB_FUNC_START sub_080F0E04
sub_080F0E04: @ 0x080F0E04
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080CA8BC
	ldr r0, _080F0E30  @ =gRam
	ldr r2, _080F0E34  @ =0x00000F92
	add r1, r0, r2
	add r4, r4, r1
	ldr r1, _080F0E38  @ =0x00000996
	add r0, r0, r1
	ldrb r0, [r0]
	lsr r0, r0, #2
	mov r1, #1
	and r0, r0, r1
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0E30:
	.4byte gRam
_080F0E34:
	.4byte 0x00000F92
_080F0E38:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F0E04

	THUMB_FUNC_START sub_080F0E3C
sub_080F0E3C: @ 0x080F0E3C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F0E74  @ =gRam
	ldr r3, _080F0E78  @ =0x00001082
	add r1, r2, r3
	add r1, r0, r1
	ldrb r4, [r1]
	ldr r1, _080F0E7C  @ =0x00000F22
	add r3, r2, r1
	add r3, r0, r3
	ldr r1, _080F0E80  @ =gUnknown_08178D93
	add r1, r4, r1
	ldrb r1, [r1]
	strb r1, [r3]
	ldr r3, _080F0E84  @ =0x00000F12
	add r2, r2, r3
	add r2, r0, r2
	ldr r1, _080F0E88  @ =gUnknown_08178D97
	add r4, r4, r1
	ldrb r1, [r4]
	strb r1, [r2]
	bl Sprite3_Move
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0E74:
	.4byte gRam
_080F0E78:
	.4byte 0x00001082
_080F0E7C:
	.4byte 0x00000F22
_080F0E80:
	.4byte gUnknown_08178D93
_080F0E84:
	.4byte 0x00000F12
_080F0E88:
	.4byte gUnknown_08178D97
	THUMB_FUNC_END sub_080F0E3C

	THUMB_FUNC_START sub_080F0E8C
sub_080F0E8C: @ 0x080F0E8C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080F0ECC  @ =gRam
	ldr r0, _080F0ED0  @ =0x0000096C
	add r1, r2, r0
	mov r0, #2
	strh r0, [r1]
	ldr r1, _080F0ED4  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080F0ED8  @ =0x00000F92
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #4
	ldr r0, _080F0EDC  @ =gUnknown_08178D9C
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0ECC:
	.4byte gRam
_080F0ED0:
	.4byte 0x0000096C
_080F0ED4:
	.4byte 0x00000FB2
_080F0ED8:
	.4byte 0x00000F92
_080F0EDC:
	.4byte gUnknown_08178D9C
	THUMB_FUNC_END sub_080F0E8C

	THUMB_FUNC_START sub_080F0EE0
sub_080F0EE0: @ 0x080F0EE0
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r1, _080F0F08  @ =gRam
	ldr r0, _080F0F0C  @ =0x00000ED2
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #8
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C35A4
	add r0, r4, #0
	bl sub_080C3758
	pop {r4}
	pop {r0}
	bx r0
_080F0F08:
	.4byte gRam
_080F0F0C:
	.4byte 0x00000ED2
	THUMB_FUNC_END sub_080F0EE0

	THUMB_FUNC_START sub_080F0F10
sub_080F0F10: @ 0x080F0F10
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F1068
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F0F46
	add r0, r4, #0
	bl sub_080C5080
	ldr r1, _080F0F4C  @ =gUnknown_08178E1C
	ldr r0, _080F0F50  @ =gRam
	ldr r2, _080F0F54  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F0F46:
	pop {r4}
	pop {r0}
	bx r0
_080F0F4C:
	.4byte gUnknown_08178E1C
_080F0F50:
	.4byte gRam
_080F0F54:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F0F10

	THUMB_FUNC_START sub_080F0F58
sub_080F0F58: @ 0x080F0F58
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080F0F74  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #1
	bls _080F0F78
	add r0, r4, #0
	mov r1, #49
	mov r2, sp
	bl sub_080C9164
	b _080F0F96
_080F0F74:
	.4byte gUnknown_0200233D
_080F0F78:
	add r0, r4, #0
	mov r1, #46
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F0F96
	ldr r1, _080F0FA4  @ =gRam
	ldr r0, _080F0FA8  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F0F96:
	add r0, r4, #0
	bl sub_080F10A0
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080F0FA4:
	.4byte gRam
_080F0FA8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F0F58

	THUMB_FUNC_START sub_080F0FAC
sub_080F0FAC: @ 0x080F0FAC
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #47
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080F0FD8  @ =gRam
	ldr r1, _080F0FDC  @ =0x00000F52
	add r0, r0, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F0FD8:
	.4byte gRam
_080F0FDC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F0FAC

	THUMB_FUNC_START sub_080F0FE0
sub_080F0FE0: @ 0x080F0FE0
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080F1000  @ =gRam
	ldr r3, _080F1004  @ =0x00001AE2
	add r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F1008
	add r0, r2, #0
	mov r1, #47
	mov r2, sp
	bl sub_080C9564
	b _080F101E
_080F1000:
	.4byte gRam
_080F1004:
	.4byte 0x00001AE2
_080F1008:
	ldr r0, _080F1024  @ =0x00000F52
	add r1, r1, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r2, #0
	mov r1, #48
	mov r2, sp
	bl sub_080C9564
_080F101E:
	add sp, sp, #4
	pop {r0}
	bx r0
_080F1024:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F0FE0

	THUMB_FUNC_START sub_080F1028
sub_080F1028: @ 0x080F1028
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #48
	mov r2, sp
	bl sub_080C9164
	ldr r0, _080F105C  @ =gRam
	ldr r2, _080F1060  @ =0x00000F92
	add r1, r0, r2
	add r4, r4, r1
	ldr r1, _080F1064  @ =0x00000996
	add r0, r0, r1
	ldrb r0, [r0]
	lsr r0, r0, #4
	mov r1, #1
	and r0, r0, r1
	strb r0, [r4]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F105C:
	.4byte gRam
_080F1060:
	.4byte 0x00000F92
_080F1064:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F1028

	THUMB_FUNC_START sub_080F1068
sub_080F1068: @ 0x080F1068
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F1090  @ =gRam
	ldr r2, _080F1094  @ =0x0000096C
	add r3, r1, r2
	mov r2, #2
	strh r2, [r3]
	ldr r2, _080F1098  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #4
	ldr r2, _080F109C  @ =gUnknown_08178E2C
	add r1, r1, r2
	bl sub_080C94D0
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F1090:
	.4byte gRam
_080F1094:
	.4byte 0x0000096C
_080F1098:
	.4byte 0x00000F92
_080F109C:
	.4byte gUnknown_08178E2C
	THUMB_FUNC_END sub_080F1068

	THUMB_FUNC_START sub_080F10A0
sub_080F10A0: @ 0x080F10A0
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F10BC  @ =gRam
	ldr r3, _080F10C0  @ =0x00000F92
	add r2, r1, r3
	add r0, r0, r2
	ldr r2, _080F10C4  @ =0x00000996
	add r1, r1, r2
	ldrb r1, [r1]
	lsr r1, r1, #4
	mov r2, #1
	and r1, r1, r2
	strb r1, [r0]
	bx lr
_080F10BC:
	.4byte gRam
_080F10C0:
	.4byte 0x00000F92
_080F10C4:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F10A0

	THUMB_FUNC_START sub_080F10C8
sub_080F10C8: @ 0x080F10C8
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F111C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F1108
	add r0, r4, #0
	mov r1, #168
	mov r2, sp
	bl sub_080C9164
	add r0, r4, #0
	bl sub_080C5080
	ldr r0, _080F1110  @ =gRam
	ldr r1, _080F1114  @ =0x00000F92
	add r2, r0, r1
	add r2, r4, r2
	ldr r1, _080F1118  @ =0x00000996
	add r0, r0, r1
	ldrb r0, [r0]
	lsr r0, r0, #4
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
_080F1108:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080F1110:
	.4byte gRam
_080F1114:
	.4byte 0x00000F92
_080F1118:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F10C8

	THUMB_FUNC_START sub_080F111C
sub_080F111C: @ 0x080F111C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080F1150  @ =gRam
	ldr r1, _080F1154  @ =0x0000096C
	add r2, r0, r1
	mov r1, #2
	strh r1, [r2]
	ldr r1, _080F1158  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080F115C  @ =gUnknown_08178E4C
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F1150:
	.4byte gRam
_080F1154:
	.4byte 0x0000096C
_080F1158:
	.4byte 0x00000F92
_080F115C:
	.4byte gUnknown_08178E4C
	THUMB_FUNC_END sub_080F111C

	THUMB_FUNC_START sub_080F1160
sub_080F1160: @ 0x080F1160
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080F11B8  @ =gRam
	ldr r2, _080F11BC  @ =0x00000FB2
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #2
	strb r2, [r1]
	ldr r4, _080F11C0  @ =0x00001082
	add r1, r3, r4
	add r1, r0, r1
	strb r2, [r1]
	ldr r1, _080F11C4  @ =0x00001172
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	ldr r4, _080F11C8  @ =0x00000F62
	add r2, r3, r4
	add r2, r0, r2
	sub r4, r4, #128
	add r1, r3, r4
	add r1, r0, r1
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r1, _080F11CC  @ =0x00000F72
	add r2, r3, r1
	add r2, r0, r2
	add r4, r4, #32
	add r1, r3, r4
	add r1, r0, r1
	ldrb r1, [r1]
	strb r1, [r2]
	ldr r1, _080F11D0  @ =0x00000F22
	add r3, r3, r1
	add r0, r0, r3
	mov r1, #247
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F11B8:
	.4byte gRam
_080F11BC:
	.4byte 0x00000FB2
_080F11C0:
	.4byte 0x00001082
_080F11C4:
	.4byte 0x00001172
_080F11C8:
	.4byte 0x00000F62
_080F11CC:
	.4byte 0x00000F72
_080F11D0:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080F1160

	THUMB_FUNC_START sub_080F11D4
sub_080F11D4: @ 0x080F11D4
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F1284
	ldr r5, _080F122C  @ =gRam
	ldr r1, _080F1230  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #2
	bhi _080F127E
	ldr r2, _080F1234  @ =0x000009B2
	add r0, r5, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	beq _080F123C
	add r0, r4, #0
	bl sub_080C90F4
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080F1238  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #3
	eor r2, r2, r1
	strb r2, [r0]
	add r0, r4, #0
	mov r1, #176
	mov r2, sp
	bl sub_080C9164
	b _080F1284
_080F122C:
	.4byte gRam
_080F1230:
	.4byte 0x00000F52
_080F1234:
	.4byte 0x000009B2
_080F1238:
	.4byte 0x00001082
_080F123C:
	cmp r1, #0
	bne _080F1264
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F1264
	add r0, r4, #0
	bl sub_080C2FA8
	mov r1, #3
	eor r0, r0, r1
	ldr r2, _080F1260  @ =0x00000FB2
	add r1, r5, r2
	add r1, r4, r1
	strb r0, [r1]
	b _080F1270
_080F1260:
	.4byte 0x00000FB2
_080F1264:
	add r0, r4, #0
	bl sub_080C90F4
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F1278
_080F1270:
	add r0, r4, #0
	bl sub_080F17B0
	b _080F1284
_080F1278:
	add r0, r4, #0
	bl Sprite3_Move
_080F127E:
	add r0, r4, #0
	bl sub_080F17D4
_080F1284:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F11D4

	THUMB_FUNC_START sub_080F128C
sub_080F128C: @ 0x080F128C
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r1, _080F137C  @ =gRam
	ldr r2, _080F1380  @ =0x00000FC2
	add r0, r1, r2
	add r0, r6, r0
	ldrb r0, [r0]
	add r7, r1, #0
	cmp r0, #0
	bne _080F131E
	ldr r3, _080F1384  @ =0x00000F82
	add r0, r7, r3
	add r4, r6, r0
	ldrb r2, [r4]
	ldr r1, _080F1388  @ =0x00000F62
	add r0, r7, r1
	add r0, r6, r0
	ldrb r1, [r0]
	sub r3, r3, #16
	add r0, r7, r3
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	ldr r3, _080F138C  @ =gUnknown_08178E84
	lsl r2, r2, #1
	add r2, r2, r3
	orr r1, r1, r0
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080F1390  @ =0x00000EE2
	add r0, r7, r2
	add r0, r6, r0
	ldrb r2, [r0]
	ldr r3, _080F1394  @ =0x00000F02
	add r0, r7, r3
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	cmp r1, r2
	bne _080F131E
	ldr r0, _080F1398  @ =0x00001082
	add r1, r7, r0
	add r1, r6, r1
	ldr r2, _080F139C  @ =0x00000FB2
	add r0, r7, r2
	add r0, r6, r0
	ldrb r0, [r0]
	mov r3, #1
	eor r0, r0, r3
	strb r0, [r1]
	ldrb r2, [r1]
	ldr r0, _080F13A0  @ =0x00000F22
	add r1, r7, r0
	add r1, r6, r1
	ldr r0, _080F13A4  @ =gUnknown_08178E7C
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F13A8  @ =0x00000F12
	add r1, r7, r0
	add r1, r6, r1
	ldr r0, _080F13AC  @ =gUnknown_08178E80
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldrb r0, [r4]
	eor r0, r0, r3
	strb r0, [r4]
_080F131E:
	ldr r1, _080F13B0  @ =0x00000F92
	add r2, r7, r1
	add r2, r6, r2
	ldr r3, _080F13B4  @ =0x00000996
	add r0, r7, r3
	ldrb r1, [r0]
	add r0, r6, #0
	eor r0, r0, r1
	lsr r0, r0, #4
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldr r0, _080F13B8  @ =0x00001132
	add r4, r7, r0
	add r4, r6, r4
	ldrb r5, [r4]
	mov r0, #3
	strb r0, [r4]
	add r0, r6, #0
	mov r1, #50
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	strb r5, [r4]
	cmp r0, #0
	beq _080F1372
	ldr r1, _080F139C  @ =0x00000FB2
	add r0, r7, r1
	add r0, r6, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	add r0, r6, #0
	bl sub_080CB8D8
	ldr r2, _080F13BC  @ =0x00000F52
	add r1, r7, r2
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F1372:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F137C:
	.4byte gRam
_080F1380:
	.4byte 0x00000FC2
_080F1384:
	.4byte 0x00000F82
_080F1388:
	.4byte 0x00000F62
_080F138C:
	.4byte gUnknown_08178E84
_080F1390:
	.4byte 0x00000EE2
_080F1394:
	.4byte 0x00000F02
_080F1398:
	.4byte 0x00001082
_080F139C:
	.4byte 0x00000FB2
_080F13A0:
	.4byte 0x00000F22
_080F13A4:
	.4byte gUnknown_08178E7C
_080F13A8:
	.4byte 0x00000F12
_080F13AC:
	.4byte gUnknown_08178E80
_080F13B0:
	.4byte 0x00000F92
_080F13B4:
	.4byte 0x00000996
_080F13B8:
	.4byte 0x00001132
_080F13BC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F128C

	THUMB_FUNC_START sub_080F13C0
sub_080F13C0: @ 0x080F13C0
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r5, _080F1494  @ =gRam
	ldr r1, _080F1498  @ =0x00001082
	add r0, r5, r1
	add r0, r0, r6
	mov r10, r0
	mov r7, #0
	strb r7, [r0]
	ldr r2, _080F149C  @ =0x00001628
	add r0, r5, r2
	ldrb r2, [r0]
	ldr r3, _080F14A0  @ =0x00000D33
	add r0, r5, r3
	add r0, r0, r2
	mov r12, r0
	ldrb r0, [r0]
	mov r1, #150
	lsl r1, r1, #4
	add r1, r1, r5
	mov r8, r1
	strb r0, [r1]
	add r3, r3, #8
	add r0, r5, r3
	add r4, r2, r0
	ldrb r0, [r4]
	ldr r1, _080F14A4  @ =gUnknown_03002B91
	strb r0, [r1]
	ldr r3, _080F14A8  @ =0x00000ED2
	add r0, r5, r3
	add r0, r6, r0
	ldrb r0, [r0]
	ldr r1, _080F14AC  @ =0x00000964
	add r3, r5, r1
	strb r0, [r3]
	ldr r1, _080F14B0  @ =0x00000EF2
	add r0, r5, r1
	add r0, r6, r0
	ldrb r0, [r0]
	ldr r1, _080F14B4  @ =0x00000965
	add r1, r1, r5
	mov r9, r1
	strb r0, [r1]
	mov r0, r8
	mov r1, #0
	ldrsh r0, [r0, r1]
	str r0, [sp]
	mov r1, #0
	ldrsh r0, [r3, r1]
	ldr r1, [sp]
	cmp r1, r0
	blt _080F14CC
	ldr r0, _080F14B8  @ =0x00000F52
	add r1, r5, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F14BC  @ =0x00000F22
	add r0, r5, r1
	add r0, r6, r0
	strb r7, [r0]
	sub r1, r1, #16
	add r0, r5, r1
	add r0, r6, r0
	strb r7, [r0]
	ldr r1, _080F14C0  @ =0x00001132
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080F14C4  @ =0x00000D23
	add r0, r5, r1
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r3]
	add r1, r1, #8
	add r0, r5, r1
	add r0, r2, r0
	ldrb r0, [r0]
	mov r2, r9
	strb r0, [r2]
	ldrh r0, [r3]
	mov r3, r8
	ldrh r1, [r3]
	bl sub_080C8EEC
	add r1, r0, #0
	lsl r1, r1, #16
	lsr r1, r1, #16
	mov r0, #0
	bl sub_0808D328
	ldr r1, _080F14C8  @ =0x00000FC2
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #16
	strb r1, [r0]
	b _080F154A
	.byte 0x00
	.byte 0x00
_080F1494:
	.4byte gRam
_080F1498:
	.4byte 0x00001082
_080F149C:
	.4byte 0x00001628
_080F14A0:
	.4byte 0x00000D33
_080F14A4:
	.4byte gUnknown_03002B91
_080F14A8:
	.4byte 0x00000ED2
_080F14AC:
	.4byte 0x00000964
_080F14B0:
	.4byte 0x00000EF2
_080F14B4:
	.4byte 0x00000965
_080F14B8:
	.4byte 0x00000F52
_080F14BC:
	.4byte 0x00000F22
_080F14C0:
	.4byte 0x00001132
_080F14C4:
	.4byte 0x00000D23
_080F14C8:
	.4byte 0x00000FC2
_080F14CC:
	ldr r3, _080F155C  @ =0x00001770
	add r1, r5, r3
	mov r0, #1
	mov r9, r0
	mov r0, #1
	strb r0, [r1]
	ldr r1, _080F1560  @ =0x00000D23
	add r0, r5, r1
	add r0, r2, r0
	ldrb r1, [r0]
	ldr r3, _080F1564  @ =0x00000968
	add r0, r5, r3
	strb r1, [r0]
	ldr r1, _080F1568  @ =0x00000D2B
	add r0, r5, r1
	add r0, r2, r0
	ldrb r1, [r0]
	ldr r2, _080F156C  @ =0x00000969
	add r0, r5, r2
	strb r1, [r0]
	mov r3, r12
	ldrb r1, [r3]
	add r2, r2, #3
	add r0, r5, r2
	strb r1, [r0]
	ldrb r1, [r4]
	ldr r3, _080F1570  @ =0x0000096D
	add r0, r5, r3
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #64
	bl sub_080C2DCC
	ldr r1, _080F1574  @ =0x00000F12
	add r0, r5, r1
	add r0, r6, r0
	mov r2, r8
	ldrb r1, [r2]
	strb r1, [r0]
	ldr r3, _080F1578  @ =0x00000F22
	add r0, r5, r3
	add r0, r6, r0
	ldr r2, _080F157C  @ =gUnknown_03002B91
	ldrb r1, [r2]
	strb r1, [r0]
	add r3, r3, #144
	add r0, r5, r3
	add r0, r6, r0
	strb r7, [r0]
	mov r0, r10
	strb r7, [r0]
	ldr r2, _080F1580  @ =0x00000F92
	add r1, r5, r2
	add r1, r6, r1
	ldr r3, _080F1584  @ =0x00000996
	add r0, r5, r3
	ldrb r2, [r0]
	add r0, r6, #0
	eor r0, r0, r2
	lsr r0, r0, #3
	mov r2, r9
	and r0, r0, r2
	strb r0, [r1]
_080F154A:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F155C:
	.4byte 0x00001770
_080F1560:
	.4byte 0x00000D23
_080F1564:
	.4byte 0x00000968
_080F1568:
	.4byte 0x00000D2B
_080F156C:
	.4byte 0x00000969
_080F1570:
	.4byte 0x0000096D
_080F1574:
	.4byte 0x00000F12
_080F1578:
	.4byte 0x00000F22
_080F157C:
	.4byte gUnknown_03002B91
_080F1580:
	.4byte 0x00000F92
_080F1584:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F13C0

	THUMB_FUNC_START sub_080F1588
sub_080F1588: @ 0x080F1588
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r8, r6
	ldr r5, _080F163C  @ =gRam
	ldr r1, _080F1640  @ =0x00000FC2
	add r0, r5, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F162A
	ldr r2, _080F1644  @ =0x00001628
	add r0, r5, r2
	ldrb r3, [r0]
	ldr r7, _080F1648  @ =0x00000ED2
	add r2, r5, r7
	add r2, r6, r2
	ldr r1, _080F164C  @ =0x00000D33
	add r0, r5, r1
	add r0, r3, r0
	ldrb r1, [r0]
	strb r1, [r2]
	ldrb r0, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r4, r5, r2
	strb r0, [r4]
	add r7, r7, #32
	add r2, r5, r7
	add r2, r6, r2
	ldr r1, _080F1650  @ =0x00000D3B
	add r0, r5, r1
	add r0, r3, r0
	ldrb r1, [r0]
	strb r1, [r2]
	ldrb r1, [r0]
	ldr r2, _080F1654  @ =0x00000961
	add r0, r5, r2
	strb r1, [r0]
	sub r7, r7, #16
	add r2, r5, r7
	add r2, r6, r2
	ldr r1, _080F1658  @ =0x00000D23
	add r0, r5, r1
	add r0, r3, r0
	ldrb r1, [r0]
	strb r1, [r2]
	ldrb r0, [r0]
	ldr r7, _080F165C  @ =0x00000964
	add r2, r5, r7
	strb r0, [r2]
	ldr r0, _080F1660  @ =0x00000F02
	add r1, r5, r0
	add r1, r6, r1
	ldr r7, _080F1664  @ =0x00000D2B
	add r0, r5, r7
	add r3, r3, r0
	ldrb r0, [r3]
	strb r0, [r1]
	ldrb r1, [r3]
	ldr r3, _080F1668  @ =0x00000965
	add r0, r5, r3
	strb r1, [r0]
	ldrh r0, [r2]
	ldrh r1, [r4]
	bl sub_080C8EEC
	add r1, r0, #0
	lsl r1, r1, #16
	lsr r1, r1, #16
	mov r0, #1
	bl sub_0808D328
	ldr r7, _080F166C  @ =0x00000F52
	add r1, r5, r7
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F162A:
	mov r0, r8
	bl Sprite3_Move
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F163C:
	.4byte gRam
_080F1640:
	.4byte 0x00000FC2
_080F1644:
	.4byte 0x00001628
_080F1648:
	.4byte 0x00000ED2
_080F164C:
	.4byte 0x00000D33
_080F1650:
	.4byte 0x00000D3B
_080F1654:
	.4byte 0x00000961
_080F1658:
	.4byte 0x00000D23
_080F165C:
	.4byte 0x00000964
_080F1660:
	.4byte 0x00000F02
_080F1664:
	.4byte 0x00000D2B
_080F1668:
	.4byte 0x00000965
_080F166C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F1588

	THUMB_FUNC_START sub_080F1670
sub_080F1670: @ 0x080F1670
	push {lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r0, _080F168C  @ =gRam
	ldr r2, _080F1690  @ =0x00001002
	add r0, r0, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F1694
	add r0, r1, #0
	bl sub_080F1780
	b _080F169A
_080F168C:
	.4byte gRam
_080F1690:
	.4byte 0x00001002
_080F1694:
	add r0, r1, #0
	bl sub_080F16A0
_080F169A:
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F1670

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F16A0
sub_080F16A0: @ 0x080F16A0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	ldr r5, _080F16F4  @ =gRam
	ldr r1, _080F16F8  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080F1708
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F16EE
	ldr r1, _080F16FC  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #1
	bne _080F16DA
	mov r0, #192
	lsl r0, r0, #1
	bl sub_080C95C0
_080F16DA:
	ldr r0, _080F1700  @ =0x00000F92
	add r2, r5, r0
	add r2, r6, r2
	ldr r1, _080F1704  @ =0x00000996
	add r0, r5, r1
	ldrb r0, [r0]
	lsr r0, r0, #4
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
_080F16EE:
	pop {r4-r6}
	pop {r0}
	bx r0
_080F16F4:
	.4byte gRam
_080F16F8:
	.4byte 0x00000FB2
_080F16FC:
	.4byte 0x00000FC2
_080F1700:
	.4byte 0x00000F92
_080F1704:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F16A0

	THUMB_FUNC_START sub_080F1708
sub_080F1708: @ 0x080F1708
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080F1748  @ =gRam
	ldr r0, _080F174C  @ =0x0000096C
	add r1, r2, r0
	mov r0, #2
	strh r0, [r1]
	ldr r1, _080F1750  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080F1754  @ =0x00000F92
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #4
	ldr r0, _080F1758  @ =gUnknown_08178E88
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F1748:
	.4byte gRam
_080F174C:
	.4byte 0x0000096C
_080F1750:
	.4byte 0x00000FB2
_080F1754:
	.4byte 0x00000F92
_080F1758:
	.4byte gUnknown_08178E88
	THUMB_FUNC_END sub_080F1708

	THUMB_FUNC_START sub_080F175C
sub_080F175C: @ 0x080F175C
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F1774  @ =gRam
	ldr r3, _080F1778  @ =0x00000FA2
	add r1, r2, r3
	add r0, r0, r1
	mov r1, #0
	strb r1, [r0]
	ldr r0, _080F177C  @ =0x00001770
	add r2, r2, r0
	strb r1, [r2]
	bx lr
_080F1774:
	.4byte gRam
_080F1778:
	.4byte 0x00000FA2
_080F177C:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080F175C

	THUMB_FUNC_START sub_080F1780
sub_080F1780: @ 0x080F1780
	push {r4,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r4, r1, #0
	ldr r0, _080F17A8  @ =gRam
	ldr r2, _080F17AC  @ =0x00000F52
	add r0, r0, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080F179C
	add r0, r1, #0
	bl sub_080F1708
_080F179C:
	add r0, r4, #0
	bl sub_080F11D4
	pop {r4}
	pop {r0}
	bx r0
_080F17A8:
	.4byte gRam
_080F17AC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F1780

	THUMB_FUNC_START sub_080F17B0
sub_080F17B0: @ 0x080F17B0
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F17CC  @ =gRam
	ldr r2, _080F17D0  @ =0x00000FC2
	add r1, r1, r2
	add r1, r0, r1
	mov r2, #1
	strb r2, [r1]
	bl sub_080F17D4
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F17CC:
	.4byte gRam
_080F17D0:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080F17B0

	THUMB_FUNC_START sub_080F17D4
sub_080F17D4: @ 0x080F17D4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F17F4  @ =gUnknown_08178E6C
	ldr r1, _080F17F8  @ =gRam
	ldr r3, _080F17FC  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080F17F4:
	.4byte gUnknown_08178E6C
_080F17F8:
	.4byte gRam
_080F17FC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F17D4

	THUMB_FUNC_START sub_080F1800
sub_080F1800: @ 0x080F1800
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080F1838  @ =gRam
	ldr r0, _080F183C  @ =0x00001172
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F1840  @ =0x00001663
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #9
	beq _080F1848
	sub r1, r1, #1
	add r0, r3, r1
	ldrb r1, [r0]
	mov r0, #16
	and r0, r0, r1
	cmp r0, #0
	beq _080F1852
	ldr r1, _080F1844  @ =0x00000F52
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #4
	b _080F1850
	.byte 0x00
	.byte 0x00
_080F1838:
	.4byte gRam
_080F183C:
	.4byte 0x00001172
_080F1840:
	.4byte 0x00001663
_080F1844:
	.4byte 0x00000F52
_080F1848:
	ldr r1, _080F1858  @ =0x00000FA2
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #0
_080F1850:
	strb r1, [r0]
_080F1852:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F1858:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F1800

	THUMB_FUNC_START sub_080F185C
sub_080F185C: @ 0x080F185C
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080F18F8  @ =gRam
	ldr r1, _080F18FC  @ =0x00000F52
	add r0, r6, r1
	add r5, r4, r0
	ldrb r2, [r5]
	mov r3, #0
	ldr r0, _080F1900  @ =0x00001663
	add r0, r0, r6
	mov r8, r0
	ldrb r0, [r0]
	mov r1, #0
	cmp r0, #12
	bne _080F1884
	mov r1, #2
_080F1884:
	cmp r1, r2
	beq _080F188A
	mov r3, #1
_080F188A:
	strb r1, [r5]
	cmp r3, #0
	bne _080F18EA
	mov r1, #133
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	ldr r1, _080F1904  @ =0x00000EE2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r7, [r0]
	add r1, r7, #0
	sub r1, r1, #16
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C1F70
	ldr r2, _080F1908  @ =0x00000F22
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	sub r2, r2, #16
	add r0, r6, r2
	add r0, r4, r0
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C79D0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F18E0
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	beq _080F18E0
	mov r0, #5
	strb r0, [r5]
_080F18E0:
	ldr r0, _080F18F8  @ =gRam
	ldr r2, _080F1904  @ =0x00000EE2
	add r0, r0, r2
	add r0, r4, r0
	strb r7, [r0]
_080F18EA:
	add sp, sp, #4
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F18F8:
	.4byte gRam
_080F18FC:
	.4byte 0x00000F52
_080F1900:
	.4byte 0x00001663
_080F1904:
	.4byte 0x00000EE2
_080F1908:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080F185C

	THUMB_FUNC_START sub_080F190C
sub_080F190C: @ 0x080F190C
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	bl sub_0809E3CC
	cmp r0, #0
	bne _080F196E
	ldr r5, _080F1944  @ =gRam
	ldr r1, _080F1948  @ =0x0000166A
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F1950
	mov r1, #134
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F196E
	ldr r0, _080F194C  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	b _080F1968
_080F1944:
	.4byte gRam
_080F1948:
	.4byte 0x0000166A
_080F194C:
	.4byte 0x00000F52
_080F1950:
	mov r1, #134
	lsl r1, r1, #1
	add r0, r6, #0
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F196E
	ldr r0, _080F1978  @ =0x00000F52
	add r1, r5, r0
	add r1, r6, r1
_080F1968:
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F196E:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F1978:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F190C

	THUMB_FUNC_START sub_080F197C
sub_080F197C: @ 0x080F197C
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r7, r6, #0
	ldr r5, _080F19A4  @ =gRam
	ldr r1, _080F19A8  @ =0x00001AE2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F19B4
	ldr r1, _080F19AC  @ =0x0000010D
	add r0, r6, #0
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080F19B0  @ =0x00000F52
	add r0, r5, r1
	add r0, r6, r0
	b _080F1A10
_080F19A4:
	.4byte gRam
_080F19A8:
	.4byte 0x00001AE2
_080F19AC:
	.4byte 0x0000010D
_080F19B0:
	.4byte 0x00000F52
_080F19B4:
	ldr r1, _080F19EC  @ =0x0000166A
	add r0, r5, r1
	ldrb r4, [r0]
	cmp r4, #0
	bne _080F1A00
	ldr r1, _080F19F0  @ =0x00001776
	add r0, r5, r1
	strb r4, [r0]
	mov r0, #22
	bl sub_080A1588
	ldr r0, _080F19F4  @ =0x00001662
	add r2, r5, r0
	ldrb r1, [r2]
	mov r0, #16
	orr r0, r0, r1
	strb r0, [r2]
	ldr r0, _080F19F8  @ =0x00000F52
	add r1, r5, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F19FC  @ =0x00001663
	add r0, r5, r1
	strb r4, [r0]
	b _080F1A14
	.byte 0x00
	.byte 0x00
_080F19EC:
	.4byte 0x0000166A
_080F19F0:
	.4byte 0x00001776
_080F19F4:
	.4byte 0x00001662
_080F19F8:
	.4byte 0x00000F52
_080F19FC:
	.4byte 0x00001663
_080F1A00:
	ldr r1, _080F1A1C  @ =0x0000010F
	add r0, r7, #0
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080F1A20  @ =0x00000F52
	add r0, r5, r1
	add r0, r7, r0
_080F1A10:
	mov r1, #2
	strb r1, [r0]
_080F1A14:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080F1A1C:
	.4byte 0x0000010F
_080F1A20:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F197C

	THUMB_FUNC_START sub_080F1A24
sub_080F1A24: @ 0x080F1A24
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F1AEC
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F1A5A
	add r0, r4, #0
	bl sub_080C5080
	ldr r1, _080F1A60  @ =gUnknown_08178F08
	ldr r0, _080F1A64  @ =gRam
	ldr r2, _080F1A68  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F1A5A:
	pop {r4}
	pop {r0}
	bx r0
_080F1A60:
	.4byte gUnknown_08178F08
_080F1A64:
	.4byte gRam
_080F1A68:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F1A24

	THUMB_FUNC_START sub_080F1A6C
sub_080F1A6C: @ 0x080F1A6C
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080F1AA8  @ =gRam
	ldr r0, _080F1AAC  @ =0x00001663
	add r1, r5, r0
	mov r2, #0
	mov r0, #9
	strb r0, [r1]
	ldr r1, _080F1AB0  @ =0x00001787
	add r0, r5, r1
	strb r2, [r0]
	bl sub_0812F9A8
	bl sub_08114600
	ldr r0, _080F1AB4  @ =0x00001752
	add r1, r5, r0
	mov r2, #0
	mov r0, #64
	strh r0, [r1]
	ldr r1, _080F1AB8  @ =0x00000FA2
	add r5, r5, r1
	add r4, r4, r5
	strb r2, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F1AA8:
	.4byte gRam
_080F1AAC:
	.4byte 0x00001663
_080F1AB0:
	.4byte 0x00001787
_080F1AB4:
	.4byte 0x00001752
_080F1AB8:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F1A6C

	THUMB_FUNC_START sub_080F1ABC
sub_080F1ABC: @ 0x080F1ABC
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #135
	lsl r1, r1, #1
	mov r2, sp
	bl sub_080C9164
	add sp, sp, #4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F1ABC

	THUMB_FUNC_START sub_080F1AD4
sub_080F1AD4: @ 0x080F1AD4
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #133
	lsl r1, r1, #1
	mov r2, sp
	bl sub_080C9164
	add sp, sp, #4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F1AD4

	THUMB_FUNC_START sub_080F1AEC
sub_080F1AEC: @ 0x080F1AEC
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080F1B14  @ =gRam
	ldr r1, _080F1B18  @ =0x0000096C
	add r0, r0, r1
	mov r1, #2
	strh r1, [r0]
	ldr r1, _080F1B1C  @ =gUnknown_08178F20
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F1B14:
	.4byte gRam
_080F1B18:
	.4byte 0x0000096C
_080F1B1C:
	.4byte gUnknown_08178F20
	THUMB_FUNC_END sub_080F1AEC

	THUMB_FUNC_START sub_080F1B20
sub_080F1B20: @ 0x080F1B20
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	ldr r6, _080F1B9C  @ =gRam
	ldr r1, _080F1BA0  @ =0x00001610
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080F1B3A
	add r0, r4, #0
	bl sub_080F1E48
_080F1B3A:
	ldr r2, _080F1BA4  @ =0x00000FA2
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #10
	bne _080F1B6A
	ldr r1, _080F1BA8  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	ldr r0, _080F1BAC  @ =0x00000F92
	add r2, r6, r0
	add r2, r4, r2
	ldr r1, _080F1BB0  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #2
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #25
	add r0, r0, #3
	strb r0, [r2]
_080F1B6A:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F1B96
	add r0, r5, #0
	bl sub_080C841C
	cmp r0, #0
	bne _080F1B96
	ldr r1, _080F1BB4  @ =gUnknown_08178F30
	ldr r2, _080F1BA8  @ =0x00000F52
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
_080F1B96:
	pop {r4-r6}
	pop {r0}
	bx r0
_080F1B9C:
	.4byte gRam
_080F1BA0:
	.4byte 0x00001610
_080F1BA4:
	.4byte 0x00000FA2
_080F1BA8:
	.4byte 0x00000F52
_080F1BAC:
	.4byte 0x00000F92
_080F1BB0:
	.4byte 0x00000996
_080F1BB4:
	.4byte gUnknown_08178F30
	THUMB_FUNC_END sub_080F1B20

	THUMB_FUNC_START sub_080F1BB8
sub_080F1BB8: @ 0x080F1BB8
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	bl sub_080C2C4C
	ldr r2, _080F1CB0  @ =gRam
	ldr r0, _080F1CB4  @ =0x00001152
	add r1, r2, r0
	add r1, r1, r8
	ldrb r0, [r1]
	sub r0, r0, #2
	strb r0, [r1]
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F1BF0
	ldr r1, _080F1CB8  @ =0x00000F62
	add r0, r2, r1
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F1BF0
	ldr r0, _080F1CBC  @ =0x00000179
	bl sub_080C95C0
_080F1BF0:
	ldr r2, _080F1CB0  @ =gRam
	ldr r1, _080F1CC0  @ =0x00001142
	add r0, r2, r1
	mov r1, r8
	add r3, r1, r0
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	mov r9, r2
	cmp r0, #0
	beq _080F1C86
	mov r0, #0
	strb r0, [r3]
	mov r0, r8
	bl sub_080C969C
	ldr r0, _080F1CB8  @ =0x00000F62
	add r0, r0, r9
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F1C78
	mov r0, #219
	mov r1, r8
	bl sub_080CA538
	add r7, r0, #0
	cmp r7, #0
	blt _080F1C78
	mov r0, #150
	lsl r0, r0, #4
	add r0, r0, r9
	ldrh r4, [r0]
	add r4, r4, #4
	lsl r4, r4, #16
	lsr r6, r4, #16
	lsl r5, r7, #24
	lsr r5, r5, #24
	add r0, r5, #0
	bl sub_080CAE50
	ldr r0, _080F1CC4  @ =0x00000EE2
	add r0, r0, r9
	add r0, r7, r0
	strb r6, [r0]
	ldr r0, _080F1CC8  @ =0x00000F02
	add r0, r0, r9
	add r0, r7, r0
	lsr r4, r4, #24
	strb r4, [r0]
	ldr r0, _080F1CCC  @ =0x00000D74
	add r0, r0, r9
	add r0, r7, r0
	mov r1, #255
	strb r1, [r0]
	ldr r0, _080F1CB4  @ =0x00001152
	add r0, r0, r9
	add r0, r7, r0
	mov r1, #48
	strb r1, [r0]
	ldr r0, _080F1CD0  @ =0x000010B2
	add r0, r0, r9
	add r0, r7, r0
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #16
	bl sub_080C35FC
_080F1C78:
	ldr r0, _080F1CB0  @ =gRam
	ldr r2, _080F1CD4  @ =0x00000FA2
	add r1, r0, r2
	add r1, r1, r8
	mov r2, #0
	strb r2, [r1]
	mov r9, r0
_080F1C86:
	ldr r1, _080F1CD8  @ =0x00001052
	add r1, r1, r9
	add r1, r1, r8
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F1CDC  @ =0x00000F92
	add r1, r1, r9
	add r1, r1, r8
	ldr r2, _080F1CE0  @ =gUnknown_08178F44
	lsl r0, r0, #24
	lsr r0, r0, #26
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080F1CB0:
	.4byte gRam
_080F1CB4:
	.4byte 0x00001152
_080F1CB8:
	.4byte 0x00000F62
_080F1CBC:
	.4byte 0x00000179
_080F1CC0:
	.4byte 0x00001142
_080F1CC4:
	.4byte 0x00000EE2
_080F1CC8:
	.4byte 0x00000F02
_080F1CCC:
	.4byte 0x00000D74
_080F1CD0:
	.4byte 0x000010B2
_080F1CD4:
	.4byte 0x00000FA2
_080F1CD8:
	.4byte 0x00001052
_080F1CDC:
	.4byte 0x00000F92
_080F1CE0:
	.4byte gUnknown_08178F44
	THUMB_FUNC_END sub_080F1BB8

	THUMB_FUNC_START sub_080F1CE4
sub_080F1CE4: @ 0x080F1CE4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080C3138
	add r0, r5, #0
	bl sub_080CA2A4
	add r0, r5, #0
	bl sub_080C99DC
	ldr r3, _080F1D30  @ =gRam
	ldr r0, _080F1D34  @ =0x00001152
	add r1, r3, r0
	add r1, r5, r1
	ldrb r0, [r1]
	sub r0, r0, #2
	mov r4, #0
	strb r0, [r1]
	ldr r1, _080F1D38  @ =0x00001142
	add r0, r3, r1
	add r2, r5, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F1DA0
	strb r4, [r2]
	ldr r2, _080F1D3C  @ =0x000015E2
	add r0, r3, r2
	ldrh r0, [r0]
	cmp r0, #9
	bne _080F1D40
	add r0, r5, #0
	bl sub_080C969C
	b _080F1D52
_080F1D30:
	.4byte gRam
_080F1D34:
	.4byte 0x00001152
_080F1D38:
	.4byte 0x00001142
_080F1D3C:
	.4byte 0x000015E2
_080F1D40:
	cmp r0, #8
	bne _080F1D52
	ldr r6, _080F1E0C  @ =0x00000FA2
	add r0, r3, r6
	add r0, r5, r0
	strb r4, [r0]
	add r0, r5, #0
	bl sub_080C969C
_080F1D52:
	bl GetRandomInt
	ldr r4, _080F1E10  @ =gRam
	ldr r1, _080F1E14  @ =0x00001152
	add r2, r4, r1
	add r2, r5, r2
	mov r1, #15
	and r1, r1, r0
	add r1, r1, #16
	strb r1, [r2]
	bl GetRandomInt
	mov r2, #7
	and r2, r2, r0
	ldr r6, _080F1E18  @ =0x00000F22
	add r1, r4, r6
	add r1, r5, r1
	ldr r0, _080F1E1C  @ =gUnknown_08178F5A
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F1E20  @ =0x00000F12
	add r1, r4, r0
	add r1, r5, r1
	ldr r0, _080F1E24  @ =gUnknown_08178F62
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r2, _080F1E28  @ =0x00000FB2
	add r1, r4, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r6, _080F1E2C  @ =0x00001052
	add r4, r4, r6
	add r4, r5, r4
	mov r0, #3
	strb r0, [r4]
_080F1DA0:
	ldr r2, _080F1E10  @ =gRam
	ldr r1, _080F1E2C  @ =0x00001052
	add r0, r2, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #7
	and r1, r1, r0
	add r4, r2, #0
	cmp r1, #0
	bne _080F1DE0
	ldr r2, _080F1E30  @ =0x00000F62
	add r0, r4, r2
	add r6, r5, r0
	ldr r1, _080F1E34  @ =gUnknown_08178F55
	add r2, r2, #80
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	mov r2, #1
	and r2, r2, r0
	add r1, r2, r1
	ldrb r3, [r6]
	ldrb r1, [r1]
	cmp r3, r1
	beq _080F1DE0
	ldr r0, _080F1E38  @ =gUnknown_08178F6A
	add r0, r2, r0
	ldrb r0, [r0]
	add r0, r3, r0
	strb r0, [r6]
_080F1DE0:
	ldr r6, _080F1E3C  @ =0x00000F92
	add r2, r4, r6
	add r2, r5, r2
	ldr r1, _080F1E40  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	lsr r1, r1, #3
	mov r0, #1
	and r1, r1, r0
	ldr r3, _080F1E44  @ =gUnknown_08178F57
	sub r6, r6, #48
	add r0, r4, r6
	add r0, r5, r0
	ldrb r0, [r0]
	add r0, r0, r3
	ldrb r0, [r0]
	add r0, r0, r1
	strb r0, [r2]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F1E0C:
	.4byte 0x00000FA2
_080F1E10:
	.4byte gRam
_080F1E14:
	.4byte 0x00001152
_080F1E18:
	.4byte 0x00000F22
_080F1E1C:
	.4byte gUnknown_08178F5A
_080F1E20:
	.4byte 0x00000F12
_080F1E24:
	.4byte gUnknown_08178F62
_080F1E28:
	.4byte 0x00000FB2
_080F1E2C:
	.4byte 0x00001052
_080F1E30:
	.4byte 0x00000F62
_080F1E34:
	.4byte gUnknown_08178F55
_080F1E38:
	.4byte gUnknown_08178F6A
_080F1E3C:
	.4byte 0x00000F92
_080F1E40:
	.4byte 0x00000996
_080F1E44:
	.4byte gUnknown_08178F57
	THUMB_FUNC_END sub_080F1CE4

	THUMB_FUNC_START sub_080F1E48
sub_080F1E48: @ 0x080F1E48
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r7, r5, #0
	ldr r6, _080F1E70  @ =gRam
	ldr r1, _080F1E74  @ =0x00000F92
	add r0, r6, r1
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F1E78
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r5, #0
	bl sub_080C632C
	b _080F1EEC
	.byte 0x00
	.byte 0x00
_080F1E70:
	.4byte gRam
_080F1E74:
	.4byte 0x00000F92
_080F1E78:
	ldr r0, _080F1EF4  @ =0x00001622
	add r2, r6, r0
	ldrb r1, [r2]
	add r0, r0, #1
	add r3, r6, r0
	ldrb r0, [r3]
	lsl r0, r0, #8
	orr r1, r1, r0
	add r1, r1, #4
	strb r1, [r2]
	lsr r1, r1, #8
	strb r1, [r3]
	ldrb r1, [r4]
	sub r1, r1, #1
	lsl r1, r1, #4
	ldr r0, _080F1EF8  @ =gUnknown_08178F6C
	add r1, r1, r0
	add r0, r5, #0
	mov r2, #2
	bl sub_080C9480
	ldr r1, _080F1EFC  @ =0x00001624
	add r4, r6, r1
	ldrb r1, [r4]
	ldr r0, _080F1F00  @ =0x00001142
	add r2, r6, r0
	add r2, r5, r2
	ldrb r0, [r2]
	add r1, r1, r0
	ldr r0, _080F1F04  @ =0x00001625
	add r3, r6, r0
	ldrb r0, [r3]
	lsl r0, r0, #8
	add r1, r1, r0
	strb r1, [r4]
	lsr r1, r1, #8
	strb r1, [r3]
	ldrb r0, [r2]
	lsr r2, r0, #2
	cmp r2, #1
	bls _080F1ECC
	mov r2, #2
_080F1ECC:
	ldr r1, _080F1F08  @ =gUnknown_03003E74
	ldrh r0, [r1]
	add r0, r0, #2
	strh r0, [r1]
	lsl r1, r2, #1
	add r1, r1, r2
	lsl r1, r1, #3
	ldr r0, _080F1F0C  @ =gUnknown_08178FEC
	add r1, r1, r0
	add r0, r7, #0
	mov r2, #3
	bl sub_080C9480
	add r0, r7, #0
	bl sub_080C1F70
_080F1EEC:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080F1EF4:
	.4byte 0x00001622
_080F1EF8:
	.4byte gUnknown_08178F6C
_080F1EFC:
	.4byte 0x00001624
_080F1F00:
	.4byte 0x00001142
_080F1F04:
	.4byte 0x00001625
_080F1F08:
	.4byte gUnknown_03003E74
_080F1F0C:
	.4byte gUnknown_08178FEC
	THUMB_FUNC_END sub_080F1E48

	THUMB_FUNC_START sub_080F1F10
sub_080F1F10: @ 0x080F1F10
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080C3758
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F1F10

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F1F20
sub_080F1F20: @ 0x080F1F20
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r0, #210
	add r1, r5, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080F1F66
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080F1F6C  @ =gRam
	ldr r1, _080F1F70  @ =0x00000F52
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r3, _080F1F74  @ =0x00000FC2
	add r0, r2, r3
	add r0, r4, r0
	mov r1, #48
	strb r1, [r0]
	ldr r1, _080F1F78  @ =0x00000FF2
	add r0, r2, r1
	add r0, r5, r0
	ldrb r1, [r0]
	cmp r1, #210
	bne _080F1F66
	sub r3, r3, #96
	add r0, r2, r3
	add r0, r4, r0
	strb r1, [r0]
_080F1F66:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F1F6C:
	.4byte gRam
_080F1F70:
	.4byte 0x00000F52
_080F1F74:
	.4byte 0x00000FC2
_080F1F78:
	.4byte 0x00000FF2
	THUMB_FUNC_END sub_080F1F20

	THUMB_FUNC_START sub_080F1F7C
sub_080F1F7C: @ 0x080F1F7C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r4, r1, #0
	ldr r2, _080F1FB0  @ =gRam
	ldr r3, _080F1FB4  @ =0x00001142
	add r0, r2, r3
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F1F9C
	ldr r3, _080F1FB8  @ =0x00000F52
	add r0, r2, r3
	add r0, r1, r0
	mov r1, #1
	strb r1, [r0]
_080F1F9C:
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C8168
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F1FB0:
	.4byte gRam
_080F1FB4:
	.4byte 0x00001142
_080F1FB8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F1F7C

	THUMB_FUNC_START sub_080F1FBC
sub_080F1FBC: @ 0x080F1FBC
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080F1FF0  @ =gRam
	ldr r1, _080F1FF4  @ =0x00000FC2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F1FEC
	ldr r0, _080F1FF8  @ =0x00000F52
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F1FFC  @ =0x00001152
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #48
	strb r1, [r0]
	add r0, r2, #0
	bl sub_080F2000
_080F1FEC:
	pop {r0}
	bx r0
_080F1FF0:
	.4byte gRam
_080F1FF4:
	.4byte 0x00000FC2
_080F1FF8:
	.4byte 0x00000F52
_080F1FFC:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080F1FBC

	THUMB_FUNC_START sub_080F2000
sub_080F2000: @ 0x080F2000
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080C969C
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F2000

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F2010
sub_080F2010: @ 0x080F2010
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C7A48
	ldr r1, _080F2038  @ =gRam
	ldr r2, _080F203C  @ =0x000015E2
	add r0, r1, r2
	ldrh r0, [r0]
	cmp r0, #8
	beq _080F2044
	ldr r0, _080F2040  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080F204E
	.byte 0x00
	.byte 0x00
_080F2038:
	.4byte gRam
_080F203C:
	.4byte 0x000015E2
_080F2040:
	.4byte 0x00000F52
_080F2044:
	ldr r2, _080F2054  @ =0x00000FA2
	add r0, r1, r2
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
_080F204E:
	pop {r4}
	pop {r0}
	bx r0
_080F2054:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F2010

	THUMB_FUNC_START sub_080F2058
sub_080F2058: @ 0x080F2058
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080F1160
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F2058

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F2068
sub_080F2068: @ 0x080F2068
	push {r4,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r4, r1, #0
	ldr r0, _080F2090  @ =gRam
	ldr r2, _080F2094  @ =0x00000F52
	add r0, r0, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080F2084
	add r0, r1, #0
	bl sub_080F2098
_080F2084:
	add r0, r4, #0
	bl sub_080F11D4
	pop {r4}
	pop {r0}
	bx r0
_080F2090:
	.4byte gRam
_080F2094:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F2068

	THUMB_FUNC_START sub_080F2098
sub_080F2098: @ 0x080F2098
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080F20D8  @ =gRam
	ldr r0, _080F20DC  @ =0x0000096C
	add r1, r2, r0
	mov r0, #2
	strh r0, [r1]
	ldr r1, _080F20E0  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080F20E4  @ =0x00000F92
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #4
	ldr r0, _080F20E8  @ =gUnknown_08179034
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F20D8:
	.4byte gRam
_080F20DC:
	.4byte 0x0000096C
_080F20E0:
	.4byte 0x00000FB2
_080F20E4:
	.4byte 0x00000F92
_080F20E8:
	.4byte gUnknown_08179034
	THUMB_FUNC_END sub_080F2098

	THUMB_FUNC_START sub_080F20EC
sub_080F20EC: @ 0x080F20EC
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080F22AC
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F21B0
	mov r0, #0
	bl sub_080F21E4
	lsl r0, r0, #24
	lsr r4, r0, #24
	cmp r4, #0
	bne _080F2124
	bl sub_080AF16C
	ldr r0, _080F21B8  @ =gRam
	ldr r1, _080F21BC  @ =0x00001719
	add r0, r0, r1
	strb r4, [r0]
	bl sub_08093078
_080F2124:
	bl sub_0809E3CC
	cmp r0, #0
	bne _080F219A
	mov r0, #2
	bl sub_080F21E4
	lsl r0, r0, #24
	lsr r4, r0, #24
	cmp r4, #0
	bne _080F219A
	ldr r0, _080F21C0  @ =gUnknown_03003E70
	mov r3, #1
	strb r3, [r0]
	ldr r2, _080F21B8  @ =gRam
	ldr r6, _080F21C4  @ =0x00000546
	add r0, r2, r6
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	beq _080F219A
	ldr r1, _080F21C8  @ =0x000016C4
	add r0, r2, r1
	ldrb r1, [r0]
	ldr r6, _080F21CC  @ =0x00000EE2
	add r0, r2, r6
	add r0, r5, r0
	ldrb r0, [r0]
	sub r1, r1, r0
	asr r1, r1, #8
	and r1, r1, r3
	mov r0, #150
	lsl r0, r0, #4
	add r3, r2, r0
	strb r1, [r3]
	ldr r6, _080F21D0  @ =0x00000961
	add r1, r2, r6
	strb r4, [r1]
	ldr r0, _080F21D4  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #1
	bls _080F2180
	mov r0, #2
	strb r0, [r1]
_080F2180:
	ldr r2, _080F21D8  @ =gUnknown_081790B4
	mov r0, #0
	ldrsb r0, [r1, r0]
	mov r1, #0
	ldrsb r1, [r3, r1]
	add r0, r0, r1
	lsl r0, r0, #1
	add r0, r0, r2
	ldrh r1, [r0]
	add r0, r5, #0
	mov r2, sp
	bl sub_080C9564
_080F219A:
	ldr r0, _080F21B8  @ =gRam
	ldr r1, _080F21DC  @ =0x00000F92
	add r2, r0, r1
	add r2, r5, r2
	ldr r6, _080F21E0  @ =0x00000996
	add r0, r0, r6
	ldrb r0, [r0]
	lsr r0, r0, #5
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
_080F21B0:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080F21B8:
	.4byte gRam
_080F21BC:
	.4byte 0x00001719
_080F21C0:
	.4byte gUnknown_03003E70
_080F21C4:
	.4byte 0x00000546
_080F21C8:
	.4byte 0x000016C4
_080F21CC:
	.4byte 0x00000EE2
_080F21D0:
	.4byte 0x00000961
_080F21D4:
	.4byte gUnknown_0200233D
_080F21D8:
	.4byte gUnknown_081790B4
_080F21DC:
	.4byte 0x00000F92
_080F21E0:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F20EC

	THUMB_FUNC_START sub_080F21E4
sub_080F21E4: @ 0x080F21E4
	push {r4-r6,lr}
	add r5, r0, #0
	mov r3, #254
	ldr r4, _080F2274  @ =gRam
	ldr r1, _080F2278  @ =0x00001622
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r2, _080F227C  @ =0x00001623
	add r0, r4, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r6, _080F2280  @ =0x000016C4
	add r0, r4, r6
	ldrb r2, [r0]
	add r6, r6, #1
	add r0, r4, r6
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r0, _080F2284  @ =gUnknown_081790BC
	and r5, r5, r3
	add r0, r5, r0
	sub r1, r1, r2
	ldrh r0, [r0]
	add r1, r1, r0
	lsl r1, r1, #16
	lsr r1, r1, #16
	mov r3, #1
	ldr r0, _080F2288  @ =gUnknown_081790C0
	add r0, r5, r0
	ldrh r0, [r0]
	cmp r1, r0
	bcs _080F226A
	ldr r1, _080F228C  @ =0x00001624
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r2, _080F2290  @ =0x00001625
	add r0, r4, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r6, r6, #5
	add r0, r4, r6
	ldrb r2, [r0]
	add r6, r6, #1
	add r0, r4, r6
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r0, _080F2294  @ =gUnknown_081790C4
	add r0, r5, r0
	sub r1, r1, r2
	ldrh r0, [r0]
	add r1, r1, r0
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r0, _080F2298  @ =gUnknown_081790C8
	add r0, r5, r0
	ldrh r0, [r0]
	cmp r1, r0
	bcs _080F226A
	mov r3, #0
_080F226A:
	add r0, r3, #0
	pop {r4-r6}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080F2274:
	.4byte gRam
_080F2278:
	.4byte 0x00001622
_080F227C:
	.4byte 0x00001623
_080F2280:
	.4byte 0x000016C4
_080F2284:
	.4byte gUnknown_081790BC
_080F2288:
	.4byte gUnknown_081790C0
_080F228C:
	.4byte 0x00001624
_080F2290:
	.4byte 0x00001625
_080F2294:
	.4byte gUnknown_081790C4
_080F2298:
	.4byte gUnknown_081790C8
	THUMB_FUNC_END sub_080F21E4

	THUMB_FUNC_START sub_080F229C
sub_080F229C: @ 0x080F229C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080C3734
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F229C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F22AC
sub_080F22AC: @ 0x080F22AC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F22E0  @ =gRam
	ldr r2, _080F22E4  @ =0x0000096C
	add r3, r1, r2
	mov r4, #0
	mov r2, #11
	strb r2, [r3]
	ldr r3, _080F22E8  @ =0x0000096D
	add r2, r1, r3
	strb r4, [r2]
	ldr r2, _080F22EC  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r2, [r1]
	mov r1, #88
	mul r1, r2, r1
	ldr r2, _080F22F0  @ =gUnknown_081790CC
	add r1, r1, r2
	bl sub_080C94AC
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F22E0:
	.4byte gRam
_080F22E4:
	.4byte 0x0000096C
_080F22E8:
	.4byte 0x0000096D
_080F22EC:
	.4byte 0x00000F92
_080F22F0:
	.4byte gUnknown_081790CC
	THUMB_FUNC_END sub_080F22AC

	THUMB_FUNC_START sub_080F22F4
sub_080F22F4: @ 0x080F22F4
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r7, _080F237C  @ =gRam
	ldr r1, _080F2380  @ =0x00000FC2
	add r0, r7, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080F2390
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F23EE
	ldr r2, _080F2384  @ =0x00001122
	add r0, r7, r2
	add r5, r4, r0
	ldrb r0, [r5]
	mov r1, #63
	mov r8, r1
	mov r2, r8
	and r2, r2, r0
	ldr r3, _080F2388  @ =gUnknown_08179254
	ldr r1, _080F238C  @ =0x00000996
	add r0, r7, r1
	ldrb r0, [r0]
	lsr r0, r0, #2
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	orr r2, r2, r0
	strb r2, [r5]
	add r0, r4, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F2364
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F23EE
_080F2364:
	mov r0, #127
	strb r0, [r6]
	ldrb r1, [r5]
	mov r0, r8
	and r0, r0, r1
	strb r0, [r5]
	add r0, r4, #0
	mov r1, #37
	bl sub_080CF0AC
	b _080F23EE
	.byte 0x00
	.byte 0x00
_080F237C:
	.4byte gRam
_080F2380:
	.4byte 0x00000FC2
_080F2384:
	.4byte 0x00001122
_080F2388:
	.4byte gUnknown_08179254
_080F238C:
	.4byte 0x00000996
_080F2390:
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F23AA
	ldrb r0, [r6]
	sub r0, r0, #1
	strb r0, [r6]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F23B2
_080F23AA:
	ldrb r0, [r6]
	add r2, r7, #0
	cmp r0, #1
	bne _080F23C0
_080F23B2:
	ldr r0, _080F23FC  @ =gRam
	ldr r2, _080F2400  @ =0x00000FA2
	add r1, r0, r2
	add r1, r4, r1
	mov r2, #0
	strb r2, [r1]
	add r2, r0, #0
_080F23C0:
	ldr r1, _080F2404  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsr r0, r0, #3
	sub r1, r1, #48
	add r2, r2, r1
	add r2, r4, r2
	ldr r1, _080F2408  @ =gUnknown_081791D4
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2]
	ldrb r1, [r2]
	lsl r1, r1, #4
	ldr r0, _080F240C  @ =gUnknown_081791F4
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #2
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C4F98
_080F23EE:
	add sp, sp, #4
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F23FC:
	.4byte gRam
_080F2400:
	.4byte 0x00000FA2
_080F2404:
	.4byte 0x00000FC2
_080F2408:
	.4byte gUnknown_081791D4
_080F240C:
	.4byte gUnknown_081791F4
	THUMB_FUNC_END sub_080F22F4

	THUMB_FUNC_START sub_080F2410
sub_080F2410: @ 0x080F2410
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F2430  @ =gRam
	ldr r2, _080F2434  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #4
	ldr r2, _080F2438  @ =gUnknown_081791F4
	add r1, r1, r2
	mov r2, #2
	bl sub_080C9480
	pop {r0}
	bx r0
_080F2430:
	.4byte gRam
_080F2434:
	.4byte 0x00000F92
_080F2438:
	.4byte gUnknown_081791F4
	THUMB_FUNC_END sub_080F2410

	THUMB_FUNC_START sub_080F243C
sub_080F243C: @ 0x080F243C
	bx lr
	THUMB_FUNC_END sub_080F243C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F2440
sub_080F2440: @ 0x080F2440
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r5, r1, #0
	ldr r4, _080F2460  @ =gRam
	ldr r0, _080F2464  @ =0x000009C6
	add r6, r4, r0
	ldrh r0, [r6]
	cmp r0, #27
	beq _080F2468
	add r0, r1, #0
	bl sub_080F2538
	b _080F250E
	.byte 0x00
	.byte 0x00
_080F2460:
	.4byte gRam
_080F2464:
	.4byte 0x000009C6
_080F2468:
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r5, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F250E
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080F250E
	ldr r1, _080F2518  @ =0x00001622
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r3, _080F251C  @ =0x00001623
	add r0, r4, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	add r3, r3, #161
	add r0, r4, r3
	ldrh r0, [r0]
	sub r1, r1, r0
	lsl r1, r1, #16
	mov r0, #128
	lsl r0, r0, #15
	add r1, r1, r0
	lsr r1, r1, #16
	cmp r1, #80
	bhi _080F250E
	ldr r1, _080F2520  @ =0x00001624
	add r0, r4, r1
	ldrb r1, [r0]
	sub r3, r3, #159
	add r0, r4, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	add r3, r3, #155
	add r0, r4, r3
	ldrh r0, [r0]
	sub r1, r1, r0
	lsl r1, r1, #16
	mov r0, #240
	lsl r0, r0, #12
	add r1, r1, r0
	lsr r1, r1, #16
	cmp r1, #17
	bhi _080F250E
	ldr r3, _080F2524  @ =0x000009AD
	add r1, r4, r3
	mov r0, #35
	strb r0, [r1]
	mov r0, #187
	lsl r0, r0, #5
	add r1, r4, r0
	mov r0, #1
	strb r0, [r1]
	ldr r1, _080F2528  @ =0x000009E8
	add r0, r4, r1
	mov r1, #0
	strh r2, [r0]
	ldr r2, _080F252C  @ =0x000016CD
	add r0, r4, r2
	strb r1, [r0]
	ldr r3, _080F2530  @ =0x000016CE
	add r0, r4, r3
	strb r1, [r0]
	ldr r0, _080F2534  @ =0x00001718
	add r1, r4, r0
	mov r0, #20
	strb r0, [r1]
	ldrb r1, [r6]
	mov r0, #64
	and r0, r0, r1
	add r2, r2, #109
	add r1, r4, r2
	strb r0, [r1]
_080F250E:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F2518:
	.4byte 0x00001622
_080F251C:
	.4byte 0x00001623
_080F2520:
	.4byte 0x00001624
_080F2524:
	.4byte 0x000009AD
_080F2528:
	.4byte 0x000009E8
_080F252C:
	.4byte 0x000016CD
_080F2530:
	.4byte 0x000016CE
_080F2534:
	.4byte 0x00001718
	THUMB_FUNC_END sub_080F2440

	THUMB_FUNC_START sub_080F2538
sub_080F2538: @ 0x080F2538
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r7, r5, #0
	ldr r6, _080F25B0  @ =gRam
	ldr r0, _080F25B4  @ =0x00001122
	add r3, r6, r0
	add r3, r5, r3
	ldrb r0, [r3]
	mov r1, #63
	and r1, r1, r0
	strb r1, [r3]
	ldr r4, _080F25B8  @ =gUnknown_08179258
	ldr r2, _080F25BC  @ =0x00000996
	add r0, r6, r2
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r2, #3
	and r0, r0, r2
	add r0, r0, r4
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r3]
	mov r0, #4
	bl sub_080CF388
	ldr r0, _080F25C0  @ =0x00001622
	add r2, r6, r0
	ldrb r1, [r2]
	add r0, r0, #1
	add r3, r6, r0
	ldrb r0, [r3]
	lsl r0, r0, #8
	orr r1, r1, r0
	sub r1, r1, #5
	strb r1, [r2]
	lsr r1, r1, #8
	strb r1, [r3]
	add r0, r5, #0
	bl sub_080C6240
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F25E2
	add r0, r5, #0
	bl sub_080C500C
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080F25C8
	ldr r2, _080F25C4  @ =0x00000F62
	add r0, r6, r2
	add r0, r5, r0
	strb r1, [r0]
	b _080F25E2
	.byte 0x00
	.byte 0x00
_080F25B0:
	.4byte gRam
_080F25B4:
	.4byte 0x00001122
_080F25B8:
	.4byte gUnknown_08179258
_080F25BC:
	.4byte 0x00000996
_080F25C0:
	.4byte 0x00001622
_080F25C4:
	.4byte 0x00000F62
_080F25C8:
	ldr r1, _080F25E8  @ =0x00000F62
	add r0, r6, r1
	add r0, r7, r0
	ldrb r2, [r0]
	cmp r2, #0
	bne _080F25E2
	ldr r1, _080F25EC  @ =0x000009AD
	add r0, r6, r1
	mov r1, #46
	strb r1, [r0]
	ldr r1, _080F25F0  @ =0x000009E8
	add r0, r6, r1
	strh r2, [r0]
_080F25E2:
	pop {r4-r7}
	pop {r0}
	bx r0
_080F25E8:
	.4byte 0x00000F62
_080F25EC:
	.4byte 0x000009AD
_080F25F0:
	.4byte 0x000009E8
	THUMB_FUNC_END sub_080F2538

	THUMB_FUNC_START sub_080F25F4
sub_080F25F4: @ 0x080F25F4
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080F2614  @ =gRam
	ldr r1, _080F2618  @ =0x00001172
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	ldr r1, _080F261C  @ =0x00000F62
	add r3, r3, r1
	add r0, r0, r3
	mov r1, #1
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080F2614:
	.4byte gRam
_080F2618:
	.4byte 0x00001172
_080F261C:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080F25F4

	THUMB_FUNC_START sub_080F2620
sub_080F2620: @ 0x080F2620
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080F2778  @ =gRam
	ldr r1, _080F277C  @ =0x00000F52
	add r0, r6, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080F2652
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080F29B8
	ldr r1, _080F2780  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F2652
	b _080F27EA
_080F2652:
	ldr r1, _080F2780  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #9
	bne _080F2664
	add r0, r4, #0
	bl sub_080C5D18
_080F2664:
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F2678
	b _080F27EA
_080F2678:
	bl sub_0809E3CC
	mov r8, r0
	cmp r0, #0
	beq _080F2684
	b _080F27EA
_080F2684:
	add r0, r4, #0
	bl sub_080C79F8
	ldr r1, _080F2784  @ =0x00001042
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	beq _080F26B6
	ldr r0, _080F2788  @ =0x00000F22
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F278C  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
_080F26B6:
	ldr r1, _080F2790  @ =0x00001152
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	sub r0, r0, #1
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080C2C4C
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080F2794  @ =0x00001142
	add r0, r6, r1
	add r2, r4, r0
	ldrb r1, [r2]
	mov r7, #128
	add r0, r7, #0
	and r0, r0, r1
	cmp r0, #0
	beq _080F2730
	mov r0, r8
	strb r0, [r2]
	ldrb r0, [r5]
	mov r1, #248
	bic r1, r1, r0
	lsr r1, r1, #1
	strb r1, [r5]
	ldr r1, _080F2788  @ =0x00000F22
	add r0, r6, r1
	add r1, r4, r0
	ldrb r3, [r1]
	lsl r0, r3, #24
	cmp r0, #0
	beq _080F270E
	add r2, r7, #0
	and r2, r2, r3
	lsr r0, r0, #25
	orr r2, r2, r0
	strb r2, [r1]
	cmp r2, #255
	bne _080F270E
	add r0, r2, #1
	strb r0, [r1]
_080F270E:
	ldr r0, _080F2778  @ =gRam
	ldr r1, _080F278C  @ =0x00000F12
	add r0, r0, r1
	add r2, r4, r0
	ldrb r3, [r2]
	lsl r0, r3, #24
	cmp r0, #0
	beq _080F2730
	mov r1, #128
	and r1, r1, r3
	lsr r0, r0, #25
	orr r1, r1, r0
	strb r1, [r2]
	cmp r1, #255
	bne _080F2730
	add r0, r1, #1
	strb r0, [r2]
_080F2730:
	ldr r7, _080F2778  @ =gRam
	ldr r1, _080F2798  @ =0x000010E2
	add r0, r7, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F27EA
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F27EA
	ldr r6, _080F279C  @ =gUnknown_0200234B
	ldrb r0, [r6]
	add r0, r0, #1
	mov r1, #3
	and r0, r0, r1
	strb r0, [r6]
	add r5, r0, #0
	cmp r5, #0
	beq _080F27A4
	add r0, r4, #0
	mov r1, #71
	bl sub_080CF140
	ldr r0, _080F27A0  @ =gUnknown_0817925C
	ldrb r1, [r6]
	lsl r1, r1, #1
	add r1, r1, r0
	ldrh r1, [r1]
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	b _080F27B4
_080F2778:
	.4byte gRam
_080F277C:
	.4byte 0x00000F52
_080F2780:
	.4byte 0x00000FA2
_080F2784:
	.4byte 0x00001042
_080F2788:
	.4byte 0x00000F22
_080F278C:
	.4byte 0x00000F12
_080F2790:
	.4byte 0x00001152
_080F2794:
	.4byte 0x00001142
_080F2798:
	.4byte 0x000010E2
_080F279C:
	.4byte gUnknown_0200234B
_080F27A0:
	.4byte gUnknown_0817925C
_080F27A4:
	bl sub_08093078
	ldr r1, _080F27D4  @ =0x00001776
	add r0, r7, r1
	strb r5, [r0]
	mov r0, #38
	bl sub_080A1588
_080F27B4:
	ldr r2, _080F27D8  @ =gRam
	ldr r1, _080F27DC  @ =0x00000FA2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r0, _080F27E0  @ =0x000009B2
	add r2, r2, r0
	mov r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	bne _080F27E4
	add r0, r4, #0
	bl sub_080F2A70
	b _080F27EA
_080F27D4:
	.4byte 0x00001776
_080F27D8:
	.4byte gRam
_080F27DC:
	.4byte 0x00000FA2
_080F27E0:
	.4byte 0x000009B2
_080F27E4:
	add r0, r4, #0
	bl sub_080F2A94
_080F27EA:
	add sp, sp, #4
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F2620

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F27F8
sub_080F27F8: @ 0x080F27F8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080F29B8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F27F8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F2808
sub_080F2808: @ 0x080F2808
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080F2938  @ =gRam
	ldr r1, _080F293C  @ =0x00000AB2
	add r0, r6, r1
	ldrh r0, [r0]
	cmp r0, #26
	bne _080F281C
	b _080F29A4
_080F281C:
	ldr r2, _080F2940  @ =0x00001172
	add r1, r6, r2
	add r1, r5, r1
	ldr r3, _080F2944  @ =0x000010A2
	add r0, r6, r3
	add r4, r5, r0
	ldrb r0, [r4]
	strb r0, [r1]
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F2844
	mov r0, #3
	bl sub_0812FBC4
	add r0, r5, #0
	bl sub_080C1F70
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
_080F2844:
	ldr r1, _080F2948  @ =0x00000B36
	add r0, r6, r1
	ldrh r0, [r0]
	cmp r0, #6
	bne _080F2860
	ldr r2, _080F294C  @ =0x00001142
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F2860
	add r0, r5, #0
	bl sub_080E91E0
_080F2860:
	ldr r7, _080F2938  @ =gRam
	ldr r3, _080F2950  @ =0x00000FA2
	add r0, r7, r3
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #9
	bne _080F2874
	add r0, r5, #0
	bl sub_080C5D18
_080F2874:
	add r0, r5, #0
	bl sub_080C6240
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	beq _080F288A
	b _080F29AE
_080F288A:
	ldr r1, _080F2954  @ =0x00001152
	add r0, r7, r1
	add r4, r5, r0
	ldrb r0, [r4]
	sub r0, r0, #2
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080C2C4C
	ldr r2, _080F294C  @ =0x00001142
	add r0, r7, r2
	add r2, r5, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F28EA
	strb r6, [r2]
	ldrb r0, [r4]
	mvn r0, r0
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r0, r0, #1
	asr r0, r0, #2
	strb r0, [r4]
	ldr r3, _080F2948  @ =0x00000B36
	add r0, r7, r3
	ldrh r0, [r0]
	cmp r0, #6
	bne _080F28EA
	ldr r1, _080F2958  @ =0x00001002
	add r0, r7, r1
	add r2, r5, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080F28EA
	ldr r3, _080F295C  @ =0x00001012
	add r0, r7, r3
	add r0, r5, r0
	ldrb r1, [r0]
	add r1, r1, #2
	strb r1, [r0]
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	add r0, r5, #0
	bl sub_080F7AB4
_080F28EA:
	bl sub_0809E3CC
	add r4, r0, #0
	cmp r4, #0
	bne _080F29AE
	add r0, r5, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F29AE
	ldr r6, _080F2938  @ =gRam
	ldr r1, _080F2950  @ =0x00000FA2
	add r0, r6, r1
	add r0, r5, r0
	strb r4, [r0]
	ldr r2, _080F2960  @ =0x00000F62
	add r0, r6, r2
	add r0, r5, r0
	ldrb r4, [r0]
	cmp r4, #0
	beq _080F296C
	ldr r3, _080F2964  @ =0x00001776
	add r1, r6, r3
	mov r0, #2
	strb r0, [r1]
	mov r0, #62
	bl sub_080A1588
	ldr r0, _080F2968  @ =0x00000AA8
	add r2, r6, r0
	ldrh r1, [r2]
	mov r3, #128
	lsl r3, r3, #8
	add r0, r3, #0
	orr r0, r0, r1
	strh r0, [r2]
	b _080F29AE
	.byte 0x00
	.byte 0x00
_080F2938:
	.4byte gRam
_080F293C:
	.4byte 0x00000AB2
_080F2940:
	.4byte 0x00001172
_080F2944:
	.4byte 0x000010A2
_080F2948:
	.4byte 0x00000B36
_080F294C:
	.4byte 0x00001142
_080F2950:
	.4byte 0x00000FA2
_080F2954:
	.4byte 0x00001152
_080F2958:
	.4byte 0x00001002
_080F295C:
	.4byte 0x00001012
_080F2960:
	.4byte 0x00000F62
_080F2964:
	.4byte 0x00001776
_080F2968:
	.4byte 0x00000AA8
_080F296C:
	bl sub_08093078
	ldr r1, _080F2994  @ =0x00001776
	add r0, r6, r1
	strb r4, [r0]
	mov r0, #38
	bl sub_080A1588
	ldr r2, _080F2998  @ =0x000009B2
	add r0, r6, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	beq _080F299C
	add r0, r5, #0
	bl sub_080F2A94
	b _080F29AE
	.byte 0x00
	.byte 0x00
_080F2994:
	.4byte 0x00001776
_080F2998:
	.4byte 0x000009B2
_080F299C:
	add r0, r5, #0
	bl sub_080F2A70
	b _080F29AE
_080F29A4:
	ldr r3, _080F29B4  @ =0x00000FA2
	add r0, r6, r3
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
_080F29AE:
	pop {r4-r7}
	pop {r0}
	bx r0
_080F29B4:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F2808

	THUMB_FUNC_START sub_080F29B8
sub_080F29B8: @ 0x080F29B8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r1, _080F29F4  @ =gRam
	ldr r2, _080F29F8  @ =0x000009B2
	add r0, r1, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	add r4, r1, #0
	cmp r0, #0
	beq _080F2A08
	ldr r1, _080F29FC  @ =0x00000AA8
	add r0, r4, r1
	ldrh r1, [r0]
	lsr r1, r1, #8
	ldr r3, _080F2A00  @ =gUnknown_08179264
	ldr r2, _080F2A04  @ =0x00000F02
	add r0, r4, r2
	add r0, r5, r0
	ldrb r2, [r0]
	mov r0, #1
	and r0, r0, r2
	add r0, r0, r3
	ldrb r0, [r0]
	and r1, r1, r0
	cmp r1, #0
	beq _080F2A48
	b _080F2A3E
	.byte 0x00
	.byte 0x00
_080F29F4:
	.4byte gRam
_080F29F8:
	.4byte 0x000009B2
_080F29FC:
	.4byte 0x00000AA8
_080F2A00:
	.4byte gUnknown_08179264
_080F2A04:
	.4byte 0x00000F02
_080F2A08:
	ldr r2, _080F2A50  @ =0x000009C6
	add r0, r4, r2
	ldrh r0, [r0]
	cmp r0, #59
	bne _080F2A2A
	ldr r0, _080F2A54  @ =gUnknown_020022BB
	ldrb r1, [r0]
	mov r0, #32
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080F2A2A
	ldr r2, _080F2A58  @ =0x00000FA2
	add r0, r4, r2
	add r0, r5, r0
	strb r1, [r0]
_080F2A2A:
	ldr r1, _080F2A50  @ =0x000009C6
	add r0, r4, r1
	ldrh r0, [r0]
	ldr r2, _080F2A5C  @ =gUnknown_02002280
	add r0, r0, r2
	ldrb r1, [r0]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	beq _080F2A48
_080F2A3E:
	ldr r1, _080F2A58  @ =0x00000FA2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
_080F2A48:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F2A50:
	.4byte 0x000009C6
_080F2A54:
	.4byte gUnknown_020022BB
_080F2A58:
	.4byte 0x00000FA2
_080F2A5C:
	.4byte gUnknown_02002280
	THUMB_FUNC_END sub_080F29B8

	THUMB_FUNC_START sub_080F2A60
sub_080F2A60: @ 0x080F2A60
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080F29B8
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F2A60

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F2A70
sub_080F2A70: @ 0x080F2A70
	ldr r0, _080F2A88  @ =gRam
	ldr r1, _080F2A8C  @ =0x000009C6
	add r0, r0, r1
	ldrh r1, [r0]
	ldr r0, _080F2A90  @ =gUnknown_02002280
	add r1, r1, r0
	ldrb r0, [r1]
	mov r2, #64
	orr r0, r0, r2
	strb r0, [r1]
	bx lr
	.byte 0x00
	.byte 0x00
_080F2A88:
	.4byte gRam
_080F2A8C:
	.4byte 0x000009C6
_080F2A90:
	.4byte gUnknown_02002280
	THUMB_FUNC_END sub_080F2A70

	THUMB_FUNC_START sub_080F2A94
sub_080F2A94: @ 0x080F2A94
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F2AC0  @ =gRam
	ldr r2, _080F2AC4  @ =0x00000AA8
	add r3, r1, r2
	ldr r2, _080F2AC8  @ =gUnknown_08179264
	ldr r4, _080F2ACC  @ =0x00000F02
	add r1, r1, r4
	add r0, r0, r1
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	add r0, r0, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	ldrh r1, [r3]
	orr r0, r0, r1
	strh r0, [r3]
	pop {r4}
	pop {r0}
	bx r0
_080F2AC0:
	.4byte gRam
_080F2AC4:
	.4byte 0x00000AA8
_080F2AC8:
	.4byte gUnknown_08179264
_080F2ACC:
	.4byte 0x00000F02
	THUMB_FUNC_END sub_080F2A94

	THUMB_FUNC_START sub_080F2AD0
sub_080F2AD0: @ 0x080F2AD0
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r8, r5
	ldr r6, _080F2BEC  @ =gRam
	ldr r0, _080F2BF0  @ =0x00000FB2
	add r4, r6, r0
	add r4, r5, r4
	ldr r1, _080F2BF4  @ =0x00000F22
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	lsr r0, r0, #7
	strb r0, [r4]
	ldr r0, _080F2BF8  @ =0x00001122
	add r2, r6, r0
	add r2, r5, r2
	ldrb r0, [r2]
	mov r1, #191
	and r1, r1, r0
	ldr r3, _080F2BFC  @ =gUnknown_0817926C
	ldrb r0, [r4]
	add r0, r0, r3
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
	ldr r1, _080F2C00  @ =0x00001062
	add r0, r6, r1
	add r7, r5, r0
	ldrb r0, [r7]
	cmp r0, #0
	bne _080F2B22
	ldr r4, _080F2C04  @ =0x00000D94
	add r0, r6, r4
	add r0, r5, r0
	ldrb r1, [r0]
	mov r2, #48
	orr r1, r1, r2
	strb r1, [r0]
_080F2B22:
	add r0, r5, #0
	bl sub_080F2D7C
	ldr r1, _080F2C08  @ =gUnknown_03003E74
	ldrh r0, [r1]
	add r0, r0, #1
	strh r0, [r1]
	ldr r0, _080F2C0C  @ =0x00001012
	add r4, r6, r0
	add r4, r5, r4
	ldrb r0, [r4]
	sub r0, r0, #1
	strb r0, [r4]
	add r0, r5, #0
	bl sub_080C6240
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F2C46
	add r0, r5, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080F2C46
	ldrb r0, [r7]
	cmp r0, #0
	bne _080F2C30
	add r0, r5, #0
	bl sub_080C5044
	ldr r4, _080F2C10  @ =0x00001052
	add r1, r6, r4
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r5, #0
	bl Sprite3_Move
	ldr r1, _080F2C14  @ =0x00000996
	add r0, r6, r1
	ldrb r1, [r0]
	mov r2, #1
	add r0, r2, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080F2BC0
	add r4, r4, #80
	add r0, r6, r4
	add r3, r5, r0
	ldrb r0, [r3]
	and r2, r2, r0
	ldr r0, _080F2C18  @ =0x00001152
	add r1, r6, r0
	add r1, r5, r1
	ldr r0, _080F2C1C  @ =gUnknown_08179268
	add r0, r2, r0
	ldrb r0, [r0]
	ldrb r4, [r1]
	add r0, r0, r4
	strb r0, [r1]
	ldr r1, _080F2C20  @ =gUnknown_0817926E
	add r2, r2, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r2, [r2]
	cmp r0, r2
	bne _080F2BC0
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
_080F2BC0:
	mov r0, r8
	bl sub_080C2C4C
	ldr r2, _080F2BEC  @ =gRam
	ldr r1, _080F2C24  @ =0x00000F12
	add r0, r2, r1
	add r0, r0, r8
	mov r1, #0
	strb r1, [r0]
	ldr r1, _080F2C28  @ =gUnknown_08179270
	ldr r4, _080F2C2C  @ =0x00000F52
	add r2, r2, r4
	add r2, r2, r8
	ldrb r0, [r2]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	mov r0, r8
	bl _call_via_r1
	b _080F2C46
	.byte 0x00
	.byte 0x00
_080F2BEC:
	.4byte gRam
_080F2BF0:
	.4byte 0x00000FB2
_080F2BF4:
	.4byte 0x00000F22
_080F2BF8:
	.4byte 0x00001122
_080F2BFC:
	.4byte gUnknown_0817926C
_080F2C00:
	.4byte 0x00001062
_080F2C04:
	.4byte 0x00000D94
_080F2C08:
	.4byte gUnknown_03003E74
_080F2C0C:
	.4byte 0x00001012
_080F2C10:
	.4byte 0x00001052
_080F2C14:
	.4byte 0x00000996
_080F2C18:
	.4byte 0x00001152
_080F2C1C:
	.4byte gUnknown_08179268
_080F2C20:
	.4byte gUnknown_0817926E
_080F2C24:
	.4byte 0x00000F12
_080F2C28:
	.4byte gUnknown_08179270
_080F2C2C:
	.4byte 0x00000F52
_080F2C30:
	ldr r0, _080F2C50  @ =0x00001142
	add r1, r6, r0
	add r1, r1, r8
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #12
	bne _080F2C46
	strb r2, [r7]
_080F2C46:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080F2C50:
	.4byte 0x00001142
	THUMB_FUNC_END sub_080F2AD0

	THUMB_FUNC_START sub_080F2C54
sub_080F2C54: @ 0x080F2C54
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080F2C8C  @ =gRam
	ldr r2, _080F2C90  @ =0x00000FC2
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F2CAC
	ldr r0, _080F2C94  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	bl GetRandomInt
	mov r1, #12
	and r1, r1, r0
	cmp r1, #0
	beq _080F2C98
	bl GetRandomInt
	mov r2, #1
	and r2, r2, r0
	b _080F2CA2
	.byte 0x00
	.byte 0x00
_080F2C8C:
	.4byte gRam
_080F2C90:
	.4byte 0x00000FC2
_080F2C94:
	.4byte 0x00000F52
_080F2C98:
	add r0, r4, #0
	bl sub_080C3028
	lsl r0, r0, #24
	lsr r2, r0, #24
_080F2CA2:
	ldr r0, _080F2CB4  @ =gRam
	ldr r1, _080F2CB8  @ =0x00001082
	add r0, r0, r1
	add r0, r4, r0
	strb r2, [r0]
_080F2CAC:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F2CB4:
	.4byte gRam
_080F2CB8:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080F2C54

	THUMB_FUNC_START sub_080F2CBC
sub_080F2CBC: @ 0x080F2CBC
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080F2D4C  @ =gRam
	ldr r1, _080F2D50  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	mov r2, #1
	add r4, r2, #0
	and r4, r4, r0
	cmp r4, #0
	bne _080F2D2E
	ldr r3, _080F2D54  @ =0x00001092
	add r0, r6, r3
	add r3, r5, r0
	ldrb r1, [r3]
	add r0, r2, #0
	and r0, r0, r1
	ldr r7, _080F2D58  @ =0x0000164C
	add r1, r6, r7
	ldrb r1, [r1]
	add r0, r1, r0
	add r1, r1, r0
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r0, _080F2D5C  @ =0x00000F22
	add r2, r6, r0
	add r2, r5, r2
	ldr r0, _080F2D60  @ =gUnknown_08179268
	add r0, r1, r0
	ldrb r0, [r0]
	ldrb r7, [r2]
	add r0, r0, r7
	strb r0, [r2]
	ldr r2, _080F2D64  @ =gUnknown_0817927A
	add r1, r1, r2
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r1, [r1]
	cmp r0, r1
	bne _080F2D2E
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
	ldr r1, _080F2D68  @ =0x00000F52
	add r0, r6, r1
	add r0, r5, r0
	strb r4, [r0]
	bl GetRandomInt
	ldr r3, _080F2D6C  @ =0x00000FC2
	add r2, r6, r3
	add r2, r5, r2
	mov r1, #31
	and r1, r1, r0
	add r1, r1, #16
	strb r1, [r2]
_080F2D2E:
	ldr r0, _080F2D4C  @ =gRam
	ldr r7, _080F2D70  @ =0x00000F12
	add r1, r0, r7
	add r1, r5, r1
	ldr r2, _080F2D74  @ =gUnknown_08179278
	ldr r3, _080F2D78  @ =0x00001082
	add r0, r0, r3
	add r0, r5, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r4-r7}
	pop {r0}
	bx r0
_080F2D4C:
	.4byte gRam
_080F2D50:
	.4byte 0x00000996
_080F2D54:
	.4byte 0x00001092
_080F2D58:
	.4byte 0x0000164C
_080F2D5C:
	.4byte 0x00000F22
_080F2D60:
	.4byte gUnknown_08179268
_080F2D64:
	.4byte gUnknown_0817927A
_080F2D68:
	.4byte 0x00000F52
_080F2D6C:
	.4byte 0x00000FC2
_080F2D70:
	.4byte 0x00000F12
_080F2D74:
	.4byte gUnknown_08179278
_080F2D78:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080F2CBC

	THUMB_FUNC_START sub_080F2D7C
sub_080F2D7C: @ 0x080F2D7C
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r7, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r7, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080F2E1C
	ldr r4, _080F2E28  @ =gRam
	ldr r0, _080F2E2C  @ =0x00001052
	add r3, r4, r0
	add r3, r7, r3
	ldrb r0, [r3]
	lsr r0, r0, #3
	mov r1, #3
	mov r12, r1
	mov r2, r12
	and r0, r0, r2
	ldr r5, _080F2E30  @ =0x0000096C
	add r1, r4, r5
	strb r0, [r1]
	ldr r2, _080F2E34  @ =gUnknown_03003E74
	add r0, sp, #4
	ldrb r1, [r0]
	ldrh r0, [r2]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r1, #150
	lsl r1, r1, #4
	add r1, r1, r4
	mov r8, r1
	ldr r2, _080F2E38  @ =gUnknown_0817927E
	ldr r5, _080F2E3C  @ =0x00000FB2
	add r1, r4, r5
	add r1, r7, r1
	ldrb r1, [r1]
	lsl r1, r1, #1
	add r1, r1, r2
	ldrh r1, [r1]
	mov r7, r8
	ldrh r7, [r7]
	add r1, r1, r7
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r5, _080F2E40  @ =0x00000964
	add r2, r4, r5
	ldrh r2, [r2]
	add r2, r2, #9
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r5, _080F2E44  @ =gUnknown_08179282
	ldrb r3, [r3]
	lsr r3, r3, #3
	mov r7, r12
	and r3, r3, r7
	add r3, r3, r5
	ldrb r3, [r3]
	ldr r5, _080F2E48  @ =0x00000969
	add r4, r4, r5
	ldrb r4, [r4]
	lsl r4, r4, #24
	asr r4, r4, #24
	mov r5, #240
	and r4, r4, r5
	mov r5, #2
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	str r6, [sp]
	bl sub_080C6368
_080F2E1C:
	add sp, sp, #8
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080F2E28:
	.4byte gRam
_080F2E2C:
	.4byte 0x00001052
_080F2E30:
	.4byte 0x0000096C
_080F2E34:
	.4byte gUnknown_03003E74
_080F2E38:
	.4byte gUnknown_0817927E
_080F2E3C:
	.4byte 0x00000FB2
_080F2E40:
	.4byte 0x00000964
_080F2E44:
	.4byte gUnknown_08179282
_080F2E48:
	.4byte 0x00000969
	THUMB_FUNC_END sub_080F2D7C

	THUMB_FUNC_START sub_080F2E4C
sub_080F2E4C: @ 0x080F2E4C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F2E68  @ =gRam
	ldr r2, _080F2E6C  @ =0x00001142
	add r1, r1, r2
	add r1, r0, r1
	mov r2, #12
	strb r2, [r1]
	bl sub_080C3774
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F2E68:
	.4byte gRam
_080F2E6C:
	.4byte 0x00001142
	THUMB_FUNC_END sub_080F2E4C

	THUMB_FUNC_START sub_080F2E70
sub_080F2E70: @ 0x080F2E70
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r5, _080F2F0C  @ =gRam
	ldr r1, _080F2F10  @ =0x000009DA
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #18
	beq _080F2E8C
	b _080F300C
_080F2E8C:
	add r0, r4, #0
	bl sub_080F3680
	ldr r2, _080F2F14  @ =0x0000165E
	add r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #2
	bls _080F2EA8
	ldr r0, _080F2F18  @ =0x0000165F
	add r2, r5, r0
	ldrb r1, [r2]
	mov r0, #2
	orr r0, r0, r1
	strb r0, [r2]
_080F2EA8:
	ldr r1, _080F2F18  @ =0x0000165F
	add r6, r5, r1
	ldrb r1, [r6]
	mov r0, #2
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r3, #0
	beq _080F2EBC
	b _080F304E
_080F2EBC:
	ldr r2, _080F2F1C  @ =0x00001062
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r0, _080F2F20  @ =0x00001012
	add r2, r5, r0
	add r2, r4, r2
	ldrb r1, [r2]
	mov r0, #240
	and r0, r0, r1
	mov r1, #2
	orr r0, r0, r1
	strb r0, [r2]
	ldr r0, _080F2F24  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080F2F58
	add r0, r4, #0
	bl sub_080C2FA8
	mov r1, #3
	eor r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F2F28  @ =0x00001082
	add r1, r5, r2
	add r1, r4, r1
	strb r0, [r1]
	sub r2, r2, #208
	add r1, r5, r2
	add r1, r4, r1
	strb r0, [r1]
	ldr r1, _080F2F2C  @ =0x00001663
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #1
	beq _080F2F30
	mov r0, #2
	b _080F2F6C
_080F2F0C:
	.4byte gRam
_080F2F10:
	.4byte 0x000009DA
_080F2F14:
	.4byte 0x0000165E
_080F2F18:
	.4byte 0x0000165F
_080F2F1C:
	.4byte 0x00001062
_080F2F20:
	.4byte 0x00001012
_080F2F24:
	.4byte gUnknown_0200233D
_080F2F28:
	.4byte 0x00001082
_080F2F2C:
	.4byte 0x00001663
_080F2F30:
	ldrb r0, [r6]
	mov r1, #4
	orr r0, r0, r1
	strb r0, [r6]
	ldr r2, _080F2F50  @ =gUnknown_0200229B
	ldrb r0, [r2]
	mov r1, #32
	orr r0, r0, r1
	strb r0, [r2]
	ldr r2, _080F2F54  @ =0x00000FC2
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #170
	strb r1, [r0]
	mov r0, #1
	b _080F2F6C
_080F2F50:
	.4byte gUnknown_0200229B
_080F2F54:
	.4byte 0x00000FC2
_080F2F58:
	ldr r1, _080F2FDC  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	ldr r2, _080F2FE0  @ =0x00000F92
	add r0, r5, r2
	add r0, r4, r0
	strb r3, [r0]
	mov r0, #0
_080F2F6C:
	ldr r4, _080F2FE4  @ =gRam
	ldr r1, _080F2FE8  @ =0x00001052
	add r3, r4, r1
	add r3, r7, r3
	mov r2, #0
	mov r9, r2
	strb r0, [r3]
	ldr r1, _080F2FEC  @ =gUnknown_08179288
	ldr r0, _080F2FF0  @ =0x00000EE2
	add r0, r0, r4
	mov r8, r0
	add r8, r8, r7
	mov r2, r8
	ldrb r0, [r2]
	ldrh r2, [r1]
	add r2, r2, r0
	ldr r0, _080F2FF4  @ =0x00000F02
	add r6, r4, r0
	add r6, r7, r6
	ldrb r0, [r6]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r1, _080F2FF8  @ =gUnknown_0817928E
	ldrb r0, [r3]
	lsl r0, r0, #1
	add r0, r0, r1
	ldr r1, _080F2FFC  @ =0x00000ED2
	add r5, r4, r1
	add r5, r7, r5
	ldrb r3, [r5]
	ldrh r1, [r0]
	add r1, r1, r3
	ldr r0, _080F3000  @ =0x00000EF2
	add r3, r4, r0
	add r3, r7, r3
	ldrb r0, [r3]
	lsl r0, r0, #8
	add r1, r1, r0
	mov r0, r8
	strb r2, [r0]
	lsr r2, r2, #8
	strb r2, [r6]
	strb r1, [r5]
	lsr r1, r1, #8
	strb r1, [r3]
	ldr r1, _080F3004  @ =0x00001172
	add r4, r4, r1
	add r4, r7, r4
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	ldr r0, _080F3008  @ =gUnknown_0200EE19
	mov r2, r9
	strb r2, [r0]
	b _080F3070
	.byte 0x00
	.byte 0x00
_080F2FDC:
	.4byte 0x00000FB2
_080F2FE0:
	.4byte 0x00000F92
_080F2FE4:
	.4byte gRam
_080F2FE8:
	.4byte 0x00001052
_080F2FEC:
	.4byte gUnknown_08179288
_080F2FF0:
	.4byte 0x00000EE2
_080F2FF4:
	.4byte 0x00000F02
_080F2FF8:
	.4byte gUnknown_0817928E
_080F2FFC:
	.4byte 0x00000ED2
_080F3000:
	.4byte 0x00000EF2
_080F3004:
	.4byte 0x00001172
_080F3008:
	.4byte gUnknown_0200EE19
_080F300C:
	cmp r0, #4
	beq _080F3040
	ldr r2, _080F3034  @ =0x0000165F
	add r0, r5, r2
	ldrb r1, [r0]
	mov r2, #1
	add r0, r2, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080F304E
	ldr r1, _080F3038  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	ldr r1, _080F303C  @ =0x00001052
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	b _080F3070
_080F3034:
	.4byte 0x0000165F
_080F3038:
	.4byte 0x00000FB2
_080F303C:
	.4byte 0x00001052
_080F3040:
	ldr r2, _080F305C  @ =0x0000165F
	add r0, r5, r2
	ldrb r1, [r0]
	mov r0, #16
	and r0, r0, r1
	cmp r0, #0
	beq _080F3064
_080F304E:
	ldr r1, _080F3060  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080F3070
	.byte 0x00
	.byte 0x00
_080F305C:
	.4byte 0x0000165F
_080F3060:
	.4byte 0x00000FA2
_080F3064:
	ldr r2, _080F307C  @ =0x00000EE2
	add r1, r5, r2
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #8
	strb r0, [r1]
_080F3070:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080F307C:
	.4byte 0x00000EE2
	THUMB_FUNC_END sub_080F2E70

	THUMB_FUNC_START sub_080F3080
sub_080F3080: @ 0x080F3080
	push {lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080F30DC  @ =gRam
	ldr r1, _080F30E0  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080F3126
	ldr r0, _080F30E4  @ =0x000009D6
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #32
	bne _080F30FC
	ldr r0, _080F30E8  @ =0x00000F52
	add r1, r2, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F30EC  @ =0x0000180F
	add r1, r2, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F30F0  @ =0x0000180E
	add r1, r2, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #182
	lsl r0, r0, #5
	add r1, r2, r0
	mov r0, #87
	strb r0, [r1]
	ldr r0, _080F30F4  @ =0x000016C1
	add r1, r2, r0
	mov r0, #33
	strb r0, [r1]
	ldr r0, _080F30F8  @ =0x00001770
	add r1, r2, r0
	mov r0, #1
	b _080F3124
	.byte 0x00
	.byte 0x00
_080F30DC:
	.4byte gRam
_080F30E0:
	.4byte 0x00000996
_080F30E4:
	.4byte 0x000009D6
_080F30E8:
	.4byte 0x00000F52
_080F30EC:
	.4byte 0x0000180F
_080F30F0:
	.4byte 0x0000180E
_080F30F4:
	.4byte 0x000016C1
_080F30F8:
	.4byte 0x00001770
_080F30FC:
	sub r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F312C  @ =0x000009D7
	add r1, r2, r0
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F3130  @ =0x00000998
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080F3118
	sub r0, r0, #1
	strb r0, [r1]
_080F3118:
	ldr r0, _080F3134  @ =0x00000999
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #31
	beq _080F3126
	add r0, r0, #1
_080F3124:
	strb r0, [r1]
_080F3126:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F312C:
	.4byte 0x000009D7
_080F3130:
	.4byte 0x00000998
_080F3134:
	.4byte 0x00000999
	THUMB_FUNC_END sub_080F3080

	THUMB_FUNC_START sub_080F3138
sub_080F3138: @ 0x080F3138
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080F31D4  @ =gRam
	ldr r2, _080F31D8  @ =0x00000FC2
	add r0, r1, r2
	add r2, r4, r0
	ldrb r0, [r2]
	add r6, r1, #0
	cmp r0, #0
	bne _080F31BA
	ldr r1, _080F31DC  @ =0x00000F62
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080F3166
	ldr r0, _080F31E0  @ =0x00000ED2
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #2
	strb r0, [r1]
_080F3166:
	ldr r1, _080F31E4  @ =gUnknown_081792BC
	ldrb r0, [r5]
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r1, _080F31E8  @ =0x00000FB2
	add r3, r6, r1
	add r3, r4, r3
	ldr r1, _080F31EC  @ =gUnknown_081792BE
	ldrb r0, [r5]
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r3]
	ldr r2, _080F31F0  @ =0x00000F22
	add r1, r6, r2
	add r1, r4, r1
	ldr r2, _080F31F4  @ =gUnknown_081792C0
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F31F8  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080F31FC  @ =gUnknown_081792C4
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #3
	bne _080F31BA
	ldr r2, _080F3200  @ =0x00000F52
	add r1, r6, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F31BA:
	ldr r0, _080F3204  @ =0x00000F92
	add r2, r6, r0
	add r2, r4, r2
	ldr r1, _080F3208  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	pop {r4-r6}
	pop {r0}
	bx r0
_080F31D4:
	.4byte gRam
_080F31D8:
	.4byte 0x00000FC2
_080F31DC:
	.4byte 0x00000F62
_080F31E0:
	.4byte 0x00000ED2
_080F31E4:
	.4byte gUnknown_081792BC
_080F31E8:
	.4byte 0x00000FB2
_080F31EC:
	.4byte gUnknown_081792BE
_080F31F0:
	.4byte 0x00000F22
_080F31F4:
	.4byte gUnknown_081792C0
_080F31F8:
	.4byte 0x00000F12
_080F31FC:
	.4byte gUnknown_081792C4
_080F3200:
	.4byte 0x00000F52
_080F3204:
	.4byte 0x00000F92
_080F3208:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F3138

	THUMB_FUNC_START sub_080F320C
sub_080F320C: @ 0x080F320C
	push {r4-r6,lr}
	mov r6, r8
	push {r6}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080F3264  @ =gRam
	ldr r0, _080F3268  @ =0x00001776
	add r1, r5, r0
	mov r0, #0
	strb r0, [r1]
	bl sub_080A1588
	ldr r0, _080F326C  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F3270  @ =0x00000F92
	add r0, r5, r1
	add r4, r4, r0
	mov r6, #1
	mov r0, #1
	mov r8, r0
	mov r1, r8
	strb r1, [r4]
	mov r0, #3
	bl sub_080BE9A0
	ldr r0, _080F3274  @ =0x0000165F
	add r1, r5, r0
	ldrb r0, [r1]
	orr r6, r6, r0
	strb r6, [r1]
	ldr r1, _080F3278  @ =0x0000165E
	add r5, r5, r1
	mov r0, r8
	strb r0, [r5]
	pop {r3}
	mov r8, r3
	pop {r4-r6}
	pop {r0}
	bx r0
_080F3264:
	.4byte gRam
_080F3268:
	.4byte 0x00001776
_080F326C:
	.4byte 0x00000F52
_080F3270:
	.4byte 0x00000F92
_080F3274:
	.4byte 0x0000165F
_080F3278:
	.4byte 0x0000165E
	THUMB_FUNC_END sub_080F320C

	THUMB_FUNC_START sub_080F327C
sub_080F327C: @ 0x080F327C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r0, #24
	bl sub_080CF388
	ldr r1, _080F32E8  @ =gRam
	ldr r0, _080F32EC  @ =0x0000096C
	add r2, r1, r0
	mov r0, #6
	strh r0, [r2]
	ldr r3, _080F32F0  @ =0x00000FB2
	add r4, r1, r3
	add r4, r5, r4
	ldrb r2, [r4]
	ldr r6, _080F32F4  @ =0x00000F92
	add r0, r1, r6
	add r0, r5, r0
	lsl r2, r2, #1
	ldrb r0, [r0]
	add r2, r2, r0
	lsl r2, r2, #24
	lsr r2, r2, #24
	ldr r0, _080F32F8  @ =gUnknown_08179454
	add r0, r2, r0
	ldrb r3, [r0]
	ldr r6, _080F32FC  @ =0x00001742
	add r0, r1, r6
	strb r3, [r0]
	ldr r0, _080F3300  @ =gUnknown_0817945B
	add r0, r2, r0
	ldrb r0, [r0]
	ldr r3, _080F3304  @ =0x00001743
	add r1, r1, r3
	strb r0, [r1]
	lsl r1, r2, #1
	add r1, r1, r2
	lsl r1, r1, #4
	ldr r0, _080F3308  @ =gUnknown_081792D4
	add r1, r1, r0
	add r0, r5, #0
	bl sub_080C94AC
	ldrb r0, [r4]
	cmp r0, #0
	beq _080F32E2
	cmp r0, #3
	beq _080F32E2
	add r0, r5, #0
	bl sub_080C6230
_080F32E2:
	pop {r4-r6}
	pop {r0}
	bx r0
_080F32E8:
	.4byte gRam
_080F32EC:
	.4byte 0x0000096C
_080F32F0:
	.4byte 0x00000FB2
_080F32F4:
	.4byte 0x00000F92
_080F32F8:
	.4byte gUnknown_08179454
_080F32FC:
	.4byte 0x00001742
_080F3300:
	.4byte gUnknown_0817945B
_080F3304:
	.4byte 0x00001743
_080F3308:
	.4byte gUnknown_081792D4
	THUMB_FUNC_END sub_080F327C

	THUMB_FUNC_START sub_080F330C
sub_080F330C: @ 0x080F330C
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	mov r1, #30
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F3354
	ldr r2, _080F335C  @ =gRam
	ldr r0, _080F3360  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F3364  @ =0x00000F92
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F3368  @ =0x0000165F
	add r3, r2, r0
	ldrb r1, [r3]
	mov r0, #2
	orr r0, r0, r1
	strb r0, [r3]
	ldr r0, _080F336C  @ =0x00000FE2
	add r2, r2, r0
	add r2, r4, r2
	mov r0, #128
	strb r0, [r2]
_080F3354:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080F335C:
	.4byte gRam
_080F3360:
	.4byte 0x00000F52
_080F3364:
	.4byte 0x00000F92
_080F3368:
	.4byte 0x0000165F
_080F336C:
	.4byte 0x00000FE2
	THUMB_FUNC_END sub_080F330C

	THUMB_FUNC_START sub_080F3370
sub_080F3370: @ 0x080F3370
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r5, r2, #0
	ldr r3, _080F33C8  @ =gRam
	ldr r1, _080F33CC  @ =0x00000F92
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #0
	strb r1, [r0]
	ldr r1, _080F33D0  @ =0x00000FE2
	add r0, r3, r1
	add r4, r2, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F339C
	ldr r0, _080F33D4  @ =0x00000F52
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F339C:
	ldr r2, _080F33D8  @ =0x00000F62
	add r1, r3, r2
	add r1, r5, r1
	ldr r2, _080F33DC  @ =0x00000996
	add r0, r3, r2
	ldrb r2, [r0]
	mov r0, #2
	and r0, r0, r2
	strb r0, [r1]
	ldrb r1, [r4]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080F33C0
	add r0, r5, #0
	mov r1, #76
	bl sub_080CF0AC
_080F33C0:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F33C8:
	.4byte gRam
_080F33CC:
	.4byte 0x00000F92
_080F33D0:
	.4byte 0x00000FE2
_080F33D4:
	.4byte 0x00000F52
_080F33D8:
	.4byte 0x00000F62
_080F33DC:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F3370

	THUMB_FUNC_START sub_080F33E0
sub_080F33E0: @ 0x080F33E0
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080F3444  @ =gRam
	ldr r1, _080F3448  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r2, _080F344C  @ =0x00000FB2
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080F3450  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F343A
	add r0, r4, #0
	mov r1, #26
	mov r2, sp
	bl sub_080C9564
	ldr r2, _080F3454  @ =0x00000F52
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F3458  @ =gUnknown_0200EE19
	mov r0, #1
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080F4130
	ldr r1, _080F345C  @ =0x00001770
	add r0, r5, r1
	mov r1, #1
	strb r1, [r0]
	mov r2, #179
	lsl r2, r2, #5
	add r0, r5, r2
	strb r1, [r0]
_080F343A:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F3444:
	.4byte gRam
_080F3448:
	.4byte 0x00001082
_080F344C:
	.4byte 0x00000FB2
_080F3450:
	.4byte 0x00000FC2
_080F3454:
	.4byte 0x00000F52
_080F3458:
	.4byte gUnknown_0200EE19
_080F345C:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080F33E0

	THUMB_FUNC_START sub_080F3460
sub_080F3460: @ 0x080F3460
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r3, _080F349C  @ =gRam
	ldr r2, _080F34A0  @ =0x00001082
	add r1, r3, r2
	add r1, r4, r1
	mov r2, #3
	eor r0, r0, r2
	strb r0, [r1]
	mov r2, #0
	ldr r0, _080F34A4  @ =gUnknown_02002354
	ldrb r1, [r0]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #7
	beq _080F34A8
	mov r1, #179
	lsl r1, r1, #5
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #2
	bls _080F34AA
	mov r2, #1
	b _080F34AA
	.byte 0x00
	.byte 0x00
_080F349C:
	.4byte gRam
_080F34A0:
	.4byte 0x00001082
_080F34A4:
	.4byte gUnknown_02002354
_080F34A8:
	mov r2, #2
_080F34AA:
	ldr r0, _080F34E8  @ =gUnknown_0817948C
	add r0, r2, r0
	ldrb r1, [r0]
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F34DE
	ldr r2, _080F34EC  @ =gRam
	ldr r1, _080F34F0  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080F34F4  @ =0x00001082
	add r2, r2, r0
	add r2, r4, r2
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r1, _080F34F8  @ =gUnknown_02002352
	mov r0, #160
	strb r0, [r1]
_080F34DE:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F34E8:
	.4byte gUnknown_0817948C
_080F34EC:
	.4byte gRam
_080F34F0:
	.4byte 0x00000FB2
_080F34F4:
	.4byte 0x00001082
_080F34F8:
	.4byte gUnknown_02002352
	THUMB_FUNC_END sub_080F3460

	THUMB_FUNC_START sub_080F34FC
sub_080F34FC: @ 0x080F34FC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F3CA0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F35CA
	ldr r5, _080F3534  @ =gRam
	ldr r1, _080F3538  @ =0x00000F82
	add r0, r5, r1
	add r0, r4, r0
	ldrb r6, [r0]
	cmp r6, #0
	beq _080F3544
	ldr r2, _080F353C  @ =0x00000F62
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
	ldr r1, _080F3540  @ =gUnknown_08179530
	sub r2, r2, #16
	b _080F3560
	.byte 0x00
	.byte 0x00
_080F3534:
	.4byte gRam
_080F3538:
	.4byte 0x00000F82
_080F353C:
	.4byte 0x00000F62
_080F3540:
	.4byte gUnknown_08179530
_080F3544:
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F3580
	ldr r1, _080F3574  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F3598
	ldr r1, _080F3578  @ =gUnknown_08179548
	ldr r2, _080F357C  @ =0x00001052
_080F3560:
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	b _080F35CA
_080F3574:
	.4byte 0x00000FD2
_080F3578:
	.4byte gUnknown_08179548
_080F357C:
	.4byte 0x00001052
_080F3580:
	bl sub_080AF16C
	ldr r1, _080F35D0  @ =0x00001719
	add r0, r5, r1
	strb r6, [r0]
	bl sub_0809945C
	ldr r2, _080F35D4  @ =0x00000FD2
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #7
	strb r1, [r0]
_080F3598:
	ldr r2, _080F35D8  @ =gRam
	ldr r1, _080F35DC  @ =0x00001052
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r0, _080F35E0  @ =0x000016FA
	add r1, r2, r0
	mov r0, #129
	strb r0, [r1]
	ldr r0, _080F35D0  @ =0x00001719
	add r1, r2, r0
	mov r0, #8
	strb r0, [r1]
	ldr r1, _080F35E4  @ =gUnknown_0817953C
	ldr r0, _080F35E8  @ =0x00000F52
	add r2, r2, r0
	add r2, r4, r2
	ldrb r0, [r2]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F35CA:
	pop {r4-r6}
	pop {r0}
	bx r0
_080F35D0:
	.4byte 0x00001719
_080F35D4:
	.4byte 0x00000FD2
_080F35D8:
	.4byte gRam
_080F35DC:
	.4byte 0x00001052
_080F35E0:
	.4byte 0x000016FA
_080F35E4:
	.4byte gUnknown_0817953C
_080F35E8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F34FC

	THUMB_FUNC_START sub_080F35EC
sub_080F35EC: @ 0x080F35EC
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r7, r0, #0
	ldr r2, _080F366C  @ =gRam
	ldr r0, _080F3670  @ =0x00000EE2
	add r5, r2, r0
	add r5, r7, r5
	ldrb r1, [r5]
	mov r8, r1
	add r0, r0, #32
	add r4, r2, r0
	add r4, r7, r4
	ldrb r6, [r4]
	lsl r0, r6, #8
	add r0, r0, r8
	add r0, r0, #19
	strb r0, [r5]
	lsr r0, r0, #8
	strb r0, [r4]
	add r0, r7, #0
	str r2, [sp]
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, r8
	strb r1, [r5]
	strb r6, [r4]
	ldr r2, [sp]
	cmp r0, #3
	beq _080F3636
	cmp r0, #1
	bne _080F365E
_080F3636:
	ldr r0, _080F3674  @ =0x00000F62
	add r1, r2, r0
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #63
	bls _080F365E
	ldr r0, _080F3678  @ =0x00000F52
	add r1, r2, r0
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F367C  @ =0x00001770
	add r1, r2, r0
	mov r0, #1
	strb r0, [r1]
_080F365E:
	add sp, sp, #4
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F366C:
	.4byte gRam
_080F3670:
	.4byte 0x00000EE2
_080F3674:
	.4byte 0x00000F62
_080F3678:
	.4byte 0x00000F52
_080F367C:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080F35EC

	THUMB_FUNC_START sub_080F3680
sub_080F3680: @ 0x080F3680
	push {r4-r7,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r7, _080F3734  @ =gRam
	ldr r0, _080F3738  @ =0x00000FB1
	add r4, r7, r0
	ldrb r0, [r4]
	add r0, r0, #1
	mov r5, #0
	strb r0, [r4]
	mov r0, #115
	bl sub_080CA538
	add r6, r0, #0
	strb r5, [r4]
	ldr r1, _080F373C  @ =0x00001012
	add r2, r7, r1
	add r2, r6, r2
	ldrb r1, [r2]
	mov r3, #240
	add r0, r3, #0
	and r0, r0, r1
	mov r1, #3
	orr r0, r0, r1
	strb r0, [r2]
	ldr r2, _080F3740  @ =0x00000EE2
	add r0, r7, r2
	add r0, r6, r0
	strb r3, [r0]
	ldr r3, _080F3744  @ =0x00000F02
	add r0, r7, r3
	add r0, r6, r0
	mov r1, #4
	strb r1, [r0]
	ldr r0, _080F3748  @ =0x00000ED2
	add r4, r7, r0
	add r4, r6, r4
	mov r0, #55
	strb r0, [r4]
	ldr r1, _080F374C  @ =0x00000EF2
	add r3, r7, r1
	add r3, r6, r3
	mov r1, #2
	strb r1, [r3]
	ldr r2, _080F3750  @ =0x00001062
	add r0, r7, r2
	add r0, r6, r0
	strb r1, [r0]
	ldr r1, _080F3754  @ =0x00001132
	add r0, r7, r1
	add r0, r6, r0
	mov r1, #11
	strb r1, [r0]
	ldr r2, _080F3758  @ =0x00000E75
	add r1, r7, r2
	add r1, r6, r1
	ldrb r2, [r1]
	mov r0, #32
	orr r0, r0, r2
	strb r0, [r1]
	ldr r1, _080F375C  @ =0x00001052
	add r0, r7, r1
	add r0, r6, r0
	mov r5, #1
	strb r5, [r0]
	ldrb r0, [r4]
	mov r1, #150
	lsl r1, r1, #4
	add r2, r7, r1
	strb r0, [r2]
	ldrb r1, [r3]
	ldr r3, _080F3760  @ =0x00000961
	add r0, r7, r3
	strb r1, [r0]
	mov r1, #182
	lsl r1, r1, #5
	add r0, r7, r1
	ldrh r0, [r0]
	ldrh r2, [r2]
	cmp r0, r2
	bcs _080F372C
	ldr r2, _080F3764  @ =0x00000F82
	add r0, r7, r2
	add r0, r6, r0
	strb r5, [r0]
_080F372C:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F3734:
	.4byte gRam
_080F3738:
	.4byte 0x00000FB1
_080F373C:
	.4byte 0x00001012
_080F3740:
	.4byte 0x00000EE2
_080F3744:
	.4byte 0x00000F02
_080F3748:
	.4byte 0x00000ED2
_080F374C:
	.4byte 0x00000EF2
_080F3750:
	.4byte 0x00001062
_080F3754:
	.4byte 0x00001132
_080F3758:
	.4byte 0x00000E75
_080F375C:
	.4byte 0x00001052
_080F3760:
	.4byte 0x00000961
_080F3764:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080F3680

	THUMB_FUNC_START sub_080F3768
sub_080F3768: @ 0x080F3768
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F3788  @ =gUnknown_08179294
	ldr r1, _080F378C  @ =gRam
	ldr r3, _080F3790  @ =0x00001062
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080F3788:
	.4byte gUnknown_08179294
_080F378C:
	.4byte gRam
_080F3790:
	.4byte 0x00001062
	THUMB_FUNC_END sub_080F3768

	THUMB_FUNC_START sub_080F3794
sub_080F3794: @ 0x080F3794
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F327C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F37C4
	ldr r1, _080F37CC  @ =gUnknown_081792A0
	ldr r0, _080F37D0  @ =gRam
	ldr r2, _080F37D4  @ =0x00001052
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F37C4:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F37CC:
	.4byte gUnknown_081792A0
_080F37D0:
	.4byte gRam
_080F37D4:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080F3794

	THUMB_FUNC_START sub_080F37D8
sub_080F37D8: @ 0x080F37D8
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080F3804  @ =gUnknown_081792A8
	ldr r0, _080F3808  @ =gRam
	ldr r2, _080F380C  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
_080F3804:
	.4byte gUnknown_081792A8
_080F3808:
	.4byte gRam
_080F380C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F37D8

	THUMB_FUNC_START sub_080F3810
sub_080F3810: @ 0x080F3810
	push {r4,r5,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080F384C  @ =gRam
	ldr r0, _080F3850  @ =0x00001608
	add r1, r5, r0
	mov r0, #148
	lsl r0, r0, #4
	strh r0, [r1]
	ldr r0, _080F3854  @ =0x0000160C
	add r1, r5, r0
	ldr r0, _080F3858  @ =0x0000215A
	strh r0, [r1]
	add r0, r4, #0
	mov r1, #34
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080F385C  @ =0x00000F52
	add r5, r5, r0
	add r4, r4, r5
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080F384C:
	.4byte gRam
_080F3850:
	.4byte 0x00001608
_080F3854:
	.4byte 0x0000160C
_080F3858:
	.4byte 0x0000215A
_080F385C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F3810

	THUMB_FUNC_START sub_080F3860
sub_080F3860: @ 0x080F3860
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #16
	mov r2, sp
	bl sub_080C9564
	ldr r2, _080F389C  @ =gRam
	ldr r0, _080F38A0  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F38A4  @ =0x00000A3C
	add r1, r2, r0
	mov r0, #3
	strh r0, [r1]
	ldr r0, _080F38A8  @ =0x00000F92
	add r2, r2, r0
	add r4, r4, r2
	mov r0, #1
	strb r0, [r4]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080F389C:
	.4byte gRam
_080F38A0:
	.4byte 0x00000F52
_080F38A4:
	.4byte 0x00000A3C
_080F38A8:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080F3860

	THUMB_FUNC_START sub_080F38AC
sub_080F38AC: @ 0x080F38AC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F38E8  @ =gRam
	ldr r1, _080F38EC  @ =0x00001663
	add r3, r2, r1
	mov r1, #5
	strb r1, [r3]
	ldr r1, _080F38F0  @ =0x00001752
	add r3, r2, r1
	mov r5, #0
	ldr r1, _080F38F4  @ =0x00000DF3
	strh r1, [r3]
	ldr r3, _080F38F8  @ =0x0000165F
	add r4, r2, r3
	ldrb r3, [r4]
	mov r1, #16
	orr r1, r1, r3
	strb r1, [r4]
	ldr r3, _080F38FC  @ =0x00000FA2
	add r1, r2, r3
	add r0, r0, r1
	strb r5, [r0]
	ldr r0, _080F3900  @ =0x00001770
	add r2, r2, r0
	strb r5, [r2]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F38E8:
	.4byte gRam
_080F38EC:
	.4byte 0x00001663
_080F38F0:
	.4byte 0x00001752
_080F38F4:
	.4byte 0x00000DF3
_080F38F8:
	.4byte 0x0000165F
_080F38FC:
	.4byte 0x00000FA2
_080F3900:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080F38AC

	THUMB_FUNC_START sub_080F3904
sub_080F3904: @ 0x080F3904
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F3924  @ =gUnknown_081792C8
	ldr r1, _080F3928  @ =gRam
	ldr r3, _080F392C  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080F3924:
	.4byte gUnknown_081792C8
_080F3928:
	.4byte gRam
_080F392C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F3904

	THUMB_FUNC_START sub_080F3930
sub_080F3930: @ 0x080F3930
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F3948
	bl sub_08093078
_080F3948:
	add r0, r4, #0
	mov r1, #17
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F396E
	ldr r1, _080F3978  @ =gRam
	ldr r0, _080F397C  @ =0x00001663
	add r2, r1, r0
	mov r0, #0
	strb r0, [r2]
	ldr r0, _080F3980  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F396E:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F3978:
	.4byte gRam
_080F397C:
	.4byte 0x00001663
_080F3980:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F3930

	THUMB_FUNC_START sub_080F3984
sub_080F3984: @ 0x080F3984
	bx lr
	THUMB_FUNC_END sub_080F3984

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F3988
sub_080F3988: @ 0x080F3988
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r4, r1, #0
	ldr r5, _080F39E0  @ =gRam
	ldr r2, _080F39E4  @ =0x00000F62
	add r0, r5, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F39A4
	add r0, r1, #0
	bl sub_080F3B5C
_080F39A4:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F39D8
	add r0, r4, #0
	bl sub_080C5080
	add r0, r4, #0
	bl sub_080C90F4
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080F39E8  @ =gUnknown_08179464
	ldr r2, _080F39EC  @ =0x00001052
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F39D8:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F39E0:
	.4byte gRam
_080F39E4:
	.4byte 0x00000F62
_080F39E8:
	.4byte gUnknown_08179464
_080F39EC:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080F3988

	THUMB_FUNC_START sub_080F39F0
sub_080F39F0: @ 0x080F39F0
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F3A24  @ =gRam
	ldr r3, _080F3A28  @ =0x00001082
	add r1, r2, r3
	add r1, r0, r1
	mov r3, #4
	strb r3, [r1]
	ldr r4, _080F3A2C  @ =0x00000FB2
	add r1, r2, r4
	add r1, r0, r1
	strb r3, [r1]
	ldr r3, _080F3A30  @ =gUnknown_08179470
	ldr r1, _080F3A34  @ =0x00000F52
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	lsl r1, r1, #2
	add r1, r1, r3
	ldr r1, [r1]
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
_080F3A24:
	.4byte gRam
_080F3A28:
	.4byte 0x00001082
_080F3A2C:
	.4byte 0x00000FB2
_080F3A30:
	.4byte gUnknown_08179470
_080F3A34:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F39F0

	THUMB_FUNC_START sub_080F3A38
sub_080F3A38: @ 0x080F3A38
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F3A4C  @ =gRam
	ldr r2, _080F3A50  @ =0x00000FA2
	add r1, r1, r2
	add r0, r0, r1
	mov r1, #0
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080F3A4C:
	.4byte gRam
_080F3A50:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F3A38

	THUMB_FUNC_START sub_080F3A54
sub_080F3A54: @ 0x080F3A54
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F3A74  @ =gUnknown_0817947C
	ldr r1, _080F3A78  @ =gRam
	ldr r3, _080F3A7C  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080F3A74:
	.4byte gUnknown_0817947C
_080F3A78:
	.4byte gRam
_080F3A7C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F3A54

	THUMB_FUNC_START sub_080F3A80
sub_080F3A80: @ 0x080F3A80
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080F3AB0  @ =gUnknown_0200EE19
	ldrb r0, [r0]
	cmp r0, #2
	bne _080F3AA8
	add r0, r4, #0
	mov r1, #27
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080F3AB4  @ =gRam
	ldr r0, _080F3AB8  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F3AA8:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080F3AB0:
	.4byte gUnknown_0200EE19
_080F3AB4:
	.4byte gRam
_080F3AB8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F3A80

	THUMB_FUNC_START sub_080F3ABC
sub_080F3ABC: @ 0x080F3ABC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r2, _080F3AE4  @ =gRam
	ldr r3, _080F3AE8  @ =0x00001AE2
	add r0, r2, r3
	ldrb r3, [r0]
	cmp r3, #0
	bne _080F3AF4
	ldr r4, _080F3AEC  @ =0x00000F52
	add r0, r2, r4
	add r0, r1, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	ldr r1, _080F3AF0  @ =0x00001770
	add r0, r2, r1
	strb r3, [r0]
	b _080F3AFE
	.byte 0x00
	.byte 0x00
_080F3AE4:
	.4byte gRam
_080F3AE8:
	.4byte 0x00001AE2
_080F3AEC:
	.4byte 0x00000F52
_080F3AF0:
	.4byte 0x00001770
_080F3AF4:
	ldr r3, _080F3B04  @ =0x00000F52
	add r0, r2, r3
	add r0, r1, r0
	mov r1, #1
	strb r1, [r0]
_080F3AFE:
	pop {r4}
	pop {r0}
	bx r0
_080F3B04:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F3ABC

	THUMB_FUNC_START sub_080F3B08
sub_080F3B08: @ 0x080F3B08
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r6, _080F3B50  @ =gRam
	ldr r2, _080F3B54  @ =0x00001082
	add r1, r6, r2
	add r5, r4, r1
	mov r1, #3
	eor r0, r0, r1
	strb r0, [r5]
	add r0, r4, #0
	mov r1, #25
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F3B46
	ldr r1, _080F3B58  @ =0x00000FB2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r5]
_080F3B46:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F3B50:
	.4byte gRam
_080F3B54:
	.4byte 0x00001082
_080F3B58:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080F3B08

	THUMB_FUNC_START sub_080F3B5C
sub_080F3B5C: @ 0x080F3B5C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080F3B9C  @ =gRam
	ldr r0, _080F3BA0  @ =0x0000096C
	add r1, r2, r0
	mov r0, #2
	strh r0, [r1]
	ldr r1, _080F3BA4  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080F3BA8  @ =0x00000F92
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #4
	ldr r0, _080F3BAC  @ =gUnknown_08179490
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F3B9C:
	.4byte gRam
_080F3BA0:
	.4byte 0x0000096C
_080F3BA4:
	.4byte 0x00000FB2
_080F3BA8:
	.4byte 0x00000F92
_080F3BAC:
	.4byte gUnknown_08179490
	THUMB_FUNC_END sub_080F3B5C

	THUMB_FUNC_START sub_080F3BB0
sub_080F3BB0: @ 0x080F3BB0
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #57
	bl sub_080CF140
	ldr r2, _080F3BF4  @ =gRam
	ldr r0, _080F3BF8  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F3BFC  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #168
	strb r1, [r0]
	ldr r1, _080F3C00  @ =0x00000F22
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	ldr r0, _080F3C04  @ =0x00000FD2
	add r2, r2, r0
	add r4, r4, r2
	mov r0, #2
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F3BF4:
	.4byte gRam
_080F3BF8:
	.4byte 0x00000F52
_080F3BFC:
	.4byte 0x00000FC2
_080F3C00:
	.4byte 0x00000F22
_080F3C04:
	.4byte 0x00000FD2
	THUMB_FUNC_END sub_080F3BB0

	THUMB_FUNC_START sub_080F3C08
sub_080F3C08: @ 0x080F3C08
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl Sprite3_Move
	ldr r2, _080F3C2C  @ =gRam
	ldr r1, _080F3C30  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	beq _080F3C38
	ldr r3, _080F3C34  @ =0x00000FD2
	add r0, r2, r3
	add r0, r4, r0
	mov r1, #2
	b _080F3C4C
_080F3C2C:
	.4byte gRam
_080F3C30:
	.4byte 0x00000FC2
_080F3C34:
	.4byte 0x00000FD2
_080F3C38:
	ldr r3, _080F3C54  @ =0x00001770
	add r0, r2, r3
	strb r1, [r0]
	ldr r3, _080F3C58  @ =0x00000F22
	add r0, r2, r3
	add r0, r4, r0
	strb r1, [r0]
	add r3, r3, #96
	add r0, r2, r3
	add r0, r4, r0
_080F3C4C:
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
_080F3C54:
	.4byte 0x00001770
_080F3C58:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080F3C08

	THUMB_FUNC_START sub_080F3C5C
sub_080F3C5C: @ 0x080F3C5C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080F3C8C  @ =gRam
	ldr r2, _080F3C90  @ =0x00000F62
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #0
	strb r2, [r1]
	ldr r4, _080F3C94  @ =0x000016FA
	add r1, r3, r4
	strb r2, [r1]
	add r4, r4, #31
	add r1, r3, r4
	strb r2, [r1]
	ldr r1, _080F3C98  @ =0x00001052
	add r3, r3, r1
	add r0, r0, r3
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
_080F3C8C:
	.4byte gRam
_080F3C90:
	.4byte 0x00000F62
_080F3C94:
	.4byte 0x000016FA
_080F3C98:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080F3C5C

	THUMB_FUNC_START sub_080F3C9C
sub_080F3C9C: @ 0x080F3C9C
	bx lr
	THUMB_FUNC_END sub_080F3C9C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F3CA0
sub_080F3CA0: @ 0x080F3CA0
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	ldr r0, _080F3CCC  @ =gRam
	ldr r1, _080F3CD0  @ =0x00000F82
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F3CBC
	mov r0, #16
	bl sub_080CF388
_080F3CBC:
	ldr r1, _080F3CD4  @ =gUnknown_08179550
	add r0, r4, #0
	mov r2, #4
	bl sub_080C9480
	pop {r4}
	pop {r0}
	bx r0
_080F3CCC:
	.4byte gRam
_080F3CD0:
	.4byte 0x00000F82
_080F3CD4:
	.4byte gUnknown_08179550
	THUMB_FUNC_END sub_080F3CA0

	THUMB_FUNC_START sub_080F3CD8
sub_080F3CD8: @ 0x080F3CD8
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r9, r5
	ldr r0, _080F3CFC  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #1
	bls _080F3D08
	ldr r0, _080F3D00  @ =gRam
	ldr r1, _080F3D04  @ =0x00000FA2
	add r0, r0, r1
	add r0, r5, r0
	mov r1, #0
	b _080F3E12
	.byte 0x00
	.byte 0x00
_080F3CFC:
	.4byte gUnknown_0200233D
_080F3D00:
	.4byte gRam
_080F3D04:
	.4byte 0x00000FA2
_080F3D08:
	ldr r6, _080F3D6C  @ =gRam
	ldr r2, _080F3D70  @ =0x00001172
	add r1, r6, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	mov r2, #0
	mov r8, r2
	strb r0, [r1]
	add r0, r5, #0
	bl sub_080C2FA8
	mov r1, #3
	eor r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F3D74  @ =0x00001082
	add r1, r6, r2
	add r1, r5, r1
	strb r0, [r1]
	sub r2, r2, #208
	add r1, r6, r2
	add r1, r5, r1
	strb r0, [r1]
	ldr r0, _080F3D78  @ =0x00001663
	add r7, r6, r0
	ldrb r4, [r7]
	mov r0, #1
	strb r0, [r7]
	bl sub_0812F9A8
	strb r4, [r7]
	ldr r1, _080F3D7C  @ =0x000009DA
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #18
	beq _080F3DA4
	ldr r2, _080F3D80  @ =0x00001052
	add r0, r6, r2
	add r0, r5, r0
	mov r1, r8
	strb r1, [r0]
	ldrb r0, [r7]
	cmp r0, #1
	bne _080F3D84
	sub r2, r2, #176
	add r0, r6, r2
	add r0, r5, r0
	b _080F3E12
	.byte 0x00
	.byte 0x00
_080F3D6C:
	.4byte gRam
_080F3D70:
	.4byte 0x00001172
_080F3D74:
	.4byte 0x00001082
_080F3D78:
	.4byte 0x00001663
_080F3D7C:
	.4byte 0x000009DA
_080F3D80:
	.4byte 0x00001052
_080F3D84:
	ldr r1, _080F3D9C  @ =0x0000165F
	add r0, r6, r1
	ldrb r1, [r0]
	mov r0, #4
	and r0, r0, r1
	cmp r0, #0
	beq _080F3E14
	ldr r2, _080F3DA0  @ =0x00000FA2
	add r0, r6, r2
	add r0, r5, r0
	mov r1, r8
	b _080F3E12
_080F3D9C:
	.4byte 0x0000165F
_080F3DA0:
	.4byte 0x00000FA2
_080F3DA4:
	ldr r2, _080F3DF4  @ =0x00001052
	add r0, r6, r2
	add r0, r5, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080F3DF8  @ =0x0000165F
	add r0, r6, r1
	ldrb r1, [r0]
	mov r0, #4
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	beq _080F3E0C
	ldr r2, _080F3DFC  @ =0x00000ED2
	add r3, r6, r2
	add r3, r5, r3
	ldrb r1, [r3]
	ldr r0, _080F3E00  @ =0x00000EF2
	add r2, r6, r0
	add r2, r5, r2
	ldrb r0, [r2]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #15
	strb r1, [r3]
	lsr r1, r1, #8
	strb r1, [r2]
	ldr r2, _080F3E04  @ =0x00000EE2
	add r1, r6, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #6
	strb r0, [r1]
	ldr r1, _080F3E08  @ =0x00001132
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #3
	b _080F3E12
	.byte 0x00
	.byte 0x00
_080F3DF4:
	.4byte 0x00001052
_080F3DF8:
	.4byte 0x0000165F
_080F3DFC:
	.4byte 0x00000ED2
_080F3E00:
	.4byte 0x00000EF2
_080F3E04:
	.4byte 0x00000EE2
_080F3E08:
	.4byte 0x00001132
_080F3E0C:
	ldr r2, _080F3E20  @ =0x00000FA2
	add r0, r6, r2
	add r0, r0, r9
_080F3E12:
	strb r1, [r0]
_080F3E14:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080F3E20:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F3CD8

	THUMB_FUNC_START sub_080F3E24
sub_080F3E24: @ 0x080F3E24
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F3E7E
	ldr r2, _080F3E84  @ =gRam
	ldr r0, _080F3E88  @ =0x00000F52
	add r1, r2, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F3E8C  @ =0x00001770
	add r1, r2, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F3E90  @ =0x00000F22
	add r1, r2, r0
	add r1, r5, r1
	ldr r4, _080F3E94  @ =gUnknown_08179570
	ldr r0, _080F3E98  @ =0x00001082
	add r3, r2, r0
	add r3, r5, r3
	ldrb r0, [r3]
	add r0, r0, r4
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F3E9C  @ =0x00000F12
	add r1, r2, r0
	add r1, r5, r1
	ldr r4, _080F3EA0  @ =gUnknown_08179574
	ldrb r0, [r3]
	add r0, r0, r4
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F3EA4  @ =0x00000FC2
	add r2, r2, r0
	add r2, r5, r2
	mov r0, #16
	strb r0, [r2]
_080F3E7E:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F3E84:
	.4byte gRam
_080F3E88:
	.4byte 0x00000F52
_080F3E8C:
	.4byte 0x00001770
_080F3E90:
	.4byte 0x00000F22
_080F3E94:
	.4byte gUnknown_08179570
_080F3E98:
	.4byte 0x00001082
_080F3E9C:
	.4byte 0x00000F12
_080F3EA0:
	.4byte gUnknown_08179574
_080F3EA4:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080F3E24

	THUMB_FUNC_START sub_080F3EA8
sub_080F3EA8: @ 0x080F3EA8
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r6, _080F3F0C  @ =gRam
	ldr r1, _080F3F10  @ =0x00000FC2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r5, [r0]
	cmp r5, #0
	bne _080F3EEE
	ldr r0, _080F3F14  @ =0x00000F52
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #31
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080F3F18  @ =0x00000F22
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	sub r1, r1, #16
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	ldr r0, _080F3F1C  @ =0x00000A3C
	add r1, r6, r0
	mov r0, #6
	strh r0, [r1]
_080F3EEE:
	ldr r1, _080F3F20  @ =0x00000F92
	add r2, r6, r1
	add r2, r7, r2
	ldr r1, _080F3F24  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F3F0C:
	.4byte gRam
_080F3F10:
	.4byte 0x00000FC2
_080F3F14:
	.4byte 0x00000F52
_080F3F18:
	.4byte 0x00000F22
_080F3F1C:
	.4byte 0x00000A3C
_080F3F20:
	.4byte 0x00000F92
_080F3F24:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F3EA8

	THUMB_FUNC_START sub_080F3F28
sub_080F3F28: @ 0x080F3F28
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r3, r4, #0
	ldr r6, _080F3F44  @ =gRam
	ldr r1, _080F3F48  @ =0x00000FC2
	add r0, r6, r1
	add r7, r4, r0
	ldrb r2, [r7]
	cmp r2, #0
	beq _080F3F50
	ldr r0, _080F3F4C  @ =0x00000F92
	add r2, r6, r0
	b _080F3FA6
_080F3F44:
	.4byte gRam
_080F3F48:
	.4byte 0x00000FC2
_080F3F4C:
	.4byte 0x00000F92
_080F3F50:
	ldr r1, _080F3FB8  @ =0x00000F62
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #3
	bhi _080F3FE4
	ldr r1, _080F3FBC  @ =gUnknown_081795A4
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r7]
	ldr r0, _080F3FC0  @ =0x00001082
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080F3FC4  @ =gUnknown_081795A8
	ldrb r0, [r5]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080F3FC8  @ =0x00000FB2
	add r3, r6, r1
	add r3, r4, r3
	strb r0, [r3]
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
	ldr r0, _080F3FCC  @ =0x00000F22
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080F3FD0  @ =gUnknown_08179570
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F3FD4  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080F3FD8  @ =gUnknown_08179574
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080F3FDC  @ =0x00000F92
	add r2, r6, r1
_080F3FA6:
	add r2, r4, r2
	ldr r1, _080F3FE0  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	b _080F4010
_080F3FB8:
	.4byte 0x00000F62
_080F3FBC:
	.4byte gUnknown_081795A4
_080F3FC0:
	.4byte 0x00001082
_080F3FC4:
	.4byte gUnknown_081795A8
_080F3FC8:
	.4byte 0x00000FB2
_080F3FCC:
	.4byte 0x00000F22
_080F3FD0:
	.4byte gUnknown_08179570
_080F3FD4:
	.4byte 0x00000F12
_080F3FD8:
	.4byte gUnknown_08179574
_080F3FDC:
	.4byte 0x00000F92
_080F3FE0:
	.4byte 0x00000996
_080F3FE4:
	ldr r0, _080F4018  @ =0x00000F52
	add r1, r6, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F401C  @ =0x00000FB2
	add r0, r6, r1
	add r0, r3, r0
	strb r2, [r0]
	add r1, r1, #208
	add r0, r6, r1
	add r0, r3, r0
	strb r2, [r0]
	ldr r1, _080F4020  @ =0x00000F22
	add r0, r6, r1
	add r0, r3, r0
	strb r2, [r0]
	sub r1, r1, #16
	add r0, r6, r1
	add r0, r3, r0
	strb r2, [r0]
_080F4010:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F4018:
	.4byte 0x00000F52
_080F401C:
	.4byte 0x00000FB2
_080F4020:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080F3F28

	THUMB_FUNC_START sub_080F4024
sub_080F4024: @ 0x080F4024
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r3, _080F4060  @ =gRam
	ldr r2, _080F4064  @ =0x00001082
	add r1, r3, r2
	add r1, r4, r1
	mov r2, #3
	eor r0, r0, r2
	strb r0, [r1]
	mov r2, #0
	ldr r0, _080F4068  @ =gUnknown_02002354
	ldrb r1, [r0]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #7
	beq _080F406C
	mov r1, #179
	lsl r1, r1, #5
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #2
	bls _080F406E
	mov r2, #1
	b _080F406E
	.byte 0x00
	.byte 0x00
_080F4060:
	.4byte gRam
_080F4064:
	.4byte 0x00001082
_080F4068:
	.4byte gUnknown_02002354
_080F406C:
	mov r2, #2
_080F406E:
	ldr r0, _080F40AC  @ =gUnknown_081795AC
	add r0, r2, r0
	ldrb r1, [r0]
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F40A2
	ldr r2, _080F40B0  @ =gRam
	ldr r1, _080F40B4  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080F40B8  @ =0x00001082
	add r2, r2, r0
	add r2, r4, r2
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r1, _080F40BC  @ =gUnknown_02002352
	mov r0, #160
	strb r0, [r1]
_080F40A2:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F40AC:
	.4byte gUnknown_081795AC
_080F40B0:
	.4byte gRam
_080F40B4:
	.4byte 0x00000FB2
_080F40B8:
	.4byte 0x00001082
_080F40BC:
	.4byte gUnknown_02002352
	THUMB_FUNC_END sub_080F4024

	THUMB_FUNC_START sub_080F40C0
sub_080F40C0: @ 0x080F40C0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080F4114  @ =gRam
	ldr r1, _080F4118  @ =0x0000096C
	add r2, r3, r1
	mov r1, #2
	strh r1, [r2]
	ldr r2, _080F411C  @ =0x00000FB2
	add r1, r3, r2
	add r1, r0, r1
	ldrb r1, [r1]
	ldr r4, _080F4120  @ =0x00000F92
	add r2, r3, r4
	add r2, r0, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #25
	lsr r1, r1, #24
	ldr r5, _080F4124  @ =gUnknown_08179630
	add r2, r1, r5
	ldrb r4, [r2]
	ldr r6, _080F4128  @ =0x00000CDE
	add r2, r3, r6
	strh r4, [r2]
	add r2, r1, #1
	add r2, r2, r5
	ldrb r2, [r2]
	mov r4, #206
	lsl r4, r4, #4
	add r3, r3, r4
	strh r2, [r3]
	lsl r1, r1, #3
	ldr r2, _080F412C  @ =gUnknown_081795B0
	add r1, r1, r2
	bl sub_080C94D0
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F4114:
	.4byte gRam
_080F4118:
	.4byte 0x0000096C
_080F411C:
	.4byte 0x00000FB2
_080F4120:
	.4byte 0x00000F92
_080F4124:
	.4byte gUnknown_08179630
_080F4128:
	.4byte 0x00000CDE
_080F412C:
	.4byte gUnknown_081795B0
	THUMB_FUNC_END sub_080F40C0

	THUMB_FUNC_START sub_080F4130
sub_080F4130: @ 0x080F4130
	push {r4-r6,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #118
	bl sub_080CA538
	ldr r3, _080F41B8  @ =gRam
	mov r5, #3
	mov r4, #0
	ldr r2, _080F41BC  @ =0x00001082
	add r1, r3, r2
	add r1, r0, r1
	strb r4, [r1]
	ldr r6, _080F41C0  @ =0x00000FB2
	add r1, r3, r6
	add r1, r0, r1
	strb r4, [r1]
	ldr r2, _080F41C4  @ =0x00000ED2
	add r1, r3, r2
	add r1, r0, r1
	mov r6, #182
	lsl r6, r6, #5
	add r2, r3, r6
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080F41C8  @ =0x00000EF2
	add r1, r3, r2
	add r1, r0, r1
	add r6, r6, #1
	add r2, r3, r6
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080F41CC  @ =0x00000EE2
	add r1, r3, r2
	add r1, r0, r1
	add r6, r6, #3
	add r2, r3, r6
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080F41D0  @ =0x00000F02
	add r1, r3, r2
	add r1, r0, r1
	add r6, r6, #1
	add r2, r3, r6
	ldrb r2, [r2]
	strb r2, [r1]
	ldr r2, _080F41D4  @ =0x00001052
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #1
	strb r2, [r1]
	sub r6, r6, #98
	add r1, r3, r6
	strb r4, [r1]
	ldr r1, _080F41D8  @ =0x00001172
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	ldr r2, _080F41DC  @ =0x00001132
	add r3, r3, r2
	add r0, r0, r3
	strb r5, [r0]
	pop {r4-r6}
	pop {r0}
	bx r0
_080F41B8:
	.4byte gRam
_080F41BC:
	.4byte 0x00001082
_080F41C0:
	.4byte 0x00000FB2
_080F41C4:
	.4byte 0x00000ED2
_080F41C8:
	.4byte 0x00000EF2
_080F41CC:
	.4byte 0x00000EE2
_080F41D0:
	.4byte 0x00000F02
_080F41D4:
	.4byte 0x00001052
_080F41D8:
	.4byte 0x00001172
_080F41DC:
	.4byte 0x00001132
	THUMB_FUNC_END sub_080F4130

	THUMB_FUNC_START sub_080F41E0
sub_080F41E0: @ 0x080F41E0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080F40C0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F422A
	add r0, r4, #0
	bl sub_080C5080
	add r0, r4, #0
	bl sub_080C90F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F4212
	add r0, r4, #0
	bl Sprite3_Move
_080F4212:
	ldr r1, _080F4230  @ =gUnknown_08179578
	ldr r0, _080F4234  @ =gRam
	ldr r2, _080F4238  @ =0x00001052
	add r0, r0, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
_080F422A:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F4230:
	.4byte gUnknown_08179578
_080F4234:
	.4byte gRam
_080F4238:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080F41E0

	THUMB_FUNC_START sub_080F423C
sub_080F423C: @ 0x080F423C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r3, _080F4274  @ =gRam
	ldr r2, _080F4278  @ =0x00001082
	add r1, r3, r2
	add r1, r4, r1
	mov r2, #3
	eor r0, r0, r2
	strb r0, [r1]
	ldr r1, _080F427C  @ =gUnknown_08179584
	ldr r0, _080F4280  @ =0x00000F52
	add r3, r3, r0
	add r3, r4, r3
	ldrb r0, [r3]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
_080F4274:
	.4byte gRam
_080F4278:
	.4byte 0x00001082
_080F427C:
	.4byte gUnknown_08179584
_080F4280:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F423C

	THUMB_FUNC_START sub_080F4284
sub_080F4284: @ 0x080F4284
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F42A8  @ =gRam
	ldr r1, _080F42AC  @ =0x00000F52
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	mov r1, #40
	mov r2, sp
	bl sub_080C9564
	add sp, sp, #4
	pop {r0}
	bx r0
_080F42A8:
	.4byte gRam
_080F42AC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F4284

	THUMB_FUNC_START sub_080F42B0
sub_080F42B0: @ 0x080F42B0
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080F42DC  @ =gRam
	ldr r1, _080F42E0  @ =0x00001AE2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F42E8
	add r0, r4, #0
	mov r1, #39
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080F42E4  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080F42F2
_080F42DC:
	.4byte gRam
_080F42E0:
	.4byte 0x00001AE2
_080F42E4:
	.4byte 0x00000F52
_080F42E8:
	ldr r1, _080F42FC  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
_080F42F2:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F42FC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F42B0

	THUMB_FUNC_START sub_080F4300
sub_080F4300: @ 0x080F4300
	push {r4-r6,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080F4344  @ =gRam
	ldr r1, _080F4348  @ =0x00001770
	add r0, r5, r1
	mov r6, #0
	strb r6, [r0]
	bl sub_08075AB4
	ldr r0, _080F434C  @ =0x00001663
	add r1, r5, r0
	mov r0, #1
	strb r0, [r1]
	bl sub_08070064
	add r0, r4, #0
	bl sub_081146A4
	ldr r1, _080F4350  @ =0x00000FA2
	add r0, r5, r1
	add r4, r4, r0
	strb r6, [r4]
	mov r0, #2
	bl sub_080BE9A0
	ldr r0, _080F4354  @ =0x00000A3C
	add r5, r5, r0
	mov r0, #9
	strh r0, [r5]
	pop {r4-r6}
	pop {r0}
	bx r0
_080F4344:
	.4byte gRam
_080F4348:
	.4byte 0x00001770
_080F434C:
	.4byte 0x00001663
_080F4350:
	.4byte 0x00000FA2
_080F4354:
	.4byte 0x00000A3C
	THUMB_FUNC_END sub_080F4300

	THUMB_FUNC_START sub_080F4358
sub_080F4358: @ 0x080F4358
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F4378  @ =gUnknown_08179598
	ldr r1, _080F437C  @ =gRam
	ldr r3, _080F4380  @ =0x00000F52
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080F4378:
	.4byte gUnknown_08179598
_080F437C:
	.4byte gRam
_080F4380:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F4358

	THUMB_FUNC_START sub_080F4384
sub_080F4384: @ 0x080F4384
	push {r4,r5,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #32
	mov r2, sp
	bl sub_080C9564
	ldr r5, _080F43D0  @ =gRam
	ldr r1, _080F43D4  @ =0x00000F52
	add r0, r5, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	ldr r1, _080F43D8  @ =gUnknown_0200EE19
	mov r0, #2
	strb r0, [r1]
	ldr r0, _080F43DC  @ =0x00001661
	add r1, r5, r0
	mov r0, #1
	strb r0, [r1]
	bl sub_08075AB4
	ldr r1, _080F43E0  @ =0x0000165E
	add r5, r5, r1
	mov r0, #2
	strb r0, [r5]
	bl sub_080BEA00
	bl sub_08074A44
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080F43D0:
	.4byte gRam
_080F43D4:
	.4byte 0x00000F52
_080F43D8:
	.4byte gUnknown_0200EE19
_080F43DC:
	.4byte 0x00001661
_080F43E0:
	.4byte 0x0000165E
	THUMB_FUNC_END sub_080F4384

	THUMB_FUNC_START sub_080F43E4
sub_080F43E4: @ 0x080F43E4
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r6, _080F442C  @ =gRam
	ldr r2, _080F4430  @ =0x00001082
	add r1, r6, r2
	add r5, r4, r1
	mov r1, #3
	eor r0, r0, r1
	strb r0, [r5]
	add r0, r4, #0
	mov r1, #33
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F4422
	ldr r1, _080F4434  @ =0x00000FB2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r5]
_080F4422:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F442C:
	.4byte gRam
_080F4430:
	.4byte 0x00001082
_080F4434:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080F43E4

	THUMB_FUNC_START sub_080F4438
sub_080F4438: @ 0x080F4438
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r5, _080F4464  @ =gRam
	ldr r1, _080F4468  @ =0x00000EE2
	add r0, r5, r1
	add r0, r2, r0
	ldr r3, _080F446C  @ =0x000016C4
	add r1, r5, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bcc _080F4470
	add r0, r2, #0
	mov r1, #211
	mov r2, sp
	bl sub_080C94F4
	b _080F44C4
	.byte 0x00
	.byte 0x00
_080F4464:
	.4byte gRam
_080F4468:
	.4byte 0x00000EE2
_080F446C:
	.4byte 0x000016C4
_080F4470:
	add r0, r4, #0
	mov r1, #207
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F44C4
	ldr r0, _080F44CC  @ =0x00001082
	add r1, r5, r0
	add r1, r4, r1
	mov r0, sp
	ldrb r0, [r0]
	mov r2, #0
	strb r0, [r1]
	ldr r1, _080F44D0  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r3, _080F44D4  @ =0x00000F52
	add r1, r5, r3
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F44D8  @ =gUnknown_0200EE18
	strb r2, [r0]
	add r0, r0, #1
	strb r2, [r0]
	add r0, r0, #1
	strb r2, [r0]
	add r0, r0, #1
	strb r2, [r0]
	ldr r1, _080F44DC  @ =0x00000F62
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	ldr r3, _080F44E0  @ =0x00000CB4
	add r0, r5, r3
	strb r2, [r0]
_080F44C4:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080F44CC:
	.4byte 0x00001082
_080F44D0:
	.4byte 0x00000FB2
_080F44D4:
	.4byte 0x00000F52
_080F44D8:
	.4byte gUnknown_0200EE18
_080F44DC:
	.4byte 0x00000F62
_080F44E0:
	.4byte 0x00000CB4
	THUMB_FUNC_END sub_080F4438

	THUMB_FUNC_START sub_080F44E4
sub_080F44E4: @ 0x080F44E4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F4538  @ =gRam
	ldr r2, _080F453C  @ =0x00000F62
	add r1, r1, r2
	add r6, r0, r1
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #63
	bne _080F4530
	ldr r4, _080F4540  @ =gUnknown_0200EE18
	ldrb r1, [r4]
	ldr r5, _080F4544  @ =gUnknown_0200EE19
	ldrb r0, [r5]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r3, _080F4548  @ =gUnknown_0200EE1A
	ldrb r0, [r3]
	lsl r0, r0, #16
	add r1, r1, r0
	ldr r2, _080F454C  @ =gUnknown_0200EE1B
	ldrb r0, [r2]
	lsl r0, r0, #24
	add r1, r1, r0
	mov r0, #0
	strb r0, [r6]
	add r1, r1, #1
	strb r1, [r4]
	lsr r0, r1, #8
	strb r0, [r5]
	lsr r0, r1, #16
	strb r0, [r3]
	lsr r1, r1, #24
	strb r1, [r2]
_080F4530:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F4538:
	.4byte gRam
_080F453C:
	.4byte 0x00000F62
_080F4540:
	.4byte gUnknown_0200EE18
_080F4544:
	.4byte gUnknown_0200EE19
_080F4548:
	.4byte gUnknown_0200EE1A
_080F454C:
	.4byte gUnknown_0200EE1B
	THUMB_FUNC_END sub_080F44E4

	THUMB_FUNC_START sub_080F4550
sub_080F4550: @ 0x080F4550
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080C3758
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F4550

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F4560
sub_080F4560: @ 0x080F4560
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F1708
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F45A8
	add r0, r4, #0
	bl sub_080C90F4
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r3, _080F45B0  @ =gRam
	ldr r2, _080F45B4  @ =0x00001082
	add r1, r3, r2
	add r1, r4, r1
	mov r2, #3
	eor r0, r0, r2
	strb r0, [r1]
	ldr r1, _080F45B8  @ =gUnknown_08179640
	ldr r0, _080F45BC  @ =0x00000F52
	add r3, r3, r0
	add r3, r4, r3
	ldrb r0, [r3]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F45A8:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F45B0:
	.4byte gRam
_080F45B4:
	.4byte 0x00001082
_080F45B8:
	.4byte gUnknown_08179640
_080F45BC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F4560

	THUMB_FUNC_START sub_080F45C0
sub_080F45C0: @ 0x080F45C0
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	mov r1, #88
	bl sub_080CF140
	ldr r0, _080F45E4  @ =gRam
	ldr r1, _080F45E8  @ =0x00000F52
	add r0, r0, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
_080F45E4:
	.4byte gRam
_080F45E8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F45C0

	THUMB_FUNC_START sub_080F45EC
sub_080F45EC: @ 0x080F45EC
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	ldr r0, _080F46DC  @ =gUnknown_0200EE18
	ldrb r1, [r0]
	ldr r5, _080F46E0  @ =gUnknown_0200EE19
	ldrb r4, [r5]
	lsl r4, r4, #8
	add r4, r1, r4
	ldr r3, _080F46E4  @ =gUnknown_0200EE1A
	ldrb r0, [r3]
	lsl r0, r0, #16
	add r4, r4, r0
	ldr r2, _080F46E8  @ =gUnknown_0200EE1B
	ldrb r0, [r2]
	lsl r0, r0, #24
	add r4, r4, r0
	ldr r0, _080F46EC  @ =gUnknown_0200EE1C
	strb r1, [r0]
	ldr r1, _080F46F0  @ =gUnknown_0200EE1D
	ldrb r0, [r5]
	strb r0, [r1]
	add r1, r1, #1
	ldrb r0, [r3]
	strb r0, [r1]
	add r1, r1, #1
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r5, _080F46F4  @ =0x00001770
	add r0, r4, #0
	add r1, r5, #0
	bl __udivsi3
	add r6, r0, #0
	add r0, r6, #0
	mul r0, r5, r0
	sub r4, r4, r0
	mov r1, #150
	lsl r1, r1, #2
	add r0, r4, #0
	bl __udivsi3
	add r7, r0, #0
	lsl r1, r7, #2
	add r1, r1, r7
	lsl r0, r1, #4
	sub r0, r0, r1
	lsl r0, r0, #3
	sub r4, r4, r0
	add r0, r4, #0
	mov r1, #60
	bl __udivsi3
	add r5, r0, #0
	lsl r0, r5, #4
	sub r0, r0, r5
	lsl r0, r0, #2
	sub r4, r4, r0
	add r0, r4, #0
	mov r1, #10
	bl __udivsi3
	add r1, r0, #0
	lsl r0, r1, #2
	add r0, r0, r1
	lsl r0, r0, #1
	sub r4, r4, r0
	cmp r6, #0
	beq _080F4686
	mov r7, #9
	mov r5, #9
	mov r1, #5
	mov r4, #9
_080F4686:
	ldr r6, _080F46F8  @ =gRam
	lsl r0, r1, #4
	orr r0, r0, r4
	ldr r2, _080F46FC  @ =0x00001AEC
	add r1, r6, r2
	strb r0, [r1]
	lsl r0, r7, #4
	orr r0, r0, r5
	add r2, r2, #1
	add r1, r6, r2
	strb r0, [r1]
	mov r0, r8
	mov r1, #206
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F46D0
	ldr r1, _080F4700  @ =0x00000FB2
	add r0, r6, r1
	add r0, r0, r8
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r2, _080F4704  @ =0x00001082
	add r0, r6, r2
	add r0, r0, r8
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080F4708  @ =0x00000F52
	add r1, r6, r0
	add r1, r1, r8
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F46D0:
	add sp, sp, #4
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080F46DC:
	.4byte gUnknown_0200EE18
_080F46E0:
	.4byte gUnknown_0200EE19
_080F46E4:
	.4byte gUnknown_0200EE1A
_080F46E8:
	.4byte gUnknown_0200EE1B
_080F46EC:
	.4byte gUnknown_0200EE1C
_080F46F0:
	.4byte gUnknown_0200EE1D
_080F46F4:
	.4byte 0x00001770
_080F46F8:
	.4byte gRam
_080F46FC:
	.4byte 0x00001AEC
_080F4700:
	.4byte 0x00000FB2
_080F4704:
	.4byte 0x00001082
_080F4708:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F45EC

	THUMB_FUNC_START sub_080F470C
sub_080F470C: @ 0x080F470C
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080F477C  @ =gRam
	ldr r1, _080F4780  @ =0x00000F52
	add r0, r5, r1
	add r2, r4, r0
	ldrb r3, [r2]
	add r6, r3, #1
	strb r6, [r2]
	ldr r1, _080F4784  @ =0x000009C6
	add r0, r5, r1
	ldrh r0, [r0]
	ldr r1, _080F4788  @ =gUnknown_02002280
	add r0, r0, r1
	ldrb r1, [r0]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	bne _080F47D4
	ldr r0, _080F478C  @ =gUnknown_0200EE1F
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F4756
	ldr r0, _080F4790  @ =gUnknown_0200EE1E
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F4756
	ldr r0, _080F4794  @ =gUnknown_0200EE1D
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F4756
	ldr r0, _080F4798  @ =gUnknown_0200EE1C
	ldrb r0, [r0]
	cmp r0, #15
	bls _080F47A4
_080F4756:
	add r0, r4, #0
	mov r1, #209
	mov r2, sp
	bl sub_080C9564
	ldr r2, _080F477C  @ =gRam
	ldr r1, _080F479C  @ =0x00001082
	add r0, r2, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080F47A0  @ =0x00000FB2
	add r2, r2, r0
	add r2, r4, r2
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r2]
	b _080F47E2
_080F477C:
	.4byte gRam
_080F4780:
	.4byte 0x00000F52
_080F4784:
	.4byte 0x000009C6
_080F4788:
	.4byte gUnknown_02002280
_080F478C:
	.4byte gUnknown_0200EE1F
_080F4790:
	.4byte gUnknown_0200EE1E
_080F4794:
	.4byte gUnknown_0200EE1D
_080F4798:
	.4byte gUnknown_0200EE1C
_080F479C:
	.4byte 0x00001082
_080F47A0:
	.4byte 0x00000FB2
_080F47A4:
	add r0, r6, #1
	strb r0, [r2]
	add r0, r4, #0
	mov r1, #208
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080F47CC  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080F47D0  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	b _080F47E2
_080F47CC:
	.4byte 0x00001082
_080F47D0:
	.4byte 0x00000FB2
_080F47D4:
	add r0, r3, #3
	strb r0, [r2]
	add r0, r4, #0
	mov r1, #210
	mov r2, sp
	bl sub_080C9564
_080F47E2:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F470C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F47EC
sub_080F47EC: @ 0x080F47EC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080C3758
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F47EC

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F47FC
sub_080F47FC: @ 0x080F47FC
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080F4888
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F4876
	add r0, r4, #0
	bl sub_080C90F4
	add r0, r4, #0
	bl sub_080C5080
	ldr r3, _080F4850  @ =gRam
	ldr r0, _080F4854  @ =0x00000F92
	add r2, r3, r0
	add r2, r4, r2
	ldr r1, _080F4858  @ =0x00000996
	add r0, r3, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldr r2, _080F485C  @ =0x00000CB4
	add r0, r3, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F4860
	add r0, r4, #0
	mov r1, #211
	mov r2, sp
	bl sub_080C94F4
	b _080F4876
_080F4850:
	.4byte gRam
_080F4854:
	.4byte 0x00000F92
_080F4858:
	.4byte 0x00000996
_080F485C:
	.4byte 0x00000CB4
_080F4860:
	ldr r1, _080F4880  @ =gUnknown_0817964C
	ldr r2, _080F4884  @ =0x00000F52
	add r0, r3, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
_080F4876:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F4880:
	.4byte gUnknown_0817964C
_080F4884:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F47FC

	THUMB_FUNC_START sub_080F4888
sub_080F4888: @ 0x080F4888
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r2, _080F48C8  @ =gRam
	ldr r0, _080F48CC  @ =0x0000096C
	add r1, r2, r0
	mov r0, #2
	strh r0, [r1]
	ldr r1, _080F48D0  @ =0x00000FB2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r0, _080F48D4  @ =0x00000F92
	add r2, r2, r0
	add r2, r4, r2
	lsl r1, r1, #1
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #4
	ldr r0, _080F48D8  @ =gUnknown_08179660
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F48C8:
	.4byte gRam
_080F48CC:
	.4byte 0x0000096C
_080F48D0:
	.4byte 0x00000FB2
_080F48D4:
	.4byte 0x00000F92
_080F48D8:
	.4byte gUnknown_08179660
	THUMB_FUNC_END sub_080F4888

	THUMB_FUNC_START sub_080F48DC
sub_080F48DC: @ 0x080F48DC
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	mov r1, #209
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F490E
	ldr r2, _080F4918  @ =gRam
	ldr r1, _080F491C  @ =0x00001082
	add r0, r2, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080F4920  @ =0x00000FB2
	add r2, r2, r0
	add r2, r4, r2
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r2]
_080F490E:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F4918:
	.4byte gRam
_080F491C:
	.4byte 0x00001082
_080F4920:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080F48DC

	THUMB_FUNC_START sub_080F4924
sub_080F4924: @ 0x080F4924
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	mov r1, #208
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F4956
	ldr r2, _080F4960  @ =gRam
	ldr r1, _080F4964  @ =0x00001082
	add r0, r2, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080F4968  @ =0x00000FB2
	add r2, r2, r0
	add r2, r4, r2
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r2]
_080F4956:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F4960:
	.4byte gRam
_080F4964:
	.4byte 0x00001082
_080F4968:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080F4924

	THUMB_FUNC_START sub_080F496C
sub_080F496C: @ 0x080F496C
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	mov r1, #210
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F499E
	ldr r2, _080F49A8  @ =gRam
	ldr r1, _080F49AC  @ =0x00001082
	add r0, r2, r1
	add r0, r4, r0
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080F49B0  @ =0x00000FB2
	add r2, r2, r0
	add r2, r4, r2
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r2]
_080F499E:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F49A8:
	.4byte gRam
_080F49AC:
	.4byte 0x00001082
_080F49B0:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080F496C

	THUMB_FUNC_START sub_080F49B4
sub_080F49B4: @ 0x080F49B4
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r6, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F49D0
	b _080F4B46
_080F49D0:
	add r0, r6, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F49DE
	b _080F4B46
_080F49DE:
	ldr r4, _080F4A98  @ =gRam
	ldr r1, _080F4A9C  @ =0x00001770
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F49EC
	b _080F4B46
_080F49EC:
	bl sub_0809E3CC
	cmp r0, #0
	beq _080F49F6
	b _080F4B46
_080F49F6:
	ldr r0, _080F4AA0  @ =0x0000180C
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #223
	and r0, r0, r1
	strb r0, [r2]
	ldr r1, _080F4AA4  @ =0x000009C6
	add r0, r4, r1
	ldrh r0, [r0]
	cmp r0, #48
	bne _080F4AC4
	ldr r1, _080F4AA8  @ =0x000016D5
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F4A18
	b _080F4B46
_080F4A18:
	add r0, r6, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F4A26
	b _080F4B46
_080F4A26:
	mov r5, #1
	ldr r0, _080F4AAC  @ =gUnknown_03003E70
	strb r5, [r0]
	ldr r1, _080F4AB0  @ =0x00000A4E
	add r0, r4, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #17
	bne _080F4A48
	ldr r1, _080F4AB4  @ =0x00000547
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	bne _080F4A5A
_080F4A48:
	ldr r1, _080F4AB8  @ =0x00000546
	add r0, r4, r1
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	beq _080F4B46
	mov r5, #0
_080F4A5A:
	mov r0, #1
	cmp r0, #0
	beq _080F4B46
	cmp r5, #1
	bne _080F4A7A
	ldr r1, _080F4A98  @ =gRam
	ldr r0, _080F4ABC  @ =0x00001789
	add r2, r1, r0
	mov r0, #0
	strb r0, [r2]
	ldr r0, _080F4AA0  @ =0x0000180C
	add r1, r1, r0
	mov r0, #32
	strb r0, [r1]
	bl sub_0809E550
_080F4A7A:
	cmp r5, #0
	beq _080F4A86
	mov r0, #14
	mov r1, #1
	bl sub_080BEA28
_080F4A86:
	ldr r0, _080F4AC0  @ =gUnknown_081796E0
	add r0, r5, r0
	ldrb r1, [r0]
	mov r2, sp
	add r2, r2, #2
	add r0, r6, #0
	bl sub_080C9564
	b _080F4B46
_080F4A98:
	.4byte gRam
_080F4A9C:
	.4byte 0x00001770
_080F4AA0:
	.4byte 0x0000180C
_080F4AA4:
	.4byte 0x000009C6
_080F4AA8:
	.4byte 0x000016D5
_080F4AAC:
	.4byte gUnknown_03003E70
_080F4AB0:
	.4byte 0x00000A4E
_080F4AB4:
	.4byte 0x00000547
_080F4AB8:
	.4byte 0x00000546
_080F4ABC:
	.4byte 0x00001789
_080F4AC0:
	.4byte gUnknown_081796E0
_080F4AC4:
	ldr r1, _080F4B50  @ =0x000016D5
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F4B46
	add r0, r6, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F4B46
	mov r5, #1
	ldr r0, _080F4B54  @ =gUnknown_03003E70
	strb r5, [r0]
	ldr r1, _080F4B58  @ =0x00000A4E
	add r0, r4, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #17
	bne _080F4AFC
	ldr r1, _080F4B5C  @ =0x00000547
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	bne _080F4B0E
_080F4AFC:
	ldr r1, _080F4B60  @ =0x00000546
	add r0, r4, r1
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	beq _080F4B46
	mov r5, #0
_080F4B0E:
	mov r0, #1
	cmp r0, #0
	beq _080F4B46
	cmp r5, #1
	bne _080F4B2A
	ldr r1, _080F4B64  @ =gRam
	ldr r0, _080F4B68  @ =0x00001789
	add r2, r1, r0
	mov r0, #0
	strb r0, [r2]
	ldr r0, _080F4B6C  @ =0x0000180C
	add r1, r1, r0
	mov r0, #32
	strb r0, [r1]
_080F4B2A:
	cmp r5, #0
	beq _080F4B36
	mov r0, #14
	mov r1, #1
	bl sub_080BEA28
_080F4B36:
	ldr r0, _080F4B70  @ =gUnknown_081796E2
	add r0, r5, r0
	ldrb r1, [r0]
	mov r2, sp
	add r2, r2, #3
	add r0, r6, #0
	bl sub_080C9564
_080F4B46:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F4B50:
	.4byte 0x000016D5
_080F4B54:
	.4byte gUnknown_03003E70
_080F4B58:
	.4byte 0x00000A4E
_080F4B5C:
	.4byte 0x00000547
_080F4B60:
	.4byte 0x00000546
_080F4B64:
	.4byte gRam
_080F4B68:
	.4byte 0x00001789
_080F4B6C:
	.4byte 0x0000180C
_080F4B70:
	.4byte gUnknown_081796E2
	THUMB_FUNC_END sub_080F49B4

	THUMB_FUNC_START sub_080F4B74
sub_080F4B74: @ 0x080F4B74
	push {lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080F4B9C  @ =gRam
	ldr r0, _080F4BA0  @ =0x00001172
	add r1, r2, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F4BA4  @ =0x000009C6
	add r2, r2, r0
	ldrh r0, [r2]
	cmp r0, #48
	bne _080F4B98
	add r0, r3, #0
	bl sub_080D26E8
_080F4B98:
	pop {r0}
	bx r0
_080F4B9C:
	.4byte gRam
_080F4BA0:
	.4byte 0x00001172
_080F4BA4:
	.4byte 0x000009C6
	THUMB_FUNC_END sub_080F4B74

	THUMB_FUNC_START sub_080F4BA8
sub_080F4BA8: @ 0x080F4BA8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r3, _080F4BE4  @ =gRam
	ldr r0, _080F4BE8  @ =0x00001172
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F4BEC  @ =0x000009C6
	add r0, r3, r1
	ldrh r5, [r0]
	cmp r5, #3
	bne _080F4BFC
	ldr r0, _080F4BF0  @ =gUnknown_02002329
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F4C24
	ldr r1, _080F4BF4  @ =0x00000F92
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #4
	strb r1, [r0]
	ldr r1, _080F4BF8  @ =0x00000F52
	add r0, r3, r1
	add r0, r2, r0
	strb r5, [r0]
	b _080F4C24
_080F4BE4:
	.4byte gRam
_080F4BE8:
	.4byte 0x00001172
_080F4BEC:
	.4byte 0x000009C6
_080F4BF0:
	.4byte gUnknown_02002329
_080F4BF4:
	.4byte 0x00000F92
_080F4BF8:
	.4byte 0x00000F52
_080F4BFC:
	ldr r0, _080F4C2C  @ =0x00000EE2
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #8
	strb r0, [r1]
	ldr r0, _080F4C30  @ =gUnknown_02002328
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F4C24
	ldr r1, _080F4C34  @ =0x00000F92
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	ldr r1, _080F4C38  @ =0x00000F52
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
_080F4C24:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F4C2C:
	.4byte 0x00000EE2
_080F4C30:
	.4byte gUnknown_02002328
_080F4C34:
	.4byte 0x00000F92
_080F4C38:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F4BA8

	THUMB_FUNC_START sub_080F4C3C
sub_080F4C3C: @ 0x080F4C3C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080F50D4
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F4CAC
	ldr r3, _080F4C90  @ =gRam
	ldr r1, _080F4C94  @ =0x00000FC2
	add r0, r3, r1
	add r1, r4, r0
	ldrb r5, [r1]
	cmp r5, #0
	bne _080F4CAC
	mov r0, #5
	strb r0, [r1]
	ldr r1, _080F4C98  @ =gUnknown_081796EC
	ldr r2, _080F4C9C  @ =0x00000F62
	add r0, r3, r2
	add r2, r4, r0
	ldrb r0, [r2]
	add r0, r0, r1
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080F4CA4
	ldr r5, _080F4CA0  @ =0x00000F92
	add r0, r3, r5
	add r0, r4, r0
	strb r1, [r0]
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	b _080F4CAC
	.byte 0x00
	.byte 0x00
_080F4C90:
	.4byte gRam
_080F4C94:
	.4byte 0x00000FC2
_080F4C98:
	.4byte gUnknown_081796EC
_080F4C9C:
	.4byte 0x00000F62
_080F4CA0:
	.4byte 0x00000F92
_080F4CA4:
	ldr r1, _080F4CB4  @ =0x00000FA2
	add r0, r3, r1
	add r0, r6, r0
	strb r5, [r0]
_080F4CAC:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F4CB4:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F4C3C

	THUMB_FUNC_START sub_080F4CB8
sub_080F4CB8: @ 0x080F4CB8
	push {r4-r6,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #242
	bl sub_080CA538
	add r6, r0, #0
	cmp r6, #0
	blt _080F4D0A
	bl GetRandomInt
	ldr r5, _080F4D14  @ =gRam
	mov r1, #150
	lsl r1, r1, #4
	add r2, r5, r1
	mov r4, #15
	add r1, r4, #0
	and r1, r1, r0
	ldr r0, _080F4D18  @ =0x0000FFF8
	add r1, r1, r0
	ldrh r0, [r2]
	add r1, r1, r0
	strh r1, [r2]
	bl GetRandomInt
	ldr r2, _080F4D1C  @ =0x00000964
	add r1, r5, r2
	and r4, r4, r0
	ldrh r0, [r1]
	add r4, r4, r0
	strh r4, [r1]
	lsl r0, r6, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r1, _080F4D20  @ =0x00001052
	add r5, r5, r1
	add r5, r6, r5
	mov r0, #1
	strb r0, [r5]
_080F4D0A:
	add r0, r6, #0
	pop {r4-r6}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080F4D14:
	.4byte gRam
_080F4D18:
	.4byte 0x0000FFF8
_080F4D1C:
	.4byte 0x00000964
_080F4D20:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080F4CB8

	THUMB_FUNC_START sub_080F4D24
sub_080F4D24: @ 0x080F4D24
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	add r0, r4, #0
	bl sub_080F5164
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080F4D98
	ldr r7, _080F4DA4  @ =gRam
	ldr r0, _080F4DA8  @ =0x0000180C
	add r2, r7, r0
	ldrb r1, [r2]
	mov r0, #223
	and r0, r0, r1
	strb r0, [r2]
	ldr r1, _080F4DAC  @ =0x00000F62
	add r0, r7, r1
	add r5, r4, r0
	strb r6, [r5]
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F4D7A
	bl sub_080AF16C
	ldr r2, _080F4DB0  @ =0x00001719
	add r0, r7, r2
	strb r6, [r0]
	bl sub_0809945C
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
_080F4D7A:
	bl sub_0809E3CC
	cmp r0, #0
	bne _080F4D98
	ldr r1, _080F4DB4  @ =gUnknown_081797B8
	ldr r2, _080F4DB8  @ =0x00000F52
	add r0, r7, r2
	add r0, r0, r8
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	mov r0, r8
	bl _call_via_r1
_080F4D98:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F4DA4:
	.4byte gRam
_080F4DA8:
	.4byte 0x0000180C
_080F4DAC:
	.4byte 0x00000F62
_080F4DB0:
	.4byte 0x00001719
_080F4DB4:
	.4byte gUnknown_081797B8
_080F4DB8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F4D24

	THUMB_FUNC_START sub_080F4DBC
sub_080F4DBC: @ 0x080F4DBC
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080F4EC4  @ =gRam
	ldr r1, _080F4EC8  @ =0x000009C6
	add r0, r4, r1
	ldrh r0, [r0]
	cmp r0, #3
	beq _080F4DD2
	b _080F4EFC
_080F4DD2:
	ldr r2, _080F4ECC  @ =0x000016D5
	add r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F4DDE
	b _080F4FF8
_080F4DDE:
	add r0, r5, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #2
	beq _080F4DEE
	b _080F4FF8
_080F4DEE:
	ldr r3, _080F4ED0  @ =0x00000ED2
	add r0, r4, r3
	add r0, r5, r0
	ldrb r0, [r0]
	add r0, r0, #16
	mov r7, #182
	lsl r7, r7, #5
	add r1, r4, r7
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r1, [r1]
	cmp r0, r1
	bcs _080F4E0A
	b _080F4FF8
_080F4E0A:
	ldr r1, _080F4ED4  @ =0x00000547
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F4E22
	ldr r0, _080F4ED8  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #2
	bne _080F4E22
	b _080F4FF8
_080F4E22:
	mov r3, #1
	mov r2, #1
	mov r6, #0
	ldr r0, _080F4EDC  @ =gUnknown_03003E70
	strb r2, [r0]
	ldr r7, _080F4EE0  @ =0x00000A4E
	add r0, r4, r7
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #17
	bne _080F4E46
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	beq _080F4E46
	mov r6, #1
	mov r3, #0
_080F4E46:
	cmp r3, #0
	beq _080F4E5E
	ldr r0, _080F4EC4  @ =gRam
	ldr r1, _080F4EE4  @ =0x00000546
	add r0, r0, r1
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080F4E5E
	mov r2, #0
_080F4E5E:
	cmp r2, #0
	bne _080F4E64
	b _080F4FF8
_080F4E64:
	cmp r6, #0
	beq _080F4EB0
	ldr r4, _080F4EC4  @ =gRam
	ldr r2, _080F4EE8  @ =0x00001789
	add r1, r4, r2
	mov r0, #0
	strb r0, [r1]
	ldr r3, _080F4EEC  @ =0x0000180C
	add r1, r4, r3
	mov r0, #32
	strb r0, [r1]
	ldr r0, _080F4ED8  @ =gUnknown_0200233D
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080F4EA4
	cmp r1, #1
	bls _080F4EA4
	ldr r7, _080F4EF0  @ =0x00000F52
	add r1, r4, r7
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	bl sub_0809E5BC
	ldr r1, _080F4EF4  @ =0x00000FC2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #64
	strb r1, [r0]
_080F4EA4:
	cmp r6, #0
	beq _080F4EB0
	mov r0, #14
	mov r1, #1
	bl sub_080BEA28
_080F4EB0:
	ldr r0, _080F4EF8  @ =gUnknown_081797C8
	lsl r1, r6, #1
	add r1, r1, r0
	ldrh r1, [r1]
	add r0, r5, #0
	mov r2, sp
	bl sub_080C9564
	b _080F4FF8
	.byte 0x00
	.byte 0x00
_080F4EC4:
	.4byte gRam
_080F4EC8:
	.4byte 0x000009C6
_080F4ECC:
	.4byte 0x000016D5
_080F4ED0:
	.4byte 0x00000ED2
_080F4ED4:
	.4byte 0x00000547
_080F4ED8:
	.4byte gUnknown_0200233D
_080F4EDC:
	.4byte gUnknown_03003E70
_080F4EE0:
	.4byte 0x00000A4E
_080F4EE4:
	.4byte 0x00000546
_080F4EE8:
	.4byte 0x00001789
_080F4EEC:
	.4byte 0x0000180C
_080F4EF0:
	.4byte 0x00000F52
_080F4EF4:
	.4byte 0x00000FC2
_080F4EF8:
	.4byte gUnknown_081797C8
_080F4EFC:
	ldr r2, _080F5000  @ =0x000016D5
	add r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F4FF8
	add r0, r5, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #2
	bne _080F4FF8
	ldr r3, _080F5004  @ =0x00001624
	add r0, r4, r3
	ldrb r1, [r0]
	ldr r7, _080F5008  @ =0x00001625
	add r0, r4, r7
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	mov r2, #182
	lsl r2, r2, #5
	add r0, r4, r2
	ldrb r2, [r0]
	add r3, r3, #157
	add r0, r4, r3
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	lsl r0, r0, #8
	add r2, r2, r0
	lsl r2, r2, #16
	add r1, r1, #16
	lsl r1, r1, #16
	cmp r1, r2
	bcc _080F4FF8
	ldr r7, _080F500C  @ =0x00000547
	add r0, r4, r7
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F4F5A
	ldr r0, _080F5010  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F4FF8
_080F4F5A:
	mov r3, #1
	mov r2, #1
	mov r6, #0
	ldr r0, _080F5014  @ =gUnknown_03003E70
	strb r2, [r0]
	ldr r7, _080F5018  @ =0x00000A4E
	add r0, r4, r7
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #17
	bne _080F4F7E
	mov r0, #64
	and r0, r0, r1
	cmp r0, #0
	beq _080F4F7E
	mov r6, #1
	mov r3, #0
_080F4F7E:
	cmp r3, #0
	beq _080F4F96
	ldr r0, _080F501C  @ =gRam
	ldr r1, _080F5020  @ =0x00000546
	add r0, r0, r1
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080F4F96
	mov r2, #0
_080F4F96:
	cmp r2, #0
	beq _080F4FF8
	cmp r6, #0
	beq _080F4FE6
	ldr r4, _080F501C  @ =gRam
	ldr r2, _080F5024  @ =0x00001789
	add r1, r4, r2
	mov r0, #0
	strb r0, [r1]
	ldr r3, _080F5028  @ =0x0000180C
	add r1, r4, r3
	mov r0, #32
	strb r0, [r1]
	ldr r0, _080F5010  @ =gUnknown_0200233D
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080F4FDA
	cmp r1, #1
	bls _080F4FDA
	ldr r7, _080F502C  @ =0x00000F52
	add r1, r4, r7
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	bl sub_0809E57C
	ldr r1, _080F5030  @ =0x00000FC2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #64
	strb r1, [r0]
_080F4FDA:
	cmp r6, #0
	beq _080F4FE6
	mov r0, #14
	mov r1, #1
	bl sub_080BEA28
_080F4FE6:
	ldr r1, _080F5034  @ =gUnknown_081797CC
	lsl r0, r6, #1
	add r0, r0, r1
	ldrh r1, [r0]
	mov r2, sp
	add r2, r2, #1
	add r0, r5, #0
	bl sub_080C9564
_080F4FF8:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080F5000:
	.4byte 0x000016D5
_080F5004:
	.4byte 0x00001624
_080F5008:
	.4byte 0x00001625
_080F500C:
	.4byte 0x00000547
_080F5010:
	.4byte gUnknown_0200233D
_080F5014:
	.4byte gUnknown_03003E70
_080F5018:
	.4byte 0x00000A4E
_080F501C:
	.4byte gRam
_080F5020:
	.4byte 0x00000546
_080F5024:
	.4byte 0x00001789
_080F5028:
	.4byte 0x0000180C
_080F502C:
	.4byte 0x00000F52
_080F5030:
	.4byte 0x00000FC2
_080F5034:
	.4byte gUnknown_081797CC
	THUMB_FUNC_END sub_080F4DBC

	THUMB_FUNC_START sub_080F5038
sub_080F5038: @ 0x080F5038
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080F507C  @ =gRam
	ldr r3, _080F5080  @ =0x00000FC2
	add r0, r1, r3
	add r3, r2, r0
	ldrb r0, [r3]
	add r4, r1, #0
	cmp r0, #0
	beq _080F508C
	cmp r0, #96
	beq _080F505A
	cmp r0, #64
	beq _080F505A
	cmp r0, #32
	bne _080F5066
_080F505A:
	ldr r0, _080F5084  @ =0x00000F92
	add r1, r4, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F5066:
	ldr r1, _080F5088  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080F509C
	add r0, r2, #0
	bl sub_080F4CB8
	b _080F509C
_080F507C:
	.4byte gRam
_080F5080:
	.4byte 0x00000FC2
_080F5084:
	.4byte 0x00000F92
_080F5088:
	.4byte 0x00000996
_080F508C:
	ldr r4, _080F50A4  @ =0x00000F52
	add r0, r1, r4
	add r0, r2, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #240
	strb r0, [r3]
_080F509C:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F50A4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F5038

	THUMB_FUNC_START sub_080F50A8
sub_080F50A8: @ 0x080F50A8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F50C8  @ =gUnknown_081796E4
	ldr r1, _080F50CC  @ =gRam
	ldr r3, _080F50D0  @ =0x00001052
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080F50C8:
	.4byte gUnknown_081796E4
_080F50CC:
	.4byte gRam
_080F50D0:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080F50A8

	THUMB_FUNC_START sub_080F50D4
sub_080F50D4: @ 0x080F50D4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F5100  @ =gRam
	ldr r3, _080F5104  @ =0x00001122
	add r1, r2, r3
	add r1, r0, r1
	mov r3, #20
	strb r3, [r1]
	ldr r1, _080F5108  @ =0x00000F92
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	lsl r1, r1, #5
	ldr r2, _080F510C  @ =gUnknown_081796F8
	add r1, r1, r2
	mov r2, #4
	bl sub_080C9480
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F5100:
	.4byte gRam
_080F5104:
	.4byte 0x00001122
_080F5108:
	.4byte 0x00000F92
_080F510C:
	.4byte gUnknown_081796F8
	THUMB_FUNC_END sub_080F50D4

	THUMB_FUNC_START sub_080F5110
sub_080F5110: @ 0x080F5110
	push {r4,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r3, _080F513C  @ =gRam
	ldr r2, _080F5140  @ =0x00000FC2
	add r0, r3, r2
	add r2, r1, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080F5134
	ldr r4, _080F5144  @ =0x00000F52
	add r0, r3, r4
	add r0, r1, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #128
	strb r0, [r2]
_080F5134:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F513C:
	.4byte gRam
_080F5140:
	.4byte 0x00000FC2
_080F5144:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F5110

	THUMB_FUNC_START sub_080F5148
sub_080F5148: @ 0x080F5148
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F515C  @ =gRam
	ldr r2, _080F5160  @ =0x00000F92
	add r1, r1, r2
	add r0, r0, r1
	mov r1, #4
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080F515C:
	.4byte gRam
_080F5160:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080F5148

	THUMB_FUNC_START sub_080F5164
sub_080F5164: @ 0x080F5164
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F518C  @ =gRam
	ldr r2, _080F5190  @ =0x0000096C
	add r3, r1, r2
	mov r2, #4
	strh r2, [r3]
	ldr r2, _080F5194  @ =0x00000F92
	add r1, r1, r2
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #5
	ldr r2, _080F5198  @ =gUnknown_081797D0
	add r1, r1, r2
	bl sub_080C94D0
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F518C:
	.4byte gRam
_080F5190:
	.4byte 0x0000096C
_080F5194:
	.4byte 0x00000F92
_080F5198:
	.4byte gUnknown_081797D0
	THUMB_FUNC_END sub_080F5164

	THUMB_FUNC_START sub_080F519C
sub_080F519C: @ 0x080F519C
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r7, r5, #0
	add r0, r5, #0
	bl sub_080F5280
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F5252
	add r0, r5, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F5252
	bl sub_080AF16C
	bl sub_0809945C
	ldr r6, _080F525C  @ =gRam
	ldr r1, _080F5260  @ =0x00001663
	add r0, r6, r1
	ldrb r0, [r0]
	mov r8, r0
	cmp r0, #1
	bne _080F5252
	ldr r0, _080F5264  @ =gUnknown_0200232C
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F5252
	ldr r1, _080F5268  @ =0x00001804
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F5252
	ldr r1, _080F526C  @ =0x000010A2
	add r0, r6, r1
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #144
	beq _080F5252
	ldr r1, _080F5270  @ =0x000016CE
	add r0, r6, r1
	ldrb r0, [r0]
	sub r0, r0, #24
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080F5252
	ldr r1, _080F5274  @ =0x00001661
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #4
	beq _080F521A
	mov r0, #4
	bl sub_080BE9A0
_080F521A:
	ldr r0, _080F5278  @ =0x00001052
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r1, r8
	and r0, r0, r1
	cmp r0, #0
	bne _080F5234
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
_080F5234:
	ldrb r0, [r4]
	cmp r0, #7
	bls _080F5252
	add r0, r7, #0
	mov r1, #58
	bl sub_080CF0AC
	ldr r1, _080F527C  @ =0x00000F22
	add r0, r6, r1
	add r0, r7, r0
	mov r1, #2
	strb r1, [r0]
	add r0, r7, #0
	bl sub_080CA58C
_080F5252:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080F525C:
	.4byte gRam
_080F5260:
	.4byte 0x00001663
_080F5264:
	.4byte gUnknown_0200232C
_080F5268:
	.4byte 0x00001804
_080F526C:
	.4byte 0x000010A2
_080F5270:
	.4byte 0x000016CE
_080F5274:
	.4byte 0x00001661
_080F5278:
	.4byte 0x00001052
_080F527C:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080F519C

	THUMB_FUNC_START sub_080F5280
sub_080F5280: @ 0x080F5280
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	mov r0, #32
	bl sub_080CF388
	mov r4, sp
	add r4, r4, #5
	add r0, sp, #4
	add r1, r4, #0
	mov r2, r8
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F531A
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F531A
	mov r2, #5
	add r6, sp, #4
	ldr r7, _080F5328  @ =gUnknown_03002B94
	sub r0, r7, #4
	mov r9, r0
_080F52BA:
	ldr r0, _080F532C  @ =gUnknown_03003E74
	ldrb r1, [r6]
	ldrh r0, [r0]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r1, _080F5330  @ =gUnknown_08179870
	lsl r5, r2, #24
	asr r5, r5, #24
	add r1, r5, r1
	ldrb r2, [r1]
	mov r3, r9
	ldrh r1, [r3]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080F5334  @ =gUnknown_08179876
	add r2, r5, r2
	ldrb r3, [r2]
	ldrh r2, [r7]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080F5338  @ =gUnknown_0817987C
	add r3, r5, r3
	ldrb r3, [r3]
	ldr r4, _080F533C  @ =gUnknown_08179882
	add r4, r5, r4
	ldrb r4, [r4]
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r4, #2
	str r4, [sp]
	bl sub_080C6004
	sub r5, r5, #1
	lsl r5, r5, #24
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsr r2, r5, #24
	cmp r5, #0
	bge _080F52BA
	mov r0, r8
	mov r1, #2
	mov r2, #5
	bl sub_080C6350
_080F531A:
	add sp, sp, #8
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080F5328:
	.4byte gUnknown_03002B94
_080F532C:
	.4byte gUnknown_03003E74
_080F5330:
	.4byte gUnknown_08179870
_080F5334:
	.4byte gUnknown_08179876
_080F5338:
	.4byte gUnknown_0817987C
_080F533C:
	.4byte gUnknown_08179882
	THUMB_FUNC_END sub_080F5280

	THUMB_FUNC_START sub_080F5340
sub_080F5340: @ 0x080F5340
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F535C  @ =gRam
	ldr r1, _080F5360  @ =0x00000ED2
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #3
	strb r1, [r2]
	bl sub_080C35A4
	pop {r0}
	bx r0
_080F535C:
	.4byte gRam
_080F5360:
	.4byte 0x00000ED2
	THUMB_FUNC_END sub_080F5340

	THUMB_FUNC_START sub_080F5364
sub_080F5364: @ 0x080F5364
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r4, r5, #0
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r5, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F545C
	ldr r6, _080F53D8  @ =gRam
	ldr r1, _080F53DC  @ =0x000009B2
	add r0, r6, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	beq _080F53E8
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F545C
	ldr r2, _080F53E0  @ =0x00001052
	add r0, r6, r2
	add r0, r5, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #127
	and r1, r1, r0
	cmp r1, #0
	bne _080F545C
	ldr r1, _080F53E4  @ =0x000010F2
	add r0, r6, r1
	add r0, r5, r0
	mov r2, #161
	lsl r2, r2, #4
	add r1, r6, r2
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080F545C
	add r0, r5, #0
	bl sub_080E89E4
	cmp r0, #0
	blt _080F545C
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080F5490
	b _080F545C
_080F53D8:
	.4byte gRam
_080F53DC:
	.4byte 0x000009B2
_080F53E0:
	.4byte 0x00001052
_080F53E4:
	.4byte 0x000010F2
_080F53E8:
	ldr r1, _080F5464  @ =0x00000F22
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
	ldr r2, _080F5468  @ =0x00001002
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #1
	neg r1, r1
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C7A48
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F545C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F545C
	ldr r1, _080F546C  @ =0x00000FF2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #25
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080CEB84
	ldr r2, _080F5470  @ =0x00001062
	add r1, r6, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F5474  @ =0x00000EE2
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #8
	strb r0, [r1]
	ldr r2, _080F5478  @ =0x00000ED2
	add r1, r6, r2
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #7
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #89
	bl sub_080CF140
	ldr r1, _080F547C  @ =0x00000E75
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #128
	strb r1, [r0]
_080F545C:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
_080F5464:
	.4byte 0x00000F22
_080F5468:
	.4byte 0x00001002
_080F546C:
	.4byte 0x00000FF2
_080F5470:
	.4byte 0x00001062
_080F5474:
	.4byte 0x00000EE2
_080F5478:
	.4byte 0x00000ED2
_080F547C:
	.4byte 0x00000E75
	THUMB_FUNC_END sub_080F5364

	THUMB_FUNC_START sub_080F5480
sub_080F5480: @ 0x080F5480
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080C3758
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F5480

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F5490
sub_080F5490: @ 0x080F5490
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080F54B8  @ =gRam
	ldr r1, _080F54BC  @ =0x00000E75
	add r2, r3, r1
	add r2, r0, r2
	ldrb r4, [r2]
	mov r1, #8
	orr r1, r1, r4
	strb r1, [r2]
	ldr r1, _080F54C0  @ =0x00000EA5
	add r3, r3, r1
	add r0, r0, r3
	mov r1, #4
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F54B8:
	.4byte gRam
_080F54BC:
	.4byte 0x00000E75
_080F54C0:
	.4byte 0x00000EA5
	THUMB_FUNC_END sub_080F5490

	THUMB_FUNC_START sub_080F54C4
sub_080F54C4: @ 0x080F54C4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080C3758
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F54C4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F54D4
sub_080F54D4: @ 0x080F54D4
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C631C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F5540
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080F5540
	ldr r3, _080F5520  @ =gRam
	ldr r1, _080F5524  @ =0x000009C6
	add r0, r3, r1
	ldrh r0, [r0]
	cmp r0, #24
	beq _080F5530
	ldr r0, _080F5528  @ =gUnknown_0200232E
	ldrb r1, [r0]
	mov r0, #2
	and r0, r0, r1
	cmp r0, #0
	beq _080F5540
	ldr r1, _080F552C  @ =0x00000FA2
	add r0, r3, r1
	add r0, r4, r0
	b _080F553E
	.byte 0x00
	.byte 0x00
_080F5520:
	.4byte gRam
_080F5524:
	.4byte 0x000009C6
_080F5528:
	.4byte gUnknown_0200232E
_080F552C:
	.4byte 0x00000FA2
_080F5530:
	ldr r0, _080F5548  @ =gUnknown_0200232E
	ldrb r0, [r0]
	cmp r0, #3
	bne _080F5540
	ldr r1, _080F554C  @ =0x00000FA2
	add r0, r3, r1
	add r0, r5, r0
_080F553E:
	strb r2, [r0]
_080F5540:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080F5548:
	.4byte gUnknown_0200232E
_080F554C:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F54D4

	THUMB_FUNC_START sub_080F5550
sub_080F5550: @ 0x080F5550
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080F5588  @ =gUnknown_02002324
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080F559C
	ldr r2, _080F558C  @ =gRam
	ldr r1, _080F5590  @ =0x00000F92
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r0, _080F5594  @ =0x00001122
	add r1, r2, r0
	add r1, r4, r1
	ldrb r3, [r1]
	mov r0, #8
	orr r0, r0, r3
	strb r0, [r1]
	ldr r1, _080F5598  @ =0x00001172
	add r2, r2, r1
	add r2, r4, r2
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	b _080F55A8
	.byte 0x00
	.byte 0x00
_080F5588:
	.4byte gUnknown_02002324
_080F558C:
	.4byte gRam
_080F5590:
	.4byte 0x00000F92
_080F5594:
	.4byte 0x00001122
_080F5598:
	.4byte 0x00001172
_080F559C:
	ldr r0, _080F55B0  @ =gRam
	ldr r1, _080F55B4  @ =0x00000FA2
	add r0, r0, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
_080F55A8:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F55B0:
	.4byte gRam
_080F55B4:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F5550

	THUMB_FUNC_START sub_080F55B8
sub_080F55B8: @ 0x080F55B8
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r6, r5, #0
	add r0, r5, #0
	bl sub_080C6240
	bl sub_0809E3CC
	add r4, r0, #0
	cmp r4, #0
	bne _080F561E
	add r0, r5, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F5608
	ldr r2, _080F55FC  @ =gRam
	ldr r1, _080F5600  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #31
	and r0, r0, r1
	cmp r0, #0
	bne _080F561E
	ldr r1, _080F5604  @ =0x00001122
	add r0, r2, r1
	add r0, r5, r0
	ldrb r1, [r0]
	mov r2, #64
	eor r1, r1, r2
	strb r1, [r0]
	b _080F561E
_080F55FC:
	.4byte gRam
_080F5600:
	.4byte 0x00000996
_080F5604:
	.4byte 0x00001122
_080F5608:
	ldr r1, _080F5624  @ =gRam
	ldr r2, _080F5628  @ =0x00000FA2
	add r0, r1, r2
	add r0, r6, r0
	strb r4, [r0]
	ldr r0, _080F562C  @ =0x00001776
	add r1, r1, r0
	strb r4, [r1]
	mov r0, #41
	bl sub_080A1588
_080F561E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080F5624:
	.4byte gRam
_080F5628:
	.4byte 0x00000FA2
_080F562C:
	.4byte 0x00001776
	THUMB_FUNC_END sub_080F55B8

	THUMB_FUNC_START sub_080F5630
sub_080F5630: @ 0x080F5630
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r2, _080F5698  @ =gRam
	ldr r1, _080F569C  @ =0x00000F52
	add r0, r2, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F5646
	b _080F5790
_080F5646:
	ldr r3, _080F56A0  @ =0x00000F62
	add r0, r2, r3
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #15
	bhi _080F5660
	ldr r1, _080F56A4  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #2
	and r0, r0, r1
	cmp r0, #0
	beq _080F5666
_080F5660:
	add r0, r5, #0
	bl sub_080C6240
_080F5666:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F5674
	b _080F57C8
_080F5674:
	add r0, r5, #0
	bl sub_080C841C
	add r6, r0, #0
	cmp r6, #0
	beq _080F5682
	b _080F57C8
_080F5682:
	ldr r7, _080F5698  @ =gRam
	ldr r3, _080F56A0  @ =0x00000F62
	add r0, r7, r3
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F56AC
	ldr r1, _080F56A8  @ =0x00000FA2
	add r0, r7, r1
	b _080F56D4
	.byte 0x00
	.byte 0x00
_080F5698:
	.4byte gRam
_080F569C:
	.4byte 0x00000F52
_080F56A0:
	.4byte 0x00000F62
_080F56A4:
	.4byte 0x00000996
_080F56A8:
	.4byte 0x00000FA2
_080F56AC:
	add r0, r5, #0
	bl sub_080C99DC
	add r0, r5, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	beq _080F56E4
	add r0, r5, #0
	mov r1, #112
	bl sub_080CF140
	ldr r0, _080F56DC  @ =gUnknown_02002352
	ldrb r1, [r0]
	add r1, r1, #8
	strb r1, [r0]
	ldr r3, _080F56E0  @ =0x00000FA2
	add r0, r7, r3
_080F56D4:
	add r0, r5, r0
	strb r6, [r0]
	b _080F57C8
	.byte 0x00
	.byte 0x00
_080F56DC:
	.4byte gUnknown_02002352
_080F56E0:
	.4byte 0x00000FA2
_080F56E4:
	ldr r1, _080F5720  @ =0x00000996
	add r0, r7, r1
	ldrb r1, [r0]
	mov r6, #1
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080F56FA
	ldrb r0, [r4]
	sub r0, r0, #1
	strb r0, [r4]
_080F56FA:
	ldr r3, _080F5724  @ =0x00001142
	add r0, r7, r3
	add r1, r5, r0
	ldrb r0, [r1]
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r3, #128
	and r0, r0, r3
	cmp r0, #0
	bne _080F572C
	ldr r0, _080F5728  @ =0x00001152
	add r1, r7, r0
	add r1, r5, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	b _080F57C8
	.byte 0x00
	.byte 0x00
_080F5720:
	.4byte 0x00000996
_080F5724:
	.4byte 0x00001142
_080F5728:
	.4byte 0x00001152
_080F572C:
	strb r2, [r1]
	ldr r1, _080F5780  @ =0x00001152
	add r0, r7, r1
	add r2, r5, r0
	ldrb r1, [r2]
	add r0, r1, #0
	and r0, r0, r3
	cmp r0, #0
	bne _080F5740
	mov r1, #0
_080F5740:
	mvn r0, r1
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #25
	strb r0, [r2]
	ldr r3, _080F5784  @ =0x00000F22
	add r0, r7, r3
	add r3, r5, r0
	ldrb r2, [r3]
	cmp r2, #0
	beq _080F5764
	ldr r0, _080F5788  @ =gUnknown_08179888
	lsr r1, r2, #7
	and r1, r1, r6
	add r1, r1, r0
	ldrb r0, [r1]
	add r0, r2, r0
	strb r0, [r3]
_080F5764:
	ldr r1, _080F578C  @ =0x00000F12
	add r0, r7, r1
	add r3, r5, r0
	ldrb r2, [r3]
	cmp r2, #0
	beq _080F57C8
	ldr r0, _080F5788  @ =gUnknown_08179888
	lsr r1, r2, #7
	and r1, r1, r6
	add r1, r1, r0
	ldrb r0, [r1]
	add r0, r2, r0
	strb r0, [r3]
	b _080F57C8
_080F5780:
	.4byte 0x00001152
_080F5784:
	.4byte 0x00000F22
_080F5788:
	.4byte gUnknown_08179888
_080F578C:
	.4byte 0x00000F12
_080F5790:
	ldr r3, _080F57D0  @ =0x00001062
	add r0, r2, r3
	add r0, r5, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080F57C8
	sub r3, r3, #192
	add r0, r2, r3
	add r0, r5, r0
	strb r1, [r0]
	bl GetRandomInt
	mov r1, #3
	and r1, r1, r0
	add r4, r1, #2
	add r0, r4, #0
	cmp r0, #0
	blt _080F57C8
_080F57B4:
	add r0, r5, #0
	bl sub_080F57D4
	lsl r0, r4, #24
	mov r1, #255
	lsl r1, r1, #24
	add r0, r0, r1
	lsr r4, r0, #24
	cmp r0, #0
	bge _080F57B4
_080F57C8:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F57D0:
	.4byte 0x00001062
	THUMB_FUNC_END sub_080F5630

	THUMB_FUNC_START sub_080F57D4
sub_080F57D4: @ 0x080F57D4
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r7, r0, #24
	mov r0, #172
	add r1, r7, #0
	bl sub_080CA538
	add r6, r0, #0
	cmp r6, #0
	blt _080F5868
	lsl r0, r6, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r4, _080F5870  @ =gRam
	ldr r1, _080F5874  @ =0x00000F52
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #1
	strb r1, [r0]
	ldr r2, _080F5878  @ =0x00000F62
	add r0, r4, r2
	add r0, r6, r0
	mov r1, #255
	strb r1, [r0]
	ldr r1, _080F587C  @ =0x00001142
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #8
	strb r1, [r0]
	ldr r2, _080F5880  @ =0x00001152
	add r0, r4, r2
	add r0, r6, r0
	mov r1, #22
	strb r1, [r0]
	bl GetRandomInt
	ldr r2, _080F5884  @ =0x00000968
	add r1, r4, r2
	strb r0, [r1]
	ldr r0, _080F5888  @ =0x00000961
	add r5, r4, r0
	ldrb r1, [r5]
	add r2, r2, #1
	add r0, r4, r2
	strb r1, [r0]
	bl GetRandomInt
	ldr r2, _080F588C  @ =0x0000096C
	add r1, r4, r2
	strb r0, [r1]
	ldr r1, _080F5890  @ =0x00000965
	add r0, r4, r1
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r4, r2
	strb r1, [r0]
	add r0, r7, #0
	mov r1, #10
	bl sub_080C2DCC
	ldr r1, _080F5894  @ =0x00000F12
	add r0, r4, r1
	add r0, r6, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r4, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080F5898  @ =0x00000F22
	add r4, r4, r0
	add r4, r6, r4
	ldrb r0, [r5]
	strb r0, [r4]
_080F5868:
	add r0, r6, #0
	pop {r4-r7}
	pop {r1}
	bx r1
_080F5870:
	.4byte gRam
_080F5874:
	.4byte 0x00000F52
_080F5878:
	.4byte 0x00000F62
_080F587C:
	.4byte 0x00001142
_080F5880:
	.4byte 0x00001152
_080F5884:
	.4byte 0x00000968
_080F5888:
	.4byte 0x00000961
_080F588C:
	.4byte 0x0000096C
_080F5890:
	.4byte 0x00000965
_080F5894:
	.4byte 0x00000F12
_080F5898:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080F57D4

	THUMB_FUNC_START sub_080F589C
sub_080F589C: @ 0x080F589C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	bl sub_080D0524
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F589C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F58AC
sub_080F58AC: @ 0x080F58AC
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r1, _080F58F4  @ =gRam
	ldr r0, _080F58F8  @ =0x00000EE2
	add r5, r1, r0
	add r5, r4, r5
	ldrb r2, [r5]
	add r0, r0, #32
	add r3, r1, r0
	add r3, r4, r3
	ldrb r0, [r3]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r2, r2, #8
	ldr r0, _080F58FC  @ =0x00001172
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	strb r2, [r5]
	lsr r2, r2, #8
	strb r2, [r3]
	add r0, r4, #0
	mov r1, #0
	bl sub_080F5D7C
	add r0, r4, #0
	mov r1, #1
	bl sub_080F5D7C
	pop {r4,r5}
	pop {r0}
	bx r0
_080F58F4:
	.4byte gRam
_080F58F8:
	.4byte 0x00000EE2
_080F58FC:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080F58AC

	THUMB_FUNC_START sub_080F5900
sub_080F5900: @ 0x080F5900
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080F5AA8
	cmp r0, #0
	beq _080F5970
	bl sub_08093078
	ldr r4, _080F5958  @ =gRam
	ldr r0, _080F595C  @ =0x000016F8
	add r1, r4, r0
	mov r0, #16
	strb r0, [r1]
	add r0, r5, #0
	mov r1, #48
	bl sub_080C2CB4
	mov r1, #150
	lsl r1, r1, #4
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r2, _080F5960  @ =0x000016CD
	add r0, r4, r2
	strb r1, [r0]
	ldr r3, _080F5964  @ =0x00000961
	add r0, r4, r3
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r4, r2
	strb r1, [r0]
	ldr r3, _080F5968  @ =0x00000F52
	add r1, r4, r3
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F596C  @ =0x00000FC2
	add r4, r4, r0
	add r4, r5, r4
	mov r0, #48
	strb r0, [r4]
	b _080F5A42
_080F5958:
	.4byte gRam
_080F595C:
	.4byte 0x000016F8
_080F5960:
	.4byte 0x000016CD
_080F5964:
	.4byte 0x00000961
_080F5968:
	.4byte 0x00000F52
_080F596C:
	.4byte 0x00000FC2
_080F5970:
	ldr r2, _080F5A0C  @ =gRam
	ldr r1, _080F5A10  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	add r0, r5, #0
	eor r0, r0, r1
	mov r1, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080F5A42
	ldr r3, _080F5A14  @ =0x00000FC2
	add r0, r2, r3
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F5A42
	ldr r1, _080F5A18  @ =0x00000EE2
	add r0, r2, r1
	add r0, r5, r0
	ldrb r1, [r0]
	sub r3, r3, #192
	add r0, r2, r3
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	ldr r3, _080F5A1C  @ =0x000016C4
	add r0, r2, r3
	ldrh r0, [r0]
	sub r1, r1, r0
	add r1, r1, #40
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #71
	bhi _080F5A38
	ldr r1, _080F5A20  @ =0x00000ED2
	add r0, r2, r1
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r3, _080F5A24  @ =0x00000EF2
	add r0, r2, r3
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	mov r3, #182
	lsl r3, r3, #5
	add r0, r2, r3
	ldrh r0, [r0]
	sub r1, r1, r0
	add r1, r1, #24
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #31
	bhi _080F5A38
	ldr r0, _080F5A28  @ =0x00000F72
	add r3, r2, r0
	add r3, r5, r3
	ldrb r0, [r3]
	add r0, r0, #1
	mov r1, #7
	and r0, r0, r1
	strb r0, [r3]
	ldr r0, _080F5A2C  @ =0x00000F92
	add r1, r2, r0
	add r1, r5, r1
	ldr r2, _080F5A30  @ =gUnknown_081798A0
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080F5A34  @ =gUnknown_081798A8
	ldrb r0, [r3]
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r4]
	b _080F5A42
	.byte 0x00
	.byte 0x00
_080F5A0C:
	.4byte gRam
_080F5A10:
	.4byte 0x00000996
_080F5A14:
	.4byte 0x00000FC2
_080F5A18:
	.4byte 0x00000EE2
_080F5A1C:
	.4byte 0x000016C4
_080F5A20:
	.4byte 0x00000ED2
_080F5A24:
	.4byte 0x00000EF2
_080F5A28:
	.4byte 0x00000F72
_080F5A2C:
	.4byte 0x00000F92
_080F5A30:
	.4byte gUnknown_081798A0
_080F5A34:
	.4byte gUnknown_081798A8
_080F5A38:
	ldr r1, _080F5A48  @ =0x00000F92
	add r0, r2, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
_080F5A42:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F5A48:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080F5900

	THUMB_FUNC_START sub_080F5A4C
sub_080F5A4C: @ 0x080F5A4C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r6, _080F5A98  @ =gRam
	ldr r1, _080F5A9C  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #46
	bne _080F5A6A
	add r0, r4, #0
	mov r1, #121
	bl sub_080CF140
_080F5A6A:
	ldrb r0, [r5]
	cmp r0, #0
	bne _080F5A80
	ldr r1, _080F5AA0  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #8
	strb r0, [r5]
_080F5A80:
	ldr r1, _080F5AA4  @ =0x00000F92
	add r0, r6, r1
	add r0, r7, r0
	ldrb r1, [r5]
	lsr r1, r1, #1
	mov r2, #3
	and r1, r1, r2
	strb r1, [r0]
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F5A98:
	.4byte gRam
_080F5A9C:
	.4byte 0x00000FC2
_080F5AA0:
	.4byte 0x00000F52
_080F5AA4:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080F5A4C

	THUMB_FUNC_START sub_080F5AA8
sub_080F5AA8: @ 0x080F5AA8
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r7, #0
	ldr r2, _080F5B04  @ =gRam
	ldr r1, _080F5B08  @ =0x00001132
	add r0, r2, r1
	add r0, r5, r0
	mov r1, #7
	strb r1, [r0]
	ldr r1, _080F5B0C  @ =0x00000F62
	add r0, r2, r1
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080F5B1C
	mov r1, #0
	ldr r6, _080F5B10  @ =gUnknown_081798B4
	add r4, r2, #0
	ldr r2, _080F5B14  @ =0x000009C6
	add r0, r4, r2
	ldrh r2, [r0]
	ldr r3, _080F5B18  @ =gUnknown_081798BC
_080F5AD8:
	add r0, r1, r3
	ldrb r0, [r0]
	cmp r2, r0
	beq _080F5AEA
	add r0, r1, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080F5AD8
_080F5AEA:
	lsl r0, r1, #1
	add r0, r0, r6
	ldrh r1, [r0]
	add r0, r5, #0
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080F5B0C  @ =0x00000F62
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	b _080F5B5E
_080F5B04:
	.4byte gRam
_080F5B08:
	.4byte 0x00001132
_080F5B0C:
	.4byte 0x00000F62
_080F5B10:
	.4byte gUnknown_081798B4
_080F5B14:
	.4byte 0x000009C6
_080F5B18:
	.4byte gUnknown_081798BC
_080F5B1C:
	ldr r1, _080F5B54  @ =0x00000EE2
	add r0, r2, r1
	add r0, r5, r0
	ldrb r0, [r0]
	lsr r0, r0, #4
	mov r1, #1
	and r0, r0, r1
	eor r0, r0, r1
	strb r0, [r4]
	ldr r1, _080F5B58  @ =gUnknown_081798C0
	ldrb r0, [r4]
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r1, [r0]
	mov r2, sp
	add r2, r2, #1
	add r0, r5, #0
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F5B5C
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F5B5E
	mov r7, #1
	b _080F5B5E
	.byte 0x00
	.byte 0x00
_080F5B54:
	.4byte 0x00000EE2
_080F5B58:
	.4byte gUnknown_081798C0
_080F5B5C:
	strb r7, [r4]
_080F5B5E:
	add r0, r7, #0
	add sp, sp, #4
	pop {r4-r7}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080F5AA8

	THUMB_FUNC_START sub_080F5B68
sub_080F5B68: @ 0x080F5B68
	push {r4,r5,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #74
	bl sub_080CA538
	add r5, r0, #0
	cmp r5, #0
	blt _080F5BC4
	lsl r4, r5, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080C2914
	add r0, r4, #0
	bl sub_080CAE50
	ldr r2, _080F5BCC  @ =gRam
	ldr r1, _080F5BD0  @ =0x00000964
	add r0, r2, r1
	ldrh r0, [r0]
	add r0, r0, #40
	mov r3, #151
	lsl r3, r3, #4
	add r1, r2, r3
	strb r0, [r1]
	lsr r0, r0, #8
	sub r3, r3, #11
	add r1, r2, r3
	strb r0, [r1]
	ldr r1, _080F5BD4  @ =0x00000FD2
	add r0, r2, r1
	add r0, r5, r0
	mov r1, #64
	strb r1, [r0]
	ldr r3, _080F5BD8  @ =0x00000F12
	add r0, r2, r3
	add r0, r5, r0
	mov r1, #24
	strb r1, [r0]
	ldr r0, _080F5BDC  @ =0x00001152
	add r2, r2, r0
	add r2, r5, r2
	mov r0, #18
	strb r0, [r2]
_080F5BC4:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F5BCC:
	.4byte gRam
_080F5BD0:
	.4byte 0x00000964
_080F5BD4:
	.4byte 0x00000FD2
_080F5BD8:
	.4byte 0x00000F12
_080F5BDC:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080F5B68

	THUMB_FUNC_START sub_080F5BE0
sub_080F5BE0: @ 0x080F5BE0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r0, r5, #0
	bl sub_080C58F0
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F5BFA
	b _080F5D44
_080F5BFA:
	ldr r4, _080F5C94  @ =gRam
	ldr r1, _080F5C98  @ =0x00001082
	add r0, r4, r1
	add r0, r5, r0
	ldrb r3, [r0]
	ldr r2, _080F5C9C  @ =0x00000F62
	add r0, r4, r2
	add r0, r5, r0
	ldrb r2, [r0]
	ldr r6, _080F5CA0  @ =0x00000F72
	add r0, r4, r6
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #8
	ldr r0, _080F5CA4  @ =gUnknown_08179924
	add r0, r3, r0
	orr r2, r2, r1
	ldrb r0, [r0]
	add r2, r2, r0
	ldr r0, _080F5CA8  @ =gUnknown_08179926
	add r3, r3, r0
	ldrb r0, [r3]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r1, _080F5CAC  @ =0x00000EE2
	add r0, r4, r1
	add r0, r5, r0
	strb r2, [r0]
	sub r6, r6, #112
	add r0, r4, r6
	add r0, r5, r0
	lsr r2, r2, #8
	strb r2, [r0]
	ldr r0, _080F5CB0  @ =0x00000ED2
	add r1, r4, r0
	add r1, r5, r1
	ldr r2, _080F5CB4  @ =0x00000F82
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	sub r6, r6, #16
	add r1, r4, r6
	add r1, r5, r1
	add r2, r2, #224
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r5, #0
	mov r1, #2
	bl sub_080C2CB4
	mov r6, #150
	lsl r6, r6, #4
	add r0, r4, r6
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	bge _080F5CC0
	ldr r1, _080F5CB8  @ =0x00000FB2
	add r0, r4, r1
	add r1, r5, r0
	ldrb r3, [r1]
	add r2, r3, #0
	cmp r2, #2
	beq _080F5CD0
	ldr r4, _080F5CBC  @ =gUnknown_08179937
	mov r0, #0
	cmp r2, #2
	bls _080F5C8C
	mov r0, #1
_080F5C8C:
	add r0, r0, r4
	ldrb r0, [r0]
	add r0, r3, r0
	b _080F5CCE
_080F5C94:
	.4byte gRam
_080F5C98:
	.4byte 0x00001082
_080F5C9C:
	.4byte 0x00000F62
_080F5CA0:
	.4byte 0x00000F72
_080F5CA4:
	.4byte gUnknown_08179924
_080F5CA8:
	.4byte gUnknown_08179926
_080F5CAC:
	.4byte 0x00000EE2
_080F5CB0:
	.4byte 0x00000ED2
_080F5CB4:
	.4byte 0x00000F82
_080F5CB8:
	.4byte 0x00000FB2
_080F5CBC:
	.4byte gUnknown_08179937
_080F5CC0:
	ldr r2, _080F5D4C  @ =0x00000FB2
	add r1, r4, r2
	add r1, r5, r1
	ldr r6, _080F5D50  @ =0x00000961
	add r0, r4, r6
	ldrb r0, [r0]
	add r0, r0, #2
_080F5CCE:
	strb r0, [r1]
_080F5CD0:
	ldr r3, _080F5D54  @ =gRam
	ldr r1, _080F5D4C  @ =0x00000FB2
	add r0, r3, r1
	add r0, r5, r0
	ldrb r4, [r0]
	ldr r2, _080F5D58  @ =0x00000F62
	add r0, r3, r2
	add r0, r5, r0
	ldrb r2, [r0]
	ldr r6, _080F5D5C  @ =0x00000F72
	add r0, r3, r6
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #8
	ldr r0, _080F5D60  @ =gUnknown_08179928
	add r0, r4, r0
	orr r2, r2, r1
	ldrb r0, [r0]
	add r2, r2, r0
	ldr r0, _080F5D64  @ =gUnknown_0817992D
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r1, _080F5D68  @ =0x00000F82
	add r0, r3, r1
	add r0, r5, r0
	ldrb r1, [r0]
	add r6, r6, #240
	add r0, r3, r6
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r0, _080F5D6C  @ =gUnknown_08179932
	add r4, r4, r0
	ldrb r0, [r4]
	add r1, r0, r1
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r4, _080F5D70  @ =0x00000EE2
	add r0, r3, r4
	add r0, r5, r0
	strb r2, [r0]
	ldr r6, _080F5D74  @ =0x00000F02
	add r0, r3, r6
	add r0, r5, r0
	lsr r2, r2, #8
	strb r2, [r0]
	ldr r2, _080F5D78  @ =0x00000ED2
	add r0, r3, r2
	add r0, r5, r0
	strb r1, [r0]
	add r4, r4, #16
	add r3, r3, r4
	add r3, r5, r3
	lsr r1, r1, #8
	strb r1, [r3]
_080F5D44:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F5D4C:
	.4byte 0x00000FB2
_080F5D50:
	.4byte 0x00000961
_080F5D54:
	.4byte gRam
_080F5D58:
	.4byte 0x00000F62
_080F5D5C:
	.4byte 0x00000F72
_080F5D60:
	.4byte gUnknown_08179928
_080F5D64:
	.4byte gUnknown_0817992D
_080F5D68:
	.4byte 0x00000F82
_080F5D6C:
	.4byte gUnknown_08179932
_080F5D70:
	.4byte 0x00000EE2
_080F5D74:
	.4byte 0x00000F02
_080F5D78:
	.4byte 0x00000ED2
	THUMB_FUNC_END sub_080F5BE0

	THUMB_FUNC_START sub_080F5D7C
sub_080F5D7C: @ 0x080F5D7C
	push {r4-r7,lr}
	add r2, r0, #0
	add r4, r1, #0
	lsl r2, r2, #24
	lsr r2, r2, #24
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r0, #37
	add r1, r2, #0
	bl sub_080CA538
	ldr r5, _080F5E1C  @ =gRam
	ldr r2, _080F5E20  @ =0x00001082
	add r1, r5, r2
	add r1, r0, r1
	strb r4, [r1]
	mov r3, #150
	lsl r3, r3, #4
	add r2, r5, r3
	ldr r1, _080F5E24  @ =gUnknown_0817993B
	add r1, r4, r1
	ldrb r1, [r1]
	ldrh r2, [r2]
	add r2, r2, r1
	ldr r1, _080F5E28  @ =gUnknown_0817993D
	add r4, r4, r1
	ldrb r1, [r4]
	lsl r1, r1, #8
	add r2, r2, r1
	lsl r2, r2, #16
	lsr r4, r2, #16
	ldr r7, _080F5E2C  @ =0x00000964
	add r1, r5, r7
	ldrh r3, [r1]
	sub r3, r3, #11
	lsl r3, r3, #16
	lsr r6, r3, #16
	ldr r7, _080F5E30  @ =0x00000EE2
	add r1, r5, r7
	add r1, r0, r1
	strb r4, [r1]
	add r7, r7, #128
	add r1, r5, r7
	add r1, r0, r1
	strb r4, [r1]
	ldr r4, _080F5E34  @ =0x00000F02
	add r1, r5, r4
	add r1, r0, r1
	lsr r2, r2, #24
	strb r2, [r1]
	add r7, r7, #16
	add r1, r5, r7
	add r1, r0, r1
	strb r2, [r1]
	ldr r2, _080F5E38  @ =0x00000ED2
	add r1, r5, r2
	add r1, r0, r1
	strb r6, [r1]
	add r4, r4, #128
	add r1, r5, r4
	add r1, r0, r1
	strb r6, [r1]
	sub r7, r7, #128
	add r1, r5, r7
	add r1, r0, r1
	lsr r3, r3, #24
	strb r3, [r1]
	ldr r2, _080F5E3C  @ =0x00001062
	add r1, r5, r2
	add r1, r0, r1
	strb r3, [r1]
	ldr r3, _080F5E40  @ =0x00001052
	add r5, r5, r3
	add r0, r0, r5
	mov r1, #1
	strb r1, [r0]
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F5E1C:
	.4byte gRam
_080F5E20:
	.4byte 0x00001082
_080F5E24:
	.4byte gUnknown_0817993B
_080F5E28:
	.4byte gUnknown_0817993D
_080F5E2C:
	.4byte 0x00000964
_080F5E30:
	.4byte 0x00000EE2
_080F5E34:
	.4byte 0x00000F02
_080F5E38:
	.4byte 0x00000ED2
_080F5E3C:
	.4byte 0x00001062
_080F5E40:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080F5D7C

	THUMB_FUNC_START sub_080F5E44
sub_080F5E44: @ 0x080F5E44
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F5E64  @ =gUnknown_0817988C
	ldr r1, _080F5E68  @ =gRam
	ldr r3, _080F5E6C  @ =0x00001052
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080F5E64:
	.4byte gUnknown_0817988C
_080F5E68:
	.4byte gRam
_080F5E6C:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080F5E44

	THUMB_FUNC_START sub_080F5E70
sub_080F5E70: @ 0x080F5E70
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F5F18
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080F5EAA
	ldr r1, _080F5EB0  @ =gRam
	ldr r3, _080F5EB4  @ =0x00001132
	add r0, r1, r3
	add r0, r4, r0
	strb r2, [r0]
	ldr r2, _080F5EB8  @ =gUnknown_08179894
	ldr r0, _080F5EBC  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	lsl r0, r0, #2
	add r0, r0, r2
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F5EAA:
	pop {r4}
	pop {r0}
	bx r0
_080F5EB0:
	.4byte gRam
_080F5EB4:
	.4byte 0x00001132
_080F5EB8:
	.4byte gUnknown_08179894
_080F5EBC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F5E70

	THUMB_FUNC_START sub_080F5EC0
sub_080F5EC0: @ 0x080F5EC0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	add r6, r3, #0
	ldr r5, _080F5F04  @ =gRam
	ldr r0, _080F5F08  @ =0x00000F92
	add r1, r5, r0
	add r1, r3, r1
	ldr r2, _080F5F0C  @ =gUnknown_081798B0
	ldr r4, _080F5F10  @ =0x00000FC2
	add r0, r5, r4
	add r4, r3, r0
	ldrb r0, [r4]
	lsr r0, r0, #1
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldrb r0, [r4]
	cmp r0, #7
	bne _080F5EEE
	add r0, r3, #0
	bl sub_080F5B68
_080F5EEE:
	ldrb r1, [r4]
	cmp r1, #0
	bne _080F5EFC
	ldr r2, _080F5F14  @ =0x00000F52
	add r0, r5, r2
	add r0, r6, r0
	strb r1, [r0]
_080F5EFC:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F5F04:
	.4byte gRam
_080F5F08:
	.4byte 0x00000F92
_080F5F0C:
	.4byte gUnknown_081798B0
_080F5F10:
	.4byte 0x00000FC2
_080F5F14:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F5EC0

	THUMB_FUNC_START sub_080F5F18
sub_080F5F18: @ 0x080F5F18
	push {lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r1, _080F5F48  @ =gRam
	ldr r2, _080F5F4C  @ =0x00000F92
	add r0, r1, r2
	add r0, r3, r0
	ldrb r2, [r0]
	mov r0, #128
	and r0, r0, r2
	cmp r0, #0
	bne _080F5F44
	ldr r0, _080F5F50  @ =0x0000096C
	add r1, r1, r0
	mov r0, #4
	strh r0, [r1]
	lsl r1, r2, #5
	ldr r0, _080F5F54  @ =gUnknown_081798C4
	add r1, r1, r0
	add r0, r3, #0
	bl sub_080C94D0
_080F5F44:
	pop {r0}
	bx r0
_080F5F48:
	.4byte gRam
_080F5F4C:
	.4byte 0x00000F92
_080F5F50:
	.4byte 0x0000096C
_080F5F54:
	.4byte gUnknown_081798C4
	THUMB_FUNC_END sub_080F5F18

	THUMB_FUNC_START sub_080F5F58
sub_080F5F58: @ 0x080F5F58
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F60E0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F5FB6
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F5FB6
	add r0, r4, #0
	bl sub_080C5044
	ldr r2, _080F5FBC  @ =gRam
	ldr r0, _080F5FC0  @ =0x00001052
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F5FC4  @ =0x00000F92
	add r3, r2, r1
	add r3, r4, r3
	lsl r0, r0, #24
	lsr r0, r0, #27
	mov r1, #3
	and r0, r0, r1
	strb r0, [r3]
	ldr r1, _080F5FC8  @ =gUnknown_08179940
	ldr r0, _080F5FCC  @ =0x00000F52
	add r2, r2, r0
	add r2, r4, r2
	ldrb r0, [r2]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F5FB6:
	pop {r4}
	pop {r0}
	bx r0
_080F5FBC:
	.4byte gRam
_080F5FC0:
	.4byte 0x00001052
_080F5FC4:
	.4byte 0x00000F92
_080F5FC8:
	.4byte gUnknown_08179940
_080F5FCC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F5F58

	THUMB_FUNC_START sub_080F5FD0
sub_080F5FD0: @ 0x080F5FD0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080F600C  @ =gRam
	ldr r1, _080F6010  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080F6048
	ldr r2, _080F6014  @ =0x000009AC
	add r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #26
	bne _080F6020
	ldr r2, _080F6018  @ =0x00000F22
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	sub r2, r2, #16
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080F601C  @ =0x00001152
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #27
	strb r1, [r0]
	b _080F603A
	.byte 0x00
	.byte 0x00
_080F600C:
	.4byte gRam
_080F6010:
	.4byte 0x00000FC2
_080F6014:
	.4byte 0x000009AC
_080F6018:
	.4byte 0x00000F22
_080F601C:
	.4byte 0x00001152
_080F6020:
	add r0, r4, #0
	mov r1, #16
	bl sub_080C35FC
	bl GetRandomInt
	ldr r1, _080F6050  @ =0x00001152
	add r2, r5, r1
	add r2, r4, r2
	mov r1, #15
	and r1, r1, r0
	add r1, r1, #20
	strb r1, [r2]
_080F603A:
	ldr r1, _080F6054  @ =gRam
	ldr r2, _080F6058  @ =0x00000F52
	add r1, r1, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F6048:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F6050:
	.4byte 0x00001152
_080F6054:
	.4byte gRam
_080F6058:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F5FD0

	THUMB_FUNC_START sub_080F605C
sub_080F605C: @ 0x080F605C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C6F48
	ldr r6, _080F60C4  @ =gRam
	ldr r1, _080F60C8  @ =0x00001042
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F6084
	add r0, r4, #0
	bl sub_080C3540
_080F6084:
	add r0, r5, #0
	bl sub_080C2C4C
	ldr r0, _080F60CC  @ =0x00001152
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	sub r0, r0, #2
	mov r3, #0
	strb r0, [r1]
	ldr r1, _080F60D0  @ =0x00001142
	add r0, r6, r1
	add r2, r5, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F60BC
	strb r3, [r2]
	ldr r1, _080F60D4  @ =0x00000FC2
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #48
	strb r1, [r0]
	ldr r1, _080F60D8  @ =0x00000F52
	add r0, r6, r1
	add r0, r5, r0
	strb r3, [r0]
_080F60BC:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F60C4:
	.4byte gRam
_080F60C8:
	.4byte 0x00001042
_080F60CC:
	.4byte 0x00001152
_080F60D0:
	.4byte 0x00001142
_080F60D4:
	.4byte 0x00000FC2
_080F60D8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F605C

	THUMB_FUNC_START sub_080F60DC
sub_080F60DC: @ 0x080F60DC
	bx lr
	THUMB_FUNC_END sub_080F60DC

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F60E0
sub_080F60E0: @ 0x080F60E0
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080F6110  @ =gRam
	ldr r1, _080F6114  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r1, r0, #1
	add r1, r1, r0
	lsl r1, r1, #3
	ldr r0, _080F6118  @ =gUnknown_08179948
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #3
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
_080F6110:
	.4byte gRam
_080F6114:
	.4byte 0x00000F92
_080F6118:
	.4byte gUnknown_08179948
	THUMB_FUNC_END sub_080F60E0

	THUMB_FUNC_START sub_080F611C
sub_080F611C: @ 0x080F611C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080F617C  @ =gRam
	ldr r1, _080F6180  @ =0x00001172
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F615A
	bl sub_080AF16C
	bl sub_0809945C
	ldr r2, _080F6184  @ =0x00000FC2
	add r0, r5, r2
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080F6152
	mov r0, #64
	strb r0, [r1]
_080F6152:
	add r0, r4, #0
	mov r1, #58
	bl sub_080CF0AC
_080F615A:
	ldr r3, _080F617C  @ =gRam
	ldr r1, _080F6184  @ =0x00000FC2
	add r0, r3, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r0, r1, #0
	cmp r0, #0
	beq _080F61C6
	cmp r0, #1
	beq _080F618C
	ldr r2, _080F6188  @ =0x000010C2
	add r0, r3, r2
	add r0, r4, r0
	add r1, r1, #19
	strb r1, [r0]
	b _080F61C6
	.byte 0x00
	.byte 0x00
_080F617C:
	.4byte gRam
_080F6180:
	.4byte 0x00001172
_080F6184:
	.4byte 0x00000FC2
_080F6188:
	.4byte 0x000010C2
_080F618C:
	ldr r1, _080F61CC  @ =0x00001172
	add r0, r3, r1
	add r0, r4, r0
	mov r2, #0
	strb r2, [r0]
	ldr r0, _080F61D0  @ =0x00000F52
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F61D4  @ =0x000010C2
	add r0, r3, r1
	add r0, r4, r0
	strb r2, [r0]
	ldr r2, _080F61D8  @ =0x00001032
	add r1, r3, r2
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #191
	and r0, r0, r2
	strb r0, [r1]
	ldr r0, _080F61DC  @ =0x00001012
	add r1, r3, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #127
	and r0, r0, r2
	strb r0, [r1]
_080F61C6:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F61CC:
	.4byte 0x00001172
_080F61D0:
	.4byte 0x00000F52
_080F61D4:
	.4byte 0x000010C2
_080F61D8:
	.4byte 0x00001032
_080F61DC:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080F611C

	THUMB_FUNC_START sub_080F61E0
sub_080F61E0: @ 0x080F61E0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C5044
	add r0, r4, #0
	bl sub_080C99DC
	add r0, r4, #0
	bl sub_080C7A48
	ldr r5, _080F6268  @ =gRam
	ldr r1, _080F626C  @ =0x00001152
	add r0, r5, r1
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #2
	strb r0, [r2]
	ldr r3, _080F6270  @ =0x00001142
	add r0, r5, r3
	add r3, r4, r0
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F6226
	mov r0, #0
	strb r0, [r3]
	mov r0, #16
	strb r0, [r2]
	add r0, r4, #0
	mov r1, #12
	bl sub_080C35FC
_080F6226:
	ldr r1, _080F6274  @ =0x00000996
	add r0, r5, r1
	ldrb r0, [r0]
	mov r2, #3
	and r2, r2, r0
	cmp r2, #0
	bne _080F624A
	ldr r3, _080F6278  @ =0x00001052
	add r0, r5, r3
	add r1, r4, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #5
	bne _080F624A
	strb r2, [r1]
_080F624A:
	ldr r0, _080F6268  @ =gRam
	ldr r2, _080F627C  @ =0x00000F92
	add r1, r0, r2
	add r1, r4, r1
	ldr r2, _080F6280  @ =gUnknown_081799B0
	ldr r3, _080F6278  @ =0x00001052
	add r0, r0, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r4,r5}
	pop {r0}
	bx r0
_080F6268:
	.4byte gRam
_080F626C:
	.4byte 0x00001152
_080F6270:
	.4byte 0x00001142
_080F6274:
	.4byte 0x00000996
_080F6278:
	.4byte 0x00001052
_080F627C:
	.4byte 0x00000F92
_080F6280:
	.4byte gUnknown_081799B0
	THUMB_FUNC_END sub_080F61E0

	THUMB_FUNC_START sub_080F6284
sub_080F6284: @ 0x080F6284
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r4, _080F62A4  @ =gRam
	ldr r1, _080F62A8  @ =0x00000F12
	add r4, r4, r1
	add r4, r0, r4
	mov r5, #0
	mov r1, #240
	strb r1, [r4]
	bl Sprite3_MoveVert
	strb r5, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
_080F62A4:
	.4byte gRam
_080F62A8:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080F6284

	THUMB_FUNC_START sub_080F62AC
sub_080F62AC: @ 0x080F62AC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080F630C  @ =gRam
	ldr r2, _080F6310  @ =0x00001610
	add r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080F62D6
	ldr r2, _080F6314  @ =0x00000F52
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F62D0
	mov r0, #4
	bl sub_080CF388
_080F62D0:
	add r0, r4, #0
	bl sub_080F631C
_080F62D6:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F6306
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F6306
	ldr r1, _080F6318  @ =gUnknown_081799A8
	ldr r0, _080F630C  @ =gRam
	ldr r2, _080F6314  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F6306:
	pop {r4}
	pop {r0}
	bx r0
_080F630C:
	.4byte gRam
_080F6310:
	.4byte 0x00001610
_080F6314:
	.4byte 0x00000F52
_080F6318:
	.4byte gUnknown_081799A8
	THUMB_FUNC_END sub_080F62AC

	THUMB_FUNC_START sub_080F631C
sub_080F631C: @ 0x080F631C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r4, r0, #0
	ldr r1, _080F635C  @ =gRam
	ldr r2, _080F6360  @ =0x00000F52
	add r0, r1, r2
	add r5, r4, r0
	ldrb r0, [r5]
	mov r2, #1
	cmp r0, #0
	beq _080F6336
	mov r2, #2
_080F6336:
	ldr r3, _080F6364  @ =0x00000F92
	add r0, r1, r3
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080F6368  @ =gUnknown_081799B8
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C9480
	ldrb r0, [r5]
	cmp r0, #0
	beq _080F6356
	add r0, r4, #0
	bl sub_080C6230
_080F6356:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F635C:
	.4byte gRam
_080F6360:
	.4byte 0x00000F52
_080F6364:
	.4byte 0x00000F92
_080F6368:
	.4byte gUnknown_081799B8
	THUMB_FUNC_END sub_080F631C

	THUMB_FUNC_START sub_080F636C
sub_080F636C: @ 0x080F636C
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r7, r5, #0
	ldr r4, _080F6444  @ =gRam
	ldr r1, _080F6448  @ =0x00001062
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F6384
	b _080F658C
_080F6384:
	mov r0, #4
	bl sub_080CF388
	add r0, r5, #0
	bl sub_080C6240
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r7, r0, #24
	cmp r7, #0
	beq _080F63A0
	b _080F65F0
_080F63A0:
	add r0, r5, #0
	bl sub_080C5044
	ldr r2, _080F644C  @ =0x00000F52
	add r0, r4, r2
	add r6, r5, r0
	ldrb r1, [r6]
	cmp r1, #0
	bne _080F63B4
	b _080F6560
_080F63B4:
	add r2, r2, #112
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	beq _080F63C6
	b _080F6504
_080F63C6:
	cmp r1, #1
	beq _080F6474
	ldr r1, _080F6450  @ =0x00000FD2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F63D8
	b _080F65F0
_080F63D8:
	ldr r2, _080F6454  @ =0x00000F22
	add r1, r4, r2
	add r1, r5, r1
	ldr r3, _080F6458  @ =gUnknown_081799E8
	ldr r0, _080F645C  @ =0x00000FB2
	add r2, r4, r0
	add r2, r5, r2
	ldrb r0, [r2]
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F6460  @ =0x00000F12
	add r1, r4, r0
	add r1, r5, r1
	ldr r3, _080F6464  @ =gUnknown_081799EC
	ldrb r0, [r2]
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r5, #0
	bl Sprite3_Move
	ldr r2, _080F6468  @ =0x00000EE2
	add r1, r4, r2
	add r1, r5, r1
	add r2, r2, #128
	add r0, r4, r2
	add r0, r5, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	beq _080F641A
	b _080F65F0
_080F641A:
	ldr r1, _080F646C  @ =0x00000ED2
	add r0, r4, r1
	add r0, r5, r0
	add r2, r2, #16
	add r1, r4, r2
	add r1, r5, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _080F6430
	b _080F65F0
_080F6430:
	ldr r1, _080F6470  @ =0x00000FA2
	add r0, r4, r1
	add r0, r5, r0
	strb r7, [r0]
	add r0, r5, #0
	mov r1, #2
	bl sub_080F6628
	b _080F65F0
	.byte 0x00
	.byte 0x00
_080F6444:
	.4byte gRam
_080F6448:
	.4byte 0x00001062
_080F644C:
	.4byte 0x00000F52
_080F6450:
	.4byte 0x00000FD2
_080F6454:
	.4byte 0x00000F22
_080F6458:
	.4byte gUnknown_081799E8
_080F645C:
	.4byte 0x00000FB2
_080F6460:
	.4byte 0x00000F12
_080F6464:
	.4byte gUnknown_081799EC
_080F6468:
	.4byte 0x00000EE2
_080F646C:
	.4byte 0x00000ED2
_080F6470:
	.4byte 0x00000FA2
_080F6474:
	ldr r2, _080F64E8  @ =0x00000FB2
	add r0, r4, r2
	add r0, r5, r0
	ldrb r1, [r0]
	sub r2, r2, #144
	add r0, r4, r2
	add r3, r5, r0
	ldr r0, _080F64EC  @ =gUnknown_081799F0
	add r0, r1, r0
	ldrb r2, [r3]
	ldrb r0, [r0]
	cmp r2, r0
	beq _080F6498
	ldr r0, _080F64F0  @ =gUnknown_081799F8
	add r0, r1, r0
	ldrb r0, [r0]
	add r0, r2, r0
	strb r0, [r3]
_080F6498:
	ldr r2, _080F64F4  @ =0x00000F12
	add r0, r4, r2
	add r3, r5, r0
	ldr r0, _080F64F8  @ =gUnknown_081799F4
	add r0, r1, r0
	ldrb r2, [r3]
	ldrb r0, [r0]
	cmp r2, r0
	beq _080F64B4
	ldr r0, _080F64FC  @ =gUnknown_081799FC
	add r0, r1, r0
	ldrb r0, [r0]
	add r0, r2, r0
	strb r0, [r3]
_080F64B4:
	add r0, r5, #0
	bl Sprite3_Move
	ldr r1, _080F6500  @ =0x00000FD2
	add r0, r4, r1
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080F64C8
	b _080F65F0
_080F64C8:
	add r0, r5, #0
	bl sub_080C1F70
	add r0, r5, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F64DC
	b _080F65F0
_080F64DC:
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	mov r0, #64
	strb r0, [r4]
	b _080F65F0
_080F64E8:
	.4byte 0x00000FB2
_080F64EC:
	.4byte gUnknown_081799F0
_080F64F0:
	.4byte gUnknown_081799F8
_080F64F4:
	.4byte 0x00000F12
_080F64F8:
	.4byte gUnknown_081799F4
_080F64FC:
	.4byte gUnknown_081799FC
_080F6500:
	.4byte 0x00000FD2
_080F6504:
	cmp r2, #1
	beq _080F6530
	lsr r1, r0, #25
	mov r0, #1
	and r1, r1, r0
	ldr r2, _080F6528  @ =0x00000F22
	add r4, r4, r2
	add r4, r5, r4
	ldr r0, _080F652C  @ =gUnknown_08179A00
	add r1, r1, r0
	ldrb r0, [r1]
	strb r0, [r4]
	add r0, r5, #0
	bl Sprite3_MoveHoriz
	strb r7, [r4]
	b _080F65F0
	.byte 0x00
	.byte 0x00
_080F6528:
	.4byte 0x00000F22
_080F652C:
	.4byte gUnknown_08179A00
_080F6530:
	ldr r0, _080F6554  @ =0x00000EE2
	add r1, r4, r0
	add r1, r5, r1
	ldr r2, _080F6558  @ =0x00000F62
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F655C  @ =0x00000ED2
	add r1, r4, r0
	add r1, r5, r1
	add r2, r2, #16
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	b _080F65F0
	.byte 0x00
	.byte 0x00
_080F6554:
	.4byte 0x00000EE2
_080F6558:
	.4byte 0x00000F62
_080F655C:
	.4byte 0x00000ED2
_080F6560:
	add r0, r5, #0
	mov r1, #0
	bl sub_080F6628
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	ldr r1, _080F6584  @ =0x00000FC2
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #64
	strb r1, [r0]
	ldr r2, _080F6588  @ =0x00000FD2
	add r0, r4, r2
	add r0, r5, r0
	mov r1, #105
	strb r1, [r0]
	b _080F65F0
_080F6584:
	.4byte 0x00000FC2
_080F6588:
	.4byte 0x00000FD2
_080F658C:
	add r0, r5, #0
	bl sub_080C6240
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F65F0
	add r0, r5, #0
	bl sub_080C5044
	add r0, r5, #0
	bl Sprite3_Move
	add r0, r5, #0
	bl sub_080C7A20
	ldr r1, _080F65F8  @ =0x00000FC2
	add r0, r4, r1
	add r6, r5, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080F65F0
	add r0, r5, #0
	bl sub_080C9898
	cmp r0, #0
	beq _080F65D6
	ldr r2, _080F65FC  @ =0x00001042
	add r0, r4, r2
	add r0, r5, r0
	ldrb r1, [r0]
	mov r0, #15
	and r0, r0, r1
	cmp r0, #0
	beq _080F65F0
_080F65D6:
	mov r0, #4
	strb r0, [r6]
	ldr r0, _080F6600  @ =0x00000F22
	add r1, r4, r0
	add r1, r7, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	add r0, r7, #0
	mov r1, #113
	bl sub_080CF0AC
_080F65F0:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F65F8:
	.4byte 0x00000FC2
_080F65FC:
	.4byte 0x00001042
_080F6600:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080F636C

	THUMB_FUNC_START sub_080F6604
sub_080F6604: @ 0x080F6604
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F6620  @ =gRam
	ldr r2, _080F6624  @ =0x00000F22
	add r1, r1, r2
	add r1, r0, r1
	mov r2, #32
	strb r2, [r1]
	bl sub_080F6284
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F6620:
	.4byte gRam
_080F6624:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080F6604

	THUMB_FUNC_START sub_080F6628
sub_080F6628: @ 0x080F6628
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r3, _080F667C  @ =gRam
	ldr r4, _080F6680  @ =0x00000EE2
	add r2, r3, r4
	add r2, r0, r2
	ldrb r4, [r2]
	mov r5, #150
	lsl r5, r5, #4
	add r2, r3, r5
	strb r4, [r2]
	ldr r4, _080F6684  @ =0x00000F02
	add r2, r3, r4
	add r2, r0, r2
	ldrb r4, [r2]
	add r5, r5, #1
	add r2, r3, r5
	strb r4, [r2]
	ldr r4, _080F6688  @ =0x00000ED2
	add r2, r3, r4
	add r2, r0, r2
	ldrb r4, [r2]
	add r5, r5, #3
	add r2, r3, r5
	strb r4, [r2]
	ldr r4, _080F668C  @ =0x00000EF2
	add r2, r3, r4
	add r0, r0, r2
	ldrb r0, [r0]
	add r5, r5, #1
	add r3, r3, r5
	strb r0, [r3]
	add r0, r1, #0
	bl sub_08079844
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F667C:
	.4byte gRam
_080F6680:
	.4byte 0x00000EE2
_080F6684:
	.4byte 0x00000F02
_080F6688:
	.4byte 0x00000ED2
_080F668C:
	.4byte 0x00000EF2
	THUMB_FUNC_END sub_080F6628

	THUMB_FUNC_START sub_080F6690
sub_080F6690: @ 0x080F6690
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C58F0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r5, r0, #24
	cmp r5, #0
	bne _080F6700
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C2C4C
	ldr r3, _080F6708  @ =gRam
	ldr r0, _080F670C  @ =0x00001152
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #2
	strb r0, [r1]
	ldr r1, _080F6710  @ =0x00001142
	add r0, r3, r1
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F6700
	strb r5, [r2]
	ldr r0, _080F6714  @ =0x00000F52
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F6718  @ =0x00000FC2
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #19
	strb r1, [r0]
	ldr r0, _080F671C  @ =0x00001012
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #41
	bl sub_080CF0AC
_080F6700:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F6708:
	.4byte gRam
_080F670C:
	.4byte 0x00001152
_080F6710:
	.4byte 0x00001142
_080F6714:
	.4byte 0x00000F52
_080F6718:
	.4byte 0x00000FC2
_080F671C:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080F6690

	THUMB_FUNC_START sub_080F6720
sub_080F6720: @ 0x080F6720
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080F686C  @ =gRam
	ldr r1, _080F6870  @ =0x00000FD2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	beq _080F674A
	ldr r2, _080F6874  @ =0x00000F92
	add r1, r5, r2
	add r1, r4, r1
	ldr r2, _080F6878  @ =gUnknown_08179A10
	ldr r3, _080F687C  @ =0x00000FB2
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080F674A:
	ldr r0, _080F6880  @ =0x00000D94
	add r1, r5, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #48
	orr r0, r0, r2
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080F6C5C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F6866
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F6866
	ldrb r0, [r6]
	cmp r0, #8
	bne _080F6782
	add r0, r4, #0
	bl sub_080F69C0
_080F6782:
	add r0, r4, #0
	bl sub_080C5044
	ldr r1, _080F6884  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	mov r2, #1
	add r0, r2, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080F67C8
	ldr r3, _080F6888  @ =0x000010A2
	add r0, r5, r3
	add r3, r4, r0
	ldrb r0, [r3]
	and r2, r2, r0
	ldr r0, _080F688C  @ =0x00001152
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080F6890  @ =gUnknown_08179A0C
	add r0, r2, r0
	ldrb r0, [r0]
	ldrb r5, [r1]
	add r0, r0, r5
	strb r0, [r1]
	ldr r1, _080F6894  @ =gUnknown_08179A0E
	add r2, r2, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r2, [r2]
	cmp r0, r2
	bne _080F67C8
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
_080F67C8:
	add r0, r4, #0
	bl sub_080C2C4C
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r5, _080F686C  @ =gRam
	ldr r1, _080F6898  @ =0x0000097C
	add r0, r5, r1
	ldrb r0, [r0]
	add r0, r0, #40
	cmp r0, #79
	bgt _080F684E
	ldr r2, _080F689C  @ =0x0000097D
	add r0, r5, r2
	ldrb r0, [r0]
	add r0, r0, #40
	cmp r0, #79
	bgt _080F684E
	ldr r3, _080F68A0  @ =0x000016F6
	add r0, r5, r3
	ldrb r0, [r0]
	cmp r0, #128
	beq _080F684E
	mov r1, #1
	ldr r2, _080F68A4  @ =0x00001804
	add r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F680E
	sub r3, r3, #12
	add r0, r5, r3
	ldrb r0, [r0]
	sub r0, r0, #9
	lsr r1, r0, #31
_080F680E:
	cmp r1, #0
	beq _080F684E
	add r0, r4, #0
	mov r1, #48
	bl sub_080C2CB4
	ldr r0, _080F68A8  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080F68AC  @ =0x00000961
	add r0, r5, r2
	ldrb r0, [r0]
	neg r0, r0
	strb r0, [r1]
	ldr r3, _080F68B0  @ =0x00000F12
	add r1, r5, r3
	add r1, r4, r1
	sub r2, r2, #1
	add r0, r5, r2
	ldrb r0, [r0]
	neg r0, r0
	strb r0, [r1]
	add r3, r3, #176
	add r0, r5, r3
	add r0, r4, r0
	mov r1, #8
	strb r1, [r0]
	ldr r1, _080F68B4  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
_080F684E:
	ldr r1, _080F68B8  @ =gUnknown_08179A14
	ldr r0, _080F686C  @ =gRam
	ldr r2, _080F68B4  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F6866:
	pop {r4-r6}
	pop {r0}
	bx r0
_080F686C:
	.4byte gRam
_080F6870:
	.4byte 0x00000FD2
_080F6874:
	.4byte 0x00000F92
_080F6878:
	.4byte gUnknown_08179A10
_080F687C:
	.4byte 0x00000FB2
_080F6880:
	.4byte 0x00000D94
_080F6884:
	.4byte 0x00000996
_080F6888:
	.4byte 0x000010A2
_080F688C:
	.4byte 0x00001152
_080F6890:
	.4byte gUnknown_08179A0C
_080F6894:
	.4byte gUnknown_08179A0E
_080F6898:
	.4byte 0x0000097C
_080F689C:
	.4byte 0x0000097D
_080F68A0:
	.4byte 0x000016F6
_080F68A4:
	.4byte 0x00001804
_080F68A8:
	.4byte 0x00000F22
_080F68AC:
	.4byte 0x00000961
_080F68B0:
	.4byte 0x00000F12
_080F68B4:
	.4byte 0x00000F52
_080F68B8:
	.4byte gUnknown_08179A14
	THUMB_FUNC_END sub_080F6720

	THUMB_FUNC_START sub_080F68BC
sub_080F68BC: @ 0x080F68BC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080F68D8  @ =gRam
	ldr r1, _080F68DC  @ =0x00000FC2
	add r0, r2, r1
	add r5, r4, r0
	ldrb r3, [r5]
	cmp r3, #0
	beq _080F68E0
	add r0, r4, #0
	bl sub_080F6974
	b _080F6956
_080F68D8:
	.4byte gRam
_080F68DC:
	.4byte 0x00000FC2
_080F68E0:
	ldr r0, _080F6914  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F6918  @ =0x00000F72
	add r0, r2, r1
	add r1, r4, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #3
	beq _080F691C
	bl GetRandomInt
	mov r3, #31
	and r3, r3, r0
	mov r0, #32
	orr r3, r3, r0
	strb r3, [r5]
	mov r0, #7
	and r3, r3, r0
	b _080F6932
_080F6914:
	.4byte 0x00000F52
_080F6918:
	.4byte 0x00000F72
_080F691C:
	strb r3, [r1]
	mov r0, #48
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F695C  @ =gUnknown_08179A30
	add r0, r0, r1
	ldrb r3, [r0]
_080F6932:
	ldr r2, _080F6960  @ =gRam
	ldr r0, _080F6964  @ =0x00000F22
	add r1, r2, r0
	add r1, r4, r1
	ldr r0, _080F6968  @ =gUnknown_08179A20
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080F696C  @ =0x00000F12
	add r2, r2, r1
	add r2, r4, r2
	ldr r0, _080F6970  @ =gUnknown_08179A28
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080F6974
_080F6956:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F695C:
	.4byte gUnknown_08179A30
_080F6960:
	.4byte gRam
_080F6964:
	.4byte 0x00000F22
_080F6968:
	.4byte gUnknown_08179A20
_080F696C:
	.4byte 0x00000F12
_080F6970:
	.4byte gUnknown_08179A28
	THUMB_FUNC_END sub_080F68BC

	THUMB_FUNC_START sub_080F6974
sub_080F6974: @ 0x080F6974
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r1, _080F69B4  @ =gRam
	ldr r3, _080F69B8  @ =0x00000FB2
	add r2, r1, r3
	add r2, r4, r2
	strb r0, [r2]
	ldr r0, _080F69BC  @ =0x00000F92
	add r3, r1, r0
	add r3, r4, r3
	add r0, r0, #192
	add r1, r1, r0
	add r4, r4, r1
	ldrb r1, [r4]
	add r1, r1, #1
	strb r1, [r4]
	lsl r1, r1, #24
	lsr r1, r1, #27
	mov r0, #1
	and r1, r1, r0
	ldrb r0, [r2]
	lsl r0, r0, #1
	orr r1, r1, r0
	strb r1, [r3]
	pop {r4}
	pop {r0}
	bx r0
_080F69B4:
	.4byte gRam
_080F69B8:
	.4byte 0x00000FB2
_080F69BC:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080F6974

	THUMB_FUNC_START sub_080F69C0
sub_080F69C0: @ 0x080F69C0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r0, #168
	add r1, r4, #0
	bl sub_080CA538
	add r6, r0, #0
	cmp r6, #0
	blt _080F6A8C
	add r0, r4, #0
	mov r1, #108
	bl sub_080CF0AC
	ldr r2, _080F6A94  @ =gRam
	ldr r1, _080F6A98  @ =0x00001142
	add r0, r2, r1
	add r0, r6, r0
	ldr r3, _080F6A9C  @ =0x00000968
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r4, _080F6AA0  @ =0x00000FB2
	add r0, r2, r4
	add r0, r6, r0
	ldrb r5, [r0]
	mov r0, #150
	lsl r0, r0, #4
	add r4, r2, r0
	ldr r0, _080F6AA4  @ =gUnknown_08179A34
	lsl r3, r5, #1
	add r0, r3, r0
	ldrh r1, [r0]
	ldrh r4, [r4]
	add r1, r1, r4
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r4, _080F6AA8  @ =0x00000EE2
	add r0, r2, r4
	add r0, r6, r0
	strb r1, [r0]
	add r4, r4, #32
	add r0, r2, r4
	add r0, r6, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080F6AAC  @ =0x00000964
	add r4, r2, r0
	ldr r0, _080F6AB0  @ =gUnknown_08179A3C
	add r3, r3, r0
	ldrh r1, [r3]
	ldrh r4, [r4]
	add r1, r1, r4
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r3, _080F6AB4  @ =0x00000ED2
	add r0, r2, r3
	add r0, r6, r0
	strb r1, [r0]
	ldr r4, _080F6AB8  @ =0x00000EF2
	add r0, r2, r4
	add r0, r6, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080F6ABC  @ =0x00000F22
	add r1, r2, r0
	add r1, r6, r1
	ldr r0, _080F6AC0  @ =gUnknown_0822A938
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r3, r3, #64
	add r1, r2, r3
	add r1, r6, r1
	ldr r0, _080F6AC4  @ =gUnknown_0822A93A
	add r5, r5, r0
	ldrb r0, [r5]
	strb r0, [r1]
	add r4, r4, #112
	add r0, r2, r4
	add r0, r6, r0
	mov r1, #1
	strb r1, [r0]
	ldr r3, _080F6AC8  @ =0x00001172
	add r0, r2, r3
	add r0, r6, r0
	strb r1, [r0]
	ldr r4, _080F6ACC  @ =0x00001132
	add r0, r2, r4
	add r0, r6, r0
	mov r1, #9
	strb r1, [r0]
	ldr r1, _080F6AD0  @ =0x00001032
	add r0, r2, r1
	add r0, r6, r0
	mov r1, #51
	strb r1, [r0]
	sub r3, r3, #80
	add r2, r2, r3
	add r2, r6, r2
	mov r0, #3
	strb r0, [r2]
_080F6A8C:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F6A94:
	.4byte gRam
_080F6A98:
	.4byte 0x00001142
_080F6A9C:
	.4byte 0x00000968
_080F6AA0:
	.4byte 0x00000FB2
_080F6AA4:
	.4byte gUnknown_08179A34
_080F6AA8:
	.4byte 0x00000EE2
_080F6AAC:
	.4byte 0x00000964
_080F6AB0:
	.4byte gUnknown_08179A3C
_080F6AB4:
	.4byte 0x00000ED2
_080F6AB8:
	.4byte 0x00000EF2
_080F6ABC:
	.4byte 0x00000F22
_080F6AC0:
	.4byte gUnknown_0822A938
_080F6AC4:
	.4byte gUnknown_0822A93A
_080F6AC8:
	.4byte 0x00001172
_080F6ACC:
	.4byte 0x00001132
_080F6AD0:
	.4byte 0x00001032
	THUMB_FUNC_END sub_080F69C0

	THUMB_FUNC_START sub_080F6AD4
sub_080F6AD4: @ 0x080F6AD4
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080F6AF0  @ =gRam
	ldr r2, _080F6AF4  @ =0x00001142
	add r1, r1, r2
	add r1, r0, r1
	mov r2, #16
	strb r2, [r1]
	bl sub_080C3774
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F6AF0:
	.4byte gRam
_080F6AF4:
	.4byte 0x00001142
	THUMB_FUNC_END sub_080F6AD4

	THUMB_FUNC_START sub_080F6AF8
sub_080F6AF8: @ 0x080F6AF8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080F6B20  @ =gRam
	ldr r1, _080F6B24  @ =0x00000D94
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #48
	strb r1, [r0]
	ldr r4, _080F6B28  @ =0x00000F62
	add r0, r3, r4
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F6B2C
	add r0, r2, #0
	bl sub_080F6720
	b _080F6B42
	.byte 0x00
	.byte 0x00
_080F6B20:
	.4byte gRam
_080F6B24:
	.4byte 0x00000D94
_080F6B28:
	.4byte 0x00000F62
_080F6B2C:
	ldr r1, _080F6B48  @ =gUnknown_08179A04
	ldr r4, _080F6B4C  @ =0x00000F52
	add r0, r3, r4
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r2, #0
	bl _call_via_r1
_080F6B42:
	pop {r4}
	pop {r0}
	bx r0
_080F6B48:
	.4byte gUnknown_08179A04
_080F6B4C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F6AF8

	THUMB_FUNC_START sub_080F6B50
sub_080F6B50: @ 0x080F6B50
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080F6C94
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F6B8C
	ldr r2, _080F6B94  @ =gRam
	ldr r1, _080F6B98  @ =0x00000996
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080F6B86
	ldr r0, _080F6B9C  @ =0x00000FC2
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F6B86:
	add r0, r5, #0
	bl sub_080C4F98
_080F6B8C:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F6B94:
	.4byte gRam
_080F6B98:
	.4byte 0x00000996
_080F6B9C:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080F6B50

	THUMB_FUNC_START sub_080F6BA0
sub_080F6BA0: @ 0x080F6BA0
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r3, r1, #0
	ldr r5, _080F6BC0  @ =gRam
	ldr r2, _080F6BC4  @ =0x00000FC2
	add r0, r5, r2
	add r4, r1, r0
	ldrb r2, [r4]
	cmp r2, #0
	beq _080F6BC8
	add r0, r1, #0
	bl sub_080F6C40
	b _080F6BEA
	.byte 0x00
	.byte 0x00
_080F6BC0:
	.4byte gRam
_080F6BC4:
	.4byte 0x00000FC2
_080F6BC8:
	ldr r1, _080F6BF0  @ =0x00000F52
	add r0, r5, r1
	add r0, r3, r0
	strb r2, [r0]
	mov r0, #10
	strb r0, [r4]
	ldr r2, _080F6BF4  @ =0x00000FF2
	add r0, r5, r2
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #168
	bne _080F6BEA
	add r1, r1, #128
	add r0, r5, r1
	add r0, r3, r0
	mov r1, #16
	strb r1, [r0]
_080F6BEA:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F6BF0:
	.4byte 0x00000F52
_080F6BF4:
	.4byte 0x00000FF2
	THUMB_FUNC_END sub_080F6BA0

	THUMB_FUNC_START sub_080F6BF8
sub_080F6BF8: @ 0x080F6BF8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r1, _080F6C30  @ =gRam
	ldr r3, _080F6C34  @ =0x00000FC2
	add r0, r1, r3
	add r0, r2, r0
	ldrb r3, [r0]
	cmp r3, #0
	bne _080F6C16
	ldr r5, _080F6C38  @ =0x00000F52
	add r0, r1, r5
	add r0, r2, r0
	strb r3, [r0]
_080F6C16:
	ldr r0, _080F6C3C  @ =0x00001052
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #2
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080F6C40
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F6C30:
	.4byte gRam
_080F6C34:
	.4byte 0x00000FC2
_080F6C38:
	.4byte 0x00000F52
_080F6C3C:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080F6BF8

	THUMB_FUNC_START sub_080F6C40
sub_080F6C40: @ 0x080F6C40
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080F6974
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F6C40

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F6C5C
sub_080F6C5C: @ 0x080F6C5C
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080F6C88  @ =gRam
	ldr r1, _080F6C8C  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080F6C90  @ =gUnknown_08179A44
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #2
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
_080F6C88:
	.4byte gRam
_080F6C8C:
	.4byte 0x00000F92
_080F6C90:
	.4byte gUnknown_08179A44
	THUMB_FUNC_END sub_080F6C5C

	THUMB_FUNC_START sub_080F6C94
sub_080F6C94: @ 0x080F6C94
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r5, r1, #0
	ldr r4, _080F6CD0  @ =gRam
	ldr r2, _080F6CD4  @ =0x00000FC2
	add r0, r4, r2
	add r3, r1, r0
	ldrb r2, [r3]
	cmp r2, #0
	bne _080F6CB2
	ldr r6, _080F6CD8  @ =0x00000FA2
	add r0, r4, r6
	add r0, r1, r0
	strb r2, [r0]
_080F6CB2:
	ldrb r0, [r3]
	lsr r0, r0, #2
	lsl r1, r0, #1
	add r1, r1, r0
	lsl r1, r1, #3
	ldr r0, _080F6CDC  @ =gUnknown_08179AF4
	add r1, r1, r0
	add r0, r5, #0
	mov r2, #3
	bl sub_080C9480
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F6CD0:
	.4byte gRam
_080F6CD4:
	.4byte 0x00000FC2
_080F6CD8:
	.4byte 0x00000FA2
_080F6CDC:
	.4byte gUnknown_08179AF4
	THUMB_FUNC_END sub_080F6C94

	THUMB_FUNC_START sub_080F6CE0
sub_080F6CE0: @ 0x080F6CE0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r6, r2, #0
	ldr r5, _080F6D10  @ =gRam
	ldr r1, _080F6D14  @ =0x00000FC2
	add r0, r5, r1
	add r4, r2, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080F6D18
	sub r1, r1, #112
	add r0, r5, r1
	add r0, r2, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #80
	strb r0, [r4]
	add r0, r2, #0
	bl Sprite_LoadPalette
	b _080F6D2E
	.byte 0x00
	.byte 0x00
_080F6D10:
	.4byte gRam
_080F6D14:
	.4byte 0x00000FC2
_080F6D18:
	cmp r0, #15
	bne _080F6D22
	add r0, r2, #0
	bl sub_080F6D94
_080F6D22:
	ldr r0, _080F6D34  @ =0x000010C2
	add r1, r5, r0
	add r1, r6, r1
	ldrb r0, [r4]
	add r0, r0, #20
	strb r0, [r1]
_080F6D2E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080F6D34:
	.4byte 0x000010C2
	THUMB_FUNC_END sub_080F6CE0

	THUMB_FUNC_START sub_080F6D38
sub_080F6D38: @ 0x080F6D38
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r6, r2, #0
	ldr r5, _080F6D84  @ =gRam
	ldr r1, _080F6D88  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	add r0, r2, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080F6D6E
	ldr r3, _080F6D8C  @ =0x00000FB2
	add r4, r5, r3
	add r4, r2, r4
	ldrb r1, [r4]
	ldr r3, _080F6D90  @ =0x0000097D
	add r0, r5, r3
	strb r1, [r0]
	add r0, r2, #0
	bl sub_080E210C
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
_080F6D6E:
	ldr r1, _080F6D8C  @ =0x00000FB2
	add r0, r5, r1
	add r0, r6, r0
	ldrb r2, [r0]
	mov r1, #63
	and r1, r1, r2
	strb r1, [r0]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F6D84:
	.4byte gRam
_080F6D88:
	.4byte 0x00000996
_080F6D8C:
	.4byte 0x00000FB2
_080F6D90:
	.4byte 0x0000097D
	THUMB_FUNC_END sub_080F6D38

	THUMB_FUNC_START sub_080F6D94
sub_080F6D94: @ 0x080F6D94
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080F6EC8  @ =gRam
	ldr r0, _080F6ECC  @ =0x00000DA6
	add r0, r0, r6
	mov r8, r0
	ldrb r0, [r0]
	cmp r0, #3
	bls _080F6DB2
	b _080F6EBA
_080F6DB2:
	mov r0, #97
	add r1, r4, #0
	bl sub_080CA538
	add r7, r0, #0
	cmp r7, #0
	blt _080F6EBA
	add r0, r4, #0
	mov r1, #89
	bl sub_080CF140
	mov r2, #150
	lsl r2, r2, #4
	add r1, r6, r2
	ldr r4, _080F6ED0  @ =0x000015E8
	add r0, r6, r4
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	mov r2, #0
	ldrsh r1, [r1, r2]
	add r1, r1, r0
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r4, _080F6ED4  @ =0x00000964
	add r3, r6, r4
	ldr r2, _080F6ED8  @ =0x000015E9
	add r0, r6, r2
	mov r2, #0
	ldrsb r2, [r0, r2]
	mov r4, #0
	ldrsh r0, [r3, r4]
	add r0, r0, r2
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r2, _080F6EDC  @ =0x00000EE2
	add r3, r6, r2
	add r3, r7, r3
	strb r1, [r3]
	ldr r4, _080F6EE0  @ =gUnknown_03003132
	add r4, r4, r7
	mov r9, r4
	lsr r1, r1, #8
	strb r1, [r4]
	ldr r1, _080F6EE4  @ =0x00000ED2
	add r5, r6, r1
	add r5, r7, r5
	strb r0, [r5]
	add r2, r2, #16
	add r4, r6, r2
	add r4, r7, r4
	lsr r0, r0, #8
	strb r0, [r4]
	lsl r0, r7, #24
	lsr r0, r0, #24
	mov r1, #32
	str r3, [sp]
	bl sub_080C35FC
	ldr r1, _080F6EE8  @ =0x00001012
	add r0, r6, r1
	add r0, r7, r0
	mov r1, #63
	strb r1, [r0]
	ldr r2, _080F6EEC  @ =0x00001132
	add r0, r6, r2
	add r0, r7, r0
	mov r1, #84
	strb r1, [r0]
	ldr r1, _080F6EF0  @ =0x00000F82
	add r0, r6, r1
	add r0, r7, r0
	mov r1, #1
	strb r1, [r0]
	ldr r2, _080F6EF4  @ =0x00000E75
	add r0, r6, r2
	add r0, r7, r0
	mov r1, #72
	strb r1, [r0]
	ldr r1, _080F6EF8  @ =0x00001122
	add r0, r6, r1
	add r0, r7, r0
	mov r1, #3
	strb r1, [r0]
	add r2, r2, #48
	add r0, r6, r2
	add r0, r7, r0
	mov r1, #4
	strb r1, [r0]
	ldr r1, _080F6EFC  @ =0x00000FD2
	add r0, r6, r1
	add r0, r7, r0
	mov r1, #12
	strb r1, [r0]
	add r2, r2, #237
	add r1, r6, r2
	add r1, r7, r1
	mov r2, r8
	ldrb r0, [r2]
	strb r0, [r1]
	ldrb r0, [r2]
	add r0, r0, #1
	strb r0, [r2]
	ldr r2, _080F6F00  @ =gUnknown_08179B8C
	ldrb r0, [r1]
	add r0, r0, r2
	ldrb r2, [r0]
	mov r7, #31
	ldr r3, [sp]
	mov r6, r9
_080F6E8E:
	ldr r0, _080F6F04  @ =gUnknown_0200EE18
	add r1, r2, r0
	ldrb r0, [r3]
	strb r0, [r1]
	ldr r0, _080F6F08  @ =gUnknown_0200EE98
	add r1, r2, r0
	ldrb r0, [r6]
	strb r0, [r1]
	ldr r0, _080F6F0C  @ =gUnknown_0200EF18
	add r1, r2, r0
	ldrb r0, [r5]
	strb r0, [r1]
	ldr r0, _080F6F10  @ =gUnknown_0200EF98
	add r1, r2, r0
	ldrb r0, [r4]
	strb r0, [r1]
	sub r7, r7, #1
	add r0, r2, #1
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r7, #0
	bge _080F6E8E
_080F6EBA:
	add sp, sp, #4
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080F6EC8:
	.4byte gRam
_080F6ECC:
	.4byte 0x00000DA6
_080F6ED0:
	.4byte 0x000015E8
_080F6ED4:
	.4byte 0x00000964
_080F6ED8:
	.4byte 0x000015E9
_080F6EDC:
	.4byte 0x00000EE2
_080F6EE0:
	.4byte gUnknown_03003132
_080F6EE4:
	.4byte 0x00000ED2
_080F6EE8:
	.4byte 0x00001012
_080F6EEC:
	.4byte 0x00001132
_080F6EF0:
	.4byte 0x00000F82
_080F6EF4:
	.4byte 0x00000E75
_080F6EF8:
	.4byte 0x00001122
_080F6EFC:
	.4byte 0x00000FD2
_080F6F00:
	.4byte gUnknown_08179B8C
_080F6F04:
	.4byte gUnknown_0200EE18
_080F6F08:
	.4byte gUnknown_0200EE98
_080F6F0C:
	.4byte gUnknown_0200EF18
_080F6F10:
	.4byte gUnknown_0200EF98
	THUMB_FUNC_END sub_080F6D94

	THUMB_FUNC_START sub_080F6F14
sub_080F6F14: @ 0x080F6F14
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #8]
	mov r0, #0
	mov r8, r0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	ldr r2, [sp, #8]
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F6FC0
	ldr r0, _080F6F54  @ =gRam
	ldr r1, _080F6F58  @ =0x00000FB2
	add r0, r0, r1
	ldr r3, [sp, #8]
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #31
	bls _080F6F5C
	mov r0, #12
	bl sub_080CF3A0
	b _080F6F66
_080F6F54:
	.4byte gRam
_080F6F58:
	.4byte 0x00000FB2
_080F6F5C:
	mov r0, #12
	bl sub_080CF388
	mov r7, #1
	mov r8, r7
_080F6F66:
	mov r4, #1
	ldr r6, _080F6FD0  @ =gRam
	ldr r0, _080F6FD4  @ =0x00000969
	add r0, r0, r6
	mov r10, r0
	ldr r1, _080F6FD8  @ =0x00000964
	add r1, r1, r6
	mov r9, r1
_080F6F76:
	ldr r1, _080F6FDC  @ =gUnknown_08179B90
	lsl r0, r4, #1
	add r0, r0, r1
	ldrh r2, [r0]
	mov r3, r9
	ldrh r3, [r3]
	add r2, r2, r3
	ldr r0, _080F6FE0  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r8
	sub r5, r4, #1
	sub r0, r0, r5
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r7, #150
	lsl r7, r7, #4
	add r1, r6, r7
	ldrh r1, [r1]
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080F6FE4  @ =gUnknown_08179B94
	add r3, r4, r3
	ldrb r3, [r3]
	mov r7, r10
	ldrb r4, [r7]
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	add r4, r5, #0
	cmp r4, #0
	bge _080F6F76
	ldr r0, [sp, #8]
	bl sub_080F6FE8
_080F6FC0:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080F6FD0:
	.4byte gRam
_080F6FD4:
	.4byte 0x00000969
_080F6FD8:
	.4byte 0x00000964
_080F6FDC:
	.4byte gUnknown_08179B90
_080F6FE0:
	.4byte gUnknown_03003E74
_080F6FE4:
	.4byte gUnknown_08179B94
	THUMB_FUNC_END sub_080F6F14

	THUMB_FUNC_START sub_080F6FE8
sub_080F6FE8: @ 0x080F6FE8
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r10, r0
	ldr r5, _080F70C4  @ =gRam
	ldr r1, _080F70C8  @ =0x00000FB2
	add r0, r5, r1
	mov r2, r10
	add r1, r2, r0
	ldrb r0, [r1]
	mov r7, #0
	cmp r0, #31
	bls _080F700E
	mov r7, #2
_080F700E:
	ldr r3, _080F70CC  @ =0x0000097C
	add r0, r5, r3
	mov r4, #0
	mov r9, r4
	strb r7, [r0]
	ldr r2, _080F70D0  @ =0x0000097D
	add r0, r5, r2
	mov r3, r9
	strb r3, [r0]
	ldrb r0, [r1]
	lsr r0, r0, #1
	ldr r4, _080F70D4  @ =0x0000096C
	add r1, r5, r4
	strb r0, [r1]
	ldrb r6, [r1]
	ldr r0, _080F70D8  @ =gUnknown_08179B96
	add r0, r6, r0
	ldrb r0, [r0]
	sub r0, r0, #3
	ldr r2, _080F70DC  @ =0x000015E8
	add r1, r5, r2
	strb r0, [r1]
	ldr r0, _080F70E0  @ =gUnknown_08179BB6
	add r0, r6, r0
	ldrb r0, [r0]
	sub r0, r0, #18
	ldr r3, _080F70E4  @ =0x000015E9
	add r4, r5, r3
	strb r0, [r4]
	ldr r0, _080F70E8  @ =gUnknown_03003E74
	mov r8, r0
	ldrh r0, [r0]
	add r0, r0, r7
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r3, #150
	lsl r3, r3, #4
	add r2, r5, r3
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080F70EC  @ =0x00000964
	add r3, r5, r2
	mov r2, #0
	ldrsb r2, [r4, r2]
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080F70F0  @ =gUnknown_08179BD6
	add r3, r6, r3
	ldrb r3, [r3]
	ldr r4, _080F70F4  @ =0x00000969
	add r5, r5, r4
	ldrb r5, [r5]
	mov r4, #49
	and r4, r4, r5
	ldr r5, _080F70F8  @ =gUnknown_08179BF6
	add r6, r6, r5
	ldrb r5, [r6]
	orr r4, r4, r5
	mov r5, #10
	orr r4, r4, r5
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r4, r9
	str r4, [sp]
	bl sub_080C6004
	mov r1, r8
	ldrh r0, [r1]
	add r0, r0, r7
	strh r0, [r1]
	mov r0, r10
	mov r1, #0
	mov r2, #0
	bl sub_080C6350
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F70C4:
	.4byte gRam
_080F70C8:
	.4byte 0x00000FB2
_080F70CC:
	.4byte 0x0000097C
_080F70D0:
	.4byte 0x0000097D
_080F70D4:
	.4byte 0x0000096C
_080F70D8:
	.4byte gUnknown_08179B96
_080F70DC:
	.4byte 0x000015E8
_080F70E0:
	.4byte gUnknown_08179BB6
_080F70E4:
	.4byte 0x000015E9
_080F70E8:
	.4byte gUnknown_03003E74
_080F70EC:
	.4byte 0x00000964
_080F70F0:
	.4byte gUnknown_08179BD6
_080F70F4:
	.4byte 0x00000969
_080F70F8:
	.4byte gUnknown_08179BF6
	THUMB_FUNC_END sub_080F6FE8

	THUMB_FUNC_START sub_080F70FC
sub_080F70FC: @ 0x080F70FC
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080F7134  @ =gRam
	ldr r1, _080F7138  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F711C
	b _080F7226
_080F711C:
	add r0, r4, #0
	bl sub_080F72E0
	ldr r2, _080F713C  @ =0x00000FA2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F7144
	ldr r3, _080F7140  @ =0x00000DA6
	add r1, r5, r3
	b _080F7220
_080F7134:
	.4byte gRam
_080F7138:
	.4byte 0x00000FD2
_080F713C:
	.4byte 0x00000FA2
_080F7140:
	.4byte 0x00000DA6
_080F7144:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F7226
	mov r7, #3
	str r7, [sp, #4]
	ldr r1, _080F71E4  @ =0x00001052
	add r0, r5, r1
	add r6, r4, r0
	ldr r2, _080F71E8  @ =0x00000EF2
	add r0, r5, r2
	add r0, r0, r4
	mov r9, r0
	ldr r3, _080F71EC  @ =gUnknown_08179B8C
	mov r10, r3
	ldr r7, _080F71F0  @ =0x00000F92
	add r0, r5, r7
	add r0, r0, r4
	mov r8, r0
_080F716E:
	ldrb r2, [r6]
	mov r1, #31
	mov r3, r8
	ldrb r0, [r3]
	add r0, r0, r10
	and r1, r1, r2
	ldrb r0, [r0]
	add r1, r1, r0
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r7, _080F71F4  @ =gUnknown_0200EE18
	add r2, r1, r7
	ldr r0, _080F71F8  @ =0x00000EE2
	add r3, r5, r0
	add r0, r4, r3
	ldrb r0, [r0]
	strb r0, [r2]
	add r7, r7, #128
	add r2, r1, r7
	ldr r7, _080F71FC  @ =0x00000F02
	add r0, r5, r7
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, _080F7200  @ =gUnknown_0200EF18
	add r2, r1, r0
	sub r7, r7, #48
	add r0, r5, r7
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, _080F7204  @ =gUnknown_0200EF98
	add r1, r1, r0
	mov r2, r9
	ldrb r0, [r2]
	strb r0, [r1]
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	add r0, r4, #0
	str r3, [sp]
	bl Sprite3_Move
	ldr r7, [sp, #4]
	sub r7, r7, #1
	str r7, [sp, #4]
	ldr r3, [sp]
	cmp r7, #0
	bge _080F716E
	ldr r1, _080F7208  @ =0x00000FC2
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080F720C
	add r0, r4, #0
	bl sub_080F723C
	b _080F7226
_080F71E4:
	.4byte 0x00001052
_080F71E8:
	.4byte 0x00000EF2
_080F71EC:
	.4byte gUnknown_08179B8C
_080F71F0:
	.4byte 0x00000F92
_080F71F4:
	.4byte gUnknown_0200EE18
_080F71F8:
	.4byte 0x00000EE2
_080F71FC:
	.4byte 0x00000F02
_080F7200:
	.4byte gUnknown_0200EF18
_080F7204:
	.4byte gUnknown_0200EF98
_080F7208:
	.4byte 0x00000FC2
_080F720C:
	ldrb r0, [r1]
	cmp r0, #1
	bne _080F7226
	add r0, r3, #0
	add r0, r0, #192
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	ldr r2, _080F7238  @ =0xFFFFFEC4
	add r1, r3, r2
_080F7220:
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
_080F7226:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F7238:
	.4byte 0xFFFFFEC4
	THUMB_FUNC_END sub_080F70FC

	THUMB_FUNC_START sub_080F723C
sub_080F723C: @ 0x080F723C
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F7260
	add r0, r4, #0
	bl sub_080C79F8
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F72BC
_080F7260:
	add r0, r4, #0
	mov r1, #44
	bl sub_080CF140
	ldr r5, _080F72C8  @ =gRam
	ldr r0, _080F72CC  @ =0x00000FC2
	add r7, r5, r0
	add r0, r4, r7
	mov r6, #16
	strb r6, [r0]
	add r0, r4, #0
	bl sub_080E2614
	mov r0, #97
	add r1, r4, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080F72B2
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	add r0, r4, r7
	strb r6, [r0]
	ldr r1, _080F72D0  @ =0x00001012
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
	ldr r1, _080F72D4  @ =0x00000F82
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080F72D8  @ =0x00001032
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
_080F72B2:
	ldr r1, _080F72DC  @ =0x00000EF2
	add r0, r5, r1
	add r0, r0, r8
	mov r1, #128
	strb r1, [r0]
_080F72BC:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F72C8:
	.4byte gRam
_080F72CC:
	.4byte 0x00000FC2
_080F72D0:
	.4byte 0x00001012
_080F72D4:
	.4byte 0x00000F82
_080F72D8:
	.4byte 0x00001032
_080F72DC:
	.4byte 0x00000EF2
	THUMB_FUNC_END sub_080F723C

	THUMB_FUNC_START sub_080F72E0
sub_080F72E0: @ 0x080F72E0
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F73A8
	mov r7, #31
	ldr r1, _080F73B8  @ =gUnknown_08179B8C
	ldr r2, _080F73BC  @ =gRam
	ldr r3, _080F73C0  @ =0x00000F92
	add r0, r2, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r0, [r0]
	add r0, r0, #31
	lsl r0, r0, #24
	lsr r5, r0, #24
	add r6, r2, #0
	mov r4, #150
	lsl r4, r4, #4
	add r4, r4, r6
	mov r9, r4
	ldr r0, _080F73C4  @ =0x00000964
	add r0, r0, r6
	mov r8, r0
	ldr r1, _080F73C8  @ =0x00000969
	add r1, r1, r6
	mov r10, r1
_080F7330:
	ldr r2, _080F73CC  @ =gUnknown_0200EE18
	add r0, r5, r2
	ldrb r0, [r0]
	mov r3, r9
	strb r0, [r3]
	ldr r4, _080F73D0  @ =gUnknown_0200EE98
	add r0, r5, r4
	ldrb r1, [r0]
	ldr r2, _080F73D4  @ =0x00000961
	add r0, r6, r2
	strb r1, [r0]
	ldr r3, _080F73D8  @ =gUnknown_0200EF18
	add r0, r5, r3
	ldrb r0, [r0]
	mov r4, r8
	strb r0, [r4]
	ldr r1, _080F73DC  @ =gUnknown_0200EF98
	add r0, r5, r1
	ldrb r1, [r0]
	add r2, r2, #4
	add r0, r6, r2
	strb r1, [r0]
	ldr r0, _080F73E0  @ =gUnknown_03003E74
	add r1, r7, #0
	sub r1, r1, #31
	ldrh r0, [r0]
	sub r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r3, _080F73E4  @ =0x00000952
	add r2, r6, r3
	mov r4, r9
	ldrh r1, [r4]
	ldrh r2, [r2]
	sub r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080F73E8  @ =0x00000958
	add r3, r6, r2
	mov r4, r8
	ldrh r2, [r4]
	ldrh r3, [r3]
	sub r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	mov r4, r10
	ldrb r3, [r4]
	lsl r3, r3, #8
	mov r4, #60
	orr r3, r3, r4
	mov r4, #0
	str r4, [sp]
	bl sub_080C6368
	sub r7, r7, #1
	sub r0, r5, #1
	lsl r0, r0, #24
	lsr r5, r0, #24
	cmp r7, #0
	bge _080F7330
_080F73A8:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080F73B8:
	.4byte gUnknown_08179B8C
_080F73BC:
	.4byte gRam
_080F73C0:
	.4byte 0x00000F92
_080F73C4:
	.4byte 0x00000964
_080F73C8:
	.4byte 0x00000969
_080F73CC:
	.4byte gUnknown_0200EE18
_080F73D0:
	.4byte gUnknown_0200EE98
_080F73D4:
	.4byte 0x00000961
_080F73D8:
	.4byte gUnknown_0200EF18
_080F73DC:
	.4byte gUnknown_0200EF98
_080F73E0:
	.4byte gUnknown_03003E74
_080F73E4:
	.4byte 0x00000952
_080F73E8:
	.4byte 0x00000958
	THUMB_FUNC_END sub_080F72E0

	THUMB_FUNC_START sub_080F73EC
sub_080F73EC: @ 0x080F73EC
	push {r4-r7,lr}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r2, r1, #0
	ldr r4, _080F7484  @ =gRam
	ldr r3, _080F7488  @ =0x00000FC2
	add r0, r4, r3
	add r0, r1, r0
	ldrb r3, [r0]
	cmp r3, #0
	bne _080F740C
	ldr r5, _080F748C  @ =0x00000FA2
	add r0, r4, r5
	add r0, r1, r0
	strb r3, [r0]
_080F740C:
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F747A
	mov r5, #3
	add r6, r4, #0
	ldr r0, _080F7490  @ =0x00000969
	add r7, r6, r0
_080F7424:
	mov r0, #150
	lsl r0, r0, #4
	add r3, r6, r0
	ldr r0, _080F7494  @ =gUnknown_08179C16
	lsl r2, r5, #1
	add r0, r2, r0
	ldrh r1, [r0]
	ldrh r3, [r3]
	add r1, r1, r3
	ldr r0, _080F7498  @ =0x00000964
	add r3, r6, r0
	ldr r0, _080F749C  @ =gUnknown_08179C1E
	add r2, r2, r0
	ldrh r2, [r2]
	ldrh r3, [r3]
	add r2, r2, r3
	ldr r0, _080F74A0  @ =gUnknown_03003E74
	sub r3, r5, #3
	ldrh r0, [r0]
	sub r0, r0, r3
	lsl r0, r0, #16
	lsr r0, r0, #16
	lsl r1, r1, #23
	lsr r1, r1, #23
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldrb r4, [r7]
	mov r3, #48
	and r3, r3, r4
	ldr r4, _080F74A4  @ =gUnknown_08179C26
	add r4, r5, r4
	ldrb r4, [r4]
	orr r3, r3, r4
	lsl r3, r3, #8
	mov r4, #182
	orr r3, r3, r4
	mov r4, #0
	str r4, [sp]
	bl sub_080C6368
	sub r5, r5, #1
	cmp r5, #0
	bge _080F7424
_080F747A:
	add sp, sp, #8
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F7484:
	.4byte gRam
_080F7488:
	.4byte 0x00000FC2
_080F748C:
	.4byte 0x00000FA2
_080F7490:
	.4byte 0x00000969
_080F7494:
	.4byte gUnknown_08179C16
_080F7498:
	.4byte 0x00000964
_080F749C:
	.4byte gUnknown_08179C1E
_080F74A0:
	.4byte gUnknown_03003E74
_080F74A4:
	.4byte gUnknown_08179C26
	THUMB_FUNC_END sub_080F73EC

	THUMB_FUNC_START sub_080F74A8
sub_080F74A8: @ 0x080F74A8
	bx lr
	THUMB_FUNC_END sub_080F74A8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F74AC
sub_080F74AC: @ 0x080F74AC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F74CC  @ =gUnknown_08179B6C
	ldr r1, _080F74D0  @ =gRam
	ldr r3, _080F74D4  @ =0x00000F82
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080F74CC:
	.4byte gUnknown_08179B6C
_080F74D0:
	.4byte gRam
_080F74D4:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080F74AC

	THUMB_FUNC_START sub_080F74D8
sub_080F74D8: @ 0x080F74D8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F6F14
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F7514
	add r0, r4, #0
	bl sub_080C79F8
	add r0, r4, #0
	bl sub_080C4F98
	ldr r1, _080F751C  @ =gUnknown_08179B78
	ldr r0, _080F7520  @ =gRam
	ldr r2, _080F7524  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F7514:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F751C:
	.4byte gUnknown_08179B78
_080F7520:
	.4byte gRam
_080F7524:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F74D8

	THUMB_FUNC_START sub_080F7528
sub_080F7528: @ 0x080F7528
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080F754C  @ =gRam
	ldr r1, _080F7550  @ =0x00000FC2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080F7544
	ldr r4, _080F7554  @ =0x00000F52
	add r0, r3, r4
	add r0, r2, r0
	strb r1, [r0]
_080F7544:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F754C:
	.4byte gRam
_080F7550:
	.4byte 0x00000FC2
_080F7554:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F7528

	THUMB_FUNC_START sub_080F7558
sub_080F7558: @ 0x080F7558
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080F75A8  @ =gRam
	ldr r1, _080F75AC  @ =0x00000F62
	add r0, r6, r1
	add r7, r4, r0
	ldrb r1, [r7]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F7576
	b _080F76E0
_080F7576:
	cmp r1, #0
	bne _080F75B8
	add r0, r4, #0
	bl sub_080F7C40
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F758E
	b _080F76E6
_080F758E:
	ldr r1, _080F75B0  @ =gUnknown_08179C2C
	ldr r2, _080F75B4  @ =0x00000F52
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	b _080F76E6
	.byte 0x00
	.byte 0x00
_080F75A8:
	.4byte gRam
_080F75AC:
	.4byte 0x00000F62
_080F75B0:
	.4byte gUnknown_08179C2C
_080F75B4:
	.4byte 0x00000F52
_080F75B8:
	ldr r1, _080F76A8  @ =0x00001142
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F75F4
	add r0, r4, #0
	bl sub_080E91E0
	ldr r2, _080F76AC  @ =0x000009AD
	add r0, r6, r2
	ldrb r5, [r0]
	cmp r5, #0
	bne _080F75F4
	add r0, r4, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F75F4
	ldr r1, _080F76B0  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	ldr r2, _080F76B4  @ =0x00001776
	add r0, r6, r2
	strb r5, [r0]
	ldrb r0, [r7]
	bl sub_080A1588
_080F75F4:
	ldr r0, _080F76B8  @ =gRam
	mov r8, r0
	ldr r0, _080F76BC  @ =0x000010B2
	add r0, r0, r8
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F760A
	mov r0, #8
	bl sub_080CF3A0
_080F760A:
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080F76E6
	add r0, r4, #0
	bl sub_080C99DC
	ldr r0, _080F76C0  @ =0x00001152
	add r0, r0, r8
	add r7, r4, r0
	ldrb r0, [r7]
	sub r0, r0, #2
	strb r0, [r7]
	ldr r0, _080F76A8  @ =0x00001142
	add r0, r0, r8
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	mov r12, r0
	and r0, r0, r1
	cmp r0, #0
	beq _080F76E6
	strb r6, [r2]
	ldr r0, _080F76C4  @ =0x00000F22
	add r0, r0, r8
	add r5, r4, r0
	ldrb r1, [r5]
	mov r0, r12
	and r0, r0, r1
	lsr r1, r1, #1
	add r0, r0, r1
	strb r0, [r5]
	ldr r0, _080F76C8  @ =0x00000F12
	add r0, r0, r8
	add r3, r4, r0
	ldrb r1, [r3]
	mov r0, r12
	and r0, r0, r1
	lsr r1, r1, #1
	add r0, r0, r1
	strb r0, [r3]
	ldr r0, _080F76CC  @ =0x00000F52
	add r0, r0, r8
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #4
	beq _080F76D8
	add r0, r0, #1
	strb r0, [r2]
	ldr r1, _080F76D0  @ =gUnknown_08179C3C
	ldrb r0, [r2]
	sub r0, r0, #1
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r7]
	ldrb r0, [r2]
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #1
	bhi _080F76E6
	add r0, r4, #0
	bl sub_080F7AB4
	add r1, r0, #0
	cmp r1, #0
	blt _080F76E6
	ldr r0, _080F76D4  @ =0x00000FC2
	add r0, r0, r8
	add r0, r1, r0
	mov r1, #16
	strb r1, [r0]
	b _080F76E6
_080F76A8:
	.4byte 0x00001142
_080F76AC:
	.4byte 0x000009AD
_080F76B0:
	.4byte 0x00000FA2
_080F76B4:
	.4byte 0x00001776
_080F76B8:
	.4byte gRam
_080F76BC:
	.4byte 0x000010B2
_080F76C0:
	.4byte 0x00001152
_080F76C4:
	.4byte 0x00000F22
_080F76C8:
	.4byte 0x00000F12
_080F76CC:
	.4byte 0x00000F52
_080F76D0:
	.4byte gUnknown_08179C3C
_080F76D4:
	.4byte 0x00000FC2
_080F76D8:
	strb r6, [r5]
	strb r6, [r3]
	strb r6, [r7]
	b _080F76E6
_080F76E0:
	add r0, r4, #0
	bl sub_080F7C78
_080F76E6:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F7558

	THUMB_FUNC_START sub_080F76F0
sub_080F76F0: @ 0x080F76F0
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	mov r1, #15
	ldr r3, _080F77A0  @ =gRam
	mov r8, r3
	mov r0, #150
	lsl r0, r0, #4
	add r6, r3, r0
	ldr r2, _080F77A4  @ =0x00001625
	add r2, r2, r3
	mov r12, r2
_080F770C:
	lsl r0, r1, #24
	asr r2, r0, #24
	ldr r4, _080F77A8  @ =0x000015DC
	add r1, r3, r4
	add r5, r0, #0
	ldrb r1, [r1]
	cmp r2, r1
	beq _080F77D8
	ldr r0, _080F77AC  @ =0x00000FA2
	add r0, r0, r8
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #3
	bne _080F77D8
	ldr r1, _080F77B0  @ =0x00000EE2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r6]
	ldr r4, _080F77B4  @ =0x00000F02
	add r0, r3, r4
	add r0, r2, r0
	ldrb r1, [r0]
	ldr r4, _080F77B8  @ =0x00000961
	add r0, r3, r4
	strb r1, [r0]
	ldr r1, _080F77BC  @ =0x00000ED2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	ldr r1, _080F77C0  @ =0x00000964
	add r4, r3, r1
	strb r0, [r4]
	ldr r1, _080F77C4  @ =0x00000EF2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	ldr r2, _080F77C8  @ =0x00000965
	add r0, r3, r2
	strb r1, [r0]
	ldr r1, _080F77CC  @ =0x00001622
	add r0, r3, r1
	ldrb r1, [r0]
	ldr r2, _080F77D0  @ =0x00001623
	add r0, r3, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r6]
	sub r1, r1, r0
	add r1, r1, #32
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #63
	bhi _080F77D8
	ldr r1, _080F77D4  @ =0x00001624
	add r0, r3, r1
	ldrb r1, [r0]
	mov r2, r12
	ldrb r0, [r2]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r4]
	sub r1, r1, r0
	add r1, r1, #32
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #63
	bhi _080F77D8
	add r0, r7, #0
	bl sub_080F7B54
	b _080F77E4
	.byte 0x00
	.byte 0x00
_080F77A0:
	.4byte gRam
_080F77A4:
	.4byte 0x00001625
_080F77A8:
	.4byte 0x000015DC
_080F77AC:
	.4byte 0x00000FA2
_080F77B0:
	.4byte 0x00000EE2
_080F77B4:
	.4byte 0x00000F02
_080F77B8:
	.4byte 0x00000961
_080F77BC:
	.4byte 0x00000ED2
_080F77C0:
	.4byte 0x00000964
_080F77C4:
	.4byte 0x00000EF2
_080F77C8:
	.4byte 0x00000965
_080F77CC:
	.4byte 0x00001622
_080F77D0:
	.4byte 0x00001623
_080F77D4:
	.4byte 0x00001624
_080F77D8:
	mov r4, #255
	lsl r4, r4, #24
	add r0, r5, r4
	lsr r1, r0, #24
	cmp r0, #0
	bge _080F770C
_080F77E4:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F76F0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F77F0
sub_080F77F0: @ 0x080F77F0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080F7834  @ =gRam
	ldr r1, _080F7838  @ =0x00000FC2
	add r0, r6, r1
	add r4, r5, r0
	ldrb r3, [r4]
	cmp r3, #0
	beq _080F784C
	cmp r3, #191
	bhi _080F7886
	cmp r3, #191
	bne _080F7814
	ldr r2, _080F783C  @ =0x00000A3E
	add r1, r6, r2
	mov r0, #5
	strb r0, [r1]
_080F7814:
	ldr r2, _080F7840  @ =gUnknown_08179C40
	ldrb r1, [r4]
	mov r3, #1
	add r0, r3, #0
	and r0, r0, r1
	lsl r0, r0, #1
	add r0, r0, r2
	ldrh r1, [r0]
	ldr r2, _080F7844  @ =0x00000A28
	add r0, r6, r2
	strh r1, [r0]
	ldr r1, _080F7848  @ =0x00001770
	add r0, r6, r1
	strb r3, [r0]
	b _080F7886
	.byte 0x00
	.byte 0x00
_080F7834:
	.4byte gRam
_080F7838:
	.4byte 0x00000FC2
_080F783C:
	.4byte 0x00000A3E
_080F7840:
	.4byte gUnknown_08179C40
_080F7844:
	.4byte 0x00000A28
_080F7848:
	.4byte 0x00001770
_080F784C:
	ldr r2, _080F788C  @ =0x00000F52
	add r1, r6, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #255
	strb r0, [r4]
	ldr r1, _080F7890  @ =0x00000A28
	add r0, r6, r1
	mov r2, #0
	strh r3, [r0]
	ldr r0, _080F7894  @ =0x00000A3E
	add r1, r6, r0
	mov r0, #1
	neg r0, r0
	strb r0, [r1]
	ldr r1, _080F7898  @ =0x00001152
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #48
	strb r1, [r0]
	ldr r1, _080F789C  @ =0x00000F22
	add r0, r6, r1
	add r0, r5, r0
	strb r2, [r0]
	add r0, r5, #0
	bl sub_080F7BDC
_080F7886:
	pop {r4-r6}
	pop {r0}
	bx r0
_080F788C:
	.4byte 0x00000F52
_080F7890:
	.4byte 0x00000A28
_080F7894:
	.4byte 0x00000A3E
_080F7898:
	.4byte 0x00001152
_080F789C:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080F77F0

	THUMB_FUNC_START sub_080F78A0
sub_080F78A0: @ 0x080F78A0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	ldr r6, _080F7918  @ =gRam
	ldr r1, _080F791C  @ =0x00001052
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
	add r0, r4, #0
	bl sub_080C99DC
	ldr r0, _080F7920  @ =0x00001152
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #2
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #208
	bne _080F78D6
	add r0, r4, #0
	bl sub_080F7BDC
_080F78D6:
	ldr r1, _080F7924  @ =0x00001142
	add r0, r6, r1
	add r2, r4, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F7900
	mov r0, #0
	strb r0, [r2]
	ldr r0, _080F7928  @ =0x00000F52
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F792C  @ =0x00000FC2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #255
	strb r1, [r0]
_080F7900:
	ldr r0, _080F7930  @ =0x00000F92
	add r1, r6, r0
	add r1, r7, r1
	ldr r2, _080F7934  @ =gUnknown_08179C44
	ldrb r0, [r5]
	lsr r0, r0, #2
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	pop {r4-r7}
	pop {r0}
	bx r0
_080F7918:
	.4byte gRam
_080F791C:
	.4byte 0x00001052
_080F7920:
	.4byte 0x00001152
_080F7924:
	.4byte 0x00001142
_080F7928:
	.4byte 0x00000F52
_080F792C:
	.4byte 0x00000FC2
_080F7930:
	.4byte 0x00000F92
_080F7934:
	.4byte gUnknown_08179C44
	THUMB_FUNC_END sub_080F78A0

	THUMB_FUNC_START sub_080F7938
sub_080F7938: @ 0x080F7938
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080F7968  @ =gRam
	ldr r1, _080F796C  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r2, [r5]
	cmp r2, #0
	beq _080F7A14
	cmp r2, #160
	bne _080F7956
	add r0, r4, #0
	bl sub_080F7AB4
_080F7956:
	ldrb r0, [r5]
	cmp r0, #159
	bls _080F7970
	cmp r0, #252
	bne _080F7A1C
	add r0, r4, #0
	bl sub_080F7AB4
	b _080F7A1C
_080F7968:
	.4byte gRam
_080F796C:
	.4byte 0x00000FC2
_080F7970:
	cmp r0, #10
	bne _080F797A
	add r0, r4, #0
	bl sub_080F7BDC
_080F797A:
	ldrb r0, [r5]
	cmp r0, #4
	bne _080F7986
	add r0, r4, #0
	bl sub_080F7AB4
_080F7986:
	ldrb r0, [r5]
	cmp r0, #96
	beq _080F79EC
	cmp r0, #80
	bne _080F79BE
	ldr r0, _080F79A0  @ =gUnknown_0200232A
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F79A4
	add r0, r4, #0
	bl sub_080F7A28
	b _080F79BE
_080F79A0:
	.4byte gUnknown_0200232A
_080F79A4:
	bl GetRandomInt
	mov r1, #1
	and r1, r1, r0
	cmp r1, #0
	bne _080F79B8
	add r0, r4, #0
	bl sub_080E89E4
	b _080F79BE
_080F79B8:
	add r0, r4, #0
	bl sub_080F7B80
_080F79BE:
	ldr r0, _080F79DC  @ =gRam
	ldr r2, _080F79E0  @ =0x00000F92
	add r1, r0, r2
	add r1, r4, r1
	ldr r2, _080F79E4  @ =gUnknown_08179C54
	ldr r3, _080F79E8  @ =0x00000FC2
	add r0, r0, r3
	add r0, r4, r0
	ldrb r0, [r0]
	lsr r0, r0, #3
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080F7A1C
	.byte 0x00
	.byte 0x00
_080F79DC:
	.4byte gRam
_080F79E0:
	.4byte 0x00000F92
_080F79E4:
	.4byte gUnknown_08179C54
_080F79E8:
	.4byte 0x00000FC2
_080F79EC:
	ldr r2, _080F7A08  @ =0x0000012D
	ldr r0, _080F7A0C  @ =0x00001770
	add r1, r6, r0
	mov r0, #0
	strb r0, [r1]
	ldr r0, _080F7A10  @ =gUnknown_0200232A
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F7A00
	add r2, r2, #1
_080F7A00:
	add r0, r2, #0
	bl sub_080C95C0
	b _080F7A1C
_080F7A08:
	.4byte 0x0000012D
_080F7A0C:
	.4byte 0x00001770
_080F7A10:
	.4byte gUnknown_0200232A
_080F7A14:
	ldr r1, _080F7A24  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	strb r2, [r0]
_080F7A1C:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F7A24:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F7938

	THUMB_FUNC_START sub_080F7A28
sub_080F7A28: @ 0x080F7A28
	push {r4-r6,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #192
	bl sub_080CA538
	add r6, r0, #0
	cmp r6, #0
	blt _080F7A92
	lsl r5, r6, #24
	lsr r5, r5, #24
	add r0, r5, #0
	bl sub_080CAE50
	ldr r4, _080F7A98  @ =gRam
	ldr r1, _080F7A9C  @ =0x00000F22
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #24
	strb r1, [r0]
	ldr r1, _080F7AA0  @ =0x00001152
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #48
	strb r1, [r0]
	ldr r1, _080F7AA4  @ =0x00000F62
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #17
	strb r1, [r0]
	add r0, r5, #0
	mov r1, #108
	bl sub_080CF0AC
	ldr r1, _080F7AA8  @ =0x00001012
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #131
	strb r1, [r0]
	ldr r1, _080F7AAC  @ =0x00001032
	add r0, r4, r1
	add r0, r6, r0
	mov r1, #88
	strb r1, [r0]
	ldr r0, _080F7AB0  @ =0x00001122
	add r4, r4, r0
	add r4, r6, r4
	mov r0, #8
	strb r0, [r4]
	mov r0, #28
	bl sub_0812FBC4
_080F7A92:
	pop {r4-r6}
	pop {r0}
	bx r0
_080F7A98:
	.4byte gRam
_080F7A9C:
	.4byte 0x00000F22
_080F7AA0:
	.4byte 0x00001152
_080F7AA4:
	.4byte 0x00000F62
_080F7AA8:
	.4byte 0x00001012
_080F7AAC:
	.4byte 0x00001032
_080F7AB0:
	.4byte 0x00001122
	THUMB_FUNC_END sub_080F7A28

	THUMB_FUNC_START sub_080F7AB4
sub_080F7AB4: @ 0x080F7AB4
	push {r4,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #192
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080F7B02
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080F7B0C  @ =gRam
	ldr r1, _080F7B10  @ =0x00000F62
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #128
	strb r1, [r0]
	ldr r3, _080F7B14  @ =0x00001012
	add r0, r2, r3
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r3, _080F7B18  @ =0x00001172
	add r0, r2, r3
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080F7B1C  @ =0x00001122
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	ldr r3, _080F7B20  @ =0x00000FC2
	add r2, r2, r3
	add r2, r4, r2
	mov r0, #31
	strb r0, [r2]
_080F7B02:
	add r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080F7B0C:
	.4byte gRam
_080F7B10:
	.4byte 0x00000F62
_080F7B14:
	.4byte 0x00001012
_080F7B18:
	.4byte 0x00001172
_080F7B1C:
	.4byte 0x00001122
_080F7B20:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080F7AB4

	THUMB_FUNC_START sub_080F7B24
sub_080F7B24: @ 0x080F7B24
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080C35C0
	ldr r1, _080F7B4C  @ =gRam
	ldr r0, _080F7B50  @ =0x00000ED2
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #12
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C3758
	pop {r4}
	pop {r0}
	bx r0
_080F7B4C:
	.4byte gRam
_080F7B50:
	.4byte 0x00000ED2
	THUMB_FUNC_END sub_080F7B24

	THUMB_FUNC_START sub_080F7B54
sub_080F7B54: @ 0x080F7B54
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080F7B74  @ =gRam
	ldr r1, _080F7B78  @ =0x00000F52
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	ldr r1, _080F7B7C  @ =0x00000FC2
	add r3, r3, r1
	add r0, r0, r3
	mov r1, #255
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080F7B74:
	.4byte gRam
_080F7B78:
	.4byte 0x00000F52
_080F7B7C:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080F7B54

	THUMB_FUNC_START sub_080F7B80
sub_080F7B80: @ 0x080F7B80
	push {r4,r5,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #74
	bl sub_080CA538
	add r5, r0, #0
	cmp r5, #0
	blt _080F7BC4
	lsl r4, r5, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080CAE50
	add r0, r4, #0
	bl sub_080C2914
	ldr r1, _080F7BCC  @ =gRam
	ldr r2, _080F7BD0  @ =0x00000FD2
	add r0, r1, r2
	add r0, r5, r0
	mov r2, #80
	strb r2, [r0]
	ldr r2, _080F7BD4  @ =0x00000F22
	add r0, r1, r2
	add r0, r5, r0
	mov r2, #24
	strb r2, [r0]
	ldr r0, _080F7BD8  @ =0x00001152
	add r1, r1, r0
	add r1, r5, r1
	mov r0, #48
	strb r0, [r1]
_080F7BC4:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F7BCC:
	.4byte gRam
_080F7BD0:
	.4byte 0x00000FD2
_080F7BD4:
	.4byte 0x00000F22
_080F7BD8:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080F7B80

	THUMB_FUNC_START sub_080F7BDC
sub_080F7BDC: @ 0x080F7BDC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r0, #236
	add r1, r6, #0
	bl sub_080CA538
	add r5, r0, #0
	cmp r5, #0
	blt _080F7C28
	lsl r0, r5, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080F7C30  @ =gRam
	ldr r1, _080F7C34  @ =0x00000FA2
	add r0, r2, r1
	add r0, r5, r0
	mov r4, #0
	mov r3, #3
	strb r3, [r0]
	add r1, r1, #32
	add r0, r2, r1
	add r0, r5, r0
	mov r1, #15
	strb r1, [r0]
	ldr r1, _080F7C38  @ =0x00000F52
	add r0, r2, r1
	add r0, r5, r0
	strb r4, [r0]
	ldr r0, _080F7C3C  @ =0x00001012
	add r2, r2, r0
	add r2, r5, r2
	strb r3, [r2]
	add r0, r6, #0
	mov r1, #110
	bl sub_080CF0AC
_080F7C28:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F7C30:
	.4byte gRam
_080F7C34:
	.4byte 0x00000FA2
_080F7C38:
	.4byte 0x00000F52
_080F7C3C:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080F7BDC

	THUMB_FUNC_START sub_080F7C40
sub_080F7C40: @ 0x080F7C40
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r0, _080F7C6C  @ =gRam
	ldr r1, _080F7C70  @ =0x00000F92
	add r0, r0, r1
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080F7C66
	add r1, r0, #0
	sub r1, r1, #1
	lsl r1, r1, #5
	ldr r0, _080F7C74  @ =gUnknown_08179C68
	add r1, r1, r0
	add r0, r2, #0
	mov r2, #4
	bl sub_080C9480
_080F7C66:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F7C6C:
	.4byte gRam
_080F7C70:
	.4byte 0x00000F92
_080F7C74:
	.4byte gUnknown_08179C68
	THUMB_FUNC_END sub_080F7C40

	THUMB_FUNC_START sub_080F7C78
sub_080F7C78: @ 0x080F7C78
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r5, r2, #0
	ldr r4, _080F7CB0  @ =gRam
	ldr r1, _080F7CB4  @ =0x00000FC2
	add r0, r4, r1
	add r1, r2, r0
	ldrb r3, [r1]
	cmp r3, #0
	bne _080F7C96
	ldr r6, _080F7CB8  @ =0x00000FA2
	add r0, r4, r6
	add r0, r2, r0
	strb r3, [r0]
_080F7C96:
	ldrb r1, [r1]
	lsr r1, r1, #3
	lsl r1, r1, #4
	ldr r0, _080F7CBC  @ =gUnknown_08179D48
	add r1, r1, r0
	add r0, r5, #0
	mov r2, #2
	bl sub_080C9480
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F7CB0:
	.4byte gRam
_080F7CB4:
	.4byte 0x00000FC2
_080F7CB8:
	.4byte 0x00000FA2
_080F7CBC:
	.4byte gUnknown_08179D48
	THUMB_FUNC_END sub_080F7C78

	THUMB_FUNC_START sub_080F7CC0
sub_080F7CC0: @ 0x080F7CC0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	lsl r1, r1, #16
	lsr r1, r1, #16
	add r6, r1, #0
	add r0, r4, #0
	bl sub_080C9268
	cmp r0, #0
	bne _080F7D7E
	ldr r5, _080F7D58  @ =gRam
	ldr r1, _080F7D5C  @ =0x00000EE2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r2, [r0]
	ldr r3, _080F7D60  @ =0x00000F02
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r2, r2, r0
	sub r1, r1, #16
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	sub r3, r3, #16
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	sub r2, r2, #16
	sub r1, r1, #24
	ldr r3, _080F7D64  @ =0x00000968
	add r0, r5, r3
	strb r2, [r0]
	lsr r2, r2, #8
	add r3, r3, #12
	add r0, r5, r3
	strb r2, [r0]
	ldr r2, _080F7D68  @ =0x00000969
	add r0, r5, r2
	strb r1, [r0]
	lsr r1, r1, #8
	add r3, r3, #1
	add r0, r5, r3
	strb r1, [r0]
	ldr r0, _080F7D6C  @ =0x0000096C
	add r1, r5, r0
	mov r0, #48
	strb r0, [r1]
	add r2, r2, #4
	add r1, r5, r2
	mov r0, #56
	strb r0, [r1]
	bl sub_080C44FC
	bl sub_080C466C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F7D54
	ldr r1, _080F7D70  @ =gUnknown_03003E70
	mov r0, #1
	strb r0, [r1]
	ldr r3, _080F7D74  @ =0x00000546
	add r0, r5, r3
	ldrh r1, [r0]
	mov r0, #129
	lsl r0, r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080F7D78
_080F7D54:
	mov r0, #0
	b _080F7D80
_080F7D58:
	.4byte gRam
_080F7D5C:
	.4byte 0x00000EE2
_080F7D60:
	.4byte 0x00000F02
_080F7D64:
	.4byte 0x00000968
_080F7D68:
	.4byte 0x00000969
_080F7D6C:
	.4byte 0x0000096C
_080F7D70:
	.4byte gUnknown_03003E70
_080F7D74:
	.4byte 0x00000546
_080F7D78:
	add r0, r6, #0
	bl sub_080C95C0
_080F7D7E:
	mov r0, #1
_080F7D80:
	pop {r4-r6}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080F7CC0

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F7D88
sub_080F7D88: @ 0x080F7D88
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080F7E08  @ =gRam
	ldr r1, _080F7E0C  @ =0x00000FB2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r1, [r5]
	add r7, r1, #0
	ldr r2, _080F7E10  @ =0x00000FD2
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F7DB0
	ldr r0, _080F7E14  @ =gUnknown_08176908
	add r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r5]
_080F7DB0:
	ldr r0, _080F7E18  @ =0x00000F92
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080F7E1C  @ =gUnknown_08179D88
	ldrb r0, [r5]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080F7E7C
	strb r7, [r5]
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F7E66
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	mov r1, #171
	lsl r1, r1, #4
	add r0, r6, r1
	ldrh r0, [r0]
	cmp r0, #27
	bne _080F7E24
	ldr r2, _080F7E20  @ =0x00000ED2
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #80
	beq _080F7DF8
	cmp r0, #144
	bne _080F7E24
_080F7DF8:
	mov r1, #182
	cmp r0, #80
	bne _080F7E00
	mov r1, #181
_080F7E00:
	add r0, r4, #0
	bl sub_080F7CC0
	b _080F7E46
_080F7E08:
	.4byte gRam
_080F7E0C:
	.4byte 0x00000FB2
_080F7E10:
	.4byte 0x00000FD2
_080F7E14:
	.4byte gUnknown_08176908
_080F7E18:
	.4byte 0x00000F92
_080F7E1C:
	.4byte gUnknown_08179D88
_080F7E20:
	.4byte 0x00000ED2
_080F7E24:
	ldr r0, _080F7E70  @ =gRam
	ldr r1, _080F7E74  @ =0x00000DA5
	add r5, r0, r1
	ldrb r0, [r5]
	add r1, r0, #0
	add r1, r1, #18
	add r0, r4, #0
	bl sub_080F7CC0
	cmp r0, #0
	beq _080F7E46
	ldrb r0, [r5]
	add r0, r0, #1
	mov r1, #7
	bl __modsi3
	strb r0, [r5]
_080F7E46:
	add r0, r4, #0
	bl sub_080C5044
	ldr r0, _080F7E70  @ =gRam
	ldr r2, _080F7E78  @ =0x00000996
	add r0, r0, r2
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #31
	and r0, r0, r1
	cmp r0, #0
	bne _080F7E66
	add r0, r4, #0
	bl sub_080F87C0
_080F7E66:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F7E70:
	.4byte gRam
_080F7E74:
	.4byte 0x00000DA5
_080F7E78:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F7D88

	THUMB_FUNC_START sub_080F7E7C
sub_080F7E7C: @ 0x080F7E7C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	mov r2, r9
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F7F50
	ldr r2, _080F7F60  @ =gRam
	ldr r1, _080F7F64  @ =0x00000F92
	add r0, r2, r1
	add r0, r0, r9
	ldrb r1, [r0]
	lsl r0, r1, #2
	add r0, r0, r1
	ldr r3, _080F7F68  @ =0x0000096C
	add r1, r2, r3
	strb r0, [r1]
	mov r7, #4
	mov r8, r2
	ldr r6, _080F7F6C  @ =0x00000964
	add r6, r6, r8
	mov r10, r6
_080F7EBE:
	ldr r0, _080F7F68  @ =0x0000096C
	add r0, r0, r8
	ldrb r0, [r0]
	add r0, r0, r7
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	ldr r0, _080F7F70  @ =gUnknown_08179DF0
	add r0, r5, r0
	ldr r1, _080F7F74  @ =0x00000969
	add r1, r1, r8
	ldrb r2, [r0]
	ldrb r0, [r1]
	add r4, r0, #0
	orr r4, r4, r2
	ldr r0, _080F7F78  @ =gUnknown_08179DDC
	add r0, r0, r5
	mov r12, r0
	ldrb r1, [r0]
	mov r0, #16
	and r0, r0, r1
	cmp r0, #0
	bne _080F7EF8
	mov r0, #241
	and r4, r4, r0
	mov r0, #8
	orr r4, r4, r0
	lsl r0, r4, #24
	lsr r4, r0, #24
_080F7EF8:
	ldr r0, _080F7F7C  @ =gUnknown_03003E74
	sub r1, r7, #4
	ldrh r0, [r0]
	sub r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r8
	ldr r1, _080F7F80  @ =gUnknown_08179D8C
	lsl r3, r5, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080F7F84  @ =gUnknown_08179DB4
	add r3, r3, r2
	ldrh r2, [r3]
	mov r3, r10
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	mov r6, r12
	ldrb r3, [r6]
	lsl r4, r4, #8
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080F7F88  @ =gUnknown_08179E04
	add r4, r5, r4
	ldrb r4, [r4]
	str r4, [sp]
	bl sub_080C6368
	sub r7, r7, #1
	cmp r7, #0
	bge _080F7EBE
	mov r0, r9
	mov r1, #12
	bl sub_080C57F8
_080F7F50:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080F7F60:
	.4byte gRam
_080F7F64:
	.4byte 0x00000F92
_080F7F68:
	.4byte 0x0000096C
_080F7F6C:
	.4byte 0x00000964
_080F7F70:
	.4byte gUnknown_08179DF0
_080F7F74:
	.4byte 0x00000969
_080F7F78:
	.4byte gUnknown_08179DDC
_080F7F7C:
	.4byte gUnknown_03003E74
_080F7F80:
	.4byte gUnknown_08179D8C
_080F7F84:
	.4byte gUnknown_08179DB4
_080F7F88:
	.4byte gUnknown_08179E04
	THUMB_FUNC_END sub_080F7E7C

	THUMB_FUNC_START sub_080F7F8C
sub_080F7F8C: @ 0x080F7F8C
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F8108
	ldr r5, _080F8024  @ =gRam
	ldr r1, _080F8028  @ =0x00000F92
	add r0, r5, r1
	add r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #4
	bne _080F7FAA
	b _080F80D8
_080F7FAA:
	ldr r0, _080F802C  @ =0x00000996
	add r2, r5, r0
	ldrb r0, [r2]
	lsr r0, r0, #1
	mov r1, #3
	and r0, r0, r1
	strb r0, [r3]
	ldr r3, _080F8030  @ =0x00000F52
	add r1, r5, r3
	add r1, r4, r1
	ldrb r0, [r2]
	lsr r0, r0, #5
	mov r3, #1
	and r0, r0, r3
	strb r0, [r1]
	ldr r0, _080F8034  @ =0x00000F62
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r2]
	add r0, r0, #16
	asr r0, r0, #5
	and r0, r0, r3
	strb r0, [r1]
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F80D8
	add r0, r4, #0
	bl sub_080F825C
	cmp r0, #0
	bne _080F804E
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F804E
	mov r1, #0
	ldr r2, _080F8038  @ =0x000009DA
	add r0, r5, r2
	ldrh r0, [r0]
	cmp r0, #120
	bne _080F800A
	mov r1, #1
_080F800A:
	cmp r1, #0
	beq _080F8040
	ldr r3, _080F803C  @ =0x000016B3
	add r0, r5, r3
	ldrb r1, [r0]
	mov r0, #15
	and r0, r0, r1
	cmp r0, #15
	beq _080F804E
	add r0, r4, #0
	bl sub_080F821C
	b _080F804E
_080F8024:
	.4byte gRam
_080F8028:
	.4byte 0x00000F92
_080F802C:
	.4byte 0x00000996
_080F8030:
	.4byte 0x00000F52
_080F8034:
	.4byte 0x00000F62
_080F8038:
	.4byte 0x000009DA
_080F803C:
	.4byte 0x000016B3
_080F8040:
	ldr r0, _080F80E0  @ =gUnknown_0200233D
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080F804E
	add r0, r4, #0
	bl sub_080F821C
_080F804E:
	add r0, r4, #0
	bl sub_080C5080
	ldr r4, _080F80E4  @ =gRam
	mov r5, #182
	lsl r5, r5, #5
	add r1, r4, r5
	ldr r2, _080F80E8  @ =0x00001624
	add r0, r4, r2
	ldrb r2, [r0]
	ldr r3, _080F80EC  @ =0x00001625
	add r0, r4, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r2, r2, r0
	ldrh r1, [r1]
	sub r1, r1, r2
	add r1, r1, #8
	add r5, r5, #4
	add r3, r4, r5
	ldr r2, _080F80F0  @ =0x00001622
	add r0, r4, r2
	ldrb r2, [r0]
	sub r5, r5, #161
	add r0, r4, r5
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r2, r2, r0
	ldrh r0, [r3]
	sub r0, r0, r2
	add r0, r0, #32
	lsl r0, r0, #16
	lsr r0, r0, #16
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #23
	bhi _080F80D8
	cmp r0, #63
	bhi _080F80D8
	ldr r0, _080F80F4  @ =0x000016CD
	add r3, r4, r0
	ldrb r0, [r3]
	sub r0, r0, #1
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F80D8
	ldr r2, _080F80F8  @ =0x000017F1
	add r1, r4, r2
	mov r2, #0
	mov r0, #64
	strb r0, [r1]
	add r5, r5, #213
	add r1, r4, r5
	mov r0, #12
	strb r0, [r1]
	ldr r0, _080F80FC  @ =0x00001702
	add r1, r4, r0
	mov r0, #1
	strb r0, [r1]
	ldr r5, _080F8100  @ =0x00001805
	add r1, r4, r5
	mov r0, #2
	strb r0, [r1]
	ldr r1, _080F8104  @ =0x000016CE
	add r0, r4, r1
	strb r2, [r0]
	mov r0, #48
	strb r0, [r3]
_080F80D8:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080F80E0:
	.4byte gUnknown_0200233D
_080F80E4:
	.4byte gRam
_080F80E8:
	.4byte 0x00001624
_080F80EC:
	.4byte 0x00001625
_080F80F0:
	.4byte 0x00001622
_080F80F4:
	.4byte 0x000016CD
_080F80F8:
	.4byte 0x000017F1
_080F80FC:
	.4byte 0x00001702
_080F8100:
	.4byte 0x00001805
_080F8104:
	.4byte 0x000016CE
	THUMB_FUNC_END sub_080F7F8C

	THUMB_FUNC_START sub_080F8108
sub_080F8108: @ 0x080F8108
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080F8134  @ =gRam
	ldr r0, _080F8138  @ =0x00001624
	add r1, r6, r0
	ldrb r0, [r1]
	add r0, r0, #8
	strb r0, [r1]
	ldr r1, _080F813C  @ =0x00000F92
	add r0, r6, r1
	add r7, r5, r0
	ldrb r0, [r7]
	cmp r0, #4
	bne _080F8144
	ldr r1, _080F8140  @ =gUnknown_08179EF8
	add r0, r5, #0
	mov r2, #2
	bl sub_080C9480
	b _080F8192
	.byte 0x00
	.byte 0x00
_080F8134:
	.4byte gRam
_080F8138:
	.4byte 0x00001624
_080F813C:
	.4byte 0x00000F92
_080F8140:
	.4byte gUnknown_08179EF8
_080F8144:
	ldr r1, _080F81A0  @ =0x00000F52
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #3
	ldr r0, _080F81A4  @ =gUnknown_08179F30
	add r1, r1, r0
	add r0, r5, #0
	mov r2, #1
	bl sub_080C9480
	ldr r4, _080F81A8  @ =gUnknown_03003E74
	ldrh r0, [r4]
	add r0, r0, #1
	strh r0, [r4]
	ldr r1, _080F81AC  @ =0x00000F62
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080F81B0  @ =gUnknown_08179F40
	add r1, r1, r0
	add r0, r5, #0
	mov r2, #2
	bl sub_080C9480
	ldrh r0, [r4]
	add r0, r0, #2
	strh r0, [r4]
	ldrb r0, [r7]
	mov r1, #1
	and r1, r1, r0
	lsl r1, r1, #5
	ldr r0, _080F81B4  @ =gUnknown_08179F60
	add r1, r1, r0
	add r0, r5, #0
	mov r2, #4
	bl sub_080C9480
_080F8192:
	add r0, r5, #0
	bl sub_080C1F70
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F81A0:
	.4byte 0x00000F52
_080F81A4:
	.4byte gUnknown_08179F30
_080F81A8:
	.4byte gUnknown_03003E74
_080F81AC:
	.4byte 0x00000F62
_080F81B0:
	.4byte gUnknown_08179F40
_080F81B4:
	.4byte gUnknown_08179F60
	THUMB_FUNC_END sub_080F8108

	THUMB_FUNC_START sub_080F81B8
sub_080F81B8: @ 0x080F81B8
	bx lr
	THUMB_FUNC_END sub_080F81B8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F81BC
sub_080F81BC: @ 0x080F81BC
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080F81E0  @ =gRam
	ldr r1, _080F81E4  @ =0x000009B2
	add r0, r3, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	beq _080F81E8
	add r1, r1, #246
	add r0, r3, r1
	ldrh r1, [r0]
	mov r0, #128
	lsl r0, r0, #8
	b _080F81F6
	.byte 0x00
	.byte 0x00
_080F81E0:
	.4byte gRam
_080F81E4:
	.4byte 0x000009B2
_080F81E8:
	ldr r1, _080F8210  @ =0x000009C6
	add r0, r3, r1
	ldrh r0, [r0]
	ldr r1, _080F8214  @ =gUnknown_02002280
	add r0, r0, r1
	ldrb r1, [r0]
	mov r0, #64
_080F81F6:
	and r0, r0, r1
	cmp r0, #0
	beq _080F8206
	ldr r1, _080F8218  @ =0x00000F92
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #4
	strb r1, [r0]
_080F8206:
	add r0, r2, #0
	bl sub_080F7B24
	pop {r0}
	bx r0
_080F8210:
	.4byte 0x000009C6
_080F8214:
	.4byte gUnknown_02002280
_080F8218:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080F81BC

	THUMB_FUNC_START sub_080F821C
sub_080F821C: @ 0x080F821C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r4, _080F824C  @ =gRam
	ldr r2, _080F8250  @ =0x000010C2
	add r1, r4, r2
	add r1, r0, r1
	mov r2, #0
	strb r2, [r1]
	bl sub_080C3BD0
	ldr r1, _080F8254  @ =0x000017AA
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F8244
	ldr r2, _080F8258  @ =0x000017F1
	add r1, r4, r2
	mov r0, #64
	strb r0, [r1]
_080F8244:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F824C:
	.4byte gRam
_080F8250:
	.4byte 0x000010C2
_080F8254:
	.4byte 0x000017AA
_080F8258:
	.4byte 0x000017F1
	THUMB_FUNC_END sub_080F821C

	THUMB_FUNC_START sub_080F825C
sub_080F825C: @ 0x080F825C
	push {lr}
	ldr r2, _080F8270  @ =gRam
	ldr r1, _080F8274  @ =0x00001710
	add r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F8278
_080F826A:
	mov r0, #1
	b _080F828E
	.byte 0x00
	.byte 0x00
_080F8270:
	.4byte gRam
_080F8274:
	.4byte 0x00001710
_080F8278:
	mov r1, #4
	ldr r0, _080F8294  @ =0x00000E15
	add r2, r2, r0
_080F827E:
	add r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #49
	beq _080F826A
	sub r1, r1, #1
	cmp r1, #0
	bge _080F827E
	mov r0, #0
_080F828E:
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080F8294:
	.4byte 0x00000E15
	THUMB_FUNC_END sub_080F825C

	THUMB_FUNC_START sub_080F8298
sub_080F8298: @ 0x080F8298
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080F82FC  @ =gRam
	ldr r1, _080F8300  @ =0x00000F82
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F8314
	ldr r2, _080F8304  @ =0x00000FB2
	add r0, r6, r2
	add r5, r4, r0
	ldrb r1, [r5]
	add r7, r1, #0
	add r2, r2, #32
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F82CA
	ldr r0, _080F8308  @ =gUnknown_08176908
	add r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r5]
_080F82CA:
	add r0, r4, #0
	bl sub_080F869C
	strb r7, [r5]
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F839C
	add r0, r4, #0
	bl sub_080C5044
	ldr r1, _080F830C  @ =gUnknown_08179FA0
	ldr r2, _080F8310  @ =0x00000F52
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	b _080F839C
_080F82FC:
	.4byte gRam
_080F8300:
	.4byte 0x00000F82
_080F8304:
	.4byte 0x00000FB2
_080F8308:
	.4byte gUnknown_08176908
_080F830C:
	.4byte gUnknown_08179FA0
_080F8310:
	.4byte 0x00000F52
_080F8314:
	ldr r1, _080F83A4  @ =0x00001651
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F832C
	ldr r2, _080F83A8  @ =0x00000D94
	add r0, r6, r2
	add r0, r4, r0
	ldrb r2, [r0]
	mov r1, #48
	orr r1, r1, r2
	strb r1, [r0]
_080F832C:
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F839C
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080F83AC  @ =0x00000FC2
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #30
	bne _080F8356
	add r0, r4, #0
	bl sub_080CF6C0
_080F8356:
	ldrb r5, [r5]
	cmp r5, #0
	bne _080F8396
	add r0, r4, #0
	bl sub_080C79F8
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F8396
	ldr r2, _080F83B0  @ =0x00000FA2
	add r0, r6, r2
	add r0, r4, r0
	strb r5, [r0]
	ldr r0, _080F83B4  @ =0x00000EE2
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #4
	strb r0, [r1]
	sub r2, r2, #208
	add r1, r6, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #4
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C444C
	add r0, r4, #0
	mov r1, #113
	bl sub_080CF0AC
_080F8396:
	add r0, r4, #0
	bl sub_080C5044
_080F839C:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F83A4:
	.4byte 0x00001651
_080F83A8:
	.4byte 0x00000D94
_080F83AC:
	.4byte 0x00000FC2
_080F83B0:
	.4byte 0x00000FA2
_080F83B4:
	.4byte 0x00000EE2
	THUMB_FUNC_END sub_080F8298

	THUMB_FUNC_START sub_080F83B8
sub_080F83B8: @ 0x080F83B8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r7, _080F841C  @ =gRam
	ldr r1, _080F8420  @ =0x00000F62
	add r0, r7, r1
	add r0, r6, r0
	mov r1, #0
	strb r1, [r0]
	ldr r1, _080F8424  @ =0x00000FC2
	add r0, r7, r1
	add r2, r6, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080F8414
	ldr r0, _080F8428  @ =0x00000F52
	add r1, r7, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #96
	strb r0, [r2]
	ldr r1, _080F842C  @ =0x00000FB2
	add r4, r7, r1
	add r4, r6, r4
	ldrb r5, [r4]
	add r0, r6, #0
	bl sub_080C2FA8
	add r1, r0, #0
	strb r1, [r4]
	lsl r0, r1, #24
	lsr r0, r0, #24
	cmp r5, r0
	beq _080F8414
	eor r5, r5, r1
	mov r0, #2
	and r5, r5, r0
	cmp r5, #0
	bne _080F8414
	ldr r1, _080F8430  @ =0x00000FD2
	add r0, r7, r1
	add r0, r6, r0
	mov r1, #12
	strb r1, [r0]
_080F8414:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F841C:
	.4byte gRam
_080F8420:
	.4byte 0x00000F62
_080F8424:
	.4byte 0x00000FC2
_080F8428:
	.4byte 0x00000F52
_080F842C:
	.4byte 0x00000FB2
_080F8430:
	.4byte 0x00000FD2
	THUMB_FUNC_END sub_080F83B8

	THUMB_FUNC_START sub_080F8434
sub_080F8434: @ 0x080F8434
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r1, r4, #0
	ldr r6, _080F8530  @ =gRam
	ldr r0, _080F8534  @ =0x00000FC2
	add r7, r6, r0
	add r2, r4, r7
	ldrb r0, [r2]
	cmp r0, #0
	beq _080F844C
	b _080F8570
_080F844C:
	ldr r1, _080F8538  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #4
	strb r0, [r2]
	mov r0, #107
	add r1, r4, #0
	bl sub_080CA538
	add r5, r0, #0
	cmp r5, #0
	bge _080F846C
	b _080F858E
_080F846C:
	add r0, r4, #0
	mov r1, #88
	bl sub_080CF140
	ldr r2, _080F853C  @ =0x00000F82
	add r0, r6, r2
	add r0, r5, r0
	mov r3, #1
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080F8540  @ =0x00000FB2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r2, [r0]
	mov r4, #150
	lsl r4, r4, #4
	add r1, r6, r4
	ldr r0, _080F8544  @ =gUnknown_08179FB4
	add r0, r2, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080F8548  @ =gUnknown_08179FB8
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r4, _080F854C  @ =0x00000EE2
	add r0, r6, r4
	add r0, r5, r0
	strb r1, [r0]
	add r4, r4, #32
	add r0, r6, r4
	add r0, r5, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080F8550  @ =0x00000964
	add r1, r6, r0
	ldr r0, _080F8554  @ =gUnknown_08179FBC
	add r0, r2, r0
	ldrb r0, [r0]
	ldrh r1, [r1]
	add r1, r1, r0
	ldr r0, _080F8558  @ =gUnknown_08179FC0
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	sub r4, r4, #48
	add r0, r6, r4
	add r0, r5, r0
	strb r1, [r0]
	add r4, r4, #32
	add r0, r6, r4
	add r0, r5, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080F855C  @ =0x00000F22
	add r1, r6, r0
	add r1, r5, r1
	ldr r0, _080F8560  @ =gUnknown_08179FC4
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r4, r4, #32
	add r1, r6, r4
	add r1, r5, r1
	ldr r0, _080F8564  @ =gUnknown_08179FC8
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r0, _080F8568  @ =0x00001012
	add r1, r6, r0
	add r1, r5, r1
	ldrb r2, [r1]
	mov r0, #240
	and r0, r0, r2
	orr r0, r0, r3
	strb r0, [r1]
	ldr r2, _080F856C  @ =0x00001032
	add r1, r6, r2
	add r1, r5, r1
	ldrb r0, [r1]
	mov r2, #71
	orr r0, r0, r2
	strb r0, [r1]
	sub r4, r4, #157
	add r1, r6, r4
	add r1, r5, r1
	ldrb r0, [r1]
	mov r2, #68
	orr r0, r0, r2
	strb r0, [r1]
	add r1, r5, r7
	mov r0, #32
	strb r0, [r1]
	b _080F858E
	.byte 0x00
	.byte 0x00
_080F8530:
	.4byte gRam
_080F8534:
	.4byte 0x00000FC2
_080F8538:
	.4byte 0x00000F52
_080F853C:
	.4byte 0x00000F82
_080F8540:
	.4byte 0x00000FB2
_080F8544:
	.4byte gUnknown_08179FB4
_080F8548:
	.4byte gUnknown_08179FB8
_080F854C:
	.4byte 0x00000EE2
_080F8550:
	.4byte 0x00000964
_080F8554:
	.4byte gUnknown_08179FBC
_080F8558:
	.4byte gUnknown_08179FC0
_080F855C:
	.4byte 0x00000F22
_080F8560:
	.4byte gUnknown_08179FC4
_080F8564:
	.4byte gUnknown_08179FC8
_080F8568:
	.4byte 0x00001012
_080F856C:
	.4byte 0x00001032
_080F8570:
	cmp r0, #47
	bls _080F8584
	ldr r1, _080F8580  @ =0x00000F62
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #0
	b _080F858C
	.byte 0x00
	.byte 0x00
_080F8580:
	.4byte 0x00000F62
_080F8584:
	ldr r2, _080F8594  @ =0x00000F62
	add r0, r6, r2
	add r0, r1, r0
	mov r1, #2
_080F858C:
	strb r1, [r0]
_080F858E:
	pop {r4-r7}
	pop {r0}
	bx r0
_080F8594:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080F8434

	THUMB_FUNC_START sub_080F8598
sub_080F8598: @ 0x080F8598
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r4, r1, #0
	ldr r5, _080F85F0  @ =gRam
	ldr r2, _080F85F4  @ =0x00000FC2
	add r0, r5, r2
	add r2, r1, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080F85BE
	ldr r3, _080F85F8  @ =0x00000F52
	add r0, r5, r3
	add r0, r1, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #32
	strb r0, [r2]
_080F85BE:
	ldr r0, _080F85FC  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r3, _080F8600  @ =gUnknown_08179FCC
	add r0, r0, #144
	add r2, r5, r0
	add r2, r4, r2
	ldrb r0, [r2]
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r3, _080F8604  @ =0x00000F12
	add r1, r5, r3
	add r1, r4, r1
	ldr r3, _080F8608  @ =gUnknown_08179FD0
	ldrb r0, [r2]
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r4, #0
	bl Sprite3_Move
	pop {r4,r5}
	pop {r0}
	bx r0
_080F85F0:
	.4byte gRam
_080F85F4:
	.4byte 0x00000FC2
_080F85F8:
	.4byte 0x00000F52
_080F85FC:
	.4byte 0x00000F22
_080F8600:
	.4byte gUnknown_08179FCC
_080F8604:
	.4byte 0x00000F12
_080F8608:
	.4byte gUnknown_08179FD0
	THUMB_FUNC_END sub_080F8598

	THUMB_FUNC_START sub_080F860C
sub_080F860C: @ 0x080F860C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r4, r1, #0
	ldr r5, _080F8674  @ =gRam
	ldr r2, _080F8678  @ =0x00000FC2
	add r0, r5, r2
	add r3, r1, r0
	ldrb r2, [r3]
	cmp r2, #0
	bne _080F862E
	ldr r6, _080F867C  @ =0x00000F52
	add r0, r5, r6
	add r0, r1, r0
	strb r2, [r0]
	mov r0, #128
	strb r0, [r3]
_080F862E:
	ldr r0, _080F8680  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r3, _080F8684  @ =gUnknown_08179FD4
	ldr r6, _080F8688  @ =0x00000FB2
	add r2, r5, r6
	add r2, r4, r2
	ldrb r0, [r2]
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F868C  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldr r3, _080F8690  @ =gUnknown_08179FD8
	ldrb r0, [r2]
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080F8694  @ =0x00000F62
	add r2, r5, r1
	add r2, r4, r2
	ldr r6, _080F8698  @ =0x00000996
	add r0, r5, r6
	ldrb r0, [r0]
	lsr r0, r0, #2
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	pop {r4-r6}
	pop {r0}
	bx r0
_080F8674:
	.4byte gRam
_080F8678:
	.4byte 0x00000FC2
_080F867C:
	.4byte 0x00000F52
_080F8680:
	.4byte 0x00000F22
_080F8684:
	.4byte gUnknown_08179FD4
_080F8688:
	.4byte 0x00000FB2
_080F868C:
	.4byte 0x00000F12
_080F8690:
	.4byte gUnknown_08179FD8
_080F8694:
	.4byte 0x00000F62
_080F8698:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080F860C

	THUMB_FUNC_START sub_080F869C
sub_080F869C: @ 0x080F869C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F877E
	ldr r1, _080F8790  @ =gUnknown_08179FDC
	ldr r2, _080F8794  @ =gRam
	ldr r3, _080F8798  @ =0x00000FB2
	add r0, r2, r3
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, r1
	ldrb r1, [r0]
	ldr r7, _080F879C  @ =0x00000F62
	add r0, r2, r7
	add r0, r4, r0
	ldrb r0, [r0]
	add r1, r1, r0
	lsl r0, r1, #2
	add r0, r0, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	mov r0, #4
	str r0, [sp, #8]
	mov r8, r2
	ldr r1, _080F87A0  @ =0x00000964
	add r1, r1, r8
	mov r10, r1
_080F86EE:
	ldr r0, [sp, #8]
	add r0, r0, r9
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	ldr r0, _080F87A4  @ =gUnknown_0817A0D0
	add r0, r5, r0
	ldrb r0, [r0]
	add r6, r0, #0
	ldr r0, _080F87A8  @ =gUnknown_0817A10C
	add r0, r5, r0
	ldr r1, _080F87AC  @ =0x00000969
	add r1, r1, r8
	ldrb r2, [r0]
	ldrb r0, [r1]
	add r4, r0, #0
	orr r4, r4, r2
	add r0, r6, #0
	sub r0, r0, #36
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #2
	bhi _080F8724
	mov r0, #241
	and r4, r4, r0
	mov r0, #6
	orr r4, r4, r0
_080F8724:
	ldr r2, _080F87B0  @ =gUnknown_03003E74
	add r0, sp, #4
	ldrb r1, [r0]
	ldrh r0, [r2]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r8
	ldr r1, _080F87B4  @ =gUnknown_08179FE0
	lsl r3, r5, #1
	add r1, r3, r1
	ldrh r1, [r1]
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080F87B8  @ =gUnknown_0817A058
	add r3, r3, r2
	ldrh r2, [r3]
	mov r3, r10
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	lsl r3, r4, #8
	add r3, r6, r3
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r4, _080F87BC  @ =gUnknown_0817A148
	add r4, r5, r4
	ldrb r4, [r4]
	str r4, [sp]
	bl sub_080C6368
	ldr r7, [sp, #8]
	lsl r0, r7, #24
	mov r1, #255
	lsl r1, r1, #24
	add r0, r0, r1
	lsr r3, r0, #24
	str r3, [sp, #8]
	cmp r0, #0
	bge _080F86EE
_080F877E:
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F8790:
	.4byte gUnknown_08179FDC
_080F8794:
	.4byte gRam
_080F8798:
	.4byte 0x00000FB2
_080F879C:
	.4byte 0x00000F62
_080F87A0:
	.4byte 0x00000964
_080F87A4:
	.4byte gUnknown_0817A0D0
_080F87A8:
	.4byte gUnknown_0817A10C
_080F87AC:
	.4byte 0x00000969
_080F87B0:
	.4byte gUnknown_03003E74
_080F87B4:
	.4byte gUnknown_08179FE0
_080F87B8:
	.4byte gUnknown_0817A058
_080F87BC:
	.4byte gUnknown_0817A148
	THUMB_FUNC_END sub_080F869C

	THUMB_FUNC_START sub_080F87C0
sub_080F87C0: @ 0x080F87C0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r7, _080F87FC  @ =gRam
	ldr r0, _080F8800  @ =0x00000FB2
	add r4, r7, r0
	add r4, r6, r4
	ldrb r5, [r4]
	add r0, r6, #0
	bl sub_080C2FA8
	add r1, r0, #0
	strb r1, [r4]
	lsl r0, r1, #24
	lsr r0, r0, #24
	cmp r5, r0
	beq _080F87F6
	eor r5, r5, r1
	mov r0, #2
	and r5, r5, r0
	cmp r5, #0
	bne _080F87F6
	ldr r1, _080F8804  @ =0x00000FD2
	add r0, r7, r1
	add r0, r6, r0
	mov r1, #12
	strb r1, [r0]
_080F87F6:
	pop {r4-r7}
	pop {r0}
	bx r0
_080F87FC:
	.4byte gRam
_080F8800:
	.4byte 0x00000FB2
_080F8804:
	.4byte 0x00000FD2
	THUMB_FUNC_END sub_080F87C0

	THUMB_FUNC_START sub_080F8808
sub_080F8808: @ 0x080F8808
	bx lr
	THUMB_FUNC_END sub_080F8808

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F880C
sub_080F880C: @ 0x080F880C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r3, _080F8838  @ =gRam
	ldr r2, _080F883C  @ =0x00000FC2
	add r0, r3, r2
	add r2, r1, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080F8830
	ldr r4, _080F8840  @ =0x00000F52
	add r0, r3, r4
	add r0, r1, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #16
	strb r0, [r2]
_080F8830:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F8838:
	.4byte gRam
_080F883C:
	.4byte 0x00000FC2
_080F8840:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F880C

	THUMB_FUNC_START sub_080F8844
sub_080F8844: @ 0x080F8844
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r2, _080F888C  @ =gRam
	ldr r1, _080F8890  @ =0x00000FC2
	add r0, r2, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F88DA
	ldr r0, _080F8894  @ =0x00000F52
	add r1, r2, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080F8898  @ =0x00000F82
	add r1, r2, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F88A0
	ldr r1, _080F889C  @ =0x000009AC
	add r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #26
	beq _080F88A0
	bl GetRandomInt
	mov r2, #3
	and r2, r2, r0
	b _080F88AA
	.byte 0x00
	.byte 0x00
_080F888C:
	.4byte gRam
_080F8890:
	.4byte 0x00000FC2
_080F8894:
	.4byte 0x00000F52
_080F8898:
	.4byte 0x00000F82
_080F889C:
	.4byte 0x000009AC
_080F88A0:
	add r0, r5, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r2, r0, #24
_080F88AA:
	ldr r4, _080F88E8  @ =gRam
	ldr r0, _080F88EC  @ =0x00000F22
	add r1, r4, r0
	add r1, r5, r1
	ldr r0, _080F88F0  @ =gUnknown_0822A938
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F88F4  @ =0x00000F12
	add r1, r4, r0
	add r1, r5, r1
	ldr r0, _080F88F8  @ =gUnknown_0822A93A
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	bl GetRandomInt
	ldr r1, _080F88FC  @ =0x00001152
	add r4, r4, r1
	add r4, r5, r4
	mov r1, #7
	and r1, r1, r0
	add r1, r1, #19
	strb r1, [r4]
_080F88DA:
	add r0, r5, #0
	bl sub_080F90E4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F88E8:
	.4byte gRam
_080F88EC:
	.4byte 0x00000F22
_080F88F0:
	.4byte gUnknown_0822A938
_080F88F4:
	.4byte 0x00000F12
_080F88F8:
	.4byte gUnknown_0822A93A
_080F88FC:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080F8844

	THUMB_FUNC_START sub_080F8900
sub_080F8900: @ 0x080F8900
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C99DC
	add r0, r4, #0
	bl sub_080C7A20
	ldr r5, _080F898C  @ =gRam
	ldr r1, _080F8990  @ =0x00001152
	add r0, r5, r1
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #2
	mov r6, #0
	strb r0, [r2]
	sub r1, r1, #16
	add r0, r5, r1
	add r3, r4, r0
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F896E
	strb r6, [r3]
	strb r6, [r2]
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r2, _080F8994  @ =0x0000097C
	add r0, r5, r2
	ldrb r0, [r0]
	add r0, r0, #48
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #95
	bhi _080F895C
	ldr r1, _080F8998  @ =0x0000097D
	add r0, r5, r1
	ldrb r0, [r0]
	add r0, r0, #48
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #95
	bls _080F89AC
_080F895C:
	ldr r2, _080F899C  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	strb r6, [r0]
	ldr r1, _080F89A0  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #16
	strb r1, [r0]
_080F896E:
	ldr r2, _080F89A4  @ =0x00001052
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F89A8  @ =0x00000F92
	add r2, r5, r1
	add r2, r4, r2
	lsl r0, r0, #24
	lsr r0, r0, #27
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	b _080F89DA
_080F898C:
	.4byte gRam
_080F8990:
	.4byte 0x00001152
_080F8994:
	.4byte 0x0000097C
_080F8998:
	.4byte 0x0000097D
_080F899C:
	.4byte 0x00000F52
_080F89A0:
	.4byte 0x00000FC2
_080F89A4:
	.4byte 0x00001052
_080F89A8:
	.4byte 0x00000F92
_080F89AC:
	ldr r2, _080F89E0  @ =0x00000F52
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #31
	bl sub_080C2CB4
	bl sub_080CA32C
	lsl r0, r0, #24
	ldr r2, _080F89E4  @ =0x00000FB2
	add r1, r5, r2
	add r1, r4, r1
	lsr r0, r0, #25
	strb r0, [r1]
	ldr r1, _080F89E8  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #95
	strb r1, [r0]
_080F89DA:
	pop {r4-r6}
	pop {r0}
	bx r0
_080F89E0:
	.4byte 0x00000F52
_080F89E4:
	.4byte 0x00000FB2
_080F89E8:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080F8900

	THUMB_FUNC_START sub_080F89EC
sub_080F89EC: @ 0x080F89EC
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080F8B04  @ =gRam
	ldr r1, _080F8B08  @ =0x00000FC2
	add r0, r3, r1
	add r7, r4, r0
	ldrb r0, [r7]
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080F8A0C
	b _080F8C24
_080F8A0C:
	lsr r0, r0, #26
	add r2, r0, #0
	ldr r5, _080F8B0C  @ =0x00000FB2
	add r0, r3, r5
	add r0, r4, r0
	ldrb r0, [r0]
	mov r9, r0
	ldr r6, _080F8B10  @ =0x00000F92
	add r1, r3, r6
	add r1, r4, r1
	ldr r0, _080F8B14  @ =gUnknown_0817A190
	add r0, r2, r0
	ldrb r0, [r0]
	mov r5, #0
	strb r0, [r1]
	ldr r0, _080F8B18  @ =0x00000F62
	add r1, r3, r0
	add r1, r4, r1
	ldr r6, _080F8B1C  @ =gUnknown_0817A1A8
	mov r12, r6
	ldr r0, _080F8B20  @ =gUnknown_0817A1F0
	add r0, r0, r9
	ldrb r0, [r0]
	add r0, r2, r0
	add r0, r0, r12
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080F8B24  @ =0x00000968
	add r1, r1, r3
	mov r8, r1
	strb r0, [r1]
	ldr r6, _080F8B28  @ =0x00000969
	add r1, r3, r6
	strb r5, [r1]
	lsl r0, r0, #24
	cmp r0, #0
	bge _080F8A5C
	mov r0, #1
	neg r0, r0
	strb r0, [r1]
_080F8A5C:
	ldr r0, _080F8B2C  @ =0x00000F72
	add r1, r3, r0
	add r1, r4, r1
	ldr r0, _080F8B30  @ =gUnknown_0817A1F8
	add r0, r0, r9
	ldrb r0, [r0]
	add r0, r2, r0
	add r0, r0, r12
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080F8B34  @ =0x0000096C
	add r2, r3, r1
	strb r0, [r2]
	ldr r6, _080F8B38  @ =0x0000096D
	add r1, r3, r6
	strb r5, [r1]
	lsl r0, r0, #24
	cmp r0, #0
	bge _080F8A86
	sub r0, r5, #1
	strb r0, [r1]
_080F8A86:
	ldr r1, _080F8B3C  @ =0x000010A2
	add r0, r3, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F8A94
	b _080F8C48
_080F8A94:
	ldr r5, _080F8B40  @ =0x00001622
	add r0, r3, r5
	ldrb r1, [r0]
	ldr r6, _080F8B44  @ =0x00001623
	add r0, r3, r6
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	mov r0, r8
	ldrh r0, [r0]
	add r1, r1, r0
	add r5, r5, #162
	add r0, r3, r5
	ldrh r0, [r0]
	sub r1, r1, r0
	add r1, r1, #12
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #23
	bls _080F8ABE
	b _080F8C48
_080F8ABE:
	add r6, r6, #1
	add r0, r3, r6
	ldrb r1, [r0]
	sub r5, r5, #159
	add r0, r3, r5
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	ldrh r2, [r2]
	add r1, r1, r2
	add r6, r6, #156
	add r0, r3, r6
	ldrh r0, [r0]
	sub r1, r1, r0
	add r1, r1, #12
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #31
	bls _080F8AE6
	b _080F8C48
_080F8AE6:
	ldrb r0, [r7]
	cmp r0, #45
	bls _080F8AEE
	b _080F8C48
_080F8AEE:
	ldr r1, _080F8B48  @ =0x000009AC
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #26
	bne _080F8B4C
	add r0, r4, #0
	mov r1, #83
	bl sub_080CF140
	b _080F8B52
	.byte 0x00
	.byte 0x00
_080F8B04:
	.4byte gRam
_080F8B08:
	.4byte 0x00000FC2
_080F8B0C:
	.4byte 0x00000FB2
_080F8B10:
	.4byte 0x00000F92
_080F8B14:
	.4byte gUnknown_0817A190
_080F8B18:
	.4byte 0x00000F62
_080F8B1C:
	.4byte gUnknown_0817A1A8
_080F8B20:
	.4byte gUnknown_0817A1F0
_080F8B24:
	.4byte 0x00000968
_080F8B28:
	.4byte 0x00000969
_080F8B2C:
	.4byte 0x00000F72
_080F8B30:
	.4byte gUnknown_0817A1F8
_080F8B34:
	.4byte 0x0000096C
_080F8B38:
	.4byte 0x0000096D
_080F8B3C:
	.4byte 0x000010A2
_080F8B40:
	.4byte 0x00001622
_080F8B44:
	.4byte 0x00001623
_080F8B48:
	.4byte 0x000009AC
_080F8B4C:
	mov r0, #7
	bl Sound_SetSfxPanWithPlayerCoords
_080F8B52:
	bl GetRandomInt
	mov r1, #3
	and r1, r1, r0
	add r1, r1, #1
	ldr r2, _080F8BA4  @ =gRam
	ldr r3, _080F8BA8  @ =0x000010A2
	add r0, r2, r3
	add r5, r4, r0
	mov r3, #0
	strb r1, [r5]
	ldr r6, _080F8BAC  @ =0x00001062
	add r0, r2, r6
	add r0, r4, r0
	strb r1, [r0]
	ldr r6, _080F8BB0  @ =0x000009AC
	add r0, r2, r6
	ldrb r0, [r0]
	cmp r0, #26
	beq _080F8C00
	cmp r1, #1
	beq _080F8BE8
	cmp r1, #2
	beq _080F8BD6
	cmp r1, #3
	beq _080F8BC0
	ldr r0, _080F8BB4  @ =0x00001002
	add r1, r2, r0
	add r1, r4, r1
	ldr r2, _080F8BB8  @ =gUnknown_0200233E
	ldrb r0, [r2]
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #0
	beq _080F8B9E
	cmp r0, #3
	bne _080F8BBC
_080F8B9E:
	strb r3, [r5]
	b _080F8C00
	.byte 0x00
	.byte 0x00
_080F8BA4:
	.4byte gRam
_080F8BA8:
	.4byte 0x000010A2
_080F8BAC:
	.4byte 0x00001062
_080F8BB0:
	.4byte 0x000009AC
_080F8BB4:
	.4byte 0x00001002
_080F8BB8:
	.4byte gUnknown_0200233E
_080F8BBC:
	strb r3, [r2]
	b _080F8C00
_080F8BC0:
	bl sub_080AA868
	cmp r0, #0
	bne _080F8BCC
	strb r0, [r5]
	b _080F8C00
_080F8BCC:
	mov r0, #1
	neg r0, r0
	bl sub_080AA83C
	b _080F8C00
_080F8BD6:
	ldr r2, _080F8BE4  @ =gUnknown_02002357
	ldrb r0, [r2]
	add r1, r0, #0
	cmp r1, #0
	beq _080F8BF2
	b _080F8BFC
	.byte 0x00
	.byte 0x00
_080F8BE4:
	.4byte gUnknown_02002357
_080F8BE8:
	ldr r2, _080F8BF8  @ =gUnknown_02002323
	ldrb r0, [r2]
	add r1, r0, #0
	cmp r1, #0
	bne _080F8BFC
_080F8BF2:
	strb r1, [r5]
	b _080F8C00
	.byte 0x00
	.byte 0x00
_080F8BF8:
	.4byte gUnknown_02002323
_080F8BFC:
	sub r0, r0, #1
	strb r0, [r2]
_080F8C00:
	ldr r2, _080F8C18  @ =gRam
	ldr r1, _080F8C1C  @ =0x000010A2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080F8C48
	ldr r3, _080F8C20  @ =0x00001062
	add r0, r2, r3
	add r0, r4, r0
	strb r1, [r0]
	b _080F8C48
_080F8C18:
	.4byte gRam
_080F8C1C:
	.4byte 0x000010A2
_080F8C20:
	.4byte 0x00001062
_080F8C24:
	ldr r5, _080F8C54  @ =0x00000F52
	add r0, r3, r5
	add r0, r4, r0
	strb r2, [r0]
	mov r0, #16
	strb r0, [r7]
	ldr r6, _080F8C58  @ =0x00000F62
	add r0, r3, r6
	add r0, r4, r0
	strb r2, [r0]
	ldr r1, _080F8C5C  @ =0x00000F72
	add r0, r3, r1
	add r0, r4, r0
	strb r2, [r0]
	ldr r5, _080F8C60  @ =0x000010A2
	add r0, r3, r5
	add r0, r4, r0
	strb r2, [r0]
_080F8C48:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080F8C54:
	.4byte 0x00000F52
_080F8C58:
	.4byte 0x00000F62
_080F8C5C:
	.4byte 0x00000F72
_080F8C60:
	.4byte 0x000010A2
	THUMB_FUNC_END sub_080F89EC

	THUMB_FUNC_START sub_080F8C64
sub_080F8C64: @ 0x080F8C64
	push {r4-r6,lr}
	mov r6, r8
	push {r6}
	add r6, r0, #0
	lsl r6, r6, #24
	lsr r6, r6, #24
	ldr r0, _080F8CD4  @ =gUnknown_03003E74
	mov r8, r0
	ldrh r4, [r0]
	lsl r4, r4, #3
	ldr r5, _080F8CD8  @ =gUnknown_03002780
	add r4, r4, r5
	add r0, r6, #0
	bl sub_080F8CEC
	ldrh r1, [r4, #2]
	ldr r2, _080F8CDC  @ =0x000010A9
	add r0, r5, r2
	strb r1, [r0]
	ldrb r1, [r4]
	add r2, r2, #1
	add r0, r5, r2
	strb r1, [r0]
	mov r1, r8
	ldrh r0, [r1]
	add r0, r0, #6
	strh r0, [r1]
	ldr r2, _080F8CE0  @ =0x00000A42
	add r0, r5, r2
	add r0, r6, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080F8CE4  @ =gUnknown_0817A200
	add r1, r1, r0
	add r0, r6, #0
	mov r2, #2
	bl sub_080C9480
	ldr r0, _080F8CE8  @ =0x00000AC2
	add r5, r5, r0
	ldrb r4, [r5]
	sub r0, r4, #6
	strb r0, [r5]
	add r0, r6, #0
	bl sub_080C6230
	strb r4, [r5]
	add r0, r6, #0
	bl sub_080F8F70
	pop {r3}
	mov r8, r3
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F8CD4:
	.4byte gUnknown_03003E74
_080F8CD8:
	.4byte gUnknown_03002780
_080F8CDC:
	.4byte 0x000010A9
_080F8CE0:
	.4byte 0x00000A42
_080F8CE4:
	.4byte gUnknown_0817A200
_080F8CE8:
	.4byte 0x00000AC2
	THUMB_FUNC_END sub_080F8C64

	THUMB_FUNC_START sub_080F8CEC
sub_080F8CEC: @ 0x080F8CEC
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #20
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #4]
	ldr r7, _080F8DD4  @ =gRam
	ldr r1, _080F8DD8  @ =0x00000F52
	add r0, r7, r1
	ldr r2, [sp, #4]
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #2
	beq _080F8D10
	b _080F8F4A
_080F8D10:
	ldr r3, _080F8DDC  @ =0x000010D2
	add r0, r7, r3
	add r0, r2, r0
	ldrb r0, [r0]
	str r0, [sp, #8]
	cmp r0, #0
	beq _080F8D20
	b _080F8F4A
_080F8D20:
	ldr r5, _080F8DE0  @ =0x00000F62
	add r5, r5, r7
	mov r9, r5
	add r9, r9, r2
	mov r0, r9
	ldrb r0, [r0]
	str r0, [sp, #12]
	add r1, r1, #32
	add r0, r7, r1
	add r0, r2, r0
	ldrb r4, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r6, r7, r2
	ldrh r0, [r6]
	add r0, r0, #4
	strh r0, [r6]
	ldr r3, _080F8DE4  @ =0x00000964
	add r3, r3, r7
	mov r8, r3
	ldrh r0, [r3]
	add r0, r0, #3
	strh r0, [r3]
	ldr r5, _080F8DE8  @ =gUnknown_03003E74
	mov r10, r5
	ldrh r0, [r5]
	add r0, r0, #5
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldrh r1, [r6]
	ldrh r2, [r3]
	ldr r5, _080F8DEC  @ =gUnknown_03002B99
	mov r3, #0
	ldrsb r3, [r5, r3]
	lsl r3, r3, #8
	add r3, r3, #254
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r5, [sp, #8]
	str r5, [sp]
	bl sub_080C6004
	mov r1, r10
	ldrh r0, [r1]
	ldr r2, [sp, #12]
	lsl r5, r2, #24
	asr r5, r5, #24
	ldrh r6, [r6]
	add r5, r5, r6
	lsl r5, r5, #16
	lsr r5, r5, #16
	lsl r4, r4, #24
	asr r4, r4, #24
	mov r3, r8
	ldrh r3, [r3]
	add r4, r4, r3
	lsl r4, r4, #16
	lsr r4, r4, #16
	ldr r1, _080F8DEC  @ =gUnknown_03002B99
	mov r3, #0
	ldrsb r3, [r1, r3]
	lsl r3, r3, #8
	add r3, r3, #254
	lsl r3, r3, #16
	lsr r3, r3, #16
	ldr r2, [sp, #8]
	str r2, [sp]
	add r1, r5, #0
	add r2, r4, #0
	bl sub_080C6004
	ldr r3, _080F8DF0  @ =0x00000FB2
	add r0, r7, r3
	ldr r5, [sp, #4]
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r2, _080F8DF4  @ =0x00000975
	add r0, r7, r2
	strb r1, [r0]
	mov r3, r9
	ldrb r1, [r3]
	ldr r5, _080F8DF8  @ =0x0000097C
	add r0, r7, r5
	strb r1, [r0]
	lsl r0, r1, #24
	cmp r0, #0
	blt _080F8DFC
	add r2, r2, #3
	add r0, r7, r2
	b _080F8E02
_080F8DD4:
	.4byte gRam
_080F8DD8:
	.4byte 0x00000F52
_080F8DDC:
	.4byte 0x000010D2
_080F8DE0:
	.4byte 0x00000F62
_080F8DE4:
	.4byte 0x00000964
_080F8DE8:
	.4byte gUnknown_03003E74
_080F8DEC:
	.4byte gUnknown_03002B99
_080F8DF0:
	.4byte 0x00000FB2
_080F8DF4:
	.4byte 0x00000975
_080F8DF8:
	.4byte 0x0000097C
_080F8DFC:
	neg r1, r1
	ldr r3, _080F8E24  @ =0x00000978
	add r0, r7, r3
_080F8E02:
	strb r1, [r0]
	ldr r2, _080F8E28  @ =gRam
	ldr r5, _080F8E2C  @ =0x00000F72
	add r0, r2, r5
	ldr r7, [sp, #4]
	add r0, r7, r0
	ldrb r1, [r0]
	ldr r3, _080F8E30  @ =0x0000097D
	add r0, r2, r3
	strb r1, [r0]
	lsl r0, r1, #24
	cmp r0, #0
	blt _080F8E38
	ldr r5, _080F8E34  @ =0x00000979
	add r0, r2, r5
	b _080F8E3E
	.byte 0x00
	.byte 0x00
_080F8E24:
	.4byte 0x00000978
_080F8E28:
	.4byte gRam
_080F8E2C:
	.4byte 0x00000F72
_080F8E30:
	.4byte 0x0000097D
_080F8E34:
	.4byte 0x00000979
_080F8E38:
	neg r1, r1
	ldr r7, _080F8E90  @ =0x00000979
	add r0, r2, r7
_080F8E3E:
	strb r1, [r0]
	mov r0, #1
	mov r8, r0
	mov r3, #3
	ldr r6, _080F8E94  @ =gRam
	mov r10, r6
	ldr r1, _080F8E98  @ =0x00000969
	add r1, r1, r6
	mov r9, r1
_080F8E50:
	ldr r2, _080F8E9C  @ =0x00000978
	add r0, r6, r2
	mov r2, #0
	ldrsb r2, [r0, r2]
	ldr r1, _080F8EA0  @ =gUnknown_0817A240
	lsl r3, r3, #24
	asr r0, r3, #24
	add r0, r0, r1
	ldrb r1, [r0]
	add r0, r2, #0
	mul r0, r1, r0
	asr r0, r0, #8
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080F8E90  @ =0x00000979
	add r0, r6, r5
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	mul r0, r1, r0
	asr r0, r0, #8
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r7, _080F8EA4  @ =gUnknown_03002BAC
	mov r0, #0
	ldrsb r0, [r7, r0]
	str r3, [sp, #16]
	cmp r0, #0
	blt _080F8EA8
	add r1, r4, #0
	b _080F8EB0
	.byte 0x00
	.byte 0x00
_080F8E90:
	.4byte 0x00000979
_080F8E94:
	.4byte gRam
_080F8E98:
	.4byte 0x00000969
_080F8E9C:
	.4byte 0x00000978
_080F8EA0:
	.4byte gUnknown_0817A240
_080F8EA4:
	.4byte gUnknown_03002BAC
_080F8EA8:
	mvn r0, r4
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
_080F8EB0:
	ldr r0, _080F8EC4  @ =0x0000097D
	add r0, r0, r10
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	blt _080F8EC8
	add r4, r2, #0
	b _080F8ED0
	.byte 0x00
	.byte 0x00
_080F8EC4:
	.4byte 0x0000097D
_080F8EC8:
	mvn r0, r2
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r4, r0, #24
_080F8ED0:
	ldr r0, _080F8F5C  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r8
	lsl r0, r0, #16
	lsr r0, r0, #16
	mov r3, #150
	lsl r3, r3, #4
	add r2, r6, r3
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r5, _080F8F60  @ =0x00000964
	add r3, r6, r5
	lsl r2, r4, #24
	asr r2, r2, #24
	ldrh r3, [r3]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r4, _080F8F64  @ =gUnknown_0817A244
	ldr r7, _080F8F68  @ =0x00000975
	add r3, r6, r7
	mov r5, #0
	ldrsb r5, [r3, r5]
	add r4, r5, r4
	ldrb r3, [r4]
	ldr r4, _080F8F6C  @ =gUnknown_0817A24C
	add r5, r5, r4
	ldrb r4, [r5]
	mov r7, r9
	mov r5, #0
	ldrsb r5, [r7, r5]
	orr r4, r4, r5
	lsl r4, r4, #8
	add r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r4, #0
	str r4, [sp]
	bl sub_080C6004
	mov r0, r8
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	ldr r1, [sp, #16]
	mov r2, #255
	lsl r2, r2, #24
	add r0, r1, r2
	lsr r3, r0, #24
	cmp r0, #0
	bge _080F8E50
	ldr r0, [sp, #4]
	mov r1, #0
	mov r2, #5
	bl sub_080C6350
_080F8F4A:
	add sp, sp, #20
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F8F5C:
	.4byte gUnknown_03003E74
_080F8F60:
	.4byte 0x00000964
_080F8F64:
	.4byte gUnknown_0817A244
_080F8F68:
	.4byte 0x00000975
_080F8F6C:
	.4byte gUnknown_0817A24C
	THUMB_FUNC_END sub_080F8CEC

	THUMB_FUNC_START sub_080F8F70
sub_080F8F70: @ 0x080F8F70
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	ldr r1, _080F8FA4  @ =gRam
	ldr r2, _080F8FA8  @ =0x000010A2
	add r0, r1, r2
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F9052
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #3
	beq _080F8FB0
	ldr r3, _080F8FAC  @ =0x00000964
	add r0, r1, r3
	strb r2, [r0]
	b _080F8FC0
	.byte 0x00
	.byte 0x00
_080F8FA4:
	.4byte gRam
_080F8FA8:
	.4byte 0x000010A2
_080F8FAC:
	.4byte 0x00000964
_080F8FB0:
	ldr r4, _080F9064  @ =0x00001002
	add r0, r1, r4
	add r0, r0, r8
	ldrb r0, [r0]
	add r0, r0, #2
	ldr r5, _080F9068  @ =0x00000964
	add r1, r1, r5
	strb r0, [r1]
_080F8FC0:
	mov r0, #16
	bl sub_080CF3A0
	mov r0, #3
	mov r7, #0
	ldr r1, _080F906C  @ =gRam
	mov r10, r1
	ldr r2, _080F9068  @ =0x00000964
	add r2, r2, r10
	mov r9, r2
_080F8FD4:
	mov r3, r9
	ldrb r4, [r3]
	lsl r4, r4, #2
	lsl r6, r0, #24
	asr r6, r6, #24
	orr r4, r4, r6
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080F9070  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r7
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r2, _080F9074  @ =0x000015F9
	add r2, r2, r10
	ldr r1, _080F9078  @ =gUnknown_0817A254
	add r1, r4, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080F907C  @ =gUnknown_0817A268
	add r2, r4, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	ldr r5, _080F9080  @ =gUnknown_0300382A
	ldrb r5, [r5]
	add r2, r2, r5
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080F9084  @ =gUnknown_0817A27C
	add r4, r4, r3
	ldrb r3, [r4]
	ldr r4, _080F9088  @ =gUnknown_0817A290
	mov r12, r4
	mov r5, r9
	mov r4, #0
	ldrsb r4, [r5, r4]
	add r4, r4, r12
	ldrb r4, [r4]
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r4, #0
	str r4, [sp]
	bl sub_080C6004
	sub r6, r6, #1
	lsl r6, r6, #24
	add r0, r7, #1
	lsl r0, r0, #24
	lsr r7, r0, #24
	lsr r0, r6, #24
	cmp r6, #0
	bge _080F8FD4
	mov r0, r8
	mov r1, #0
	mov r2, #3
	bl sub_080C6350
_080F9052:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F9064:
	.4byte 0x00001002
_080F9068:
	.4byte 0x00000964
_080F906C:
	.4byte gRam
_080F9070:
	.4byte gUnknown_03003E74
_080F9074:
	.4byte 0x000015F9
_080F9078:
	.4byte gUnknown_0817A254
_080F907C:
	.4byte gUnknown_0817A268
_080F9080:
	.4byte gUnknown_0300382A
_080F9084:
	.4byte gUnknown_0817A27C
_080F9088:
	.4byte gUnknown_0817A290
	THUMB_FUNC_END sub_080F8F70

	THUMB_FUNC_START sub_080F908C
sub_080F908C: @ 0x080F908C
	bx lr
	THUMB_FUNC_END sub_080F908C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F9090
sub_080F9090: @ 0x080F9090
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F9114
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F90D2
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F90D2
	add r0, r4, #0
	bl sub_080C5044
	ldr r1, _080F90D8  @ =gUnknown_0817A184
	ldr r0, _080F90DC  @ =gRam
	ldr r2, _080F90E0  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F90D2:
	pop {r4}
	pop {r0}
	bx r0
_080F90D8:
	.4byte gUnknown_0817A184
_080F90DC:
	.4byte gRam
_080F90E0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F9090

	THUMB_FUNC_START sub_080F90E4
sub_080F90E4: @ 0x080F90E4
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080F9108  @ =gRam
	ldr r1, _080F910C  @ =0x00001052
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	ldr r2, _080F9110  @ =0x00000F92
	add r3, r3, r2
	add r0, r0, r3
	lsl r1, r1, #24
	lsr r1, r1, #27
	mov r2, #1
	and r1, r1, r2
	strb r1, [r0]
	bx lr
_080F9108:
	.4byte gRam
_080F910C:
	.4byte 0x00001052
_080F9110:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080F90E4

	THUMB_FUNC_START sub_080F9114
sub_080F9114: @ 0x080F9114
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F9134
	add r0, r4, #0
	bl sub_080F8C64
_080F9134:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F9114

	THUMB_FUNC_START sub_080F913C
sub_080F913C: @ 0x080F913C
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080F91B0
	ldr r6, _080F9184  @ =gRam
	ldr r2, _080F9188  @ =0x00000F52
	add r0, r6, r2
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080F9190
	add r2, r2, #80
	add r0, r6, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r0, _080F918C  @ =0x00001663
	add r1, r6, r0
	mov r0, #12
	strb r0, [r1]
	bl sub_0812F9A8
	add r0, r4, #0
	bl sub_081146A4
	b _080F91B0
_080F9184:
	.4byte gRam
_080F9188:
	.4byte 0x00000F52
_080F918C:
	.4byte 0x00001663
_080F9190:
	ldr r1, _080F91B8  @ =0x00000119
	add r0, r7, #0
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F91B0
	ldr r1, _080F91BC  @ =0x00001663
	add r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F91B0
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
_080F91B0:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080F91B8:
	.4byte 0x00000119
_080F91BC:
	.4byte 0x00001663
	THUMB_FUNC_END sub_080F913C

	THUMB_FUNC_START sub_080F91C0
sub_080F91C0: @ 0x080F91C0
	push {lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080F91EC  @ =gRam
	ldr r1, _080F91F0  @ =0x00001663
	add r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #12
	beq _080F91E0
	sub r1, r1, #1
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #48
	and r0, r0, r1
	cmp r0, #32
	beq _080F91F8
_080F91E0:
	ldr r1, _080F91F4  @ =0x00000FA2
	add r0, r2, r1
	add r0, r3, r0
	mov r1, #0
	strb r1, [r0]
	b _080F9204
_080F91EC:
	.4byte gRam
_080F91F0:
	.4byte 0x00001663
_080F91F4:
	.4byte 0x00000FA2
_080F91F8:
	ldr r0, _080F9208  @ =0x00001172
	add r1, r2, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F9204:
	pop {r0}
	bx r0
_080F9208:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080F91C0

	THUMB_FUNC_START sub_080F920C
sub_080F920C: @ 0x080F920C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	ldr r3, _080F9274  @ =gRam
	ldr r1, _080F9278  @ =0x00000ED2
	add r0, r3, r1
	add r0, r4, r0
	ldrb r0, [r0]
	mov r6, #150
	lsl r6, r6, #4
	add r2, r3, r6
	strb r0, [r2]
	add r1, r1, #32
	add r0, r3, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r6, r6, #1
	add r0, r3, r6
	strb r1, [r0]
	mov r1, #182
	lsl r1, r1, #5
	add r0, r3, r1
	ldrh r0, [r0]
	ldrh r2, [r2]
	cmp r0, r2
	bcs _080F9262
	ldr r6, _080F927C  @ =0x00000F52
	add r0, r3, r6
	add r0, r4, r0
	mov r1, #5
	strb r1, [r0]
	ldr r0, _080F9280  @ =0x00000EE2
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #9
	strb r0, [r1]
	ldr r1, _080F9284  @ =0x00000F92
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
_080F9262:
	ldr r6, _080F9288  @ =0x00001172
	add r1, r3, r6
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	pop {r4-r6}
	pop {r0}
	bx r0
_080F9274:
	.4byte gRam
_080F9278:
	.4byte 0x00000ED2
_080F927C:
	.4byte 0x00000F52
_080F9280:
	.4byte 0x00000EE2
_080F9284:
	.4byte 0x00000F92
_080F9288:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080F920C

	THUMB_FUNC_START sub_080F928C
sub_080F928C: @ 0x080F928C
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	ldr r5, _080F92D8  @ =gRam
	ldr r1, _080F92DC  @ =0x00000ED2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, #7
	mov r2, #182
	lsl r2, r2, #5
	add r1, r5, r2
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r1, [r1]
	cmp r0, r1
	bcs _080F9306
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #2
	bne _080F9306
	ldr r1, _080F92E0  @ =0x00001663
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F92E8
	ldr r1, _080F92E4  @ =0x00000197
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9164
	b _080F9306
	.byte 0x00
	.byte 0x00
_080F92D8:
	.4byte gRam
_080F92DC:
	.4byte 0x00000ED2
_080F92E0:
	.4byte 0x00001663
_080F92E4:
	.4byte 0x00000197
_080F92E8:
	mov r1, #201
	lsl r1, r1, #1
	add r0, r6, #0
	mov r2, sp
	bl sub_080C9164
	lsl r0, r0, #24
	cmp r0, #0
	beq _080F9306
	ldr r2, _080F9310  @ =0x00000F52
	add r1, r5, r2
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F9306:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F9310:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F928C

	THUMB_FUNC_START sub_080F9314
sub_080F9314: @ 0x080F9314
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080F9348  @ =gRam
	ldr r1, _080F934C  @ =0x00001AE2
	add r0, r6, r1
	ldrb r5, [r0]
	cmp r5, #0
	bne _080F9330
	bl sub_080AA868
	cmp r0, #79
	bgt _080F9354
_080F9330:
	mov r1, #202
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r1, _080F9350  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080F93A6
_080F9348:
	.4byte gRam
_080F934C:
	.4byte 0x00001AE2
_080F9350:
	.4byte 0x00000F52
_080F9354:
	mov r0, #80
	neg r0, r0
	bl sub_080AA83C
	ldr r1, _080F93B0  @ =0x00000193
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080F93B4  @ =0x00000F52
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F93B8  @ =0x00000F92
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080F93BC  @ =0x00000FC2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #80
	strb r1, [r0]
	ldr r0, _080F93C0  @ =gUnknown_0200EE18
	strb r5, [r0]
	add r0, r0, #1
	strb r5, [r0]
	ldr r1, _080F93C4  @ =0x00000FD2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #5
	strb r1, [r0]
	mov r0, #1
	bl sub_080AF5F8
	ldr r0, _080F93C8  @ =0x00000A3C
	add r1, r6, r0
	mov r0, #21
	strh r0, [r1]
_080F93A6:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F93B0:
	.4byte 0x00000193
_080F93B4:
	.4byte 0x00000F52
_080F93B8:
	.4byte 0x00000F92
_080F93BC:
	.4byte 0x00000FC2
_080F93C0:
	.4byte gUnknown_0200EE18
_080F93C4:
	.4byte 0x00000FD2
_080F93C8:
	.4byte 0x00000A3C
	THUMB_FUNC_END sub_080F9314

	THUMB_FUNC_START sub_080F93CC
sub_080F93CC: @ 0x080F93CC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r4, _080F9414  @ =gRam
	ldr r1, _080F9418  @ =0x00000FC2
	add r0, r4, r1
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F9424
	add r1, r1, #16
	add r0, r4, r1
	add r5, r3, r0
	ldrb r0, [r5]
	cmp r0, #0
	bne _080F943A
	ldr r0, _080F941C  @ =0x00000F92
	add r1, r4, r0
	add r1, r3, r1
	ldrb r0, [r1]
	mov r2, #3
	eor r0, r0, r2
	strb r0, [r1]
	mov r1, #1
	and r0, r0, r1
	cmp r0, #0
	beq _080F940C
	ldr r1, _080F9420  @ =0x00000F22
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #240
	strb r1, [r0]
_080F940C:
	mov r0, #5
	strb r0, [r5]
	b _080F943A
	.byte 0x00
	.byte 0x00
_080F9414:
	.4byte gRam
_080F9418:
	.4byte 0x00000FC2
_080F941C:
	.4byte 0x00000F92
_080F9420:
	.4byte 0x00000F22
_080F9424:
	ldr r0, _080F9440  @ =0x00000F52
	add r1, r4, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F9444  @ =0x00000F92
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #1
	strb r1, [r0]
_080F943A:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F9440:
	.4byte 0x00000F52
_080F9444:
	.4byte 0x00000F92
	THUMB_FUNC_END sub_080F93CC

	THUMB_FUNC_START sub_080F9448
sub_080F9448: @ 0x080F9448
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080F949C  @ =gRam
	ldr r0, _080F94A0  @ =0x00000B5C
	add r5, r3, r0
	ldrb r1, [r5]
	cmp r1, #0
	beq _080F9462
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F9496
_080F9462:
	ldr r1, _080F94A4  @ =0x0000180C
	add r0, r3, r1
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080F9496
	ldr r0, _080F94A8  @ =0x00000A3C
	add r1, r3, r0
	mov r2, #0
	mov r0, #14
	strh r0, [r1]
	ldr r0, _080F94AC  @ =0x00000F52
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080F94B0  @ =0x00001894
	add r0, r3, r1
	strb r2, [r0]
	ldr r0, _080F94B4  @ =0x00000195
	bl sub_080C95C0
	mov r0, #254
	strb r0, [r5]
_080F9496:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F949C:
	.4byte gRam
_080F94A0:
	.4byte 0x00000B5C
_080F94A4:
	.4byte 0x0000180C
_080F94A8:
	.4byte 0x00000A3C
_080F94AC:
	.4byte 0x00000F52
_080F94B0:
	.4byte 0x00001894
_080F94B4:
	.4byte 0x00000195
	THUMB_FUNC_END sub_080F9448

	THUMB_FUNC_START sub_080F94B8
sub_080F94B8: @ 0x080F94B8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F9560
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r5, r0, #24
	cmp r5, #0
	bne _080F94FE
	add r0, r4, #0
	bl sub_080C5080
	add r0, r4, #0
	bl Sprite3_Move
	ldr r1, _080F9504  @ =gRam
	ldr r2, _080F9508  @ =0x00000F22
	add r0, r1, r2
	add r0, r4, r0
	strb r5, [r0]
	ldr r2, _080F950C  @ =gUnknown_0817A298
	ldr r0, _080F9510  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	lsl r0, r0, #2
	add r0, r0, r2
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080F94FE:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F9504:
	.4byte gRam
_080F9508:
	.4byte 0x00000F22
_080F950C:
	.4byte gUnknown_0817A298
_080F9510:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F94B8

	THUMB_FUNC_START sub_080F9514
sub_080F9514: @ 0x080F9514
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F9538  @ =gRam
	ldr r3, _080F953C  @ =0x00000F52
	add r1, r2, r3
	add r0, r0, r1
	ldrb r1, [r0]
	add r1, r1, #1
	mov r3, #0
	strb r1, [r0]
	ldr r1, _080F9540  @ =0x00000B5D
	add r0, r2, r1
	strb r3, [r0]
	ldr r3, _080F9544  @ =0x00000B5C
	add r2, r2, r3
	mov r0, #30
	strb r0, [r2]
	bx lr
_080F9538:
	.4byte gRam
_080F953C:
	.4byte 0x00000F52
_080F9540:
	.4byte 0x00000B5D
_080F9544:
	.4byte 0x00000B5C
	THUMB_FUNC_END sub_080F9514

	THUMB_FUNC_START sub_080F9548
sub_080F9548: @ 0x080F9548
	push {lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #203
	lsl r1, r1, #1
	mov r2, sp
	bl sub_080C9164
	add sp, sp, #4
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F9548

	THUMB_FUNC_START sub_080F9560
sub_080F9560: @ 0x080F9560
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080F9598  @ =gRam
	ldr r1, _080F959C  @ =0x0000096C
	add r2, r0, r1
	mov r1, #3
	strh r1, [r2]
	ldr r1, _080F95A0  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r1, r0, #1
	add r1, r1, r0
	lsl r1, r1, #3
	ldr r0, _080F95A4  @ =gUnknown_0817A2B0
	add r1, r1, r0
	add r0, r4, #0
	bl sub_080C94D0
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F9598:
	.4byte gRam
_080F959C:
	.4byte 0x0000096C
_080F95A0:
	.4byte 0x00000F92
_080F95A4:
	.4byte gUnknown_0817A2B0
	THUMB_FUNC_END sub_080F9560

	THUMB_FUNC_START sub_080F95A8
sub_080F95A8: @ 0x080F95A8
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r0, _080F9628  @ =gUnknown_0817A2F8
	add r0, r4, r0
	ldrb r3, [r0]
	ldr r0, _080F962C  @ =gRam
	mov r1, #150
	lsl r1, r1, #4
	add r2, r0, r1
	mov r1, #31
	strb r1, [r2]
	ldr r5, _080F9630  @ =0x00000EE2
	add r1, r0, r5
	add r1, r1, r4
	mov r12, r1
	ldr r7, _080F9634  @ =0x00000F02
	add r1, r0, r7
	add r1, r1, r4
	mov r8, r1
	sub r5, r5, #16
	add r1, r0, r5
	add r6, r4, r1
	sub r7, r7, #16
	add r0, r0, r7
	add r5, r4, r0
_080F95E0:
	ldr r0, _080F9638  @ =gUnknown_0200F018
	add r1, r3, r0
	mov r7, r12
	ldrb r0, [r7]
	strb r0, [r1]
	ldr r0, _080F963C  @ =gUnknown_0200F0D8
	add r1, r3, r0
	mov r7, r8
	ldrb r0, [r7]
	strb r0, [r1]
	ldr r0, _080F9640  @ =gUnknown_0200F198
	add r1, r3, r0
	ldrb r0, [r6]
	strb r0, [r1]
	ldr r7, _080F9644  @ =gUnknown_0200F258
	add r1, r3, r7
	ldrb r0, [r5]
	strb r0, [r1]
	ldrb r1, [r2]
	sub r1, r1, #1
	strb r1, [r2]
	add r0, r3, #1
	lsl r0, r0, #24
	lsr r3, r0, #24
	lsl r1, r1, #24
	cmp r1, #0
	bge _080F95E0
	add r0, r4, #0
	bl sub_080E9A10
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F9628:
	.4byte gUnknown_0817A2F8
_080F962C:
	.4byte gRam
_080F9630:
	.4byte 0x00000EE2
_080F9634:
	.4byte 0x00000F02
_080F9638:
	.4byte gUnknown_0200F018
_080F963C:
	.4byte gUnknown_0200F0D8
_080F9640:
	.4byte gUnknown_0200F198
_080F9644:
	.4byte gUnknown_0200F258
	THUMB_FUNC_END sub_080F95A8

	THUMB_FUNC_START sub_080F9648
sub_080F9648: @ 0x080F9648
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	bl sub_080C1F70
	add r0, r7, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F96A6
	ldr r4, _080F96AC  @ =gRam
	ldr r0, _080F96B0  @ =0x00001052
	add r1, r4, r0
	add r1, r7, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r7, #0
	bl sub_080C5044
	ldr r1, _080F96B4  @ =0x00000F12
	add r5, r4, r1
	add r5, r7, r5
	ldrb r6, [r5]
	ldr r1, _080F96B8  @ =0x00001152
	add r0, r4, r1
	add r0, r7, r0
	ldrb r0, [r0]
	add r0, r6, r0
	strb r0, [r5]
	add r0, r7, #0
	bl Sprite3_Move
	strb r6, [r5]
	ldr r1, _080F96BC  @ =gUnknown_0817A32C
	ldr r0, _080F96C0  @ =0x00000F52
	add r4, r4, r0
	add r4, r7, r4
	ldrb r0, [r4]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r7, #0
	bl _call_via_r1
_080F96A6:
	pop {r4-r7}
	pop {r0}
	bx r0
_080F96AC:
	.4byte gRam
_080F96B0:
	.4byte 0x00001052
_080F96B4:
	.4byte 0x00000F12
_080F96B8:
	.4byte 0x00001152
_080F96BC:
	.4byte gUnknown_0817A32C
_080F96C0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F9648

	THUMB_FUNC_START sub_080F96C4
sub_080F96C4: @ 0x080F96C4
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080F977C  @ =gRam
	ldr r1, _080F9780  @ =0x00000FC2
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F96DE
	b _080F981A
_080F96DE:
	ldr r4, _080F9784  @ =gUnknown_0817A322
	bl GetRandomInt
	mov r1, #7
	and r1, r1, r0
	add r1, r1, r4
	ldrb r4, [r1]
	ldr r2, _080F9788  @ =0x00000FB2
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, r4
	bne _080F96FA
	b _080F981A
_080F96FA:
	ldr r1, _080F978C  @ =0x00000F62
	add r0, r6, r1
	add r0, r5, r0
	ldrb r0, [r0]
	mov r8, r0
	sub r2, r2, #64
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	mov r12, r0
	lsl r7, r0, #8
	ldr r0, _080F9790  @ =gUnknown_0817A2FE
	add r0, r4, r0
	mov r1, r8
	orr r1, r1, r7
	ldrb r0, [r0]
	add r1, r1, r0
	ldr r0, _080F9794  @ =gUnknown_0817A307
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	lsl r1, r1, #16
	lsr r3, r1, #16
	ldr r1, _080F9798  @ =0x00000F82
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r2, _080F979C  @ =0x00001082
	add r0, r6, r2
	add r0, r5, r0
	ldrb r2, [r0]
	lsl r2, r2, #8
	ldr r0, _080F97A0  @ =gUnknown_0817A310
	add r0, r4, r0
	orr r1, r1, r2
	ldrb r0, [r0]
	add r1, r1, r0
	ldr r0, _080F97A4  @ =gUnknown_0817A319
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	lsl r1, r1, #16
	lsr r2, r1, #16
	ldr r4, _080F97A8  @ =0x000009AC
	add r0, r6, r4
	ldrb r0, [r0]
	add r4, r6, #0
	cmp r0, #26
	bne _080F97DC
	mov r3, r8
	orr r3, r3, r7
	mov r0, r12
	cmp r0, #0
	bne _080F97B0
	ldr r1, _080F97AC  @ =0x00000F02
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080F97C4
	add r0, r3, #0
	add r0, r0, #192
	b _080F97C0
_080F977C:
	.4byte gRam
_080F9780:
	.4byte 0x00000FC2
_080F9784:
	.4byte gUnknown_0817A322
_080F9788:
	.4byte 0x00000FB2
_080F978C:
	.4byte 0x00000F62
_080F9790:
	.4byte gUnknown_0817A2FE
_080F9794:
	.4byte gUnknown_0817A307
_080F9798:
	.4byte 0x00000F82
_080F979C:
	.4byte 0x00001082
_080F97A0:
	.4byte gUnknown_0817A310
_080F97A4:
	.4byte gUnknown_0817A319
_080F97A8:
	.4byte 0x000009AC
_080F97AC:
	.4byte 0x00000F02
_080F97B0:
	ldr r2, _080F9824  @ =0x00000F02
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080F97C4
	add r0, r3, #0
	sub r0, r0, #192
_080F97C0:
	lsl r0, r0, #16
	lsr r3, r0, #16
_080F97C4:
	ldr r1, _080F9828  @ =gRam
	ldr r4, _080F982C  @ =0x00000F82
	add r0, r1, r4
	add r0, r5, r0
	ldrb r2, [r0]
	ldr r4, _080F9830  @ =0x00001082
	add r0, r1, r4
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r2, r2, r0
	add r4, r1, #0
_080F97DC:
	ldr r1, _080F9834  @ =gUnknown_0200F318
	add r0, r5, r1
	strb r3, [r0]
	ldr r0, _080F9838  @ =gUnknown_0200F31E
	add r1, r5, r0
	lsr r0, r3, #8
	strb r0, [r1]
	ldr r1, _080F983C  @ =gUnknown_0200F324
	add r0, r5, r1
	strb r2, [r0]
	ldr r0, _080F9840  @ =gUnknown_0200F32A
	add r1, r5, r0
	lsr r0, r2, #8
	strb r0, [r1]
	ldr r2, _080F9844  @ =0x00000F52
	add r1, r4, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r5, #0
	bl sub_080C351C
	ldr r1, _080F9848  @ =0x00001152
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #241
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080F9BB8
_080F981A:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080F9824:
	.4byte 0x00000F02
_080F9828:
	.4byte gRam
_080F982C:
	.4byte 0x00000F82
_080F9830:
	.4byte 0x00001082
_080F9834:
	.4byte gUnknown_0200F318
_080F9838:
	.4byte gUnknown_0200F31E
_080F983C:
	.4byte gUnknown_0200F324
_080F9840:
	.4byte gUnknown_0200F32A
_080F9844:
	.4byte 0x00000F52
_080F9848:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080F96C4

	THUMB_FUNC_START sub_080F984C
sub_080F984C: @ 0x080F984C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r5, r2, #0
	ldr r3, _080F98A4  @ =gRam
	ldr r1, _080F98A8  @ =0x00001052
	add r0, r3, r1
	add r4, r2, r0
	ldrb r1, [r4]
	mov r6, #3
	add r0, r6, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080F989C
	ldr r0, _080F98AC  @ =0x00001152
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F9886
	ldr r0, _080F98B0  @ =0x00000F52
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F9886:
	ldrb r1, [r4]
	add r0, r6, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080F989C
	add r0, r5, #0
	bl sub_080F9E78
	add r0, r5, #0
	bl sub_080F98B4
_080F989C:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F98A4:
	.4byte gRam
_080F98A8:
	.4byte 0x00001052
_080F98AC:
	.4byte 0x00001152
_080F98B0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F984C

	THUMB_FUNC_START sub_080F98B4
sub_080F98B4: @ 0x080F98B4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r1, _080F98E4  @ =gRam
	ldr r2, _080F98E8  @ =0x00000F12
	add r0, r1, r2
	add r3, r5, r0
	ldrb r2, [r3]
	mov r0, #150
	lsl r0, r0, #4
	add r4, r1, r0
	mov r0, #0
	ldrsb r0, [r4, r0]
	add r6, r1, #0
	cmp r2, r0
	beq _080F98F0
	ldrb r0, [r4]
	sub r0, r2, r0
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080F98EC
	sub r0, r2, #1
	b _080F98EE
_080F98E4:
	.4byte gRam
_080F98E8:
	.4byte 0x00000F12
_080F98EC:
	add r0, r2, #1
_080F98EE:
	strb r0, [r3]
_080F98F0:
	ldr r1, _080F9914  @ =0x00000F22
	add r0, r6, r1
	add r3, r5, r0
	ldrb r2, [r3]
	ldr r0, _080F9918  @ =0x00000961
	add r1, r6, r0
	mov r0, #0
	ldrsb r0, [r1, r0]
	cmp r2, r0
	beq _080F9920
	ldrb r0, [r1]
	sub r0, r2, r0
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080F991C
	sub r0, r2, #1
	b _080F991E
_080F9914:
	.4byte 0x00000F22
_080F9918:
	.4byte 0x00000961
_080F991C:
	add r0, r2, #1
_080F991E:
	strb r0, [r3]
_080F9920:
	pop {r4-r6}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F98B4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080F9928
sub_080F9928: @ 0x080F9928
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080F99E8  @ =gRam
	ldr r1, _080F99EC  @ =0x000010A2
	add r0, r5, r1
	add r3, r4, r0
	ldrb r0, [r3]
	mov r2, #1
	and r2, r2, r0
	ldr r6, _080F99F0  @ =0x00001152
	add r1, r5, r6
	add r1, r4, r1
	ldr r0, _080F99F4  @ =gUnknown_0817A340
	add r0, r2, r0
	ldrb r0, [r0]
	ldrb r6, [r1]
	add r0, r0, r6
	strb r0, [r1]
	ldr r1, _080F99F8  @ =gUnknown_0817A342
	add r2, r2, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r2, [r2]
	cmp r0, r2
	bne _080F9962
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
_080F9962:
	ldr r1, _080F99FC  @ =gUnknown_0200F318
	add r0, r4, r1
	ldrb r0, [r0]
	ldr r3, _080F9A00  @ =0x00000968
	add r2, r5, r3
	strb r0, [r2]
	ldr r6, _080F9A04  @ =gUnknown_0200F31E
	add r0, r4, r6
	ldrb r1, [r0]
	add r3, r3, #1
	add r0, r5, r3
	strb r1, [r0]
	add r6, r6, #6
	add r0, r4, r6
	ldrb r0, [r0]
	ldr r1, _080F9A08  @ =0x0000096C
	add r3, r5, r1
	strb r0, [r3]
	add r6, r6, #6
	add r0, r4, r6
	ldrb r1, [r0]
	ldr r6, _080F9A0C  @ =0x0000096D
	add r0, r5, r6
	strb r1, [r0]
	ldr r1, _080F9A10  @ =0x00001622
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r6, _080F9A14  @ =0x00001623
	add r0, r5, r6
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r1, r1, r0
	add r1, r1, #8
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #15
	bhi _080F99DA
	ldr r1, _080F9A18  @ =0x00001624
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r2, _080F9A1C  @ =0x00001625
	add r0, r5, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r3]
	sub r1, r1, r0
	add r1, r1, #8
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #15
	bhi _080F99DA
	ldr r3, _080F9A20  @ =0x00000F52
	add r1, r5, r3
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080F99DA:
	add r0, r4, #0
	bl sub_080F9E38
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F99E8:
	.4byte gRam
_080F99EC:
	.4byte 0x000010A2
_080F99F0:
	.4byte 0x00001152
_080F99F4:
	.4byte gUnknown_0817A340
_080F99F8:
	.4byte gUnknown_0817A342
_080F99FC:
	.4byte gUnknown_0200F318
_080F9A00:
	.4byte 0x00000968
_080F9A04:
	.4byte gUnknown_0200F31E
_080F9A08:
	.4byte 0x0000096C
_080F9A0C:
	.4byte 0x0000096D
_080F9A10:
	.4byte 0x00001622
_080F9A14:
	.4byte 0x00001623
_080F9A18:
	.4byte 0x00001624
_080F9A1C:
	.4byte 0x00001625
_080F9A20:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080F9928

	THUMB_FUNC_START sub_080F9A24
sub_080F9A24: @ 0x080F9A24
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r8, r4
	ldr r5, _080F9AA8  @ =gRam
	ldr r1, _080F9AAC  @ =0x00001052
	add r0, r5, r1
	add r6, r4, r0
	ldrb r1, [r6]
	mov r7, #3
	add r0, r7, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080F9A9C
	ldr r0, _080F9AB0  @ =0x00001152
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #16
	bne _080F9A7E
	ldr r0, _080F9AB4  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080F9BB8
	ldr r1, _080F9AB8  @ =0x00000EF2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #128
	strb r1, [r0]
	ldr r1, _080F9ABC  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #80
	strb r1, [r0]
_080F9A7E:
	ldrb r0, [r6]
	add r2, r7, #0
	and r2, r2, r0
	cmp r2, #0
	bne _080F9A9C
	mov r1, #150
	lsl r1, r1, #4
	add r0, r5, r1
	strb r2, [r0]
	add r1, r1, #1
	add r0, r5, r1
	strb r2, [r0]
	mov r0, r8
	bl sub_080F98B4
_080F9A9C:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F9AA8:
	.4byte gRam
_080F9AAC:
	.4byte 0x00001052
_080F9AB0:
	.4byte 0x00001152
_080F9AB4:
	.4byte 0x00000F52
_080F9AB8:
	.4byte 0x00000EF2
_080F9ABC:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080F9A24

	THUMB_FUNC_START sub_080F9AC0
sub_080F9AC0: @ 0x080F9AC0
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080F9B88  @ =gRam
	ldr r1, _080F9B8C  @ =0x00000FC2
	add r0, r6, r1
	add r0, r0, r5
	mov r8, r0
	ldrb r7, [r0]
	cmp r7, #0
	bne _080F9B7C
	ldr r4, _080F9B90  @ =gUnknown_0817A322
	bl GetRandomInt
	mov r1, #7
	and r1, r1, r0
	add r1, r1, r4
	ldrb r4, [r1]
	ldr r1, _080F9B94  @ =0x00000F62
	add r0, r6, r1
	add r0, r5, r0
	ldrb r3, [r0]
	add r1, r1, #16
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #8
	ldr r0, _080F9B98  @ =gUnknown_0817A2FE
	add r0, r4, r0
	orr r3, r3, r1
	ldrb r0, [r0]
	add r3, r3, r0
	ldr r0, _080F9B9C  @ =gUnknown_0817A307
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r3, r3, r0
	ldr r1, _080F9BA0  @ =0x00000F82
	add r0, r6, r1
	add r0, r5, r0
	ldrb r2, [r0]
	ldr r1, _080F9BA4  @ =0x00001082
	add r0, r6, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #8
	ldr r0, _080F9BA8  @ =gUnknown_0817A310
	add r0, r4, r0
	orr r2, r2, r1
	ldrb r0, [r0]
	add r2, r2, r0
	ldr r0, _080F9BAC  @ =gUnknown_0817A319
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r1, _080F9BB0  @ =0x00000FB2
	add r0, r6, r1
	add r0, r5, r0
	strb r4, [r0]
	sub r1, r1, #208
	add r0, r6, r1
	add r0, r5, r0
	strb r3, [r0]
	add r1, r1, #32
	add r0, r6, r1
	add r0, r5, r0
	lsr r3, r3, #8
	strb r3, [r0]
	sub r1, r1, #48
	add r0, r6, r1
	add r0, r5, r0
	strb r2, [r0]
	add r1, r1, #32
	add r0, r6, r1
	add r0, r5, r0
	lsr r2, r2, #8
	strb r2, [r0]
	add r1, r1, #96
	add r0, r6, r1
	add r0, r5, r0
	strb r7, [r0]
	mov r0, #48
	mov r1, r8
	strb r0, [r1]
	add r0, r5, #0
	bl sub_080C351C
	ldr r1, _080F9BB4  @ =0x00001152
	add r0, r6, r1
	add r0, r5, r0
	strb r7, [r0]
_080F9B7C:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F9B88:
	.4byte gRam
_080F9B8C:
	.4byte 0x00000FC2
_080F9B90:
	.4byte gUnknown_0817A322
_080F9B94:
	.4byte 0x00000F62
_080F9B98:
	.4byte gUnknown_0817A2FE
_080F9B9C:
	.4byte gUnknown_0817A307
_080F9BA0:
	.4byte 0x00000F82
_080F9BA4:
	.4byte 0x00001082
_080F9BA8:
	.4byte gUnknown_0817A310
_080F9BAC:
	.4byte gUnknown_0817A319
_080F9BB0:
	.4byte 0x00000FB2
_080F9BB4:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080F9AC0

	THUMB_FUNC_START sub_080F9BB8
sub_080F9BB8: @ 0x080F9BB8
	push {r4,r5,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #207
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080F9C06
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080F9C0C  @ =gRam
	ldr r1, _080F9C10  @ =0x00000F52
	add r0, r2, r1
	add r0, r4, r0
	mov r3, #0
	mov r1, #128
	strb r1, [r0]
	ldr r5, _080F9C14  @ =0x00000FC2
	add r0, r2, r5
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	ldr r1, _080F9C18  @ =0x00001122
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	ldr r5, _080F9C1C  @ =0x00001172
	add r0, r2, r5
	add r0, r4, r0
	strb r1, [r0]
	ldr r0, _080F9C20  @ =0x00001012
	add r2, r2, r0
	add r2, r4, r2
	strb r3, [r2]
_080F9C06:
	pop {r4,r5}
	pop {r0}
	bx r0
_080F9C0C:
	.4byte gRam
_080F9C10:
	.4byte 0x00000F52
_080F9C14:
	.4byte 0x00000FC2
_080F9C18:
	.4byte 0x00001122
_080F9C1C:
	.4byte 0x00001172
_080F9C20:
	.4byte 0x00001012
	THUMB_FUNC_END sub_080F9BB8

	THUMB_FUNC_START sub_080F9C24
sub_080F9C24: @ 0x080F9C24
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080F9D78  @ =gRam
	ldr r1, _080F9D7C  @ =0x00000F22
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r2, _080F9D80  @ =0x00000961
	add r0, r4, r2
	strb r1, [r0]
	ldr r3, _080F9D84  @ =0x00000F12
	add r0, r4, r3
	add r6, r5, r0
	ldr r1, _080F9D88  @ =0x00001152
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	ldrb r2, [r6]
	add r0, r0, r2
	mov r3, #150
	lsl r3, r3, #4
	add r1, r4, r3
	strb r0, [r1]
	bl sub_080CA32C
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080F9D8C  @ =0x00000F92
	add r1, r4, r2
	add r1, r1, r5
	mov r8, r1
	ldr r1, _080F9D90  @ =gUnknown_0817A388
	add r1, r0, r1
	ldrb r1, [r1]
	mov r3, r8
	strb r1, [r3]
	ldr r1, _080F9D94  @ =0x00001122
	add r3, r4, r1
	add r3, r5, r3
	ldrb r2, [r3]
	mov r1, #63
	and r1, r1, r2
	ldr r2, _080F9D98  @ =gUnknown_0817A398
	add r0, r0, r2
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r3]
	add r0, r5, #0
	bl sub_080C6240
	ldr r2, _080F9D9C  @ =0x00001052
	add r0, r4, r2
	add r0, r0, r5
	mov r12, r0
	ldrb r2, [r0]
	mov r0, #31
	ldr r1, _080F9DA0  @ =gUnknown_0817A2F8
	add r1, r5, r1
	and r0, r0, r2
	ldrb r1, [r1]
	add r0, r0, r1
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080F9DA4  @ =gUnknown_0200F018
	add r1, r2, r3
	ldr r3, _080F9DA8  @ =0x00000EE2
	add r0, r4, r3
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F9DAC  @ =gUnknown_0200F0D8
	add r1, r2, r0
	add r3, r3, #32
	add r0, r4, r3
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F9DB0  @ =gUnknown_0200F198
	add r1, r2, r0
	sub r3, r3, #48
	add r0, r4, r3
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080F9DB4  @ =gUnknown_0200F258
	add r1, r2, r0
	ldr r2, _080F9DB8  @ =0x00000EF2
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	mov r2, #0
	ldrb r1, [r6]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080F9CF2
	mov r2, #20
_080F9CF2:
	ldr r1, _080F9DBC  @ =gUnknown_03003E74
	lsr r0, r2, #2
	ldrh r3, [r1]
	add r0, r0, r3
	strh r0, [r1]
	mov r3, #0
	add r7, r4, #0
	mov r10, r8
	mov r9, r6
	mov r8, r12
	add r6, r1, #0
_080F9D08:
	ldr r0, _080F9DC0  @ =gUnknown_0817A3A8
	lsl r3, r3, #24
	asr r1, r3, #24
	add r0, r1, r0
	ldrb r0, [r0]
	mov r4, r10
	strb r0, [r4]
	ldr r0, _080F9DC4  @ =gUnknown_0817A384
	add r1, r1, r0
	mov r2, r8
	ldrb r0, [r2]
	ldrb r1, [r1]
	sub r0, r0, r1
	mov r2, #31
	ldr r1, _080F9DA0  @ =gUnknown_0817A2F8
	add r1, r5, r1
	and r0, r0, r2
	ldrb r1, [r1]
	add r0, r0, r1
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r4, _080F9DA4  @ =gUnknown_0200F018
	add r0, r2, r4
	ldrb r1, [r0]
	ldr r4, _080F9DC8  @ =0x00001622
	add r0, r7, r4
	strb r1, [r0]
	ldr r1, _080F9DAC  @ =gUnknown_0200F0D8
	add r0, r2, r1
	ldrb r1, [r0]
	add r4, r4, #1
	add r0, r7, r4
	strb r1, [r0]
	ldr r1, _080F9DB0  @ =gUnknown_0200F198
	add r0, r2, r1
	ldrb r1, [r0]
	add r4, r4, #1
	add r0, r7, r4
	strb r1, [r0]
	ldr r1, _080F9DB4  @ =gUnknown_0200F258
	add r0, r2, r1
	ldrb r1, [r0]
	ldr r2, _080F9DCC  @ =0x00001625
	add r0, r7, r2
	strb r1, [r0]
	mov r4, r9
	ldrb r1, [r4]
	mov r0, #128
	and r0, r0, r1
	add r4, r3, #0
	cmp r0, #0
	bne _080F9DD0
	ldrh r0, [r6]
	add r0, r0, #1
	b _080F9DD4
	.byte 0x00
	.byte 0x00
_080F9D78:
	.4byte gRam
_080F9D7C:
	.4byte 0x00000F22
_080F9D80:
	.4byte 0x00000961
_080F9D84:
	.4byte 0x00000F12
_080F9D88:
	.4byte 0x00001152
_080F9D8C:
	.4byte 0x00000F92
_080F9D90:
	.4byte gUnknown_0817A388
_080F9D94:
	.4byte 0x00001122
_080F9D98:
	.4byte gUnknown_0817A398
_080F9D9C:
	.4byte 0x00001052
_080F9DA0:
	.4byte gUnknown_0817A2F8
_080F9DA4:
	.4byte gUnknown_0200F018
_080F9DA8:
	.4byte 0x00000EE2
_080F9DAC:
	.4byte gUnknown_0200F0D8
_080F9DB0:
	.4byte gUnknown_0200F198
_080F9DB4:
	.4byte gUnknown_0200F258
_080F9DB8:
	.4byte 0x00000EF2
_080F9DBC:
	.4byte gUnknown_03003E74
_080F9DC0:
	.4byte gUnknown_0817A3A8
_080F9DC4:
	.4byte gUnknown_0817A384
_080F9DC8:
	.4byte 0x00001622
_080F9DCC:
	.4byte 0x00001625
_080F9DD0:
	ldrh r0, [r6]
	sub r0, r0, #1
_080F9DD4:
	strh r0, [r6]
	add r0, r5, #0
	bl sub_080C6240
	mov r1, #128
	lsl r1, r1, #17
	add r0, r4, r1
	lsr r3, r0, #24
	asr r0, r0, #24
	cmp r0, #4
	bne _080F9D08
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F9C24

	THUMB_FUNC_START sub_080F9DF8
sub_080F9DF8: @ 0x080F9DF8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r2, r4, #0
	ldr r0, _080F9E24  @ =gRam
	ldr r1, _080F9E28  @ =0x00000F52
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	beq _080F9E1C
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080F9E2C
	add r0, r4, #0
	bl sub_080F9C24
_080F9E1C:
	add r0, r4, #0
	bl sub_080F9648
	b _080F9E32
_080F9E24:
	.4byte gRam
_080F9E28:
	.4byte 0x00000F52
_080F9E2C:
	add r0, r2, #0
	bl sub_080F9ED4
_080F9E32:
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080F9DF8

	THUMB_FUNC_START sub_080F9E38
sub_080F9E38: @ 0x080F9E38
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080F9E78
	ldr r2, _080F9E6C  @ =gRam
	ldr r1, _080F9E70  @ =0x00000F12
	add r0, r2, r1
	add r0, r4, r0
	mov r3, #150
	lsl r3, r3, #4
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080F9E74  @ =0x00000F22
	add r0, r2, r1
	add r4, r4, r0
	add r3, r3, #1
	add r2, r2, r3
	ldrb r0, [r2]
	strb r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
_080F9E6C:
	.4byte gRam
_080F9E70:
	.4byte 0x00000F12
_080F9E74:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080F9E38

	THUMB_FUNC_START sub_080F9E78
sub_080F9E78: @ 0x080F9E78
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080F9EBC  @ =gRam
	ldr r2, _080F9EC0  @ =gUnknown_0200F318
	add r1, r0, r2
	ldrb r2, [r1]
	ldr r4, _080F9EC4  @ =0x00000968
	add r1, r3, r4
	strb r2, [r1]
	ldr r2, _080F9EC8  @ =gUnknown_0200F31E
	add r1, r0, r2
	ldrb r2, [r1]
	add r4, r4, #1
	add r1, r3, r4
	strb r2, [r1]
	ldr r2, _080F9ECC  @ =gUnknown_0200F324
	add r1, r0, r2
	ldrb r2, [r1]
	add r4, r4, #3
	add r1, r3, r4
	strb r2, [r1]
	ldr r2, _080F9ED0  @ =gUnknown_0200F32A
	add r1, r0, r2
	ldrb r1, [r1]
	add r4, r4, #1
	add r3, r3, r4
	strb r1, [r3]
	mov r1, #15
	bl sub_080C2DCC
	pop {r4}
	pop {r0}
	bx r0
_080F9EBC:
	.4byte gRam
_080F9EC0:
	.4byte gUnknown_0200F318
_080F9EC4:
	.4byte 0x00000968
_080F9EC8:
	.4byte gUnknown_0200F31E
_080F9ECC:
	.4byte gUnknown_0200F324
_080F9ED0:
	.4byte gUnknown_0200F32A
	THUMB_FUNC_END sub_080F9E78

	THUMB_FUNC_START sub_080F9ED4
sub_080F9ED4: @ 0x080F9ED4
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080F9F14
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080F9F02
	ldr r2, _080F9F08  @ =gRam
	ldr r1, _080F9F0C  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080F9F02
	ldr r3, _080F9F10  @ =0x00000FA2
	add r0, r2, r3
	add r0, r4, r0
	strb r1, [r0]
_080F9F02:
	pop {r4}
	pop {r0}
	bx r0
_080F9F08:
	.4byte gRam
_080F9F0C:
	.4byte 0x00000FC2
_080F9F10:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080F9ED4

	THUMB_FUNC_START sub_080F9F14
sub_080F9F14: @ 0x080F9F14
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r0, #8
	bl sub_080CF388
	ldr r0, _080F9F48  @ =gRam
	ldr r1, _080F9F4C  @ =0x00000FC2
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsr r1, r1, #1
	mov r0, #6
	and r1, r1, r0
	lsl r1, r1, #3
	ldr r0, _080F9F50  @ =gUnknown_0817A344
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #2
	bl sub_080C9480
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F9F48:
	.4byte gRam
_080F9F4C:
	.4byte 0x00000FC2
_080F9F50:
	.4byte gUnknown_0817A344
	THUMB_FUNC_END sub_080F9F14

	THUMB_FUNC_START sub_080F9F54
sub_080F9F54: @ 0x080F9F54
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r12, r4
	ldr r5, _080F9FE4  @ =gRam
	ldr r1, _080F9FE8  @ =0x00000FC2
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080F9FD6
	ldr r2, _080F9FEC  @ =0x00000FB2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r3, [r0]
	ldr r0, _080F9FF0  @ =gUnknown_0817A3B8
	add r0, r3, r0
	ldrb r2, [r0]
	ldr r0, _080F9FF4  @ =gUnknown_0817A3C0
	add r0, r3, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	ldr r7, _080F9FF8  @ =0x000016C4
	add r1, r5, r7
	orr r2, r2, r0
	ldrh r1, [r1]
	add r2, r2, r1
	ldr r0, _080F9FFC  @ =gUnknown_0817A3C4
	add r0, r3, r0
	ldrb r1, [r0]
	ldr r0, _080FA000  @ =gUnknown_0817A3BC
	add r3, r3, r0
	ldrb r0, [r3]
	lsl r0, r0, #8
	sub r7, r7, #4
	add r3, r5, r7
	orr r1, r1, r0
	ldrh r3, [r3]
	add r1, r1, r3
	ldr r3, _080FA004  @ =0x00000F62
	add r0, r5, r3
	add r0, r4, r0
	strb r2, [r0]
	ldr r7, _080FA008  @ =0x00000F72
	add r0, r5, r7
	add r0, r4, r0
	lsr r2, r2, #8
	strb r2, [r0]
	ldr r2, _080FA00C  @ =0x00000F82
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r3, _080FA010  @ =0x00001062
	add r0, r5, r3
	add r0, r4, r0
	lsr r1, r1, #8
	strb r1, [r0]
	sub r7, r7, #32
	add r1, r5, r7
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #80
	strb r0, [r6]
_080F9FD6:
	mov r0, r12
	bl sub_080FA2E8
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080F9FE4:
	.4byte gRam
_080F9FE8:
	.4byte 0x00000FC2
_080F9FEC:
	.4byte 0x00000FB2
_080F9FF0:
	.4byte gUnknown_0817A3B8
_080F9FF4:
	.4byte gUnknown_0817A3C0
_080F9FF8:
	.4byte 0x000016C4
_080F9FFC:
	.4byte gUnknown_0817A3C4
_080FA000:
	.4byte gUnknown_0817A3BC
_080FA004:
	.4byte 0x00000F62
_080FA008:
	.4byte 0x00000F72
_080FA00C:
	.4byte 0x00000F82
_080FA010:
	.4byte 0x00001062
	THUMB_FUNC_END sub_080F9F54

	THUMB_FUNC_START sub_080FA014
sub_080FA014: @ 0x080FA014
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r7, #0
	mov r6, #0
	ldr r5, _080FA044  @ =gRam
	ldr r1, _080FA048  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FA09A
	ldr r3, _080FA04C  @ =0x00000996
	add r0, r5, r3
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	beq _080FA050
	mov r6, #1
	b _080FA09C
	.byte 0x00
	.byte 0x00
_080FA044:
	.4byte gRam
_080FA048:
	.4byte 0x00000FC2
_080FA04C:
	.4byte 0x00000996
_080FA050:
	add r0, r4, #0
	bl sub_080CA3A0
	ldr r0, _080FA118  @ =0x00000968
	add r2, r5, r0
	ldr r1, _080FA11C  @ =0x00001622
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r3, _080FA120  @ =0x00001623
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	add r0, r0, #5
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #9
	bhi _080FA0A2
	ldr r0, _080FA124  @ =0x0000096C
	add r2, r5, r0
	ldr r1, _080FA128  @ =0x00001624
	add r0, r5, r1
	ldrb r1, [r0]
	ldr r3, _080FA12C  @ =0x00001625
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	add r0, r0, #5
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #9
	bhi _080FA0A2
_080FA09A:
	mov r7, #1
_080FA09C:
	mov r0, #0
	cmp r0, #0
	beq _080FA0CC
_080FA0A2:
	add r0, r4, #0
	mov r1, #24
	bl sub_080C2DCC
	ldr r2, _080FA130  @ =gRam
	ldr r1, _080FA134  @ =0x00000F12
	add r0, r2, r1
	add r0, r4, r0
	mov r3, #150
	lsl r3, r3, #4
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080FA138  @ =0x00000F22
	add r0, r2, r1
	add r0, r4, r0
	add r3, r3, #1
	add r2, r2, r3
	ldrb r1, [r2]
	strb r1, [r0]
	mov r6, #1
_080FA0CC:
	cmp r6, #0
	beq _080FA0F6
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C7A48
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FA0FA
	ldr r1, _080FA130  @ =gRam
	ldr r0, _080FA13C  @ =0x00001052
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080FA2E8
_080FA0F6:
	cmp r7, #0
	beq _080FA112
_080FA0FA:
	ldr r2, _080FA130  @ =gRam
	ldr r3, _080FA140  @ =0x00000F52
	add r1, r2, r3
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080FA144  @ =0x00000FC2
	add r2, r2, r0
	add r2, r4, r2
	mov r0, #32
	strb r0, [r2]
_080FA112:
	pop {r4-r7}
	pop {r0}
	bx r0
_080FA118:
	.4byte 0x00000968
_080FA11C:
	.4byte 0x00001622
_080FA120:
	.4byte 0x00001623
_080FA124:
	.4byte 0x0000096C
_080FA128:
	.4byte 0x00001624
_080FA12C:
	.4byte 0x00001625
_080FA130:
	.4byte gRam
_080FA134:
	.4byte 0x00000F12
_080FA138:
	.4byte 0x00000F22
_080FA13C:
	.4byte 0x00001052
_080FA140:
	.4byte 0x00000F52
_080FA144:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080FA014

	THUMB_FUNC_START sub_080FA148
sub_080FA148: @ 0x080FA148
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r7, _080FA1A0  @ =gRam
	ldr r1, _080FA1A4  @ =0x00000FC2
	add r0, r7, r1
	add r6, r5, r0
	ldrb r4, [r6]
	cmp r4, #0
	beq _080FA1B8
	cmp r4, #16
	bne _080FA17E
	add r0, r5, #0
	bl sub_080EC688
	add r1, r0, #0
	cmp r1, #0
	blt _080FA17E
	ldr r0, _080FA1A8  @ =gUnknown_0200233E
	ldrb r0, [r0]
	cmp r0, #3
	beq _080FA17E
	ldr r2, _080FA1AC  @ =0x000011B2
	add r0, r7, r2
	add r0, r1, r0
	mov r1, #0
	strb r1, [r0]
_080FA17E:
	ldr r0, _080FA1A0  @ =gRam
	ldr r3, _080FA1B0  @ =0x00000F92
	add r1, r0, r3
	add r1, r5, r1
	ldr r2, _080FA1B4  @ =gUnknown_0817A3D0
	add r3, r3, #32
	add r0, r0, r3
	add r0, r5, r0
	ldrb r0, [r0]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r5, #0
	bl sub_080C7A48
	b _080FA1CC
	.byte 0x00
	.byte 0x00
_080FA1A0:
	.4byte gRam
_080FA1A4:
	.4byte 0x00000FC2
_080FA1A8:
	.4byte gUnknown_0200233E
_080FA1AC:
	.4byte 0x000011B2
_080FA1B0:
	.4byte 0x00000F92
_080FA1B4:
	.4byte gUnknown_0817A3D0
_080FA1B8:
	bl GetRandomInt
	mov r1, #15
	and r1, r1, r0
	add r1, r1, #16
	strb r1, [r6]
	ldr r1, _080FA1D4  @ =0x00000F52
	add r0, r7, r1
	add r0, r5, r0
	strb r4, [r0]
_080FA1CC:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FA1D4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FA148

	THUMB_FUNC_START sub_080FA1D8
sub_080FA1D8: @ 0x080FA1D8
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r5, r2, #0
	ldr r4, _080FA248  @ =gRam
	ldr r1, _080FA24C  @ =0x00000FB2
	add r0, r4, r1
	add r6, r2, r0
	mov r0, #2
	strb r0, [r6]
	ldr r0, _080FA250  @ =0x00000996
	add r3, r4, r0
	ldrb r1, [r3]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	beq _080FA206
	ldr r0, _080FA254  @ =0x00001052
	add r1, r4, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FA206:
	lsl r0, r2, #3
	ldrb r3, [r3]
	add r0, r0, r3
	mov r1, #127
	and r0, r0, r1
	cmp r0, #0
	bne _080FA224
	ldr r1, _080FA258  @ =0x00000FC2
	add r0, r4, r1
	add r0, r2, r0
	mov r1, #16
	strb r1, [r0]
	add r0, r2, #0
	bl sub_080FA148
_080FA224:
	ldr r0, _080FA25C  @ =0x00000F92
	add r2, r4, r0
	add r2, r5, r2
	ldr r3, _080FA260  @ =gUnknown_0817A3C8
	ldr r1, _080FA254  @ =0x00001052
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	mov r0, #4
	and r0, r0, r1
	ldrb r1, [r6]
	orr r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	pop {r4-r6}
	pop {r0}
	bx r0
_080FA248:
	.4byte gRam
_080FA24C:
	.4byte 0x00000FB2
_080FA250:
	.4byte 0x00000996
_080FA254:
	.4byte 0x00001052
_080FA258:
	.4byte 0x00000FC2
_080FA25C:
	.4byte 0x00000F92
_080FA260:
	.4byte gUnknown_0817A3C8
	THUMB_FUNC_END sub_080FA1D8

	THUMB_FUNC_START sub_080FA264
sub_080FA264: @ 0x080FA264
	bx lr
	THUMB_FUNC_END sub_080FA264

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FA268
sub_080FA268: @ 0x080FA268
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080FA330
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FA2DA
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FA2DA
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r5, _080FA2B8  @ =gRam
	ldr r2, _080FA2BC  @ =0x00000FB2
	add r1, r5, r2
	add r1, r4, r1
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080C5044
	ldr r1, _080FA2C0  @ =0x000009AC
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #26
	bne _080FA2C4
	add r0, r4, #0
	bl sub_080FA1D8
	b _080FA2DA
	.byte 0x00
	.byte 0x00
_080FA2B8:
	.4byte gRam
_080FA2BC:
	.4byte 0x00000FB2
_080FA2C0:
	.4byte 0x000009AC
_080FA2C4:
	ldr r1, _080FA2E0  @ =gUnknown_0817A3AC
	ldr r2, _080FA2E4  @ =0x00000F52
	add r0, r5, r2
	add r0, r6, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r6, #0
	bl _call_via_r1
_080FA2DA:
	pop {r4-r6}
	pop {r0}
	bx r0
_080FA2E0:
	.4byte gUnknown_0817A3AC
_080FA2E4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FA268

	THUMB_FUNC_START sub_080FA2E8
sub_080FA2E8: @ 0x080FA2E8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080FA31C  @ =gRam
	ldr r1, _080FA320  @ =0x00000F92
	add r4, r2, r1
	add r4, r0, r4
	ldr r5, _080FA324  @ =gUnknown_0817A3C8
	ldr r3, _080FA328  @ =0x00001052
	add r1, r2, r3
	add r1, r0, r1
	ldrb r3, [r1]
	mov r1, #4
	and r1, r1, r3
	ldr r3, _080FA32C  @ =0x00000FB2
	add r2, r2, r3
	add r0, r0, r2
	ldrb r0, [r0]
	orr r1, r1, r0
	add r1, r1, r5
	ldrb r0, [r1]
	strb r0, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FA31C:
	.4byte gRam
_080FA320:
	.4byte 0x00000F92
_080FA324:
	.4byte gUnknown_0817A3C8
_080FA328:
	.4byte 0x00001052
_080FA32C:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080FA2E8

	THUMB_FUNC_START sub_080FA330
sub_080FA330: @ 0x080FA330
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080FA360  @ =gRam
	ldr r1, _080FA364  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r1, r0, #1
	add r1, r1, r0
	lsl r1, r1, #3
	ldr r0, _080FA368  @ =gUnknown_0817A3D4
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #3
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080C6230
	pop {r4}
	pop {r0}
	bx r0
_080FA360:
	.4byte gRam
_080FA364:
	.4byte 0x00000F92
_080FA368:
	.4byte gUnknown_0817A3D4
	THUMB_FUNC_END sub_080FA330

	THUMB_FUNC_START sub_080FA36C
sub_080FA36C: @ 0x080FA36C
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r0, r6, #0
	bl sub_080FACFC
	add r0, r6, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FA38A
	b _080FA522
_080FA38A:
	ldr r2, _080FA4C0  @ =gRam
	ldr r1, _080FA4C4  @ =0x00001142
	add r0, r2, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FA3E2
	ldr r3, _080FA4C8  @ =0x00001622
	add r0, r2, r3
	ldrb r1, [r0]
	add r3, r3, #1
	add r0, r2, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r0, _080FA4CC  @ =0xFFFFF368
	add r1, r1, r0
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #207
	bhi _080FA3E2
	ldr r1, _080FA4D0  @ =0x00001624
	add r0, r2, r1
	ldrb r1, [r0]
	add r3, r3, #2
	add r0, r2, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r0, _080FA4D4  @ =0xFFFFF95B
	add r1, r1, r0
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #207
	bhi _080FA3E2
	ldr r3, _080FA4D8  @ =0x00000961
	add r1, r2, r3
	mov r0, #255
	strb r0, [r1]
	ldr r0, _080FA4DC  @ =0x00000964
	add r1, r2, r0
	mov r0, #1
	neg r0, r0
	strb r0, [r1]
_080FA3E2:
	ldr r5, _080FA4C0  @ =gRam
	ldr r1, _080FA4D8  @ =0x00000961
	add r1, r1, r5
	mov r8, r1
	ldr r2, _080FA4E0  @ =0x00000965
	add r0, r5, r2
	ldrb r1, [r1]
	ldrb r0, [r0]
	orr r1, r1, r0
	cmp r1, #0
	beq _080FA402
	ldr r3, _080FA4E4  @ =0x00000FA2
	add r0, r5, r3
	add r0, r6, r0
	mov r1, #0
	strb r1, [r0]
_080FA402:
	ldr r1, _080FA4E8  @ =0x00001152
	add r0, r5, r1
	add r4, r6, r0
	ldrb r0, [r4]
	sub r0, r0, #2
	strb r0, [r4]
	add r0, r6, #0
	bl sub_080C99DC
	ldr r2, _080FA4C4  @ =0x00001142
	add r0, r5, r2
	add r2, r6, r0
	ldrb r1, [r2]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080FA436
	mov r0, #0
	strb r0, [r2]
	bl GetRandomInt
	mov r1, #15
	and r1, r1, r0
	mov r0, #16
	orr r1, r1, r0
	strb r1, [r4]
_080FA436:
	ldr r3, _080FA4EC  @ =0x00000968
	add r1, r5, r3
	mov r0, #245
	strb r0, [r1]
	ldr r0, _080FA4F0  @ =0x00000969
	add r1, r5, r0
	mov r0, #12
	strb r0, [r1]
	ldr r2, _080FA4F4  @ =0x0000096C
	add r1, r5, r2
	mov r0, #254
	strb r0, [r1]
	add r3, r3, #5
	add r1, r5, r3
	mov r0, #6
	strb r0, [r1]
	add r0, r6, #0
	mov r1, #16
	bl sub_080C2DCC
	ldr r1, _080FA4F8  @ =0x00000F12
	add r0, r5, r1
	add r7, r6, r0
	mov r2, #150
	lsl r2, r2, #4
	add r3, r5, r2
	ldrb r0, [r3]
	lsl r0, r0, #1
	strb r0, [r7]
	add r1, r1, #16
	add r0, r5, r1
	add r4, r6, r0
	mov r2, r8
	ldrb r0, [r2]
	lsl r0, r0, #1
	strb r0, [r4]
	mov r0, #188
	lsl r0, r0, #5
	add r2, r5, r0
	ldrh r1, [r2]
	mov r0, #252
	and r0, r0, r1
	strh r0, [r2]
	ldrb r1, [r3]
	mov r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, #0
	bge _080FA49A
	neg r0, r1
	strb r0, [r3]
_080FA49A:
	mov r2, r8
	ldrb r1, [r2]
	mov r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	bge _080FA4AA
	neg r0, r1
	strb r0, [r2]
_080FA4AA:
	mov r1, r8
	ldrb r0, [r1]
	ldrb r3, [r3]
	cmp r0, r3
	bcs _080FA4FC
	ldrb r0, [r7]
	mov r1, #1
	lsr r2, r0, #7
	eor r2, r2, r1
	b _080FA504
	.byte 0x00
	.byte 0x00
_080FA4C0:
	.4byte gRam
_080FA4C4:
	.4byte 0x00001142
_080FA4C8:
	.4byte 0x00001622
_080FA4CC:
	.4byte 0xFFFFF368
_080FA4D0:
	.4byte 0x00001624
_080FA4D4:
	.4byte 0xFFFFF95B
_080FA4D8:
	.4byte 0x00000961
_080FA4DC:
	.4byte 0x00000964
_080FA4E0:
	.4byte 0x00000965
_080FA4E4:
	.4byte 0x00000FA2
_080FA4E8:
	.4byte 0x00001152
_080FA4EC:
	.4byte 0x00000968
_080FA4F0:
	.4byte 0x00000969
_080FA4F4:
	.4byte 0x0000096C
_080FA4F8:
	.4byte 0x00000F12
_080FA4FC:
	ldrb r0, [r4]
	lsr r2, r0, #7
	mov r0, #3
	eor r2, r2, r0
_080FA504:
	ldr r1, _080FA52C  @ =gRam
	ldr r3, _080FA530  @ =0x00000FB2
	add r0, r1, r3
	add r0, r6, r0
	strb r2, [r0]
	ldr r0, _080FA534  @ =0x00000F92
	add r2, r1, r0
	add r2, r6, r2
	ldr r3, _080FA538  @ =0x00000996
	add r1, r1, r3
	ldrb r0, [r1]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
_080FA522:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080FA52C:
	.4byte gRam
_080FA530:
	.4byte 0x00000FB2
_080FA534:
	.4byte 0x00000F92
_080FA538:
	.4byte 0x00000996
	THUMB_FUNC_END sub_080FA36C

	THUMB_FUNC_START sub_080FA53C
sub_080FA53C: @ 0x080FA53C
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r9, r4
	ldr r6, _080FA5CC  @ =gRam
	ldr r1, _080FA5D0  @ =0x00000F52
	add r0, r6, r1
	add r7, r4, r0
	ldrb r0, [r7]
	sub r0, r0, #2
	mov r1, #128
	mov r8, r1
	and r0, r0, r1
	cmp r0, #0
	bne _080FA566
	add r0, r4, #0
	bl sub_080FACFC
_080FA566:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r5, r0, #24
	cmp r5, #0
	bne _080FA5BE
	add r0, r4, #0
	bl sub_080C99DC
	ldr r1, _080FA5D4  @ =0x00001152
	add r0, r6, r1
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	sub r1, r1, #16
	add r0, r6, r1
	add r3, r4, r0
	ldrb r1, [r3]
	mov r0, r8
	and r0, r0, r1
	cmp r0, #0
	beq _080FA59A
	strb r5, [r2]
	strb r5, [r3]
_080FA59A:
	ldr r0, _080FA5D8  @ =0x00000F92
	add r2, r6, r0
	add r2, r2, r9
	ldr r1, _080FA5DC  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldr r1, _080FA5E0  @ =gUnknown_0817A4F0
	ldrb r0, [r7]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	mov r0, r9
	bl _call_via_r1
_080FA5BE:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FA5CC:
	.4byte gRam
_080FA5D0:
	.4byte 0x00000F52
_080FA5D4:
	.4byte 0x00001152
_080FA5D8:
	.4byte 0x00000F92
_080FA5DC:
	.4byte 0x00000996
_080FA5E0:
	.4byte gUnknown_0817A4F0
	THUMB_FUNC_END sub_080FA53C

	THUMB_FUNC_START sub_080FA5E4
sub_080FA5E4: @ 0x080FA5E4
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080FA63C  @ =gRam
	ldr r1, _080FA640  @ =0x00001AE2
	add r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FA602
	mov r0, #10
	bl sub_0810EF98
	cmp r0, #0
	bne _080FA654
_080FA602:
	ldr r1, _080FA644  @ =0x00000123
	add r0, r5, #0
	mov r2, sp
	bl sub_080C9564
	mov r0, #188
	lsl r0, r0, #5
	add r2, r4, r0
	ldrh r1, [r2]
	mov r0, #252
	and r0, r0, r1
	mov r1, #0
	strh r0, [r2]
	ldr r2, _080FA648  @ =0x00001663
	add r0, r4, r2
	strb r1, [r0]
	ldr r0, _080FA64C  @ =0x00000F52
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r2, _080FA650  @ =0x00001770
	add r1, r4, r2
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080FA678
	.byte 0x00
	.byte 0x00
_080FA63C:
	.4byte gRam
_080FA640:
	.4byte 0x00001AE2
_080FA644:
	.4byte 0x00000123
_080FA648:
	.4byte 0x00001663
_080FA64C:
	.4byte 0x00000F52
_080FA650:
	.4byte 0x00001770
_080FA654:
	mov r1, #145
	lsl r1, r1, #1
	add r0, r5, #0
	mov r2, sp
	bl sub_080C9564
	mov r0, #188
	lsl r0, r0, #5
	add r2, r4, r0
	ldrh r1, [r2]
	mov r0, #3
	mov r3, #0
	orr r0, r0, r1
	strh r0, [r2]
	ldr r1, _080FA680  @ =0x00000FA2
	add r0, r4, r1
	add r0, r5, r0
	strb r3, [r0]
_080FA678:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080FA680:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080FA5E4

	THUMB_FUNC_START sub_080FA684
sub_080FA684: @ 0x080FA684
	push {r4,r5,lr}
	add r5, r0, #0
	lsl r5, r5, #24
	lsr r5, r5, #24
	ldr r4, _080FA700  @ =gRam
	ldr r0, _080FA704  @ =0x00000F52
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r2, _080FA708  @ =0x00000968
	add r1, r4, r2
	mov r0, #245
	strb r0, [r1]
	ldr r0, _080FA70C  @ =0x00000969
	add r1, r4, r0
	mov r0, #12
	strb r0, [r1]
	add r2, r2, #4
	add r1, r4, r2
	mov r0, #254
	strb r0, [r1]
	ldr r0, _080FA710  @ =0x0000096D
	add r1, r4, r0
	mov r0, #6
	strb r0, [r1]
	add r0, r5, #0
	mov r1, #9
	bl sub_080C2DCC
	ldr r1, _080FA714  @ =0x00000F12
	add r0, r4, r1
	add r0, r5, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r4, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080FA718  @ =0x00000F22
	add r1, r4, r0
	add r1, r5, r1
	add r2, r2, #1
	add r0, r4, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080FA71C  @ =0x00000FB2
	add r2, r4, r1
	add r2, r5, r2
	lsl r0, r0, #24
	lsr r0, r0, #31
	mov r1, #3
	eor r0, r0, r1
	strb r0, [r2]
	ldr r2, _080FA720  @ =0x00000FC2
	add r4, r4, r2
	add r5, r5, r4
	mov r0, #32
	strb r0, [r5]
	pop {r4,r5}
	pop {r0}
	bx r0
_080FA700:
	.4byte gRam
_080FA704:
	.4byte 0x00000F52
_080FA708:
	.4byte 0x00000968
_080FA70C:
	.4byte 0x00000969
_080FA710:
	.4byte 0x0000096D
_080FA714:
	.4byte 0x00000F12
_080FA718:
	.4byte 0x00000F22
_080FA71C:
	.4byte 0x00000FB2
_080FA720:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080FA684

	THUMB_FUNC_START sub_080FA724
sub_080FA724: @ 0x080FA724
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r6, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FA7A8
	add r0, r6, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FA7A8
	ldr r5, _080FA7B0  @ =gRam
	ldr r1, _080FA7B4  @ =0x0000176C
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FA7A8
	ldr r2, _080FA7B8  @ =0x0000180D
	add r0, r5, r2
	sub r2, r2, #99
	add r1, r5, r2
	ldrb r2, [r0]
	ldrb r0, [r1]
	orr r0, r0, r2
	cmp r0, #0
	bne _080FA7A8
	ldr r0, _080FA7BC  @ =0x00001663
	add r7, r5, r0
	ldrb r0, [r7]
	cmp r0, #10
	beq _080FA7A8
	ldr r1, _080FA7C0  @ =0x000009C6
	add r0, r5, r1
	ldrh r0, [r0]
	ldr r2, _080FA7C4  @ =gUnknown_02002280
	add r0, r0, r2
	ldrb r1, [r0]
	mov r0, #32
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r4, r0, #24
	cmp r4, #0
	bne _080FA7A8
	add r0, r6, #0
	bl sub_080C500C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FA7A8
	mov r0, #10
	strb r0, [r7]
	ldr r1, _080FA7C8  @ =0x00001787
	add r0, r5, r1
	strb r4, [r0]
	bl sub_0812F9A8
	bl sub_08114600
_080FA7A8:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080FA7B0:
	.4byte gRam
_080FA7B4:
	.4byte 0x0000176C
_080FA7B8:
	.4byte 0x0000180D
_080FA7BC:
	.4byte 0x00001663
_080FA7C0:
	.4byte 0x000009C6
_080FA7C4:
	.4byte gUnknown_02002280
_080FA7C8:
	.4byte 0x00001787
	THUMB_FUNC_END sub_080FA724

	THUMB_FUNC_START sub_080FA7CC
sub_080FA7CC: @ 0x080FA7CC
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	add r0, r4, #0
	bl sub_080FACFC
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r5, r0, #24
	cmp r5, #0
	bne _080FA826
	add r0, r4, #0
	bl sub_080C99DC
	ldr r6, _080FA82C  @ =gRam
	ldr r1, _080FA830  @ =0x00001152
	add r0, r6, r1
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	sub r1, r1, #16
	add r0, r6, r1
	add r3, r4, r0
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080FA810
	strb r5, [r2]
	strb r5, [r3]
_080FA810:
	ldr r1, _080FA834  @ =gUnknown_0817A504
	ldr r2, _080FA838  @ =0x00000F52
	add r0, r6, r2
	add r0, r7, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r7, #0
	bl _call_via_r1
_080FA826:
	pop {r4-r7}
	pop {r0}
	bx r0
_080FA82C:
	.4byte gRam
_080FA830:
	.4byte 0x00001152
_080FA834:
	.4byte gUnknown_0817A504
_080FA838:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FA7CC

	THUMB_FUNC_START sub_080FA83C
sub_080FA83C: @ 0x080FA83C
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080FA888  @ =gRam
	ldr r1, _080FA88C  @ =0x00001AE2
	add r0, r5, r1
	ldrb r6, [r0]
	cmp r6, #0
	bne _080FA89C
	mov r0, #100
	bl sub_0810EF98
	cmp r0, #0
	beq _080FA89C
	mov r1, #144
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080FA890  @ =0x00001770
	add r1, r5, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080FA894  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FA898  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	strb r6, [r0]
	b _080FA8B2
	.byte 0x00
	.byte 0x00
_080FA888:
	.4byte gRam
_080FA88C:
	.4byte 0x00001AE2
_080FA890:
	.4byte 0x00001770
_080FA894:
	.4byte 0x00000F52
_080FA898:
	.4byte 0x00000FB2
_080FA89C:
	ldr r1, _080FA8BC  @ =0x0000011F
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080FA8C0  @ =gRam
	ldr r1, _080FA8C4  @ =0x00001052
	add r0, r0, r1
	add r0, r4, r0
	mov r1, #3
	strb r1, [r0]
_080FA8B2:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FA8BC:
	.4byte 0x0000011F
_080FA8C0:
	.4byte gRam
_080FA8C4:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080FA83C

	THUMB_FUNC_START sub_080FA8C8
sub_080FA8C8: @ 0x080FA8C8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r7, _080FA90C  @ =gRam
	ldr r1, _080FA910  @ =0x00000FD2
	add r0, r7, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FA920
	ldr r0, _080FA914  @ =0x00000FB2
	add r2, r7, r0
	add r2, r6, r2
	sub r1, r1, #128
	add r0, r7, r1
	add r0, r6, r0
	ldrb r0, [r0]
	lsr r0, r0, #1
	mov r3, #1
	and r0, r0, r3
	mov r1, #6
	orr r0, r0, r1
	strb r0, [r2]
	ldr r2, _080FA918  @ =0x00000F92
	add r1, r7, r2
	add r1, r6, r1
	ldr r2, _080FA91C  @ =0x00000996
	add r0, r7, r2
	ldrb r0, [r0]
	lsr r0, r0, #3
	and r0, r0, r3
	strb r0, [r1]
	b _080FA95C
	.byte 0x00
	.byte 0x00
_080FA90C:
	.4byte gRam
_080FA910:
	.4byte 0x00000FD2
_080FA914:
	.4byte 0x00000FB2
_080FA918:
	.4byte 0x00000F92
_080FA91C:
	.4byte 0x00000996
_080FA920:
	ldr r0, _080FA964  @ =0x00000F52
	add r4, r7, r0
	add r4, r6, r4
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	ldr r2, _080FA968  @ =0x00001152
	add r1, r7, r2
	add r1, r6, r1
	ldr r2, _080FA96C  @ =gUnknown_0817A530
	lsl r0, r0, #24
	lsr r0, r0, #25
	mov r5, #1
	and r0, r0, r5
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r6, #0
	mov r1, #108
	bl sub_080CF0AC
	ldr r0, _080FA970  @ =0x00000FB2
	add r2, r7, r0
	add r2, r6, r2
	ldrb r0, [r4]
	lsr r0, r0, #1
	and r0, r0, r5
	mov r1, #4
	orr r0, r0, r1
	strb r0, [r2]
_080FA95C:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FA964:
	.4byte 0x00000F52
_080FA968:
	.4byte 0x00001152
_080FA96C:
	.4byte gUnknown_0817A530
_080FA970:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080FA8C8

	THUMB_FUNC_START sub_080FA974
sub_080FA974: @ 0x080FA974
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080FAA38  @ =gRam
	ldr r0, _080FAA3C  @ =0x00000F92
	add r2, r5, r0
	add r2, r4, r2
	ldr r1, _080FAA40  @ =0x00000996
	add r0, r5, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	mov r3, #0
	mov r10, r3
	strb r0, [r2]
	ldr r1, _080FAA44  @ =0x00000F52
	add r0, r5, r1
	add r0, r0, r4
	mov r12, r0
	ldrb r7, [r0]
	sub r0, r7, #2
	lsl r0, r0, #24
	lsr r2, r0, #24
	mov r8, r2
	ldr r3, _080FAA48  @ =gUnknown_0817A538
	mov r9, r3
	add r1, r2, r3
	ldr r3, _080FAA4C  @ =0x00000EE2
	add r0, r5, r3
	add r0, r4, r0
	ldrb r3, [r1]
	ldrb r0, [r0]
	sub r0, r3, r0
	add r0, r0, #2
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r6, _080FAA50  @ =gUnknown_0817A532
	cmp r0, #3
	bhi _080FA9E4
	add r0, r2, r6
	ldr r2, _080FAA54  @ =0x00000ED2
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	sub r0, r0, r1
	add r0, r0, #2
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #3
	bls _080FAA68
_080FA9E4:
	ldr r1, _080FAA58  @ =0x00000968
	add r0, r5, r1
	strb r3, [r0]
	mov r1, r8
	add r1, r1, #1
	mov r2, r9
	add r0, r1, r2
	ldrb r2, [r0]
	ldr r3, _080FAA5C  @ =0x00000969
	add r0, r5, r3
	strb r2, [r0]
	mov r2, r8
	add r0, r2, r6
	ldrb r2, [r0]
	add r3, r3, #3
	add r0, r5, r3
	strb r2, [r0]
	add r1, r1, r6
	ldrb r1, [r1]
	ldr r2, _080FAA60  @ =0x0000096D
	add r0, r5, r2
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #9
	bl sub_080C2DCC
	ldr r3, _080FAA64  @ =0x00000F12
	add r0, r5, r3
	add r0, r4, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	add r3, r3, #16
	add r0, r5, r3
	add r0, r4, r0
	add r2, r2, #1
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
	b _080FAA92
_080FAA38:
	.4byte gRam
_080FAA3C:
	.4byte 0x00000F92
_080FAA40:
	.4byte 0x00000996
_080FAA44:
	.4byte 0x00000F52
_080FAA48:
	.4byte gUnknown_0817A538
_080FAA4C:
	.4byte 0x00000EE2
_080FAA50:
	.4byte gUnknown_0817A532
_080FAA54:
	.4byte 0x00000ED2
_080FAA58:
	.4byte 0x00000968
_080FAA5C:
	.4byte 0x00000969
_080FAA60:
	.4byte 0x0000096D
_080FAA64:
	.4byte 0x00000F12
_080FAA68:
	add r0, r7, #1
	mov r3, r12
	strb r0, [r3]
	ldr r1, _080FAAA0  @ =0x00000F12
	add r0, r5, r1
	add r0, r4, r0
	mov r2, r10
	strb r2, [r0]
	ldr r3, _080FAAA4  @ =0x00000F22
	add r0, r5, r3
	add r0, r4, r0
	strb r2, [r0]
	add r1, r1, #192
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #13
	bl sub_080CF0AC
_080FAA92:
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080FAAA0:
	.4byte 0x00000F12
_080FAAA4:
	.4byte 0x00000F22
	THUMB_FUNC_END sub_080FA974

	THUMB_FUNC_START sub_080FAAA8
sub_080FAAA8: @ 0x080FAAA8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	add r6, r3, #0
	ldr r4, _080FAB3C  @ =gRam
	ldr r0, _080FAB40  @ =0x00000F92
	add r2, r4, r0
	add r2, r3, r2
	ldr r1, _080FAB44  @ =0x00000996
	add r0, r4, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldr r2, _080FAB48  @ =0x00001142
	add r0, r4, r2
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FABA8
	ldr r1, _080FAB4C  @ =0x00000FC2
	add r0, r4, r1
	add r7, r3, r0
	ldrb r5, [r7]
	cmp r5, #0
	bne _080FABA8
	ldr r2, _080FAB50  @ =0x00000F62
	add r0, r4, r2
	add r0, r3, r0
	ldrb r2, [r0]
	add r1, r2, #1
	strb r1, [r0]
	ldr r0, _080FAB54  @ =gUnknown_0817A53E
	add r0, r2, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080FAB78
	ldr r0, _080FAB58  @ =0x00000F52
	add r1, r4, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FAB5C  @ =0x00000F22
	add r0, r4, r1
	add r0, r3, r0
	strb r5, [r0]
	ldr r2, _080FAB60  @ =0x00000F12
	add r0, r4, r2
	add r0, r3, r0
	strb r5, [r0]
	ldr r0, _080FAB64  @ =0x00000B6E
	add r1, r4, r0
	mov r0, #1
	strb r0, [r1]
	ldr r1, _080FAB68  @ =0x000009E8
	add r0, r4, r1
	mov r1, #0
	strh r5, [r0]
	ldr r2, _080FAB6C  @ =0x00000A02
	add r0, r4, r2
	strb r1, [r0]
	ldr r2, _080FAB70  @ =0x00000FB2
	add r0, r4, r2
	add r0, r3, r0
	strb r1, [r0]
	ldr r2, _080FAB74  @ =0x00001770
	add r0, r4, r2
	strb r1, [r0]
	b _080FABA8
	.byte 0x00
	.byte 0x00
_080FAB3C:
	.4byte gRam
_080FAB40:
	.4byte 0x00000F92
_080FAB44:
	.4byte 0x00000996
_080FAB48:
	.4byte 0x00001142
_080FAB4C:
	.4byte 0x00000FC2
_080FAB50:
	.4byte 0x00000F62
_080FAB54:
	.4byte gUnknown_0817A53E
_080FAB58:
	.4byte 0x00000F52
_080FAB5C:
	.4byte 0x00000F22
_080FAB60:
	.4byte 0x00000F12
_080FAB64:
	.4byte 0x00000B6E
_080FAB68:
	.4byte 0x000009E8
_080FAB6C:
	.4byte 0x00000A02
_080FAB70:
	.4byte 0x00000FB2
_080FAB74:
	.4byte 0x00001770
_080FAB78:
	ldr r0, _080FABB0  @ =0x00000FB2
	add r3, r4, r0
	add r3, r6, r3
	strb r1, [r3]
	ldr r0, _080FABB4  @ =gUnknown_0817A541
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r7]
	ldr r2, _080FABB8  @ =0x00000F22
	add r1, r4, r2
	add r1, r6, r1
	ldr r2, _080FABBC  @ =gUnknown_0817A543
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080FABC0  @ =0x00000F12
	add r1, r4, r0
	add r1, r6, r1
	ldr r2, _080FABC4  @ =gUnknown_0817A547
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
_080FABA8:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FABB0:
	.4byte 0x00000FB2
_080FABB4:
	.4byte gUnknown_0817A541
_080FABB8:
	.4byte 0x00000F22
_080FABBC:
	.4byte gUnknown_0817A543
_080FABC0:
	.4byte 0x00000F12
_080FABC4:
	.4byte gUnknown_0817A547
	THUMB_FUNC_END sub_080FAAA8

	THUMB_FUNC_START sub_080FABC8
sub_080FABC8: @ 0x080FABC8
	push {r4,r5,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080FAC0C  @ =gRam
	ldr r1, _080FAC10  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	mov r2, #0
	mov r1, #8
	strb r1, [r0]
	ldr r1, _080FAC14  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	bl GetRandomInt
	ldr r1, _080FAC18  @ =0x00001152
	add r2, r5, r1
	add r2, r4, r2
	mov r1, #15
	and r1, r1, r0
	add r1, r1, #16
	strb r1, [r2]
	ldr r0, _080FAC1C  @ =0x00000F52
	add r5, r5, r0
	add r4, r4, r5
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FAC0C:
	.4byte gRam
_080FAC10:
	.4byte 0x00000FB2
_080FAC14:
	.4byte 0x00000F92
_080FAC18:
	.4byte 0x00001152
_080FAC1C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FABC8

	THUMB_FUNC_START sub_080FAC20
sub_080FAC20: @ 0x080FAC20
	push {r4-r6,lr}
	add r2, r0, #0
	lsl r2, r2, #24
	lsr r2, r2, #24
	lsl r1, r1, #24
	lsr r6, r1, #24
	mov r0, #182
	add r1, r2, #0
	bl sub_080CA538
	add r5, r0, #0
	cmp r5, #0
	blt _080FACC2
	ldr r3, _080FACCC  @ =gRam
	ldr r1, _080FACD0  @ =0x00001082
	add r0, r3, r1
	add r0, r5, r0
	ldr r1, _080FACD4  @ =gUnknown_0200EC04
	add r2, r6, r1
	ldrb r1, [r2]
	mov r4, #0
	strb r1, [r0]
	ldr r1, _080FACD8  @ =0x00000FB2
	add r0, r3, r1
	add r0, r5, r0
	ldrb r1, [r2]
	strb r1, [r0]
	ldr r2, _080FACDC  @ =gUnknown_0200EBA0
	add r0, r6, r2
	ldrb r1, [r0]
	add r2, r2, #20
	add r0, r6, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #2
	ldr r2, _080FACE0  @ =0x00000ED2
	add r0, r3, r2
	add r0, r5, r0
	strb r1, [r0]
	add r2, r2, #32
	add r0, r3, r2
	add r0, r5, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r1, _080FACE4  @ =gUnknown_0200EBC8
	add r0, r6, r1
	ldrb r1, [r0]
	ldr r2, _080FACE8  @ =gUnknown_0200EBDC
	add r0, r6, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #2
	ldr r2, _080FACEC  @ =0x00000EE2
	add r0, r3, r2
	add r0, r5, r0
	strb r1, [r0]
	add r2, r2, #32
	add r0, r3, r2
	add r0, r5, r0
	lsr r1, r1, #8
	strb r1, [r0]
	ldr r0, _080FACF0  @ =0x000010F2
	add r2, r3, r0
	add r2, r5, r2
	mov r1, #161
	lsl r1, r1, #4
	add r0, r3, r1
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r1, _080FACF4  @ =0x00001172
	add r0, r3, r1
	add r0, r5, r0
	mov r1, #1
	strb r1, [r0]
	mov r0, #2
	strb r0, [r2]
	ldr r2, _080FACF8  @ =0x00001719
	add r3, r3, r2
	strb r4, [r3]
_080FACC2:
	add r0, r5, #0
	pop {r4-r6}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080FACCC:
	.4byte gRam
_080FACD0:
	.4byte 0x00001082
_080FACD4:
	.4byte gUnknown_0200EC04
_080FACD8:
	.4byte 0x00000FB2
_080FACDC:
	.4byte gUnknown_0200EBA0
_080FACE0:
	.4byte 0x00000ED2
_080FACE4:
	.4byte gUnknown_0200EBC8
_080FACE8:
	.4byte gUnknown_0200EBDC
_080FACEC:
	.4byte 0x00000EE2
_080FACF0:
	.4byte 0x000010F2
_080FACF4:
	.4byte 0x00001172
_080FACF8:
	.4byte 0x00001719
	THUMB_FUNC_END sub_080FAC20

	THUMB_FUNC_START sub_080FACFC
sub_080FACFC: @ 0x080FACFC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	ldr r5, _080FAD40  @ =gRam
	ldr r1, _080FAD44  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	cmp r1, #7
	bls _080FAD54
	ldr r2, _080FAD48  @ =0x00000F92
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r1, r0, #1
	add r1, r1, r0
	lsl r1, r1, #4
	ldr r0, _080FAD4C  @ =gUnknown_0817A65C
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #6
	bl sub_080C9480
	ldr r3, _080FAD50  @ =0x000010D2
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FAD9E
	add r0, r4, #0
	bl sub_080C6230
	b _080FAD9E
_080FAD40:
	.4byte gRam
_080FAD44:
	.4byte 0x00000FB2
_080FAD48:
	.4byte 0x00000F92
_080FAD4C:
	.4byte gUnknown_0817A65C
_080FAD50:
	.4byte 0x000010D2
_080FAD54:
	ldr r4, _080FADA4  @ =0x00000F92
	add r0, r5, r4
	add r0, r6, r0
	lsl r1, r1, #1
	ldrb r0, [r0]
	add r1, r1, r0
	lsl r1, r1, #25
	lsr r1, r1, #24
	ldr r3, _080FADA8  @ =gUnknown_0817A54B
	add r0, r1, r3
	ldrb r2, [r0]
	ldr r4, _080FADAC  @ =0x00000CDE
	add r0, r5, r4
	strh r2, [r0]
	add r0, r1, #1
	add r0, r0, r3
	ldrb r2, [r0]
	mov r3, #206
	lsl r3, r3, #4
	add r0, r5, r3
	strh r2, [r0]
	lsl r1, r1, #3
	ldr r0, _080FADB0  @ =gUnknown_0817A55C
	add r1, r1, r0
	add r0, r6, #0
	mov r2, #2
	bl sub_080C9480
	ldr r4, _080FADB4  @ =0x000010D2
	add r0, r5, r4
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FAD9E
	add r0, r6, #0
	bl sub_080C6230
_080FAD9E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080FADA4:
	.4byte 0x00000F92
_080FADA8:
	.4byte gUnknown_0817A54B
_080FADAC:
	.4byte 0x00000CDE
_080FADB0:
	.4byte gUnknown_0817A55C
_080FADB4:
	.4byte 0x000010D2
	THUMB_FUNC_END sub_080FACFC

	THUMB_FUNC_START sub_080FADB8
sub_080FADB8: @ 0x080FADB8
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r6, _080FAF30  @ =gRam
	ldr r1, _080FAF34  @ =0x00000FB2
	add r0, r6, r1
	add r0, r7, r0
	mov r2, #1
	mov r1, #1
	strb r1, [r0]
	ldr r3, _080FAF38  @ =0x00000F92
	add r1, r6, r3
	add r1, r7, r1
	ldr r3, _080FAF3C  @ =0x00000996
	add r0, r6, r3
	ldrb r0, [r0]
	lsr r0, r0, #3
	and r0, r0, r2
	strb r0, [r1]
	ldr r0, _080FAF40  @ =0x00001122
	add r0, r0, r6
	mov r10, r0
	add r1, r7, r0
	ldrb r0, [r1]
	mov r2, #48
	mov r9, r2
	mov r4, #0
	mov r3, r9
	orr r0, r0, r3
	strb r0, [r1]
	add r0, r7, #0
	bl sub_080FACFC
	add r0, r7, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FAE10
	b _080FAF22
_080FAE10:
	ldr r1, _080FAF44  @ =0x00000FC2
	add r0, r6, r1
	add r0, r0, r7
	mov r8, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FAED8
	mov r0, #217
	add r1, r7, #0
	bl sub_080CA538
	add r5, r0, #0
	cmp r5, #0
	blt _080FAED8
	ldr r2, _080FAF48  @ =0x00000EE2
	add r3, r6, r2
	add r0, r7, r3
	ldrb r0, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r1, r6, r2
	strb r0, [r1]
	ldr r0, _080FAF4C  @ =0x00000F02
	add r2, r6, r0
	add r0, r7, r2
	ldrb r0, [r0]
	mov r12, r0
	ldr r0, _080FAF50  @ =0x00000961
	add r4, r6, r0
	mov r0, r12
	strb r0, [r4]
	ldrh r0, [r1]
	add r0, r0, #16
	strh r0, [r1]
	add r3, r5, r3
	ldrb r0, [r1]
	strb r0, [r3]
	add r2, r5, r2
	ldrb r0, [r4]
	strb r0, [r2]
	ldr r1, _080FAF54  @ =0x00000ED2
	add r3, r6, r1
	add r0, r7, r3
	ldrb r0, [r0]
	ldr r2, _080FAF58  @ =0x00000964
	add r1, r6, r2
	strb r0, [r1]
	ldr r0, _080FAF5C  @ =0x00000EF2
	add r2, r6, r0
	add r0, r7, r2
	ldrb r0, [r0]
	mov r12, r0
	ldr r0, _080FAF60  @ =0x00000965
	add r4, r6, r0
	mov r0, r12
	strb r0, [r4]
	ldrh r0, [r1]
	sub r0, r0, #8
	strh r0, [r1]
	add r3, r5, r3
	ldrb r0, [r1]
	strb r0, [r3]
	add r2, r5, r2
	ldrb r0, [r4]
	strb r0, [r2]
	ldr r1, _080FAF64  @ =0x00000F22
	add r0, r6, r1
	add r0, r5, r0
	mov r1, #248
	strb r1, [r0]
	ldr r2, _080FAF68  @ =0x00001152
	add r0, r6, r2
	add r0, r5, r0
	mov r1, #40
	strb r1, [r0]
	ldr r3, _080FAF6C  @ =0x000010B2
	add r0, r6, r3
	add r0, r5, r0
	mov r1, #255
	strb r1, [r0]
	ldr r0, _080FAF70  @ =0x00001032
	add r1, r6, r0
	add r1, r5, r1
	ldrb r2, [r1]
	mov r0, #239
	and r0, r0, r2
	strb r0, [r1]
	mov r2, r10
	add r1, r5, r2
	ldrb r0, [r1]
	mov r3, r9
	orr r0, r0, r3
	strb r0, [r1]
	mov r0, #16
	mov r1, r8
	strb r0, [r1]
	add r0, r7, #0
	mov r1, #11
	bl sub_080CF140
_080FAED8:
	mov r4, #15
	ldr r5, _080FAF30  @ =gRam
	mov r6, #0
	ldr r2, _080FAF74  @ =0x00000FA2
	add r2, r2, r5
	mov r8, r2
_080FAEE4:
	ldr r3, _080FAF78  @ =0x00000FF2
	add r0, r5, r3
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #217
	bne _080FAF1C
	ldr r1, _080FAF68  @ =0x00001152
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080FAF1C
	ldr r3, _080FAF7C  @ =0x00001142
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #1
	bhi _080FAF1C
	strb r6, [r2]
	mov r1, r8
	add r0, r4, r1
	strb r6, [r0]
	add r0, r7, #0
	mov r1, #116
	bl sub_080CF140
_080FAF1C:
	sub r4, r4, #1
	cmp r4, #0
	bge _080FAEE4
_080FAF22:
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080FAF30:
	.4byte gRam
_080FAF34:
	.4byte 0x00000FB2
_080FAF38:
	.4byte 0x00000F92
_080FAF3C:
	.4byte 0x00000996
_080FAF40:
	.4byte 0x00001122
_080FAF44:
	.4byte 0x00000FC2
_080FAF48:
	.4byte 0x00000EE2
_080FAF4C:
	.4byte 0x00000F02
_080FAF50:
	.4byte 0x00000961
_080FAF54:
	.4byte 0x00000ED2
_080FAF58:
	.4byte 0x00000964
_080FAF5C:
	.4byte 0x00000EF2
_080FAF60:
	.4byte 0x00000965
_080FAF64:
	.4byte 0x00000F22
_080FAF68:
	.4byte 0x00001152
_080FAF6C:
	.4byte 0x000010B2
_080FAF70:
	.4byte 0x00001032
_080FAF74:
	.4byte 0x00000FA2
_080FAF78:
	.4byte 0x00000FF2
_080FAF7C:
	.4byte 0x00001142
	THUMB_FUNC_END sub_080FADB8

	THUMB_FUNC_START sub_080FAF80
sub_080FAF80: @ 0x080FAF80
	push {lr}
	lsl r0, r0, #24
	lsr r3, r0, #24
	ldr r2, _080FAFB8  @ =gRam
	ldr r0, _080FAFBC  @ =0x00001172
	add r1, r2, r0
	add r1, r3, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FAFC0  @ =0x000009C6
	add r0, r2, r1
	ldrh r0, [r0]
	ldr r1, _080FAFC4  @ =gUnknown_02002280
	add r0, r0, r1
	ldrb r1, [r0]
	mov r0, #32
	and r0, r0, r1
	cmp r0, #0
	beq _080FAFB2
	ldr r1, _080FAFC8  @ =0x00000FA2
	add r0, r2, r1
	add r0, r3, r0
	mov r1, #0
	strb r1, [r0]
_080FAFB2:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FAFB8:
	.4byte gRam
_080FAFBC:
	.4byte 0x00001172
_080FAFC0:
	.4byte 0x000009C6
_080FAFC4:
	.4byte gUnknown_02002280
_080FAFC8:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080FAF80

	THUMB_FUNC_START sub_080FAFCC
sub_080FAFCC: @ 0x080FAFCC
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080FAFEC  @ =gUnknown_0817A4DC
	ldr r1, _080FAFF0  @ =gRam
	ldr r3, _080FAFF4  @ =0x00001052
	add r1, r1, r3
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #2
	add r1, r1, r2
	ldr r1, [r1]
	bl _call_via_r1
	pop {r0}
	bx r0
_080FAFEC:
	.4byte gUnknown_0817A4DC
_080FAFF0:
	.4byte gRam
_080FAFF4:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080FAFCC

	THUMB_FUNC_START sub_080FAFF8
sub_080FAFF8: @ 0x080FAFF8
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	lsr r1, r1, #24
	bl sub_080FAC20
	ldr r2, _080FB020  @ =gRam
	ldr r3, _080FB024  @ =0x00001052
	add r1, r2, r3
	add r0, r0, r1
	mov r3, #0
	mov r1, #1
	strb r1, [r0]
	ldr r0, _080FB028  @ =0x00001663
	add r2, r2, r0
	strb r3, [r2]
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FB020:
	.4byte gRam
_080FB024:
	.4byte 0x00001052
_080FB028:
	.4byte 0x00001663
	THUMB_FUNC_END sub_080FAFF8

	THUMB_FUNC_START sub_080FB02C
sub_080FB02C: @ 0x080FB02C
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	lsr r1, r1, #24
	bl sub_080FAC20
	ldr r1, _080FB04C  @ =gRam
	ldr r2, _080FB050  @ =0x00001052
	add r1, r1, r2
	add r0, r0, r1
	mov r1, #2
	strb r1, [r0]
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FB04C:
	.4byte gRam
_080FB050:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080FB02C

	THUMB_FUNC_START sub_080FB054
sub_080FB054: @ 0x080FB054
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	lsl r1, r1, #24
	lsr r1, r1, #24
	bl sub_080FAC20
	ldr r3, _080FB090  @ =gRam
	ldr r2, _080FB094  @ =0x00001142
	add r1, r3, r2
	add r1, r0, r1
	mov r4, #0
	mov r2, #1
	strb r2, [r1]
	ldr r2, _080FB098  @ =0x00001152
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #16
	strb r2, [r1]
	ldr r2, _080FB09C  @ =0x00001052
	add r1, r3, r2
	add r0, r0, r1
	mov r1, #3
	strb r1, [r0]
	ldr r0, _080FB0A0  @ =0x00001663
	add r3, r3, r0
	strb r4, [r3]
	pop {r4}
	pop {r0}
	bx r0
_080FB090:
	.4byte gRam
_080FB094:
	.4byte 0x00001142
_080FB098:
	.4byte 0x00001152
_080FB09C:
	.4byte 0x00001052
_080FB0A0:
	.4byte 0x00001663
	THUMB_FUNC_END sub_080FB054

	THUMB_FUNC_START sub_080FB0A4
sub_080FB0A4: @ 0x080FB0A4
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r1, _080FB0D0  @ =0x00000121
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080FB0D4  @ =gRam
	ldr r1, _080FB0D8  @ =0x00000F52
	add r0, r0, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FB0D0:
	.4byte 0x00000121
_080FB0D4:
	.4byte gRam
_080FB0D8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FB0A4

	THUMB_FUNC_START sub_080FB0DC
sub_080FB0DC: @ 0x080FB0DC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080FB110  @ =gRam
	ldr r1, _080FB114  @ =0x00000FC2
	add r0, r3, r1
	add r4, r2, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FB108
	ldr r0, _080FB118  @ =0x00000F52
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FB11C  @ =0x00001152
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #16
	strb r1, [r0]
	strb r1, [r4]
_080FB108:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FB110:
	.4byte gRam
_080FB114:
	.4byte 0x00000FC2
_080FB118:
	.4byte 0x00000F52
_080FB11C:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080FB0DC

	THUMB_FUNC_START sub_080FB120
sub_080FB120: @ 0x080FB120
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080FB154  @ =gRam
	ldr r1, _080FB158  @ =0x00000FC2
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FB14E
	ldr r4, _080FB15C  @ =0x00001142
	add r0, r3, r4
	add r0, r2, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080FB14E
	ldr r4, _080FB160  @ =0x00000FA2
	add r0, r3, r4
	add r0, r2, r0
	strb r1, [r0]
	ldr r2, _080FB164  @ =0x00001770
	add r0, r3, r2
	strb r1, [r0]
_080FB14E:
	pop {r4}
	pop {r0}
	bx r0
_080FB154:
	.4byte gRam
_080FB158:
	.4byte 0x00000FC2
_080FB15C:
	.4byte 0x00001142
_080FB160:
	.4byte 0x00000FA2
_080FB164:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080FB120

	THUMB_FUNC_START sub_080FB168
sub_080FB168: @ 0x080FB168
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	mov r1, #143
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080FB194  @ =gRam
	ldr r1, _080FB198  @ =0x00000F52
	add r0, r0, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
_080FB194:
	.4byte gRam
_080FB198:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FB168

	THUMB_FUNC_START sub_080FB19C
sub_080FB19C: @ 0x080FB19C
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080FB1D8  @ =gRam
	ldr r1, _080FB1DC  @ =0x00001152
	add r0, r3, r1
	add r0, r2, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080FB1D4
	ldr r1, _080FB1E0  @ =0x00001142
	add r0, r3, r1
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FB1D4
	ldr r0, _080FB1E4  @ =0x00000F52
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	add r0, r2, #0
	mov r1, #59
	bl sub_080CF140
_080FB1D4:
	pop {r0}
	bx r0
_080FB1D8:
	.4byte gRam
_080FB1DC:
	.4byte 0x00001152
_080FB1E0:
	.4byte 0x00001142
_080FB1E4:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FB19C

	THUMB_FUNC_START sub_080FB1E8
sub_080FB1E8: @ 0x080FB1E8
	bx lr
	THUMB_FUNC_END sub_080FB1E8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FB1EC
sub_080FB1EC: @ 0x080FB1EC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r3, _080FB260  @ =gRam
	ldr r1, _080FB264  @ =0x00001052
	add r0, r3, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsr r1, r1, #2
	mov r0, #1
	and r1, r1, r0
	ldr r2, _080FB268  @ =0x00000FB2
	add r0, r3, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #1
	orr r1, r1, r0
	lsl r1, r1, #24
	lsr r4, r1, #24
	ldr r0, _080FB26C  @ =0x00000F92
	add r1, r3, r0
	add r1, r5, r1
	ldr r0, _080FB270  @ =gUnknown_0817A6BC
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080FB274  @ =0x00001122
	add r2, r3, r1
	add r2, r5, r2
	ldrb r0, [r2]
	mov r1, #191
	and r1, r1, r0
	ldr r0, _080FB278  @ =gUnknown_0817A6C4
	add r0, r4, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r2]
	ldr r2, _080FB27C  @ =0x00000996
	add r0, r3, r2
	ldrb r1, [r0]
	add r0, r5, #0
	eor r0, r0, r1
	mov r1, #15
	and r0, r0, r1
	cmp r0, #0
	bne _080FB2FC
	ldr r1, _080FB280  @ =0x00000F22
	add r0, r3, r1
	add r0, r5, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080FB284
	sub r2, r2, #54
	add r0, r3, r2
	strb r1, [r0]
	b _080FB290
_080FB260:
	.4byte gRam
_080FB264:
	.4byte 0x00001052
_080FB268:
	.4byte 0x00000FB2
_080FB26C:
	.4byte 0x00000F92
_080FB270:
	.4byte gUnknown_0817A6BC
_080FB274:
	.4byte 0x00001122
_080FB278:
	.4byte gUnknown_0817A6C4
_080FB27C:
	.4byte 0x00000996
_080FB280:
	.4byte 0x00000F22
_080FB284:
	mvn r0, r1
	add r0, r0, #1
	mov r2, #150
	lsl r2, r2, #4
	add r1, r3, r2
	strb r0, [r1]
_080FB290:
	ldr r1, _080FB2A8  @ =0x00000F12
	add r0, r3, r1
	add r0, r5, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080FB2B0
	ldr r2, _080FB2AC  @ =0x00000961
	add r0, r3, r2
	strb r1, [r0]
	b _080FB2BA
_080FB2A8:
	.4byte 0x00000F12
_080FB2AC:
	.4byte 0x00000961
_080FB2B0:
	mvn r0, r1
	add r0, r0, #1
	ldr r2, _080FB2D4  @ =0x00000961
	add r1, r3, r2
	strb r0, [r1]
_080FB2BA:
	mov r1, #150
	lsl r1, r1, #4
	add r0, r3, r1
	ldr r2, _080FB2D4  @ =0x00000961
	add r1, r3, r2
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bcc _080FB2DC
	mov r1, #0
	ldr r2, _080FB2D8  @ =0x00000F22
	b _080FB2E0
	.byte 0x00
	.byte 0x00
_080FB2D4:
	.4byte 0x00000961
_080FB2D8:
	.4byte 0x00000F22
_080FB2DC:
	mov r1, #2
	ldr r2, _080FB310  @ =0x00000F12
_080FB2E0:
	add r0, r3, r2
	add r0, r5, r0
	ldrb r4, [r0]
	mov r0, #128
	and r4, r4, r0
	cmp r4, #0
	beq _080FB2F4
	add r0, r1, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
_080FB2F4:
	ldr r2, _080FB314  @ =0x00000FB2
	add r0, r3, r2
	add r0, r5, r0
	strb r1, [r0]
_080FB2FC:
	add r0, r5, #0
	bl sub_080C6240
	add r0, r5, #0
	bl sub_080D84B0
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FB310:
	.4byte 0x00000F12
_080FB314:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080FB1EC

	THUMB_FUNC_START sub_080FB318
sub_080FB318: @ 0x080FB318
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080FB334  @ =gRam
	ldr r2, _080FB338  @ =0x00000F62
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #16
	strb r2, [r1]
	ldr r1, _080FB33C  @ =0x00000F52
	add r3, r3, r1
	add r0, r0, r3
	mov r1, #1
	strb r1, [r0]
	bx lr
_080FB334:
	.4byte gRam
_080FB338:
	.4byte 0x00000F62
_080FB33C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FB318

	THUMB_FUNC_START sub_080FB340
sub_080FB340: @ 0x080FB340
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r6, _080FB3E0  @ =gRam
	ldr r1, _080FB3E4  @ =0x000010E2
	add r0, r6, r1
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FB374
	bl GetRandomInt
	mov r1, #31
	and r1, r1, r0
	add r1, r1, #32
	strb r1, [r4]
	ldr r0, _080FB3E8  @ =0x00000FB2
	add r4, r6, r0
	add r4, r5, r4
	mov r0, #3
	and r1, r1, r0
	strb r1, [r4]
	add r0, r5, #0
	bl sub_080C2FA8
	strb r0, [r4]
_080FB374:
	ldr r1, _080FB3E8  @ =0x00000FB2
	add r2, r6, r1
	add r2, r5, r2
	add r1, r1, #240
	add r0, r6, r1
	add r4, r5, r0
	ldrb r1, [r4]
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #24
	lsr r1, r1, #24
	ldr r0, _080FB3EC  @ =0x00000F22
	add r2, r6, r0
	add r2, r5, r2
	ldr r0, _080FB3F0  @ =gUnknown_0817A6D4
	add r0, r1, r0
	ldrb r0, [r0]
	mov r7, #0
	strb r0, [r2]
	ldr r0, _080FB3F4  @ =0x00000F12
	add r2, r6, r0
	add r2, r5, r2
	ldr r0, _080FB3F8  @ =gUnknown_0817A6DC
	add r1, r1, r0
	ldrb r0, [r1]
	strb r0, [r2]
	ldr r1, _080FB3FC  @ =0x00001152
	add r0, r6, r1
	add r2, r5, r0
	ldrb r0, [r2]
	sub r0, r0, #2
	strb r0, [r2]
	sub r1, r1, #16
	add r0, r6, r1
	add r3, r5, r0
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080FB3C8
	strb r7, [r3]
	strb r7, [r2]
_080FB3C8:
	ldrb r0, [r4]
	cmp r0, #0
	beq _080FB408
	ldr r0, _080FB400  @ =0x00000F92
	add r2, r6, r0
	add r2, r5, r2
	ldr r1, _080FB404  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #2
	b _080FB416
	.byte 0x00
	.byte 0x00
_080FB3E0:
	.4byte gRam
_080FB3E4:
	.4byte 0x000010E2
_080FB3E8:
	.4byte 0x00000FB2
_080FB3EC:
	.4byte 0x00000F22
_080FB3F0:
	.4byte gUnknown_0817A6D4
_080FB3F4:
	.4byte 0x00000F12
_080FB3F8:
	.4byte gUnknown_0817A6DC
_080FB3FC:
	.4byte 0x00001152
_080FB400:
	.4byte 0x00000F92
_080FB404:
	.4byte 0x00000996
_080FB408:
	ldr r0, _080FB444  @ =0x00000F92
	add r2, r6, r0
	add r2, r5, r2
	ldr r1, _080FB448  @ =0x00000996
	add r0, r6, r1
	ldrb r0, [r0]
	lsr r0, r0, #3
_080FB416:
	mov r1, #1
	and r0, r0, r1
	strb r0, [r2]
	ldr r2, _080FB44C  @ =gRam
	ldr r0, _080FB450  @ =0x00001032
	add r1, r2, r0
	add r1, r5, r1
	ldrb r3, [r1]
	mov r0, #64
	orr r0, r0, r3
	strb r0, [r1]
	ldr r1, _080FB454  @ =0x00000E75
	add r2, r2, r1
	add r2, r5, r2
	mov r0, #4
	strb r0, [r2]
	add r0, r5, #0
	bl sub_080C4F98
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FB444:
	.4byte 0x00000F92
_080FB448:
	.4byte 0x00000996
_080FB44C:
	.4byte gRam
_080FB450:
	.4byte 0x00001032
_080FB454:
	.4byte 0x00000E75
	THUMB_FUNC_END sub_080FB340

	THUMB_FUNC_START sub_080FB458
sub_080FB458: @ 0x080FB458
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080FB568  @ =gRam
	ldr r0, _080FB56C  @ =0x00001032
	add r1, r4, r0
	add r1, r5, r1
	ldrb r2, [r1]
	mov r0, #191
	and r0, r0, r2
	mov r2, #0
	mov r12, r2
	strb r0, [r1]
	ldr r3, _080FB570  @ =0x00000E75
	add r0, r4, r3
	add r0, r5, r0
	mov r1, r12
	strb r1, [r0]
	ldr r2, _080FB574  @ =0x000010E2
	add r0, r4, r2
	add r2, r5, r0
	ldrb r1, [r2]
	mov r8, r4
	cmp r1, #0
	bne _080FB490
	b _080FB59C
_080FB490:
	ldr r3, _080FB578  @ =0x00001152
	add r0, r4, r3
	add r2, r5, r0
	ldrb r0, [r2]
	sub r0, r0, #2
	strb r0, [r2]
	ldr r1, _080FB57C  @ =0x00001142
	add r0, r4, r1
	add r3, r5, r0
	ldrb r1, [r3]
	mov r7, #128
	add r0, r7, #0
	and r0, r0, r1
	cmp r0, #0
	beq _080FB4FE
	mov r0, r12
	strb r0, [r3]
	ldrb r0, [r2]
	mvn r0, r0
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r0, r0, #1
	lsr r0, r0, #1
	cmp r0, #8
	bhi _080FB4C4
	mov r0, #0
_080FB4C4:
	strb r0, [r2]
	ldr r1, _080FB580  @ =0x00000F22
	add r0, r4, r1
	add r3, r5, r0
	ldrb r2, [r3]
	mov r6, #127
	lsr r1, r2, #1
	add r0, r7, #0
	and r0, r0, r2
	orr r1, r1, r0
	strb r1, [r3]
	cmp r1, #255
	bne _080FB4E2
	mov r2, r12
	strb r2, [r3]
_080FB4E2:
	ldr r3, _080FB584  @ =0x00000F12
	add r0, r4, r3
	add r3, r5, r0
	ldrb r2, [r3]
	lsr r1, r2, #1
	and r1, r1, r6
	add r0, r7, #0
	and r0, r0, r2
	orr r1, r1, r0
	strb r1, [r3]
	cmp r1, #255
	bne _080FB4FE
	mov r0, r12
	strb r0, [r3]
_080FB4FE:
	mov r4, r8
	ldr r1, _080FB574  @ =0x000010E2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r1, r0, #24
	lsr r0, r1, #24
	cmp r0, #63
	bhi _080FB530
	ldr r3, _080FB580  @ =0x00000F22
	add r2, r4, r3
	add r2, r5, r2
	ldr r3, _080FB588  @ =gUnknown_0817A6E6
	lsr r0, r1, #25
	mov r1, #1
	and r0, r0, r1
	add r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, _080FB58C  @ =0x00001052
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FB530:
	ldr r3, _080FB58C  @ =0x00001052
	add r3, r3, r8
	add r3, r5, r3
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
	ldr r0, _080FB590  @ =0x00000F92
	add r0, r0, r8
	add r0, r5, r0
	mov r1, #2
	strb r1, [r0]
	ldr r4, _080FB594  @ =0x00001122
	add r4, r4, r8
	add r4, r5, r4
	ldrb r0, [r4]
	mov r2, #191
	and r2, r2, r0
	ldr r5, _080FB598  @ =gUnknown_0817A6E4
	ldrb r0, [r3]
	lsr r0, r0, #3
	mov r1, #1
	and r0, r0, r1
	add r0, r0, r5
	ldrb r0, [r0]
	orr r2, r2, r0
	strb r2, [r4]
	b _080FB5B2
	.byte 0x00
	.byte 0x00
_080FB568:
	.4byte gRam
_080FB56C:
	.4byte 0x00001032
_080FB570:
	.4byte 0x00000E75
_080FB574:
	.4byte 0x000010E2
_080FB578:
	.4byte 0x00001152
_080FB57C:
	.4byte 0x00001142
_080FB580:
	.4byte 0x00000F22
_080FB584:
	.4byte 0x00000F12
_080FB588:
	.4byte gUnknown_0817A6E6
_080FB58C:
	.4byte 0x00001052
_080FB590:
	.4byte 0x00000F92
_080FB594:
	.4byte 0x00001122
_080FB598:
	.4byte gUnknown_0817A6E4
_080FB59C:
	ldr r3, _080FB5BC  @ =0x00000F72
	add r0, r4, r3
	add r0, r5, r0
	strb r1, [r0]
	ldr r1, _080FB5C0  @ =0x00001152
	add r0, r4, r1
	add r0, r5, r0
	mov r1, #32
	strb r1, [r0]
	mov r0, #64
	strb r0, [r2]
_080FB5B2:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080FB5BC:
	.4byte 0x00000F72
_080FB5C0:
	.4byte 0x00001152
	THUMB_FUNC_END sub_080FB458

	THUMB_FUNC_START sub_080FB5C4
sub_080FB5C4: @ 0x080FB5C4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080FB670  @ =gRam
	ldr r1, _080FB674  @ =0x00001142
	add r0, r5, r1
	add r0, r4, r0
	ldr r2, _080FB678  @ =0x00000FE2
	add r1, r5, r2
	add r6, r4, r1
	ldrb r1, [r0]
	ldrb r0, [r6]
	orr r0, r0, r1
	cmp r0, #0
	bne _080FB6B6
	mov r1, #161
	lsl r1, r1, #4
	add r0, r5, r1
	ldr r2, _080FB67C  @ =0x000010F2
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080FB6B6
	ldr r1, _080FB680  @ =0x000016F6
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #128
	beq _080FB6B6
	ldr r2, _080FB684  @ =0x0000178A
	add r0, r5, r2
	ldrb r1, [r0]
	mov r0, #10
	and r0, r0, r1
	cmp r0, #0
	beq _080FB6B6
	bl sub_080C3C98
	add r0, r4, #0
	bl sub_080FB6C8
	bl sub_080C466C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FB6B6
	ldr r0, _080FB688  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	ldr r2, _080FB68C  @ =0x00000F12
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	mov r1, #32
	strb r1, [r6]
	ldr r2, _080FB690  @ =0x00001152
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080FB694  @ =0x000010A2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #4
	strb r1, [r0]
	ldr r2, _080FB698  @ =0x00000F72
	add r1, r5, r2
	add r1, r4, r1
	ldrb r0, [r1]
	mov r2, #1
	eor r0, r0, r2
	strb r0, [r1]
	cmp r0, #0
	beq _080FB6A0
	ldr r1, _080FB69C  @ =0x000010E2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #255
	b _080FB6A8
_080FB670:
	.4byte gRam
_080FB674:
	.4byte 0x00001142
_080FB678:
	.4byte 0x00000FE2
_080FB67C:
	.4byte 0x000010F2
_080FB680:
	.4byte 0x000016F6
_080FB684:
	.4byte 0x0000178A
_080FB688:
	.4byte 0x00000F22
_080FB68C:
	.4byte 0x00000F12
_080FB690:
	.4byte 0x00001152
_080FB694:
	.4byte 0x000010A2
_080FB698:
	.4byte 0x00000F72
_080FB69C:
	.4byte 0x000010E2
_080FB6A0:
	ldr r2, _080FB6BC  @ =0x000010E2
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #64
_080FB6A8:
	strb r1, [r0]
	ldr r0, _080FB6C0  @ =gRam
	ldr r1, _080FB6C4  @ =0x00001082
	add r0, r0, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
_080FB6B6:
	pop {r4-r6}
	pop {r0}
	bx r0
_080FB6BC:
	.4byte 0x000010E2
_080FB6C0:
	.4byte gRam
_080FB6C4:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080FB5C4

	THUMB_FUNC_START sub_080FB6C8
sub_080FB6C8: @ 0x080FB6C8
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r4, _080FB72C  @ =gRam
	ldr r2, _080FB730  @ =0x00000EE2
	add r1, r4, r2
	add r1, r0, r1
	ldrb r3, [r1]
	ldr r5, _080FB734  @ =0x00000F02
	add r1, r4, r5
	add r1, r0, r1
	ldrb r1, [r1]
	lsl r1, r1, #8
	add r3, r3, r1
	sub r3, r3, #16
	sub r2, r2, #16
	add r1, r4, r2
	add r1, r0, r1
	ldrb r2, [r1]
	sub r5, r5, #16
	add r1, r4, r5
	add r0, r0, r1
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r2, r2, r0
	sub r2, r2, #16
	ldr r1, _080FB738  @ =0x00000968
	add r0, r4, r1
	strb r3, [r0]
	lsr r3, r3, #8
	ldr r5, _080FB73C  @ =0x00000974
	add r0, r4, r5
	strb r3, [r0]
	add r1, r1, #1
	add r0, r4, r1
	strb r2, [r0]
	lsr r2, r2, #8
	add r5, r5, #1
	add r0, r4, r5
	strb r2, [r0]
	add r1, r1, #3
	add r0, r4, r1
	mov r1, #48
	strb r1, [r0]
	ldr r2, _080FB740  @ =0x0000096D
	add r4, r4, r2
	strb r1, [r4]
	pop {r4,r5}
	pop {r0}
	bx r0
_080FB72C:
	.4byte gRam
_080FB730:
	.4byte 0x00000EE2
_080FB734:
	.4byte 0x00000F02
_080FB738:
	.4byte 0x00000968
_080FB73C:
	.4byte 0x00000974
_080FB740:
	.4byte 0x0000096D
	THUMB_FUNC_END sub_080FB6C8

	THUMB_FUNC_START sub_080FB744
sub_080FB744: @ 0x080FB744
	bx lr
	THUMB_FUNC_END sub_080FB744

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FB748
sub_080FB748: @ 0x080FB748
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl sub_080C7A20
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FB7AE
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FB7AE
	ldr r6, _080FB7B8  @ =gRam
	ldr r1, _080FB7BC  @ =0x00000FE2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FB78C
	mov r0, sp
	add r1, r4, #0
	bl sub_080C4948
_080FB78C:
	add r0, r5, #0
	bl sub_080FB5C4
	add r0, r5, #0
	bl sub_080C99DC
	ldr r1, _080FB7C0  @ =gUnknown_0817A6CC
	ldr r2, _080FB7C4  @ =0x00000F72
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
_080FB7AE:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FB7B8:
	.4byte gRam
_080FB7BC:
	.4byte 0x00000FE2
_080FB7C0:
	.4byte gUnknown_0817A6CC
_080FB7C4:
	.4byte 0x00000F72
	THUMB_FUNC_END sub_080FB748

	THUMB_FUNC_START sub_080FB7C8
sub_080FB7C8: @ 0x080FB7C8
	push {r4-r6,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080FB830  @ =gRam
	ldr r1, _080FB834  @ =0x00000F72
	add r0, r5, r1
	add r6, r4, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _080FB826
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C632C
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FB826
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FB826
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #2
	bne _080FB826
	ldr r1, _080FB838  @ =0x00001182
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #9
	bne _080FB826
	mov r1, #188
	lsl r1, r1, #4
	add r0, r5, r1
	ldrh r1, [r0]
	add r1, r1, #1
	strh r1, [r0]
	mov r0, #1
	strb r0, [r6]
_080FB826:
	add sp, sp, #4
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FB830:
	.4byte gRam
_080FB834:
	.4byte 0x00000F72
_080FB838:
	.4byte 0x00001182
	THUMB_FUNC_END sub_080FB7C8

	THUMB_FUNC_START sub_080FB83C
sub_080FB83C: @ 0x080FB83C
	bx lr
	THUMB_FUNC_END sub_080FB83C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FB840
sub_080FB840: @ 0x080FB840
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080ED830
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #0
	bne _080FB8BC
	ldr r1, _080FB8C4  @ =gUnknown_020109B8
	mov r0, #48
	strb r0, [r1]
	sub r1, r1, #2
	mov r0, #128
	strh r0, [r1]
	ldr r0, _080FB8C8  @ =gUnknown_020109B9
	strb r2, [r0]
	add r0, r0, #3
	strb r2, [r0]
	sub r0, r0, #2
	strh r2, [r0]
	add r0, r4, #0
	bl sub_080FCF58
	bl sub_080ED97C
	mov r1, #0
	ldr r3, _080FB8CC  @ =gRam
	ldr r2, _080FB8D0  @ =0x000009DA
	add r0, r3, r2
	ldrh r0, [r0]
	cmp r0, #105
	bne _080FB888
	mov r1, #1
_080FB888:
	cmp r1, #0
	beq _080FB8BC
	ldr r0, _080FB8D4  @ =0x00000EA5
	add r2, r3, r0
	add r2, r5, r2
	ldrb r1, [r2]
	mov r0, #240
	and r0, r0, r1
	mov r1, #7
	orr r0, r0, r1
	strb r0, [r2]
	ldr r0, _080FB8D8  @ =0x00001122
	add r2, r3, r0
	add r2, r5, r2
	ldrb r1, [r2]
	mov r0, #241
	and r0, r0, r1
	mov r1, #6
	orr r0, r0, r1
	strb r0, [r2]
	ldr r2, _080FB8DC  @ =0x00001022
	add r1, r3, r2
	add r1, r5, r1
	ldrb r0, [r1]
	lsl r0, r0, #2
	strb r0, [r1]
_080FB8BC:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FB8C4:
	.4byte gUnknown_020109B8
_080FB8C8:
	.4byte gUnknown_020109B9
_080FB8CC:
	.4byte gRam
_080FB8D0:
	.4byte 0x000009DA
_080FB8D4:
	.4byte 0x00000EA5
_080FB8D8:
	.4byte 0x00001122
_080FB8DC:
	.4byte 0x00001022
	THUMB_FUNC_END sub_080FB840

	THUMB_FUNC_START sub_080FB8E0
sub_080FB8E0: @ 0x080FB8E0
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #20
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r3, _080FB940  @ =gRam
	ldr r1, _080FB944  @ =0x00000F82
	add r0, r3, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #2
	bls _080FB95C
	ldr r2, _080FB948  @ =0x00001132
	add r0, r3, r2
	add r0, r5, r0
	mov r1, #31
	strb r1, [r0]
	ldr r4, _080FB94C  @ =0x00000D84
	add r0, r3, r4
	add r0, r5, r0
	mov r1, #2
	strb r1, [r0]
	mov r1, #0
	ldr r2, _080FB950  @ =0x000009DA
	add r0, r3, r2
	ldrh r0, [r0]
	cmp r0, #105
	bne _080FB920
	mov r1, #1
_080FB920:
	cmp r1, #0
	beq _080FB990
	ldr r4, _080FB954  @ =0x00001022
	add r0, r3, r4
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #11
	bhi _080FB990
	ldr r1, _080FB958  @ =0x00000E75
	add r0, r3, r1
	add r0, r5, r0
	ldrb r1, [r0]
	mov r2, #4
	orr r1, r1, r2
	b _080FB98E
	.byte 0x00
	.byte 0x00
_080FB940:
	.4byte gRam
_080FB944:
	.4byte 0x00000F82
_080FB948:
	.4byte 0x00001132
_080FB94C:
	.4byte 0x00000D84
_080FB950:
	.4byte 0x000009DA
_080FB954:
	.4byte 0x00001022
_080FB958:
	.4byte 0x00000E75
_080FB95C:
	mov r1, #0
	ldr r2, _080FBAA8  @ =0x000009DA
	add r0, r3, r2
	ldrh r0, [r0]
	cmp r0, #105
	bne _080FB96A
	mov r1, #1
_080FB96A:
	cmp r1, #0
	beq _080FB978
	ldr r4, _080FBAAC  @ =0x00001132
	add r0, r3, r4
	add r0, r5, r0
	mov r1, #24
	strb r1, [r0]
_080FB978:
	ldr r0, _080FBAB0  @ =0x00000D94
	add r1, r3, r0
	add r1, r5, r1
	ldrb r2, [r1]
	mov r0, #241
	and r0, r0, r2
	strb r0, [r1]
	ldr r1, _080FBAB4  @ =0x00000D84
	add r0, r3, r1
	add r0, r5, r0
	mov r1, #10
_080FB98E:
	strb r1, [r0]
_080FB990:
	add r0, r5, #0
	bl sub_080FD1A0
	ldr r2, _080FBAB8  @ =gRam
	mov r8, r2
	ldr r0, _080FBABC  @ =0x00000FA2
	add r0, r0, r8
	add r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #6
	bne _080FB9A8
	b _080FBCBE
_080FB9A8:
	ldr r1, _080FBAC0  @ =gUnknown_0817A74A
	mov r0, sp
	mov r2, #3
	bl memcpy
	add r4, sp, #4
	ldr r1, _080FBAC4  @ =gUnknown_0817A74D
	add r0, r4, #0
	mov r2, #3
	bl memcpy
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FB9CC
	b _080FBDBC
_080FB9CC:
	mov r1, #0
	ldr r0, _080FBAA8  @ =0x000009DA
	add r0, r0, r8
	ldrh r0, [r0]
	cmp r0, #105
	bne _080FB9DA
	mov r1, #1
_080FB9DA:
	add r3, sp, #8
	mov r9, r3
	cmp r1, #0
	beq _080FBA86
	mov r6, #0
	mov r7, #0
	mov r4, r8
	mov r0, #150
	lsl r0, r0, #4
	add r3, r4, r0
	ldr r1, _080FBAC8  @ =0x00000964
	add r2, r4, r1
	add r0, r0, #8
	add r0, r0, r4
	mov r10, r0
	ldr r1, _080FBACC  @ =0x00000EE2
	add r0, r4, r1
	add r0, r0, r5
	mov r8, r0
_080FBA00:
	ldr r1, _080FBAD0  @ =0x00000FF2
	add r0, r4, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #74
	bne _080FBA80
	mov r1, r8
	ldrb r0, [r1]
	strb r0, [r3]
	ldr r1, _080FBAD4  @ =0x00000F02
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	mov r12, r0
	ldr r1, _080FBAD8  @ =0x00000961
	add r0, r4, r1
	mov r1, r12
	strb r1, [r0]
	ldr r1, _080FBADC  @ =0x00000ED2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r2]
	add r1, r1, #32
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	mov r12, r0
	ldr r1, _080FBAE0  @ =0x00000965
	add r0, r4, r1
	mov r1, r12
	strb r1, [r0]
	ldr r1, _080FBAE4  @ =0x00001142
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	mov r1, r10
	strb r0, [r1]
	mov r1, sp
	add r0, r1, r7
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	ldrh r1, [r3]
	add r0, r0, r1
	strh r0, [r3]
	mov r0, sp
	add r0, r0, r7
	add r0, r0, #4
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	ldrh r1, [r2]
	add r0, r0, r1
	strh r0, [r2]
	lsl r0, r6, #24
	lsr r0, r0, #24
	str r2, [sp, #12]
	str r3, [sp, #16]
	bl sub_080CAE50
	add r7, r7, #1
	ldr r3, [sp, #16]
	ldr r2, [sp, #12]
_080FBA80:
	add r6, r6, #1
	cmp r6, #15
	ble _080FBA00
_080FBA86:
	mov r2, #0
	ldr r0, _080FBAB8  @ =gRam
	ldr r3, _080FBAA8  @ =0x000009DA
	add r1, r0, r3
	ldrh r1, [r1]
	add r3, r0, #0
	cmp r1, #105
	bne _080FBA98
	mov r2, #1
_080FBA98:
	cmp r2, #0
	beq _080FBAF0
	ldr r4, _080FBAE8  @ =0x00000F82
	add r1, r3, r4
	add r1, r5, r1
	ldr r2, _080FBAEC  @ =gUnknown_0817A719
	add r4, r4, #160
	b _080FBAFA
_080FBAA8:
	.4byte 0x000009DA
_080FBAAC:
	.4byte 0x00001132
_080FBAB0:
	.4byte 0x00000D94
_080FBAB4:
	.4byte 0x00000D84
_080FBAB8:
	.4byte gRam
_080FBABC:
	.4byte 0x00000FA2
_080FBAC0:
	.4byte gUnknown_0817A74A
_080FBAC4:
	.4byte gUnknown_0817A74D
_080FBAC8:
	.4byte 0x00000964
_080FBACC:
	.4byte 0x00000EE2
_080FBAD0:
	.4byte 0x00000FF2
_080FBAD4:
	.4byte 0x00000F02
_080FBAD8:
	.4byte 0x00000961
_080FBADC:
	.4byte 0x00000ED2
_080FBAE0:
	.4byte 0x00000965
_080FBAE4:
	.4byte 0x00001142
_080FBAE8:
	.4byte 0x00000F82
_080FBAEC:
	.4byte gUnknown_0817A719
_080FBAF0:
	ldr r0, _080FBBD8  @ =0x00000F82
	add r1, r3, r0
	add r1, r5, r1
	ldr r2, _080FBBDC  @ =gUnknown_0817A70C
	ldr r4, _080FBBE0  @ =0x00001022
_080FBAFA:
	add r0, r3, r4
	add r0, r5, r0
	ldrb r0, [r0]
	lsr r0, r0, #2
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	mov r1, #0
	ldr r2, _080FBBE4  @ =0x000009DA
	add r0, r3, r2
	ldrh r0, [r0]
	cmp r0, #105
	bne _080FBB16
	mov r1, #1
_080FBB16:
	cmp r1, #0
	beq _080FBC10
	ldr r4, _080FBBD8  @ =0x00000F82
	add r0, r3, r4
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FBC10
	ldr r1, _080FBBE8  @ =0x00001062
	add r0, r3, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FBC10
	mov r6, #0
	add r4, r3, #0
	mov r2, #150
	lsl r2, r2, #4
	add r2, r2, r4
	mov r8, r2
	ldr r3, _080FBBEC  @ =0x00000964
	add r7, r4, r3
	ldr r0, _080FBBF0  @ =0x00000968
	add r0, r0, r4
	mov r10, r0
_080FBB48:
	add r0, r5, #0
	bl sub_080CBBEC
	add r2, r0, #0
	cmp r2, #0
	blt _080FBBC0
	ldr r1, _080FBBF4  @ =0x00000EE2
	add r0, r4, r1
	add r0, r2, r0
	ldrb r0, [r0]
	mov r3, r8
	strb r0, [r3]
	add r1, r1, #32
	add r0, r4, r1
	add r0, r2, r0
	ldrb r1, [r0]
	ldr r3, _080FBBF8  @ =0x00000961
	add r0, r4, r3
	strb r1, [r0]
	ldr r1, _080FBBFC  @ =0x00000ED2
	add r0, r4, r1
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r7]
	ldr r3, _080FBC00  @ =0x00000EF2
	add r0, r4, r3
	add r0, r2, r0
	ldrb r1, [r0]
	ldr r3, _080FBC04  @ =0x00000965
	add r0, r4, r3
	strb r1, [r0]
	ldr r1, _080FBC08  @ =0x00001142
	add r0, r4, r1
	add r0, r2, r0
	ldrb r0, [r0]
	mov r3, r10
	strb r0, [r3]
	mov r1, sp
	add r0, r1, r6
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	mov r3, r8
	ldrh r3, [r3]
	add r0, r0, r3
	mov r1, r8
	strh r0, [r1]
	mov r0, sp
	add r0, r0, r6
	add r0, r0, #4
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	ldrh r3, [r7]
	add r0, r0, r3
	strh r0, [r7]
	lsl r0, r2, #24
	lsr r0, r0, #24
	bl sub_080CAE50
_080FBBC0:
	add r6, r6, #1
	cmp r6, #2
	ble _080FBB48
	ldr r0, _080FBC0C  @ =gRam
	ldr r4, _080FBBE0  @ =0x00001022
	add r0, r0, r4
	add r0, r5, r0
	ldrb r2, [r0]
	mov r1, #252
	and r1, r1, r2
	strb r1, [r0]
	b _080FBC5C
_080FBBD8:
	.4byte 0x00000F82
_080FBBDC:
	.4byte gUnknown_0817A70C
_080FBBE0:
	.4byte 0x00001022
_080FBBE4:
	.4byte 0x000009DA
_080FBBE8:
	.4byte 0x00001062
_080FBBEC:
	.4byte 0x00000964
_080FBBF0:
	.4byte 0x00000968
_080FBBF4:
	.4byte 0x00000EE2
_080FBBF8:
	.4byte 0x00000961
_080FBBFC:
	.4byte 0x00000ED2
_080FBC00:
	.4byte 0x00000EF2
_080FBC04:
	.4byte 0x00000965
_080FBC08:
	.4byte 0x00001142
_080FBC0C:
	.4byte gRam
_080FBC10:
	ldr r2, _080FBC34  @ =gRam
	ldr r1, _080FBC38  @ =0x00000F82
	add r0, r2, r1
	add r0, r5, r0
	ldrb r1, [r0]
	cmp r1, #3
	beq _080FBC40
	ldr r3, _080FBC3C  @ =0x00001062
	add r0, r2, r3
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r1, r0
	beq _080FBC5C
	add r0, r5, #0
	bl sub_080FD164
	b _080FBC5C
	.byte 0x00
	.byte 0x00
_080FBC34:
	.4byte gRam
_080FBC38:
	.4byte 0x00000F82
_080FBC3C:
	.4byte 0x00001062
_080FBC40:
	ldr r4, _080FBC9C  @ =0x00001062
	add r0, r2, r4
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r1, r0
	beq _080FBC5C
	ldr r1, _080FBCA0  @ =0x000010C2
	add r0, r2, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080FC550
_080FBC5C:
	ldr r4, _080FBCA4  @ =gRam
	ldr r2, _080FBC9C  @ =0x00001062
	add r1, r4, r2
	add r1, r5, r1
	ldr r3, _080FBCA8  @ =0x00000F82
	add r0, r4, r3
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	mov r0, r9
	add r1, r5, #0
	bl sub_080C4948
	add r0, r5, #0
	bl sub_080FC204
	add r0, r5, #0
	bl sub_080FC4D4
	add r0, r5, #0
	bl sub_080FC3E8
	ldr r0, _080FBCAC  @ =0x00000FD2
	add r4, r4, r0
	add r4, r5, r4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FBCB0
	add r0, r5, #0
	bl sub_080FBF28
	b _080FBDBC
_080FBC9C:
	.4byte 0x00001062
_080FBCA0:
	.4byte 0x000010C2
_080FBCA4:
	.4byte gRam
_080FBCA8:
	.4byte 0x00000F82
_080FBCAC:
	.4byte 0x00000FD2
_080FBCB0:
	cmp r0, #96
	beq _080FBCB6
	b _080FBDBC
_080FBCB6:
	add r0, r5, #0
	bl sub_080FCFA8
	b _080FBDBC
_080FBCBE:
	ldr r0, _080FBD7C  @ =0x00000FC2
	add r0, r0, r8
	add r2, r5, r0
	ldrb r3, [r2]
	add r1, r3, #0
	cmp r1, #0
	beq _080FBDAC
	ldr r0, _080FBD80  @ =0x000010C2
	add r0, r0, r8
	add r0, r5, r0
	mov r1, #240
	orr r1, r1, r3
	strb r1, [r0]
	ldrb r1, [r2]
	mov r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	blt _080FBDBC
	mov r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080FBDBC
	ldr r1, _080FBD84  @ =gUnknown_020109BC
	ldrb r0, [r1]
	cmp r0, #16
	beq _080FBDBC
	add r2, r0, #0
	add r0, r2, #1
	strb r0, [r1]
	mov r4, #0
	sub r1, r1, #39
	add r3, r2, r1
	ldrb r1, [r3]
	mov r6, #128
	add r0, r6, #0
	and r0, r0, r1
	cmp r0, #0
	beq _080FBD0C
	mov r4, #255
_080FBD0C:
	ldr r0, _080FBD88  @ =0x00000EE2
	add r0, r0, r8
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r0, _080FBD8C  @ =0x00000F02
	add r0, r0, r8
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	ldrb r3, [r3]
	add r1, r1, r3
	lsl r0, r4, #8
	add r1, r1, r0
	ldr r0, _080FBD90  @ =0x00001622
	add r0, r0, r8
	strb r1, [r0]
	lsr r1, r1, #8
	ldr r0, _080FBD94  @ =0x00001623
	add r0, r0, r8
	strb r1, [r0]
	mov r4, #0
	ldr r3, _080FBD98  @ =gUnknown_020109A5
	add r2, r2, r3
	ldrb r1, [r2]
	add r0, r6, #0
	and r0, r0, r1
	cmp r0, #0
	beq _080FBD48
	mov r4, #255
_080FBD48:
	ldr r0, _080FBD9C  @ =0x00000ED2
	add r0, r0, r8
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r0, _080FBDA0  @ =0x00000EF2
	add r0, r0, r8
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	ldrb r2, [r2]
	add r1, r1, r2
	lsl r0, r4, #8
	add r1, r1, r0
	ldr r0, _080FBDA4  @ =0x00001624
	add r0, r0, r8
	strb r1, [r0]
	lsr r1, r1, #8
	ldr r0, _080FBDA8  @ =0x00001625
	add r0, r0, r8
	strb r1, [r0]
	add r0, r5, #0
	bl sub_080D9844
	b _080FBDBC
	.byte 0x00
	.byte 0x00
_080FBD7C:
	.4byte 0x00000FC2
_080FBD80:
	.4byte 0x000010C2
_080FBD84:
	.4byte gUnknown_020109BC
_080FBD88:
	.4byte 0x00000EE2
_080FBD8C:
	.4byte 0x00000F02
_080FBD90:
	.4byte 0x00001622
_080FBD94:
	.4byte 0x00001623
_080FBD98:
	.4byte gUnknown_020109A5
_080FBD9C:
	.4byte 0x00000ED2
_080FBDA0:
	.4byte 0x00000EF2
_080FBDA4:
	.4byte 0x00001624
_080FBDA8:
	.4byte 0x00001625
_080FBDAC:
	mov r0, #4
	strb r0, [r4]
	ldr r0, _080FBDCC  @ =0x00000F62
	add r0, r0, r8
	add r0, r5, r0
	strb r1, [r0]
	mov r0, #224
	strb r0, [r2]
_080FBDBC:
	add sp, sp, #20
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080FBDCC:
	.4byte 0x00000F62
	THUMB_FUNC_END sub_080FB8E0

	THUMB_FUNC_START sub_080FBDD0
sub_080FBDD0: @ 0x080FBDD0
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080FBE54  @ =gRam
	ldr r1, _080FBE58  @ =0x00000FC2
	add r0, r5, r1
	add r7, r4, r0
	ldrb r0, [r7]
	cmp r0, #1
	beq _080FBE74
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080FBE7E
	ldr r2, _080FBE5C  @ =0x00000996
	add r0, r5, r2
	ldrb r0, [r0]
	mov r1, #7
	and r1, r1, r0
	ldr r2, _080FBE60  @ =0x00000FD2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	cmp r1, #0
	bne _080FBE1E
	ldr r1, _080FBE64  @ =0x00001122
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r2, #64
	eor r1, r1, r2
	strb r1, [r0]
_080FBE1E:
	add r0, r4, #0
	bl sub_080C99DC
	ldr r2, _080FBE68  @ =0x00001152
	add r0, r5, r2
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	ldr r1, _080FBE6C  @ =0x00001142
	add r0, r5, r1
	add r3, r4, r0
	ldrb r1, [r3]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080FBE7E
	strb r6, [r3]
	mov r0, #12
	strb r0, [r7]
	mov r0, #24
	strb r0, [r2]
	ldr r2, _080FBE70  @ =0x00000F92
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #6
	b _080FBE7C
_080FBE54:
	.4byte gRam
_080FBE58:
	.4byte 0x00000FC2
_080FBE5C:
	.4byte 0x00000996
_080FBE60:
	.4byte 0x00000FD2
_080FBE64:
	.4byte 0x00001122
_080FBE68:
	.4byte 0x00001152
_080FBE6C:
	.4byte 0x00001142
_080FBE70:
	.4byte 0x00000F92
_080FBE74:
	ldr r1, _080FBE84  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
_080FBE7C:
	strb r1, [r0]
_080FBE7E:
	pop {r4-r7}
	pop {r0}
	bx r0
_080FBE84:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080FBDD0

	THUMB_FUNC_START sub_080FBE88
sub_080FBE88: @ 0x080FBE88
	push {r4-r6,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #19
	mov r2, #13
	bl sub_080C9AAC
	add r5, r0, #0
	cmp r5, #0
	blt _080FBEFE
	lsl r4, r5, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080CAE50
	ldr r2, _080FBF04  @ =gRam
	ldr r0, _080FBF08  @ =0x00000964
	add r1, r2, r0
	ldrh r0, [r1]
	add r0, r0, #28
	mov r3, #0
	strh r0, [r1]
	ldr r6, _080FBF0C  @ =0x00000ED2
	add r0, r2, r6
	add r0, r5, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080FBF10  @ =0x00000EF2
	add r0, r2, r1
	add r0, r5, r0
	ldr r6, _080FBF14  @ =0x00000965
	add r1, r2, r6
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080FBF18  @ =0x00000FB2
	add r0, r2, r1
	add r0, r5, r0
	strb r3, [r0]
	ldr r6, _080FBF1C  @ =0x00001122
	add r0, r2, r6
	add r0, r5, r0
	mov r1, #9
	strb r1, [r0]
	ldr r0, _080FBF20  @ =0x000011B2
	add r1, r2, r0
	add r1, r5, r1
	ldrb r3, [r1]
	mov r0, #240
	and r0, r0, r3
	strb r0, [r1]
	ldr r1, _080FBF24  @ =0x00000EA5
	add r2, r2, r1
	add r2, r5, r2
	mov r0, #6
	strb r0, [r2]
	add r0, r4, #0
	bl sub_080FB318
_080FBEFE:
	pop {r4-r6}
	pop {r0}
	bx r0
_080FBF04:
	.4byte gRam
_080FBF08:
	.4byte 0x00000964
_080FBF0C:
	.4byte 0x00000ED2
_080FBF10:
	.4byte 0x00000EF2
_080FBF14:
	.4byte 0x00000965
_080FBF18:
	.4byte 0x00000FB2
_080FBF1C:
	.4byte 0x00001122
_080FBF20:
	.4byte 0x000011B2
_080FBF24:
	.4byte 0x00000EA5
	THUMB_FUNC_END sub_080FBE88

	THUMB_FUNC_START sub_080FBF28
sub_080FBF28: @ 0x080FBF28
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080FBF58  @ =gRam
	ldr r2, _080FBF5C  @ =0x00000FE2
	add r0, r1, r2
	add r0, r4, r0
	ldrb r2, [r0]
	add r5, r1, #0
	cmp r2, #0
	bne _080FBF68
	ldr r1, _080FBF60  @ =gUnknown_0817A750
	ldr r3, _080FBF64  @ =0x00000F52
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	b _080FBFC4
	.byte 0x00
	.byte 0x00
_080FBF58:
	.4byte gRam
_080FBF5C:
	.4byte 0x00000FE2
_080FBF60:
	.4byte gUnknown_0817A750
_080FBF64:
	.4byte 0x00000F52
_080FBF68:
	mov r1, #0
	ldr r3, _080FBF98  @ =0x000009DA
	add r0, r5, r3
	ldrh r0, [r0]
	cmp r0, #105
	bne _080FBF76
	mov r1, #1
_080FBF76:
	cmp r1, #0
	beq _080FBFA0
	ldr r1, _080FBF9C  @ =0x00001062
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #3
	bne _080FBFA0
	cmp r2, #32
	beq _080FBF8E
	cmp r2, #64
	bne _080FBFC4
_080FBF8E:
	add r0, r4, #0
	bl sub_080FBE88
	b _080FBFC4
	.byte 0x00
	.byte 0x00
_080FBF98:
	.4byte 0x000009DA
_080FBF9C:
	.4byte 0x00001062
_080FBFA0:
	ldr r2, _080FBFCC  @ =0x00000FE2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #64
	bne _080FBFC4
	add r0, r4, #0
	bl sub_080FD684
	ldr r3, _080FBFD0  @ =0x00000F82
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #2
	bls _080FBFC4
	add r0, r4, #0
	bl sub_080FCFA8
_080FBFC4:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FBFCC:
	.4byte 0x00000FE2
_080FBFD0:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080FBF28

	THUMB_FUNC_START sub_080FBFD4
sub_080FBFD4: @ 0x080FBFD4
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080FC00C  @ =gRam
	ldr r1, _080FC010  @ =0x00000F22
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	lsl r1, r1, #1
	strb r1, [r2]
	ldr r1, _080FC014  @ =0x00000F12
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	lsl r1, r1, #1
	strb r1, [r2]
	ldr r1, _080FC018  @ =0x00000FC2
	add r2, r3, r1
	add r2, r0, r2
	ldrb r1, [r2]
	lsr r1, r1, #1
	strb r1, [r2]
	ldr r1, _080FC01C  @ =0x00000F72
	add r3, r3, r1
	add r0, r0, r3
	mov r1, #1
	strb r1, [r0]
	bx lr
	.byte 0x00
	.byte 0x00
_080FC00C:
	.4byte gRam
_080FC010:
	.4byte 0x00000F22
_080FC014:
	.4byte 0x00000F12
_080FC018:
	.4byte 0x00000FC2
_080FC01C:
	.4byte 0x00000F72
	THUMB_FUNC_END sub_080FBFD4

	THUMB_FUNC_START sub_080FC020
sub_080FC020: @ 0x080FC020
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r6, _080FC0D4  @ =gRam
	ldr r1, _080FC0D8  @ =0x000010C2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FC040
	ldr r2, _080FC0DC  @ =0x00000FC2
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FC0CC
_080FC040:
	add r0, r4, #0
	bl sub_080FC198
	add r5, r0, #0
	cmp r5, #0
	bne _080FC0CC
	bl GetRandomInt
	mov r2, #7
	and r2, r2, r0
	ldr r0, _080FC0E0  @ =0x00000F22
	add r1, r6, r0
	add r1, r4, r1
	ldr r0, _080FC0E4  @ =gUnknown_0817A760
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080FC0E8  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldr r0, _080FC0EC  @ =gUnknown_0817A768
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r1, _080FC0DC  @ =0x00000FC2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
	ldr r2, _080FC0F0  @ =0x00000F62
	add r0, r6, r2
	add r0, r4, r0
	strb r5, [r0]
	ldr r1, _080FC0F4  @ =0x00000F82
	add r0, r6, r1
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #2
	bls _080FC09A
	add r0, r4, #0
	bl sub_080FBFD4
	ldrb r0, [r5]
	cmp r0, #2
	bhi _080FC0BE
_080FC09A:
	mov r1, #0
	ldr r2, _080FC0F8  @ =0x000009DA
	add r0, r6, r2
	ldrh r0, [r0]
	cmp r0, #105
	bne _080FC0A8
	mov r1, #1
_080FC0A8:
	cmp r1, #0
	beq _080FC0BE
	ldr r1, _080FC0FC  @ =0x00001022
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #31
	bhi _080FC0BE
	add r0, r4, #0
	bl sub_080FBFD4
_080FC0BE:
	ldr r1, _080FC0D4  @ =gRam
	ldr r2, _080FC100  @ =0x00000F52
	add r1, r1, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FC0CC:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FC0D4:
	.4byte gRam
_080FC0D8:
	.4byte 0x000010C2
_080FC0DC:
	.4byte 0x00000FC2
_080FC0E0:
	.4byte 0x00000F22
_080FC0E4:
	.4byte gUnknown_0817A760
_080FC0E8:
	.4byte 0x00000F12
_080FC0EC:
	.4byte gUnknown_0817A768
_080FC0F0:
	.4byte 0x00000F62
_080FC0F4:
	.4byte 0x00000F82
_080FC0F8:
	.4byte 0x000009DA
_080FC0FC:
	.4byte 0x00001022
_080FC100:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FC020

	THUMB_FUNC_START sub_080FC104
sub_080FC104: @ 0x080FC104
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r1, r0, #24
	add r4, r1, #0
	ldr r5, _080FC17C  @ =gRam
	ldr r2, _080FC180  @ =0x000010C2
	add r0, r5, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FC126
	ldr r2, _080FC184  @ =0x00000FC2
	add r0, r5, r2
	add r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FC174
_080FC126:
	add r0, r4, #0
	bl sub_080FC198
	cmp r0, #0
	bne _080FC174
	ldr r1, _080FC184  @ =0x00000FC2
	add r0, r5, r1
	add r2, r4, r0
	mov r0, #64
	strb r0, [r2]
	ldr r0, _080FC188  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080FC18C  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080FC190  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FC194  @ =0x00000F72
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #1
	bne _080FC174
	ldrb r0, [r2]
	lsr r0, r0, #1
	strb r0, [r2]
_080FC174:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FC17C:
	.4byte gRam
_080FC180:
	.4byte 0x000010C2
_080FC184:
	.4byte 0x00000FC2
_080FC188:
	.4byte 0x00000F22
_080FC18C:
	.4byte 0x00000F12
_080FC190:
	.4byte 0x00000F52
_080FC194:
	.4byte 0x00000F72
	THUMB_FUNC_END sub_080FC104

	THUMB_FUNC_START sub_080FC198
sub_080FC198: @ 0x080FC198
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	mov r7, #0
	ldr r5, _080FC1D8  @ =gRam
	ldr r1, _080FC1DC  @ =0x00001002
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #4
	bne _080FC1F6
	mov r7, #1
	mov r0, #0
	strb r0, [r1]
	bl GetRandomInt
	mov r1, #128
	and r1, r1, r0
	cmp r1, #0
	bne _080FC1E4
	ldr r1, _080FC1E0  @ =0x00000FD2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #160
	strb r1, [r0]
	b _080FC1F6
	.byte 0x00
	.byte 0x00
_080FC1D8:
	.4byte gRam
_080FC1DC:
	.4byte 0x00001002
_080FC1E0:
	.4byte 0x00000FD2
_080FC1E4:
	ldr r1, _080FC200  @ =0x00000FE2
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #127
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #93
	bl sub_080CF140
_080FC1F6:
	add r0, r7, #0
	pop {r4-r7}
	pop {r1}
	bx r1
	.byte 0x00
	.byte 0x00
_080FC200:
	.4byte 0x00000FE2
	THUMB_FUNC_END sub_080FC198

	THUMB_FUNC_START sub_080FC204
sub_080FC204: @ 0x080FC204
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r1, _080FC2E4  @ =gUnknown_02010994
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r1, #3
	ldr r4, _080FC2E8  @ =gRam
	ldr r0, _080FC2EC  @ =gUnknown_0817A6E8
	mov r8, r0
	ldr r2, _080FC2F0  @ =0x00001052
	add r0, r4, r2
	add r5, r6, r0
	ldr r7, _080FC2F4  @ =gUnknown_0817A708
	mov r12, r7
	mov r0, #31
	mov r9, r0
_080FC22E:
	lsl r2, r1, #24
	asr r2, r2, #24
	ldr r1, _080FC2F8  @ =gUnknown_02010990
	add r3, r2, r1
	ldrb r0, [r5]
	mov r7, r12
	add r1, r2, r7
	ldrb r1, [r1]
	add r0, r0, r1
	mov r1, r9
	and r0, r0, r1
	add r0, r0, r8
	ldrb r0, [r0]
	strb r0, [r3]
	sub r2, r2, #1
	lsl r2, r2, #24
	lsr r1, r2, #24
	cmp r2, #0
	bge _080FC22E
	mov r1, #1
	ldr r2, _080FC2FC  @ =0x00001092
	add r0, r4, r2
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FC264
	mov r1, #0
_080FC264:
	ldr r7, _080FC300  @ =0x00000996
	add r0, r4, r7
	ldrb r0, [r0]
	and r1, r1, r0
	cmp r1, #0
	bne _080FC2BA
	ldr r1, _080FC304  @ =0x00000FB2
	add r0, r4, r1
	add r3, r6, r0
	ldrb r0, [r3]
	mov r2, #1
	and r2, r2, r0
	ldr r5, _080FC308  @ =gUnknown_020109B9
	ldr r0, _080FC30C  @ =gUnknown_0817A770
	add r0, r2, r0
	ldrb r0, [r0]
	ldrb r7, [r5]
	add r0, r0, r7
	strb r0, [r5]
	ldr r1, _080FC310  @ =gUnknown_0822A938
	add r1, r2, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r1, [r1]
	cmp r0, r1
	bne _080FC29E
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
_080FC29E:
	mov r2, #0
	ldrb r1, [r5]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080FC2AC
	mov r2, #255
_080FC2AC:
	ldr r0, _080FC314  @ =gUnknown_020109B6
	ldrb r1, [r5]
	lsl r2, r2, #8
	orr r1, r1, r2
	ldrh r2, [r0]
	add r1, r1, r2
	strh r1, [r0]
_080FC2BA:
	ldr r7, _080FC2FC  @ =0x00001092
	add r0, r4, r7
	add r7, r6, r0
	ldrb r0, [r7]
	cmp r0, #0
	beq _080FC368
	ldr r5, _080FC308  @ =gUnknown_020109B9
	ldrb r0, [r5]
	cmp r0, #0
	bne _080FC2D6
	add r0, r6, #0
	mov r1, #82
	bl sub_080CF140
_080FC2D6:
	ldrb r0, [r7]
	cmp r0, #2
	bne _080FC318
	add r0, r6, #0
	bl sub_080FC380
	b _080FC368
_080FC2E4:
	.4byte gUnknown_02010994
_080FC2E8:
	.4byte gRam
_080FC2EC:
	.4byte gUnknown_0817A6E8
_080FC2F0:
	.4byte 0x00001052
_080FC2F4:
	.4byte gUnknown_0817A708
_080FC2F8:
	.4byte gUnknown_02010990
_080FC2FC:
	.4byte 0x00001092
_080FC300:
	.4byte 0x00000996
_080FC304:
	.4byte 0x00000FB2
_080FC308:
	.4byte gUnknown_020109B9
_080FC30C:
	.4byte gUnknown_0817A770
_080FC310:
	.4byte gUnknown_0822A938
_080FC314:
	.4byte gUnknown_020109B6
_080FC318:
	cmp r0, #3
	bne _080FC324
	add r0, r6, #0
	bl sub_080FD108
	b _080FC368
_080FC324:
	ldr r1, _080FC374  @ =0x000010B2
	add r0, r4, r1
	add r0, r6, r0
	ldrb r1, [r5]
	ldrb r0, [r0]
	orr r0, r0, r1
	cmp r0, #0
	bne _080FC368
	ldr r2, _080FC378  @ =0x00001082
	add r4, r4, r2
	add r4, r6, r4
	ldr r0, _080FC37C  @ =gUnknown_020109B6
	ldrh r0, [r0]
	lsr r0, r0, #8
	mov r5, #1
	mov r1, #1
	and r0, r0, r1
	strb r0, [r4]
	add r0, r6, #0
	bl sub_080C36D8
	eor r0, r0, r5
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r4, [r4]
	cmp r0, r4
	bne _080FC368
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	add r0, r6, #0
	mov r1, #44
	bl sub_080CF140
_080FC368:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080FC374:
	.4byte 0x000010B2
_080FC378:
	.4byte 0x00001082
_080FC37C:
	.4byte gUnknown_020109B6
	THUMB_FUNC_END sub_080FC204

	THUMB_FUNC_START sub_080FC380
sub_080FC380: @ 0x080FC380
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r3, _080FC3CC  @ =gUnknown_020109BA
	ldr r1, _080FC3D0  @ =gUnknown_0817A772
	ldr r6, _080FC3D4  @ =gRam
	ldr r0, _080FC3D8  @ =0x00001082
	add r2, r6, r0
	add r2, r5, r2
	ldrb r0, [r2]
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r1, [r0]
	ldrh r0, [r3]
	add r1, r1, r0
	strh r1, [r3]
	mov r4, #255
	ldr r3, _080FC3DC  @ =gUnknown_0817A776
	ldrb r0, [r2]
	add r0, r0, r3
	and r1, r1, r4
	ldrb r0, [r0]
	cmp r1, r0
	bne _080FC3BC
	ldr r0, _080FC3E0  @ =0x00001092
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FC3BC:
	ldr r1, _080FC3E4  @ =gUnknown_020109B8
	ldrb r0, [r1]
	add r0, r0, #3
	strb r0, [r1]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FC3CC:
	.4byte gUnknown_020109BA
_080FC3D0:
	.4byte gUnknown_0817A772
_080FC3D4:
	.4byte gRam
_080FC3D8:
	.4byte 0x00001082
_080FC3DC:
	.4byte gUnknown_0817A776
_080FC3E0:
	.4byte 0x00001092
_080FC3E4:
	.4byte gUnknown_020109B8
	THUMB_FUNC_END sub_080FC380

	THUMB_FUNC_START sub_080FC3E8
sub_080FC3E8: @ 0x080FC3E8
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r8, r6
	ldr r7, _080FC4A8  @ =gRam
	ldr r1, _080FC4AC  @ =0x00000F82
	add r0, r7, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080FC49E
	ldr r3, _080FC4B0  @ =0x0000178A
	add r0, r7, r3
	ldrb r1, [r0]
	mov r0, #10
	and r0, r0, r1
	cmp r0, #0
	beq _080FC49E
	ldr r4, _080FC4B4  @ =0x000016F6
	add r0, r7, r4
	ldrb r0, [r0]
	cmp r0, #128
	beq _080FC49E
	bl sub_080C3C98
	ldr r0, _080FC4B8  @ =0x00000ED2
	add r4, r7, r0
	add r4, r6, r4
	ldrb r5, [r4]
	add r0, r5, #0
	add r0, r0, #8
	strb r0, [r4]
	add r0, r6, #0
	bl sub_080C4574
	strb r5, [r4]
	bl sub_080C466C
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FC49E
	ldr r3, _080FC4BC  @ =0x00001022
	add r1, r7, r3
	add r1, r6, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	mov r0, #87
	mov r1, #0
	bl sub_0812A324
	add r0, r6, #0
	mov r1, #48
	bl sub_080C2CB4
	mov r4, #150
	lsl r4, r4, #4
	add r0, r7, r4
	ldrb r3, [r0]
	ldr r1, _080FC4C0  @ =0x000016CD
	add r0, r7, r1
	strb r3, [r0]
	add r4, r4, #1
	add r0, r7, r4
	ldrb r2, [r0]
	add r1, r1, #1
	add r0, r7, r1
	strb r2, [r0]
	ldr r4, _080FC4C4  @ =0x000016F8
	add r1, r7, r4
	mov r0, #8
	strb r0, [r1]
	ldr r0, _080FC4C8  @ =0x000015F0
	add r1, r7, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080FC496
	ldr r4, _080FC4CC  @ =0x000015F1
	add r0, r7, r4
	strb r3, [r0]
	ldr r3, _080FC4D0  @ =0x000015F2
	add r0, r7, r3
	strb r2, [r0]
	mov r0, #5
	strb r0, [r1]
_080FC496:
	mov r0, r8
	mov r1, #113
	bl sub_080CF0AC
_080FC49E:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080FC4A8:
	.4byte gRam
_080FC4AC:
	.4byte 0x00000F82
_080FC4B0:
	.4byte 0x0000178A
_080FC4B4:
	.4byte 0x000016F6
_080FC4B8:
	.4byte 0x00000ED2
_080FC4BC:
	.4byte 0x00001022
_080FC4C0:
	.4byte 0x000016CD
_080FC4C4:
	.4byte 0x000016F8
_080FC4C8:
	.4byte 0x000015F0
_080FC4CC:
	.4byte 0x000015F1
_080FC4D0:
	.4byte 0x000015F2
	THUMB_FUNC_END sub_080FC3E8

	THUMB_FUNC_START sub_080FC4D4
sub_080FC4D4: @ 0x080FC4D4
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080FC53C  @ =gRam
	ldr r1, _080FC540  @ =0x00000996
	add r0, r3, r1
	ldrb r1, [r0]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080FC536
	ldr r5, _080FC544  @ =0x000016C4
	add r2, r3, r5
	ldr r1, _080FC548  @ =0x00001622
	add r0, r3, r1
	ldrb r1, [r0]
	sub r5, r5, #161
	add r0, r3, r5
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	add r0, r0, #36
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #71
	bhi _080FC536
	mov r0, #182
	lsl r0, r0, #5
	add r2, r3, r0
	ldr r1, _080FC54C  @ =0x00001624
	add r0, r3, r1
	ldrb r1, [r0]
	add r5, r5, #2
	add r0, r3, r5
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	add r0, r0, #40
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #63
	bhi _080FC536
	add r0, r4, #0
	bl sub_080C3BD0
_080FC536:
	pop {r4,r5}
	pop {r0}
	bx r0
_080FC53C:
	.4byte gRam
_080FC540:
	.4byte 0x00000996
_080FC544:
	.4byte 0x000016C4
_080FC548:
	.4byte 0x00001622
_080FC54C:
	.4byte 0x00001624
	THUMB_FUNC_END sub_080FC4D4

	THUMB_FUNC_START sub_080FC550
sub_080FC550: @ 0x080FC550
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r1, #15
	ldr r4, _080FC5A0  @ =gRam
	ldr r0, _080FC5A4  @ =0x00000FA2
	add r3, r4, r0
	mov r2, #0
_080FC560:
	lsl r0, r1, #24
	asr r0, r0, #24
	add r1, r0, r3
	strb r2, [r1]
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bne _080FC560
	ldr r0, _080FC5A8  @ =0x000015F9
	add r1, r4, r0
	mov r0, #7
	strb r0, [r1]
	add r4, r1, #0
	mov r6, #128
_080FC57E:
	add r0, r5, #0
	bl sub_080FC5AC
	ldrb r0, [r4]
	sub r0, r0, #1
	strb r0, [r4]
	and r0, r0, r6
	cmp r0, #0
	beq _080FC57E
	add r0, r5, #0
	mov r1, #109
	bl sub_080CF0AC
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FC5A0:
	.4byte gRam
_080FC5A4:
	.4byte 0x00000FA2
_080FC5A8:
	.4byte 0x000015F9
	THUMB_FUNC_END sub_080FC550

	THUMB_FUNC_START sub_080FC5AC
sub_080FC5AC: @ 0x080FC5AC
	push {r4-r6,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #146
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	bge _080FC5C2
	b _080FC744
_080FC5C2:
	ldr r2, _080FC690  @ =gRam
	ldr r1, _080FC694  @ =0x000015F9
	add r0, r2, r1
	ldrb r5, [r0]
	mov r0, #150
	lsl r0, r0, #4
	add r3, r2, r0
	ldr r0, _080FC698  @ =gUnknown_0817A78C
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r0, _080FC69C  @ =gUnknown_0817A796
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	ldrh r0, [r3]
	add r1, r1, r0
	strh r1, [r3]
	ldr r1, _080FC6A0  @ =0x00000EE2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r3]
	mov r6, #0
	strb r1, [r0]
	ldr r3, _080FC6A4  @ =0x00000F02
	add r0, r2, r3
	add r0, r4, r0
	ldr r3, _080FC6A8  @ =0x00000961
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080FC6AC  @ =0x00000964
	add r3, r2, r0
	ldr r0, _080FC6B0  @ =gUnknown_0817A778
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r0, _080FC6B4  @ =gUnknown_0817A782
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	orr r1, r1, r0
	ldrh r0, [r3]
	add r1, r1, r0
	strh r1, [r3]
	ldr r1, _080FC6B8  @ =0x00000ED2
	add r0, r2, r1
	add r0, r4, r0
	ldrb r1, [r3]
	strb r1, [r0]
	ldr r3, _080FC6BC  @ =0x00000EF2
	add r0, r2, r3
	add r0, r4, r0
	ldr r3, _080FC6C0  @ =0x00000965
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r0, _080FC6C4  @ =0x00001142
	add r1, r2, r0
	add r1, r4, r1
	ldr r0, _080FC6C8  @ =gUnknown_0817A7A0
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r3, _080FC6CC  @ =0x00000F22
	add r1, r2, r3
	add r1, r4, r1
	ldr r0, _080FC6D0  @ =gUnknown_0817A7AA
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080FC6D4  @ =0x00000F12
	add r1, r2, r0
	add r1, r4, r1
	ldr r0, _080FC6D8  @ =gUnknown_0817A7B4
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r3, _080FC6DC  @ =0x00001152
	add r1, r2, r3
	add r1, r4, r1
	ldr r0, _080FC6E0  @ =gUnknown_0817A7BE
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	mov r1, #0
	ldr r3, _080FC6E4  @ =0x000009DA
	add r0, r2, r3
	ldrh r0, [r0]
	add r3, r2, #0
	cmp r0, #105
	bne _080FC67A
	mov r1, #1
_080FC67A:
	cmp r1, #0
	beq _080FC6F0
	ldr r0, _080FC6E8  @ =0x00001122
	add r2, r3, r0
	add r2, r4, r2
	ldr r0, _080FC6EC  @ =gUnknown_0817A7C8
	add r0, r5, r0
	ldrb r0, [r0]
	mov r1, #11
	b _080FC6FE
	.byte 0x00
	.byte 0x00
_080FC690:
	.4byte gRam
_080FC694:
	.4byte 0x000015F9
_080FC698:
	.4byte gUnknown_0817A78C
_080FC69C:
	.4byte gUnknown_0817A796
_080FC6A0:
	.4byte 0x00000EE2
_080FC6A4:
	.4byte 0x00000F02
_080FC6A8:
	.4byte 0x00000961
_080FC6AC:
	.4byte 0x00000964
_080FC6B0:
	.4byte gUnknown_0817A778
_080FC6B4:
	.4byte gUnknown_0817A782
_080FC6B8:
	.4byte 0x00000ED2
_080FC6BC:
	.4byte 0x00000EF2
_080FC6C0:
	.4byte 0x00000965
_080FC6C4:
	.4byte 0x00001142
_080FC6C8:
	.4byte gUnknown_0817A7A0
_080FC6CC:
	.4byte 0x00000F22
_080FC6D0:
	.4byte gUnknown_0817A7AA
_080FC6D4:
	.4byte 0x00000F12
_080FC6D8:
	.4byte gUnknown_0817A7B4
_080FC6DC:
	.4byte 0x00001152
_080FC6E0:
	.4byte gUnknown_0817A7BE
_080FC6E4:
	.4byte 0x000009DA
_080FC6E8:
	.4byte 0x00001122
_080FC6EC:
	.4byte gUnknown_0817A7C8
_080FC6F0:
	ldr r1, _080FC74C  @ =0x00001122
	add r2, r3, r1
	add r2, r4, r2
	ldr r0, _080FC750  @ =gUnknown_0817A7C8
	add r0, r5, r0
	ldrb r0, [r0]
	mov r1, #13
_080FC6FE:
	orr r0, r0, r1
	strb r0, [r2]
	ldr r2, _080FC754  @ =0x00000F92
	add r1, r3, r2
	add r1, r4, r1
	ldr r0, _080FC758  @ =gUnknown_0817A7D2
	add r0, r5, r0
	ldrb r0, [r0]
	mov r2, #0
	strb r0, [r1]
	ldr r1, _080FC75C  @ =0x00000F82
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #128
	strb r1, [r0]
	ldr r1, _080FC760  @ =0x00001012
	add r0, r3, r1
	add r0, r4, r0
	strb r2, [r0]
	ldr r2, _080FC764  @ =0x00000FD2
	add r0, r3, r2
	add r0, r4, r0
	mov r1, #12
	strb r1, [r0]
	ldr r2, _080FC768  @ =0x00001172
	add r0, r3, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080FC76C  @ =0x00001002
	add r0, r3, r1
	add r0, r4, r0
	ldr r2, _080FC770  @ =0x000015F9
	add r1, r3, r2
	ldrb r1, [r1]
	strb r1, [r0]
_080FC744:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FC74C:
	.4byte 0x00001122
_080FC750:
	.4byte gUnknown_0817A7C8
_080FC754:
	.4byte 0x00000F92
_080FC758:
	.4byte gUnknown_0817A7D2
_080FC75C:
	.4byte 0x00000F82
_080FC760:
	.4byte 0x00001012
_080FC764:
	.4byte 0x00000FD2
_080FC768:
	.4byte 0x00001172
_080FC76C:
	.4byte 0x00001002
_080FC770:
	.4byte 0x000015F9
	THUMB_FUNC_END sub_080FC5AC

	THUMB_FUNC_START sub_080FC774
sub_080FC774: @ 0x080FC774
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r7, r0, #24
	ldr r2, _080FC83C  @ =gRam
	ldr r0, _080FC840  @ =0x00001122
	add r1, r2, r0
	add r1, r7, r1
	ldr r3, _080FC844  @ =0x00000D94
	add r0, r2, r3
	add r0, r7, r0
	ldrb r1, [r1]
	ldrb r0, [r0]
	eor r1, r1, r0
	mov r0, #48
	and r1, r1, r0
	lsl r1, r1, #8
	mov r8, r1
	ldr r1, _080FC848  @ =gUnknown_03003E74
	ldrh r0, [r1]
	add r0, r0, #16
	strh r0, [r1]
	mov r3, #1
	mov r6, #0
	ldr r4, _080FC84C  @ =0x00000964
	add r4, r4, r2
	mov r10, r4
	ldr r0, _080FC850  @ =gUnknown_0817A7DE
	mov r9, r0
_080FC7B6:
	ldr r0, _080FC848  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r6
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r1, _080FC854  @ =gUnknown_0817A7DC
	lsl r5, r3, #24
	asr r5, r5, #24
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	ldr r2, _080FC858  @ =gUnknown_03002B90
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	mov r3, r10
	ldrh r2, [r3]
	add r2, r2, #20
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080FC85C  @ =gUnknown_02010994
	ldrb r3, [r3]
	lsr r3, r3, #2
	mov r4, #7
	and r3, r3, r4
	add r3, r3, r9
	ldrb r3, [r3]
	ldr r4, _080FC860  @ =gUnknown_0817A7E6
	add r4, r5, r4
	ldrb r4, [r4]
	lsl r4, r4, #8
	orr r3, r3, r4
	mov r4, r8
	orr r3, r3, r4
	mov r4, #0
	str r4, [sp]
	bl sub_080C6004
	sub r5, r5, #1
	lsl r5, r5, #24
	add r0, r6, #1
	lsl r0, r0, #24
	lsr r6, r0, #24
	lsr r3, r5, #24
	cmp r5, #0
	bge _080FC7B6
	ldr r0, _080FC83C  @ =gRam
	ldr r1, _080FC864  @ =0x000009AD
	add r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FC82C
	add r0, r7, #0
	mov r1, #0
	mov r2, #1
	bl sub_080C6350
_080FC82C:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080FC83C:
	.4byte gRam
_080FC840:
	.4byte 0x00001122
_080FC844:
	.4byte 0x00000D94
_080FC848:
	.4byte gUnknown_03003E74
_080FC84C:
	.4byte 0x00000964
_080FC850:
	.4byte gUnknown_0817A7DE
_080FC854:
	.4byte gUnknown_0817A7DC
_080FC858:
	.4byte gUnknown_03002B90
_080FC85C:
	.4byte gUnknown_02010994
_080FC860:
	.4byte gUnknown_0817A7E6
_080FC864:
	.4byte 0x000009AD
	THUMB_FUNC_END sub_080FC774

	THUMB_FUNC_START sub_080FC868
sub_080FC868: @ 0x080FC868
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	ldr r4, _080FC9B0  @ =gUnknown_03003E74
	ldrh r0, [r4]
	add r0, r0, #2
	strh r0, [r4]
	ldr r5, _080FC9B4  @ =gRam
	ldr r1, _080FC9B8  @ =0x00000F82
	add r0, r5, r1
	mov r2, r8
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #2
	bls _080FC894
	b _080FC9FA
_080FC894:
	add r1, r0, #0
	lsl r1, r1, #6
	ldr r0, _080FC9BC  @ =gUnknown_0817A7E8
	add r1, r1, r0
	mov r0, r8
	mov r2, #8
	bl sub_080C9480
	ldrh r0, [r4]
	add r0, r0, #8
	strh r0, [r4]
	ldr r1, _080FC9C0  @ =0x000010E2
	add r0, r5, r1
	add r0, r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FC8B8
	b _080FC9FA
_080FC8B8:
	mov r1, #1
	add r3, r5, #0
	ldr r2, _080FC9C4  @ =0x000015F2
	add r2, r2, r5
	mov r10, r2
_080FC8C2:
	lsl r0, r1, #24
	asr r4, r0, #24
	ldr r2, _080FC9C8  @ =0x00000E15
	add r1, r5, r2
	add r1, r4, r1
	ldrb r1, [r1]
	add r2, r0, #0
	cmp r1, #7
	beq _080FC8D6
	b _080FC9EC
_080FC8D6:
	ldr r1, _080FC9CC  @ =0x00000DF7
	add r0, r3, r1
	add r6, r4, r0
	sub r1, r1, #10
	add r0, r3, r1
	add r7, r4, r0
	ldrb r1, [r6]
	ldrb r0, [r7]
	orr r0, r0, r1
	cmp r0, #0
	bne _080FC8EE
	b _080FC9EC
_080FC8EE:
	mov r0, r8
	bl sub_080C4574
	ldr r2, _080FC9D0  @ =0x00000DCF
	add r0, r5, r2
	add r0, r0, r4
	mov r9, r0
	ldrb r1, [r0]
	add r2, r2, #20
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r1, r1, #6
	mov r2, #150
	lsl r2, r2, #4
	add r0, r5, r2
	strb r1, [r0]
	lsr r1, r1, #8
	add r2, r2, #16
	add r0, r5, r2
	strb r1, [r0]
	ldr r1, _080FC9D4  @ =0x00000DC5
	add r0, r5, r1
	add r3, r4, r0
	ldrb r1, [r3]
	ldr r2, _080FC9D8  @ =0x00000DD9
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r2, _080FC9DC  @ =0x00000A92
	add r0, r5, r2
	add r4, r4, r0
	ldrb r0, [r4]
	sub r1, r1, r0
	ldr r2, _080FC9E0  @ =0x00000961
	add r0, r5, r2
	strb r1, [r0]
	lsr r1, r1, #8
	add r2, r2, #16
	add r0, r5, r2
	strb r1, [r0]
	ldr r0, _080FC9E4  @ =0x00000964
	add r1, r5, r0
	mov r0, #2
	strb r0, [r1]
	sub r2, r2, #12
	add r1, r5, r2
	mov r0, #15
	strb r0, [r1]
	str r3, [sp]
	bl sub_080C466C
	lsl r0, r0, #24
	ldr r3, [sp]
	cmp r0, #0
	beq _080FC9FA
	ldrb r0, [r6]
	mvn r0, r0
	add r0, r0, #1
	strb r0, [r6]
	ldrb r0, [r7]
	mvn r0, r0
	add r0, r0, #1
	lsl r2, r0, #24
	lsr r2, r2, #25
	mov r1, #128
	and r0, r0, r1
	orr r2, r2, r0
	strb r2, [r7]
	ldr r1, _080FC9C0  @ =0x000010E2
	add r0, r5, r1
	add r0, r0, r8
	mov r1, #32
	strb r1, [r0]
	ldr r2, _080FC9E8  @ =0x000015F0
	add r1, r5, r2
	mov r0, #5
	strb r0, [r1]
	mov r0, r9
	ldrb r1, [r0]
	add r2, r2, #1
	add r0, r5, r2
	strb r1, [r0]
	ldrb r0, [r3]
	ldrb r1, [r4]
	sub r0, r0, r1
	mov r1, r10
	strb r0, [r1]
	mov r0, #113
	mov r1, #0
	bl sub_0812A324
	b _080FC9FA
_080FC9B0:
	.4byte gUnknown_03003E74
_080FC9B4:
	.4byte gRam
_080FC9B8:
	.4byte 0x00000F82
_080FC9BC:
	.4byte gUnknown_0817A7E8
_080FC9C0:
	.4byte 0x000010E2
_080FC9C4:
	.4byte 0x000015F2
_080FC9C8:
	.4byte 0x00000E15
_080FC9CC:
	.4byte 0x00000DF7
_080FC9D0:
	.4byte 0x00000DCF
_080FC9D4:
	.4byte 0x00000DC5
_080FC9D8:
	.4byte 0x00000DD9
_080FC9DC:
	.4byte 0x00000A92
_080FC9E0:
	.4byte 0x00000961
_080FC9E4:
	.4byte 0x00000964
_080FC9E8:
	.4byte 0x000015F0
_080FC9EC:
	mov r1, #255
	lsl r1, r1, #24
	add r0, r2, r1
	lsr r1, r0, #24
	cmp r0, #0
	blt _080FC9FA
	b _080FC8C2
_080FC9FA:
	add sp, sp, #4
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080FC868

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FCA0C
sub_080FCA0C: @ 0x080FCA0C
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #16
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #8]
	ldr r1, _080FCB38  @ =gUnknown_03003E74
	ldrh r0, [r1]
	add r0, r0, #19
	strh r0, [r1]
	mov r3, #3
	mov r2, #0
	add r0, sp, #4
	strb r2, [r0]
	add r7, r0, #0
_080FCA30:
	ldrb r0, [r7]
	ldr r1, _080FCB38  @ =gUnknown_03003E74
	ldrh r1, [r1]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r1, _080FCB3C  @ =gUnknown_0817A948
	lsl r5, r3, #24
	asr r5, r5, #24
	add r1, r5, r1
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	mov r10, r1
	ldr r2, _080FCB40  @ =gUnknown_03002B90
	ldrh r1, [r2]
	add r1, r1, r10
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldr r2, _080FCB44  @ =gUnknown_0817A94C
	add r2, r5, r2
	ldrb r2, [r2]
	lsl r2, r2, #24
	asr r2, r2, #24
	mov r8, r2
	ldr r3, _080FCB48  @ =gUnknown_03002B94
	ldrh r2, [r3]
	ldr r4, _080FCB4C  @ =gUnknown_02010990
	add r4, r4, r5
	mov r9, r4
	add r2, r2, r8
	ldrb r3, [r4]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	mov r12, r2
	ldr r3, _080FCB50  @ =gUnknown_0817A950
	add r3, r5, r3
	ldrb r4, [r3]
	ldr r3, _080FCB54  @ =gUnknown_0817A954
	add r3, r5, r3
	ldrb r6, [r3]
	ldr r2, _080FCB58  @ =gUnknown_03002B99
	mov r3, #0
	ldrsb r3, [r2, r3]
	eor r3, r3, r6
	lsl r3, r3, #8
	orr r3, r3, r4
	lsl r3, r3, #16
	lsr r3, r3, #16
	str r3, [sp, #12]
	mov r3, #2
	str r3, [sp]
	mov r2, r12
	ldr r3, [sp, #12]
	bl sub_080C6004
	ldrb r0, [r7]
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	strb r0, [r7]
	ldr r1, _080FCB38  @ =gUnknown_03003E74
	ldrh r1, [r1]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r2, _080FCB40  @ =gUnknown_03002B90
	ldrh r1, [r2]
	add r1, r1, r10
	lsl r1, r1, #16
	lsr r1, r1, #16
	mov r10, r1
	ldr r3, _080FCB48  @ =gUnknown_03002B94
	ldrh r2, [r3]
	add r2, r2, r8
	add r2, r2, #16
	mov r1, r9
	ldrb r1, [r1]
	add r2, r2, r1
	lsl r2, r2, #16
	lsr r2, r2, #16
	add r4, r4, #2
	ldr r3, _080FCB58  @ =gUnknown_03002B99
	ldrb r3, [r3]
	lsl r3, r3, #24
	asr r3, r3, #24
	eor r6, r6, r3
	lsl r6, r6, #8
	orr r4, r4, r6
	lsl r4, r4, #16
	lsr r4, r4, #16
	mov r1, #2
	str r1, [sp]
	mov r1, r10
	add r3, r4, #0
	bl sub_080C6004
	sub r5, r5, #1
	lsl r5, r5, #24
	ldrb r0, [r7]
	add r0, r0, #1
	strb r0, [r7]
	lsr r3, r5, #24
	cmp r5, #0
	bge _080FCA30
	ldr r0, _080FCB5C  @ =gRam
	ldr r2, _080FCB60  @ =0x000009AD
	add r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FCB26
	ldr r0, [sp, #8]
	mov r1, #2
	mov r2, #7
	bl sub_080C6350
	mov r1, sp
	add r1, r1, #5
	add r0, sp, #4
	ldr r2, [sp, #8]
	bl sub_080C5ACC
_080FCB26:
	add sp, sp, #16
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FCB38:
	.4byte gUnknown_03003E74
_080FCB3C:
	.4byte gUnknown_0817A948
_080FCB40:
	.4byte gUnknown_03002B90
_080FCB44:
	.4byte gUnknown_0817A94C
_080FCB48:
	.4byte gUnknown_03002B94
_080FCB4C:
	.4byte gUnknown_02010990
_080FCB50:
	.4byte gUnknown_0817A950
_080FCB54:
	.4byte gUnknown_0817A954
_080FCB58:
	.4byte gUnknown_03002B99
_080FCB5C:
	.4byte gRam
_080FCB60:
	.4byte 0x000009AD
	THUMB_FUNC_END sub_080FCA0C

	THUMB_FUNC_START sub_080FCB64
sub_080FCB64: @ 0x080FCB64
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r5, _080FCBD4  @ =gRam
	ldr r2, _080FCBD8  @ =0x00000FE2
	add r1, r5, r2
	add r0, r0, r1
	ldrb r0, [r0]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FCBCA
	ldr r1, _080FCBDC  @ =gUnknown_0817A958
	lsr r0, r0, #26
	add r0, r0, r1
	ldrb r0, [r0]
	ldr r3, _080FCBE0  @ =0x0000096C
	add r4, r5, r3
	strb r0, [r4]
	mov r0, #4
	bl sub_080CF388
	ldr r0, _080FCBE4  @ =gUnknown_03003E74
	ldrh r0, [r0]
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	ldrh r1, [r1]
	ldr r3, _080FCBE8  @ =0x00000964
	add r2, r5, r3
	ldrh r3, [r2]
	add r3, r3, #19
	mov r2, #0
	ldrsb r2, [r4, r2]
	add r2, r2, r3
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r4, _080FCBEC  @ =0x00000969
	add r3, r5, r4
	ldrb r4, [r3]
	mov r3, #11
	eor r4, r4, r3
	lsl r4, r4, #24
	mov r3, #202
	lsl r3, r3, #16
	orr r3, r3, r4
	lsr r3, r3, #16
	mov r4, #2
	str r4, [sp]
	bl sub_080C6004
_080FCBCA:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FCBD4:
	.4byte gRam
_080FCBD8:
	.4byte 0x00000FE2
_080FCBDC:
	.4byte gUnknown_0817A958
_080FCBE0:
	.4byte 0x0000096C
_080FCBE4:
	.4byte gUnknown_03003E74
_080FCBE8:
	.4byte 0x00000964
_080FCBEC:
	.4byte 0x00000969
	THUMB_FUNC_END sub_080FCB64

	THUMB_FUNC_START sub_080FCBF0
sub_080FCBF0: @ 0x080FCBF0
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r9, r0
	ldr r1, _080FCCC8  @ =gRam
	ldr r0, _080FCCCC  @ =0x000015F9
	add r2, r1, r0
	mov r0, #0
	strb r0, [r2]
	mov r1, sp
	add r1, r1, #5
	str r1, [sp, #8]
	mov r12, r2
	mov r2, #255
	lsl r2, r2, #8
	mov r8, r2
	mov r3, #128
	lsl r3, r3, #1
	mov r10, r3
_080FCC20:
	mov r6, r12
	ldrb r4, [r6]
	add r5, r4, #0
	ldr r1, _080FCCC8  @ =gRam
	ldr r2, _080FCCD0  @ =0x00001092
	add r0, r1, r2
	add r0, r0, r9
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FCC3C
	add r0, r4, #0
	add r0, r0, #16
	lsl r0, r0, #24
	lsr r4, r0, #24
_080FCC3C:
	ldr r1, _080FCCD4  @ =gUnknown_020109B6
	ldr r0, _080FCCD8  @ =gUnknown_020109BA
	ldrh r0, [r0]
	ldrh r1, [r1]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r2, r0, #16
	lsl r0, r2, #24
	lsr r3, r0, #24
	ldr r6, _080FCCDC  @ =0xFFFFFF00
	add r1, r2, r6
	mov r0, #128
	lsl r0, r0, #8
	and r1, r1, r0
	cmp r1, #0
	beq _080FCC64
	mvn r0, r3
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r3, r0, #24
_080FCC64:
	ldr r6, _080FCCE0  @ =gUnknown_0817A978
	add r0, r4, r6
	ldrb r0, [r0]
	mul r0, r3, r0
	asr r0, r0, #8
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r1, #0
	beq _080FCC80
	mvn r0, r3
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r3, r0, #24
_080FCC80:
	mov r0, r8
	and r2, r2, r0
	orr r2, r2, r3
	add r4, r5, #0
	ldr r0, _080FCCE4  @ =gUnknown_020109B8
	ldrb r1, [r0]
	ldr r3, _080FCCE8  @ =gUnknown_0817A998
	add r0, r4, r3
	ldrb r0, [r0]
	mul r0, r1, r0
	lsr r5, r0, #8
	add r0, r2, #0
	mov r6, #255
	and r0, r0, r6
	lsl r0, r0, #1
	ldr r1, _080FCCEC  @ =gUnknown_08173F38
	add r0, r0, r1
	ldrh r1, [r0]
	add r0, r2, #0
	add r0, r0, #128
	lsl r0, r0, #16
	lsr r7, r0, #16
	add r0, r7, #0
	and r0, r0, r6
	lsl r0, r0, #1
	ldr r3, _080FCCEC  @ =gUnknown_08173F38
	add r0, r0, r3
	ldrh r6, [r0]
	add r0, r1, #0
	mov r3, r8
	and r0, r0, r3
	cmp r0, #0
	beq _080FCCF0
	add r3, r5, #0
	b _080FCCFA
	.byte 0x00
	.byte 0x00
_080FCCC8:
	.4byte gRam
_080FCCCC:
	.4byte 0x000015F9
_080FCCD0:
	.4byte 0x00001092
_080FCCD4:
	.4byte gUnknown_020109B6
_080FCCD8:
	.4byte gUnknown_020109BA
_080FCCDC:
	.4byte 0xFFFFFF00
_080FCCE0:
	.4byte gUnknown_0817A978
_080FCCE4:
	.4byte gUnknown_020109B8
_080FCCE8:
	.4byte gUnknown_0817A998
_080FCCEC:
	.4byte gUnknown_08173F38
_080FCCF0:
	add r0, r1, #0
	mul r0, r5, r0
	asr r0, r0, #8
	lsl r0, r0, #24
	lsr r3, r0, #24
_080FCCFA:
	mov r0, r10
	and r2, r2, r0
	cmp r2, #0
	beq _080FCD0A
	mvn r0, r3
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r3, r0, #24
_080FCD0A:
	ldr r1, _080FCD20  @ =gUnknown_02010995
	add r0, r4, r1
	strb r3, [r0]
	add r0, r6, #0
	mov r2, r8
	and r0, r0, r2
	cmp r0, #0
	beq _080FCD24
	add r3, r5, #0
	b _080FCD2E
	.byte 0x00
	.byte 0x00
_080FCD20:
	.4byte gUnknown_02010995
_080FCD24:
	add r0, r6, #0
	mul r0, r5, r0
	asr r0, r0, #8
	lsl r0, r0, #24
	lsr r3, r0, #24
_080FCD2E:
	add r0, r7, #0
	mov r6, r10
	and r0, r0, r6
	cmp r0, #0
	beq _080FCD40
	mvn r0, r3
	add r0, r0, #1
	lsl r0, r0, #24
	lsr r3, r0, #24
_080FCD40:
	ldr r0, _080FCE9C  @ =gUnknown_020109A5
	add r1, r4, r0
	add r0, r3, #0
	sub r0, r0, #40
	strb r0, [r1]
	mov r1, r12
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #16
	beq _080FCD5C
	b _080FCC20
_080FCD5C:
	ldr r2, _080FCEA0  @ =gRam
	ldr r3, _080FCEA4  @ =0x0000097D
	add r0, r2, r3
	mov r1, #0
	strb r1, [r0]
	ldr r0, _080FCEA8  @ =gUnknown_020109BC
	ldrb r5, [r0]
	add r0, sp, #4
	strb r1, [r0]
	lsl r1, r5, #24
	cmp r5, #16
	beq _080FCE58
	add r4, r2, #0
	ldr r6, _080FCEAC  @ =0x000016CD
	add r2, r2, r6
	mov r10, r2
	add r0, sp, #4
	mov r8, r0
_080FCD80:
	mov r3, #150
	lsl r3, r3, #4
	add r2, r4, r3
	asr r1, r1, #24
	ldr r6, _080FCEB0  @ =gUnknown_02010995
	add r0, r1, r6
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	ldrh r2, [r2]
	add r0, r0, r2
	lsl r0, r0, #16
	lsr r6, r0, #16
	ldr r0, _080FCEB4  @ =0x00000964
	add r2, r4, r0
	ldr r3, _080FCE9C  @ =gUnknown_020109A5
	add r1, r1, r3
	mov r0, #0
	ldrsb r0, [r1, r0]
	ldrh r2, [r2]
	add r0, r0, r2
	lsl r0, r0, #16
	lsr r7, r0, #16
	mov r2, #204
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	bne _080FCDBA
	mov r2, #212
_080FCDBA:
	ldr r1, _080FCEB8  @ =gUnknown_03003E74
	ldrh r1, [r1]
	add r0, r0, r1
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r3, _080FCEBC  @ =0x00000969
	add r1, r4, r3
	ldrb r3, [r1]
	mov r1, #27
	eor r3, r3, r1
	lsl r3, r3, #8
	orr r3, r3, r2
	mov r1, #2
	str r1, [sp]
	add r1, r6, #0
	add r2, r7, #0
	bl sub_080C6004
	ldr r1, _080FCEC0  @ =0x000017AA
	add r0, r4, r1
	ldrb r2, [r0]
	cmp r2, #0
	bne _080FCE40
	ldr r3, _080FCEC4  @ =0x00001092
	add r0, r4, r3
	add r0, r0, r9
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FCE40
	sub r1, r1, #230
	add r0, r4, r1
	ldrb r0, [r0]
	ldr r3, _080FCEC8  @ =0x00000952
	add r1, r4, r3
	ldrb r1, [r1]
	sub r0, r0, r1
	sub r0, r0, r6
	add r0, r0, #12
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #23
	bhi _080FCE40
	mov r6, #182
	lsl r6, r6, #5
	add r0, r4, r6
	ldrb r0, [r0]
	add r3, r3, #6
	add r1, r4, r3
	ldrb r1, [r1]
	sub r0, r0, r1
	sub r0, r0, r7
	add r0, r0, #16
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #15
	bhi _080FCE40
	ldr r6, _080FCEA4  @ =0x0000097D
	add r1, r4, r6
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FCECC  @ =0x000016CE
	add r0, r4, r1
	strb r2, [r0]
	mov r0, #56
	mov r2, r10
	strb r0, [r2]
_080FCE40:
	lsl r0, r5, #24
	mov r3, #128
	lsl r3, r3, #17
	add r0, r0, r3
	lsr r5, r0, #24
	mov r6, r8
	ldrb r0, [r6]
	add r0, r0, #1
	strb r0, [r6]
	lsl r1, r5, #24
	cmp r5, #16
	bne _080FCD80
_080FCE58:
	ldr r1, _080FCEA0  @ =gRam
	ldr r2, _080FCEA4  @ =0x0000097D
	add r0, r1, r2
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	cmp r0, #0
	beq _080FCE78
	ldr r3, _080FCED0  @ =0x00001649
	add r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FCE78
	mov r0, r9
	bl sub_080C3BD0
_080FCE78:
	mov r0, r9
	mov r1, #2
	mov r2, #15
	bl sub_080C6350
	add r0, sp, #4
	ldr r1, [sp, #8]
	mov r2, r9
	bl sub_080C5ACC
	add sp, sp, #12
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080FCE9C:
	.4byte gUnknown_020109A5
_080FCEA0:
	.4byte gRam
_080FCEA4:
	.4byte 0x0000097D
_080FCEA8:
	.4byte gUnknown_020109BC
_080FCEAC:
	.4byte 0x000016CD
_080FCEB0:
	.4byte gUnknown_02010995
_080FCEB4:
	.4byte 0x00000964
_080FCEB8:
	.4byte gUnknown_03003E74
_080FCEBC:
	.4byte 0x00000969
_080FCEC0:
	.4byte 0x000017AA
_080FCEC4:
	.4byte 0x00001092
_080FCEC8:
	.4byte 0x00000952
_080FCECC:
	.4byte 0x000016CE
_080FCED0:
	.4byte 0x00001649
	THUMB_FUNC_END sub_080FCBF0

	THUMB_FUNC_START sub_080FCED4
sub_080FCED4: @ 0x080FCED4
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r0, _080FCEF4  @ =gRam
	ldr r1, _080FCEF8  @ =0x00000F82
	add r0, r0, r1
	add r0, r2, r0
	ldrb r1, [r0]
	mov r0, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080FCEFC
	add r0, r2, #0
	bl sub_080FB8E0
	b _080FCF02
_080FCEF4:
	.4byte gRam
_080FCEF8:
	.4byte 0x00000F82
_080FCEFC:
	add r0, r2, #0
	bl sub_080FBDD0
_080FCF02:
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080FCED4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FCF08
sub_080FCF08: @ 0x080FCF08
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r3, r0, #0
	ldr r1, _080FCF40  @ =gRam
	ldr r2, _080FCF44  @ =0x00000F82
	add r0, r1, r2
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #2
	bls _080FCF50
	mov r2, #0
	ldr r4, _080FCF48  @ =0x000009DA
	add r0, r1, r4
	ldrh r0, [r0]
	cmp r0, #105
	bne _080FCF2C
	mov r2, #1
_080FCF2C:
	cmp r2, #0
	beq _080FCF3C
	ldr r2, _080FCF4C  @ =0x00001022
	add r0, r1, r2
	add r0, r3, r0
	ldrb r0, [r0]
	cmp r0, #11
	bhi _080FCF50
_080FCF3C:
	mov r0, #1
	b _080FCF52
_080FCF40:
	.4byte gRam
_080FCF44:
	.4byte 0x00000F82
_080FCF48:
	.4byte 0x000009DA
_080FCF4C:
	.4byte 0x00001022
_080FCF50:
	mov r0, #0
_080FCF52:
	pop {r4}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080FCF08

	THUMB_FUNC_START sub_080FCF58
sub_080FCF58: @ 0x080FCF58
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r3, #3
	ldr r1, _080FCF98  @ =gUnknown_02010990
	mov r12, r1
	ldr r7, _080FCF9C  @ =gUnknown_0817A6E8
	ldr r1, _080FCFA0  @ =gUnknown_03003282
	add r4, r0, r1
	ldr r6, _080FCFA4  @ =gUnknown_0817A708
	mov r5, #31
_080FCF6E:
	lsl r2, r3, #24
	asr r2, r2, #24
	mov r0, r12
	add r3, r2, r0
	ldrb r0, [r4]
	add r1, r2, r6
	ldrb r1, [r1]
	add r0, r0, r1
	and r0, r0, r5
	add r0, r0, r7
	ldrb r0, [r0]
	strb r0, [r3]
	sub r2, r2, #1
	lsl r2, r2, #24
	lsr r3, r2, #24
	cmp r2, #0
	bge _080FCF6E
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FCF98:
	.4byte gUnknown_02010990
_080FCF9C:
	.4byte gUnknown_0817A6E8
_080FCFA0:
	.4byte gUnknown_03003282
_080FCFA4:
	.4byte gUnknown_0817A708
	THUMB_FUNC_END sub_080FCF58

	THUMB_FUNC_START sub_080FCFA8
sub_080FCFA8: @ 0x080FCFA8
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080FCFD0  @ =gRam
	ldr r1, _080FCFD4  @ =0x00001092
	add r0, r3, r1
	add r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080FCFCA
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FCFD8  @ =0x000010B2
	add r0, r3, r1
	add r0, r2, r0
	mov r1, #32
	strb r1, [r0]
_080FCFCA:
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FCFD0:
	.4byte gRam
_080FCFD4:
	.4byte 0x00001092
_080FCFD8:
	.4byte 0x000010B2
	THUMB_FUNC_END sub_080FCFA8

	THUMB_FUNC_START sub_080FCFDC
sub_080FCFDC: @ 0x080FCFDC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080FD018
	ldr r1, _080FD00C  @ =gRam
	ldr r2, _080FD010  @ =0x00000FC2
	add r0, r1, r2
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080FD006
	mov r0, #32
	strb r0, [r2]
	ldr r0, _080FD014  @ =0x00000F52
	add r1, r1, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FD006:
	pop {r4}
	pop {r0}
	bx r0
_080FD00C:
	.4byte gRam
_080FD010:
	.4byte 0x00000FC2
_080FD014:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FCFDC

	THUMB_FUNC_START sub_080FD018
sub_080FD018: @ 0x080FD018
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r6, r4, #0
	add r0, r4, #0
	bl sub_080FD068
	ldr r5, _080FD05C  @ =gRam
	ldr r1, _080FD060  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080FD03C
	add r0, r4, #0
	bl sub_080FD068
_080FD03C:
	ldr r1, _080FD064  @ =0x00000F82
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #2
	bls _080FD04E
	add r0, r4, #0
	bl sub_080FD068
_080FD04E:
	add r0, r6, #0
	bl Sprite3_Move
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FD05C:
	.4byte gRam
_080FD060:
	.4byte 0x00000996
_080FD064:
	.4byte 0x00000F82
	THUMB_FUNC_END sub_080FD018

	THUMB_FUNC_START sub_080FD068
sub_080FD068: @ 0x080FD068
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080FD090  @ =gRam
	ldr r2, _080FD094  @ =0x00001052
	add r1, r1, r2
	add r0, r0, r1
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r0, #15
	and r1, r1, r0
	cmp r1, #0
	bne _080FD08C
	mov r0, #13
	mov r1, #0
	bl sub_0812A324
_080FD08C:
	pop {r0}
	bx r0
_080FD090:
	.4byte gRam
_080FD094:
	.4byte 0x00001052
	THUMB_FUNC_END sub_080FD068

	THUMB_FUNC_START sub_080FD098
sub_080FD098: @ 0x080FD098
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080FD068
	ldr r6, _080FD0F4  @ =gRam
	ldr r1, _080FD0F8  @ =0x00000996
	add r0, r6, r1
	ldrb r1, [r0]
	mov r0, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080FD0BC
	add r0, r4, #0
	bl sub_080FD068
_080FD0BC:
	ldr r3, _080FD0FC  @ =0x00000F82
	add r0, r6, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #2
	bls _080FD0CE
	add r0, r4, #0
	bl sub_080FD068
_080FD0CE:
	add r0, r5, #0
	bl Sprite3_Move
	ldr r1, _080FD100  @ =0x00000FC2
	add r0, r6, r1
	add r2, r5, r0
	ldrb r1, [r2]
	cmp r1, #0
	bne _080FD0EC
	ldr r3, _080FD104  @ =0x00000F52
	add r0, r6, r3
	add r0, r5, r0
	strb r1, [r0]
	mov r0, #64
	strb r0, [r2]
_080FD0EC:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FD0F4:
	.4byte gRam
_080FD0F8:
	.4byte 0x00000996
_080FD0FC:
	.4byte 0x00000F82
_080FD100:
	.4byte 0x00000FC2
_080FD104:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FD098

	THUMB_FUNC_START sub_080FD108
sub_080FD108: @ 0x080FD108
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r2, _080FD14C  @ =gUnknown_020109BA
	ldr r3, _080FD150  @ =gUnknown_0817A772
	ldr r5, _080FD154  @ =gRam
	ldr r1, _080FD158  @ =0x00001082
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	mov r0, #1
	eor r0, r0, r1
	lsl r0, r0, #1
	add r0, r0, r3
	ldrh r0, [r0]
	ldrh r1, [r2]
	add r0, r0, r1
	strh r0, [r2]
	mov r1, #255
	and r1, r1, r0
	cmp r1, #0
	bne _080FD13C
	ldr r2, _080FD15C  @ =0x00001092
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
_080FD13C:
	ldr r1, _080FD160  @ =gUnknown_020109B8
	ldrb r0, [r1]
	sub r0, r0, #3
	strb r0, [r1]
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FD14C:
	.4byte gUnknown_020109BA
_080FD150:
	.4byte gUnknown_0817A772
_080FD154:
	.4byte gRam
_080FD158:
	.4byte 0x00001082
_080FD15C:
	.4byte 0x00001092
_080FD160:
	.4byte gUnknown_020109B8
	THUMB_FUNC_END sub_080FD108

	THUMB_FUNC_START sub_080FD164
sub_080FD164: @ 0x080FD164
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r1, _080FD194  @ =gRam
	ldr r2, _080FD198  @ =0x00000F82
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	add r0, r0, #7
	ldr r2, _080FD19C  @ =0x000015F9
	add r1, r1, r2
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080FC5AC
	add r0, r4, #0
	mov r1, #109
	bl sub_080CF0AC
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FD194:
	.4byte gRam
_080FD198:
	.4byte 0x00000F82
_080FD19C:
	.4byte 0x000015F9
	THUMB_FUNC_END sub_080FD164

	THUMB_FUNC_START sub_080FD1A0
sub_080FD1A0: @ 0x080FD1A0
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080FD210  @ =gUnknown_03003E74
	mov r0, #39
	strh r0, [r3]
	mov r1, #0
	ldr r2, _080FD214  @ =gRam
	ldr r5, _080FD218  @ =0x000009DA
	add r0, r2, r5
	ldrh r0, [r0]
	cmp r0, #105
	bne _080FD1BE
	mov r1, #1
_080FD1BE:
	cmp r1, #0
	beq _080FD1D2
	ldr r1, _080FD21C  @ =0x00001022
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #11
	bhi _080FD1D2
	mov r0, #38
	strh r0, [r3]
_080FD1D2:
	mov r1, sp
	add r1, r1, #1
	mov r0, sp
	add r2, r4, #0
	bl sub_080C5ACC
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FD208
	add r0, r4, #0
	bl sub_080FCBF0
	add r0, r4, #0
	bl sub_080FC774
	add r0, r4, #0
	bl sub_080FC868
	add r0, r4, #0
	bl sub_080FD220
	add r0, r4, #0
	bl sub_080FCA0C
	add r0, r4, #0
	bl sub_080FCB64
_080FD208:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
_080FD210:
	.4byte gUnknown_03003E74
_080FD214:
	.4byte gRam
_080FD218:
	.4byte 0x000009DA
_080FD21C:
	.4byte 0x00001022
	THUMB_FUNC_END sub_080FD1A0

	THUMB_FUNC_START sub_080FD220
sub_080FD220: @ 0x080FD220
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r1, #0
	ldr r2, _080FD268  @ =gRam
	ldr r3, _080FD26C  @ =0x000009DA
	add r0, r2, r3
	ldrh r0, [r0]
	cmp r0, #105
	bne _080FD236
	mov r1, #1
_080FD236:
	cmp r1, #0
	beq _080FD258
	ldr r1, _080FD270  @ =0x00001022
	add r0, r2, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #11
	bhi _080FD258
	ldr r1, _080FD274  @ =gUnknown_0817A940
	add r0, r4, #0
	mov r2, #1
	bl sub_080C9480
	ldr r1, _080FD278  @ =gUnknown_03003E74
	ldrh r0, [r1]
	add r0, r0, #1
	strh r0, [r1]
_080FD258:
	ldr r1, _080FD27C  @ =gUnknown_0817A8A8
	add r0, r4, #0
	mov r2, #19
	bl sub_080C9480
	pop {r4}
	pop {r0}
	bx r0
_080FD268:
	.4byte gRam
_080FD26C:
	.4byte 0x000009DA
_080FD270:
	.4byte 0x00001022
_080FD274:
	.4byte gUnknown_0817A940
_080FD278:
	.4byte gUnknown_03003E74
_080FD27C:
	.4byte gUnknown_0817A8A8
	THUMB_FUNC_END sub_080FD220

	THUMB_FUNC_START sub_080FD280
sub_080FD280: @ 0x080FD280
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080FD310  @ =gRam
	ldr r1, _080FD314  @ =0x00000EE2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	ldr r2, _080FD318  @ =0x00000F02
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r3, _080FD31C  @ =0x00000952
	add r0, r5, r3
	ldrh r0, [r0]
	sub r1, r1, r0
	lsl r1, r1, #16
	lsr r1, r1, #16
	mov r12, r1
	ldr r1, _080FD320  @ =0x00000ED2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r1, [r0]
	sub r2, r2, #16
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	add r3, r3, #6
	add r0, r5, r3
	ldrh r0, [r0]
	sub r1, r1, r0
	lsl r1, r1, #16
	lsr r7, r1, #16
	ldr r0, _080FD324  @ =0x00001052
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r2, _080FD328  @ =gUnknown_0817A9AB
	lsl r0, r0, #24
	lsr r0, r0, #26
	mov r1, #1
	and r0, r0, r1
	add r0, r0, r2
	ldrb r0, [r0]
	ldr r1, _080FD32C  @ =0x00000969
	add r6, r5, r1
	strb r0, [r6]
	mov r0, r12
	add r0, r0, #32
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #63
	bls _080FD304
	add r0, r7, #0
	add r0, r0, #16
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #31
	bhi _080FD334
_080FD304:
	ldr r2, _080FD330  @ =0x00000FA2
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #0
	b _080FD4C2
	.byte 0x00
	.byte 0x00
_080FD310:
	.4byte gRam
_080FD314:
	.4byte 0x00000EE2
_080FD318:
	.4byte 0x00000F02
_080FD31C:
	.4byte 0x00000952
_080FD320:
	.4byte 0x00000ED2
_080FD324:
	.4byte 0x00001052
_080FD328:
	.4byte gUnknown_0817A9AB
_080FD32C:
	.4byte 0x00000969
_080FD330:
	.4byte 0x00000FA2
_080FD334:
	ldr r0, _080FD408  @ =gUnknown_03003E74
	ldrh r0, [r0]
	ldr r2, _080FD40C  @ =gUnknown_0817A9A8
	ldr r3, _080FD410  @ =0x00000F92
	add r1, r5, r3
	add r1, r4, r1
	ldrb r1, [r1]
	add r1, r1, r2
	ldrb r3, [r1]
	mov r1, #0
	ldrsb r1, [r6, r1]
	lsl r1, r1, #8
	orr r3, r3, r1
	lsl r3, r3, #16
	lsr r3, r3, #16
	mov r1, #2
	str r1, [sp]
	mov r1, r12
	add r2, r7, #0
	bl sub_080C6004
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FD36C
	b _080FD4C4
_080FD36C:
	ldr r1, _080FD414  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080FD3CA
	ldr r3, _080FD418  @ =0x000016C4
	add r2, r5, r3
	ldr r1, _080FD41C  @ =0x00001622
	add r0, r5, r1
	ldrb r1, [r0]
	sub r3, r3, #161
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	add r0, r0, #8
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #15
	bhi _080FD3CA
	mov r0, #182
	lsl r0, r0, #5
	add r2, r5, r0
	ldr r1, _080FD420  @ =0x00001624
	add r0, r5, r1
	ldrb r1, [r0]
	add r3, r3, #2
	add r0, r5, r3
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r0, r0, r1
	add r0, r0, #16
	lsl r0, r0, #16
	lsr r0, r0, #16
	cmp r0, #15
	bhi _080FD3CA
	add r0, r4, #0
	bl sub_080C3BD0
_080FD3CA:
	ldr r1, _080FD424  @ =gRam
	ldr r2, _080FD428  @ =0x00000F52
	add r0, r1, r2
	add r3, r4, r0
	ldrb r5, [r3]
	add r0, r5, #0
	cmp r0, #4
	beq _080FD48C
	cmp r0, #1
	bne _080FD434
	ldr r2, _080FD42C  @ =0x00000FC2
	add r0, r1, r2
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080FD3F2
	add r0, r5, #1
	strb r0, [r3]
	mov r0, #31
	strb r0, [r2]
_080FD3F2:
	ldr r3, _080FD430  @ =0x00000F12
	add r1, r1, r3
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	bl Sprite3_MoveVert
	b _080FD4C4
	.byte 0x00
	.byte 0x00
_080FD408:
	.4byte gUnknown_03003E74
_080FD40C:
	.4byte gUnknown_0817A9A8
_080FD410:
	.4byte 0x00000F92
_080FD414:
	.4byte 0x00000996
_080FD418:
	.4byte 0x000016C4
_080FD41C:
	.4byte 0x00001622
_080FD420:
	.4byte 0x00001624
_080FD424:
	.4byte gRam
_080FD428:
	.4byte 0x00000F52
_080FD42C:
	.4byte 0x00000FC2
_080FD430:
	.4byte 0x00000F12
_080FD434:
	cmp r0, #2
	bne _080FD46C
	ldr r2, _080FD458  @ =0x00000FC2
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FD464
	ldr r3, _080FD45C  @ =0x00000F92
	add r1, r1, r3
	add r1, r4, r1
	ldr r2, _080FD460  @ =gUnknown_0817A9AD
	lsr r0, r0, #27
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	b _080FD4C4
_080FD458:
	.4byte 0x00000FC2
_080FD45C:
	.4byte 0x00000F92
_080FD460:
	.4byte gUnknown_0817A9AD
_080FD464:
	add r0, r4, #0
	bl sub_080FD4D4
	b _080FD4C4
_080FD46C:
	cmp r0, #3
	bne _080FD4A4
	ldr r2, _080FD494  @ =0x00000FC2
	add r0, r1, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FD49C
	ldr r3, _080FD498  @ =0x00001082
	add r0, r1, r3
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #19
	bhi _080FD4C4
	add r0, r0, #1
	strb r0, [r1]
_080FD48C:
	add r0, r4, #0
	bl Sprite3_Move
	b _080FD4C4
_080FD494:
	.4byte 0x00000FC2
_080FD498:
	.4byte 0x00001082
_080FD49C:
	add r0, r4, #0
	bl sub_080FD5D4
	b _080FD4C4
_080FD4A4:
	ldr r2, _080FD4CC  @ =0x00000FC2
	add r0, r1, r2
	add r2, r4, r0
	ldrb r0, [r2]
	cmp r0, #0
	bne _080FD4C4
	mov r0, #18
	strb r0, [r2]
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
	ldr r3, _080FD4D0  @ =0x00000F12
	add r0, r1, r3
	add r0, r4, r0
	mov r1, #36
_080FD4C2:
	strb r1, [r0]
_080FD4C4:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080FD4CC:
	.4byte 0x00000FC2
_080FD4D0:
	.4byte 0x00000F12
	THUMB_FUNC_END sub_080FD280

	THUMB_FUNC_START sub_080FD4D4
sub_080FD4D4: @ 0x080FD4D4
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	mov r1, #95
	bl sub_080CF140
	ldr r4, _080FD5A0  @ =gRam
	ldr r1, _080FD5A4  @ =0x00000FA2
	add r0, r4, r1
	add r0, r7, r0
	mov r1, #0
	strb r1, [r0]
	bl GetRandomInt
	ldr r2, _080FD5A8  @ =0x000015FA
	add r1, r4, r2
	strb r0, [r1]
	mov r6, #2
	add r5, r4, #0
	mov r0, #3
	mov r8, r0
	ldr r1, _080FD5AC  @ =0x00000F92
	add r1, r1, r5
	mov r10, r1
	ldr r2, _080FD5B0  @ =gUnknown_0817A9B7
	mov r9, r2
_080FD512:
	mov r0, #112
	add r1, r7, #0
	bl sub_080CA538
	add r4, r0, #0
	lsl r6, r6, #24
	cmp r4, #0
	blt _080FD584
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r0, _080FD5B4  @ =0x00000F22
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080FD5B8  @ =gUnknown_0817A9B1
	asr r3, r6, #24
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _080FD5BC  @ =0x00000F12
	add r1, r5, r2
	add r1, r4, r1
	ldr r0, _080FD5C0  @ =gUnknown_0817A9B4
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080FD5C4  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r2, r8
	strb r2, [r0]
	ldr r1, _080FD5C8  @ =0x00001172
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	ldr r0, _080FD5CC  @ =0x00000FC2
	add r2, r5, r0
	add r2, r4, r2
	ldr r1, _080FD5A8  @ =0x000015FA
	add r0, r5, r1
	ldrb r1, [r0]
	mov r0, r8
	and r0, r0, r1
	add r0, r0, r3
	add r0, r0, r9
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r2, _080FD5D0  @ =0x00001082
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	mov r2, r10
	add r1, r4, r2
	mov r0, #1
	strb r0, [r1]
_080FD584:
	mov r1, #255
	lsl r1, r1, #24
	add r0, r6, r1
	lsr r6, r0, #24
	cmp r0, #0
	bge _080FD512
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FD5A0:
	.4byte gRam
_080FD5A4:
	.4byte 0x00000FA2
_080FD5A8:
	.4byte 0x000015FA
_080FD5AC:
	.4byte 0x00000F92
_080FD5B0:
	.4byte gUnknown_0817A9B7
_080FD5B4:
	.4byte 0x00000F22
_080FD5B8:
	.4byte gUnknown_0817A9B1
_080FD5BC:
	.4byte 0x00000F12
_080FD5C0:
	.4byte gUnknown_0817A9B4
_080FD5C4:
	.4byte 0x00000F52
_080FD5C8:
	.4byte 0x00001172
_080FD5CC:
	.4byte 0x00000FC2
_080FD5D0:
	.4byte 0x00001082
	THUMB_FUNC_END sub_080FD4D4

	THUMB_FUNC_START sub_080FD5D4
sub_080FD5D4: @ 0x080FD5D4
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	add r0, r7, #0
	mov r1, #95
	bl sub_080CF140
	ldr r2, _080FD664  @ =gRam
	ldr r1, _080FD668  @ =0x00000FA2
	add r0, r2, r1
	add r0, r7, r0
	mov r1, #0
	strb r1, [r0]
	mov r5, #3
	add r6, r2, #0
	mov r0, #4
	mov r8, r0
	ldr r1, _080FD66C  @ =0x00001172
	add r1, r1, r6
	mov r9, r1
_080FD602:
	mov r0, #112
	add r1, r7, #0
	bl sub_080CA538
	add r4, r0, #0
	lsl r5, r5, #24
	cmp r4, #0
	blt _080FD64A
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r0, _080FD670  @ =0x00000F22
	add r1, r6, r0
	add r1, r4, r1
	ldr r0, _080FD674  @ =gUnknown_0817A9BF
	asr r2, r5, #24
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080FD678  @ =0x00000F12
	add r1, r6, r0
	add r1, r4, r1
	ldr r0, _080FD67C  @ =gUnknown_0817A9C3
	add r2, r2, r0
	ldrb r0, [r2]
	strb r0, [r1]
	ldr r1, _080FD680  @ =0x00000F52
	add r0, r6, r1
	add r0, r4, r0
	mov r1, r8
	strb r1, [r0]
	mov r1, r9
	add r0, r4, r1
	mov r1, r8
	strb r1, [r0]
_080FD64A:
	mov r1, #255
	lsl r1, r1, #24
	add r0, r5, r1
	lsr r5, r0, #24
	cmp r0, #0
	bge _080FD602
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FD664:
	.4byte gRam
_080FD668:
	.4byte 0x00000FA2
_080FD66C:
	.4byte 0x00001172
_080FD670:
	.4byte 0x00000F22
_080FD674:
	.4byte gUnknown_0817A9BF
_080FD678:
	.4byte 0x00000F12
_080FD67C:
	.4byte gUnknown_0817A9C3
_080FD680:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FD5D4

	THUMB_FUNC_START sub_080FD684
sub_080FD684: @ 0x080FD684
	push {r4,lr}
	add r1, r0, #0
	lsl r1, r1, #24
	lsr r1, r1, #24
	mov r0, #112
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080FD6D6
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r2, _080FD6DC  @ =gRam
	ldr r0, _080FD6E0  @ =0x00000964
	add r1, r2, r0
	ldrh r0, [r1]
	add r0, r0, #28
	strh r0, [r1]
	ldr r3, _080FD6E4  @ =0x00000ED2
	add r0, r2, r3
	add r0, r4, r0
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080FD6E8  @ =0x00000EF2
	add r0, r2, r1
	add r0, r4, r0
	ldr r3, _080FD6EC  @ =0x00000965
	add r1, r2, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080FD6F0  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #32
	strb r1, [r0]
	ldr r3, _080FD6F4  @ =0x00001172
	add r2, r2, r3
	add r2, r4, r2
	strb r1, [r2]
_080FD6D6:
	pop {r4}
	pop {r0}
	bx r0
_080FD6DC:
	.4byte gRam
_080FD6E0:
	.4byte 0x00000964
_080FD6E4:
	.4byte 0x00000ED2
_080FD6E8:
	.4byte 0x00000EF2
_080FD6EC:
	.4byte 0x00000965
_080FD6F0:
	.4byte 0x00000FC2
_080FD6F4:
	.4byte 0x00001172
	THUMB_FUNC_END sub_080FD684

	THUMB_FUNC_START sub_080FD6F8
sub_080FD6F8: @ 0x080FD6F8
	bx lr
	THUMB_FUNC_END sub_080FD6F8

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FD6FC
sub_080FD6FC: @ 0x080FD6FC
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r8, r6
	ldr r7, _080FD794  @ =gRam
	ldr r0, _080FD798  @ =0x00001622
	add r0, r0, r7
	mov r12, r0
	ldrb r2, [r0]
	ldr r1, _080FD79C  @ =0x00001623
	add r1, r1, r7
	mov r9, r1
	ldrb r0, [r1]
	lsl r0, r0, #8
	add r2, r2, r0
	ldr r5, _080FD7A0  @ =0x00000AC8
	add r0, r7, r5
	ldrh r0, [r0]
	sub r2, r2, r0
	ldr r0, _080FD7A4  @ =0x00001624
	add r3, r7, r0
	ldrb r1, [r3]
	ldr r5, _080FD7A8  @ =0x00001625
	add r4, r7, r5
	ldrb r0, [r4]
	lsl r0, r0, #8
	add r1, r1, r0
	ldr r5, _080FD7AC  @ =0x00000ACA
	add r0, r7, r5
	ldrh r0, [r0]
	sub r1, r1, r0
	mov r0, r12
	strb r2, [r0]
	lsr r2, r2, #8
	mov r5, r9
	strb r2, [r5]
	strb r1, [r3]
	lsr r1, r1, #8
	strb r1, [r4]
	ldr r1, _080FD7B0  @ =0x00000F52
	add r0, r7, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #2
	bls _080FD768
	add r0, r6, #0
	bl sub_080F40C0
	mov r0, #2
	bl sub_080C64A0
_080FD768:
	ldr r5, _080FD7B4  @ =0x00000A38
	add r0, r7, r5
	mov r1, #1
	strh r1, [r0]
	bl sub_08125874
	ldr r0, _080FD7B8  @ =0x00001B08
	add r4, r7, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FD788
	mov r0, r8
	bl sub_080FDA84
	mov r0, #1
	strb r0, [r4]
_080FD788:
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080FD794:
	.4byte gRam
_080FD798:
	.4byte 0x00001622
_080FD79C:
	.4byte 0x00001623
_080FD7A0:
	.4byte 0x00000AC8
_080FD7A4:
	.4byte 0x00001624
_080FD7A8:
	.4byte 0x00001625
_080FD7AC:
	.4byte 0x00000ACA
_080FD7B0:
	.4byte 0x00000F52
_080FD7B4:
	.4byte 0x00000A38
_080FD7B8:
	.4byte 0x00001B08
	THUMB_FUNC_END sub_080FD6FC

	THUMB_FUNC_START sub_080FD7BC
sub_080FD7BC: @ 0x080FD7BC
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r3, _080FD7EC  @ =gRam
	ldr r0, _080FD7F0  @ =0x00001B0A
	add r2, r3, r0
	ldrh r1, [r2]
	ldr r0, _080FD7F4  @ =0x000005FF
	cmp r1, r0
	bls _080FD800
	add r0, r1, #0
	sub r0, r0, #96
	strh r0, [r2]
	lsl r0, r0, #16
	ldr r1, _080FD7F8  @ =0x3FFF0000
	cmp r0, r1
	bls _080FD810
	ldr r1, _080FD7FC  @ =0x00000F62
	add r0, r3, r1
	add r0, r4, r0
	ldrb r0, [r0]
	bl sub_080B0240
	b _080FD810
_080FD7EC:
	.4byte gRam
_080FD7F0:
	.4byte 0x00001B0A
_080FD7F4:
	.4byte 0x000005FF
_080FD7F8:
	.4byte 0x3FFF0000
_080FD7FC:
	.4byte 0x00000F62
_080FD800:
	mov r0, #0
	strh r0, [r2]
	ldr r0, _080FD818  @ =0x00000F52
	add r1, r3, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FD810:
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FD818:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FD7BC

	THUMB_FUNC_START sub_080FD81C
sub_080FD81C: @ 0x080FD81C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080FD874  @ =gRam
	ldr r1, _080FD878  @ =0x00001062
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	mov r6, #1
	add r0, r6, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080FD86E
	bl sub_08133620
	ldr r1, _080FD87C  @ =0x00000CF8
	add r0, r4, r1
	ldrh r2, [r0]
	cmp r2, #0
	bne _080FD86E
	ldr r0, _080FD880  @ =0x00000F52
	add r1, r4, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FD884  @ =0x00001770
	add r0, r4, r1
	strb r6, [r0]
	sub r1, r1, #19
	add r0, r4, r1
	strb r2, [r0]
	add r1, r1, #2
	add r0, r4, r1
	strb r2, [r0]
	sub r1, r1, #139
	add r0, r4, r1
	strb r2, [r0]
	add r1, r1, #1
	add r0, r4, r1
	strb r2, [r0]
_080FD86E:
	pop {r4-r6}
	pop {r0}
	bx r0
_080FD874:
	.4byte gRam
_080FD878:
	.4byte 0x00001062
_080FD87C:
	.4byte 0x00000CF8
_080FD880:
	.4byte 0x00000F52
_080FD884:
	.4byte 0x00001770
	THUMB_FUNC_END sub_080FD81C

	THUMB_FUNC_START sub_080FD888
sub_080FD888: @ 0x080FD888
	push {r4,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080FD904  @ =gRam
	ldr r2, _080FD908  @ =0x00000AB2
	add r0, r1, r2
	ldrb r0, [r0]
	sub r0, r0, #10
	lsl r0, r0, #24
	lsr r2, r0, #24
	cmp r2, #2
	bne _080FD8B2
	mov r0, #179
	lsl r0, r0, #5
	add r1, r1, r0
	ldrb r0, [r1]
	cmp r0, #6
	bhi _080FD8B2
	mov r0, #7
	strb r0, [r1]
_080FD8B2:
	cmp r2, #14
	bne _080FD8C4
	ldr r0, _080FD90C  @ =gUnknown_0200235A
	ldrb r1, [r0]
	mov r0, #127
	and r0, r0, r1
	cmp r0, #127
	beq _080FD8C4
	mov r2, #16
_080FD8C4:
	ldr r1, _080FD910  @ =gUnknown_0817A9EC
	lsr r0, r2, #1
	lsl r0, r0, #1
	add r0, r0, r1
	ldrh r1, [r0]
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r2, _080FD904  @ =gRam
	ldr r0, _080FD914  @ =0x00000F52
	add r1, r2, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080FD90C  @ =gUnknown_0200235A
	ldrb r1, [r0]
	mov r0, #127
	and r0, r0, r1
	cmp r0, #127
	bne _080FD8FA
	mov r0, #179
	lsl r0, r0, #5
	add r1, r2, r0
	mov r0, #8
	strb r0, [r1]
_080FD8FA:
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FD904:
	.4byte gRam
_080FD908:
	.4byte 0x00000AB2
_080FD90C:
	.4byte gUnknown_0200235A
_080FD910:
	.4byte gUnknown_0817A9EC
_080FD914:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FD888

	THUMB_FUNC_START sub_080FD918
sub_080FD918: @ 0x080FD918
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	mov r1, #15
	ldr r3, _080FD9D4  @ =gUnknown_030031D2
	mov r2, #0
_080FD924:
	lsl r0, r1, #24
	asr r0, r0, #24
	add r1, r0, r3
	strb r2, [r1]
	sub r0, r0, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bge _080FD924
	mov r0, #171
	mov r1, #0
	bl sub_080CA538
	add r4, r0, #0
	ldr r6, _080FD9D8  @ =gRam
	ldr r0, _080FD9DC  @ =0x00000F02
	add r1, r6, r0
	add r1, r4, r1
	ldr r2, _080FD9E0  @ =0x000016C5
	add r0, r6, r2
	ldrb r0, [r0]
	mov r5, #0
	strb r0, [r1]
	ldr r1, _080FD9E4  @ =0x00000EF2
	add r0, r6, r1
	add r0, r4, r0
	sub r2, r2, #4
	add r1, r6, r2
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080FD9E8  @ =0x00000EE2
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #120
	strb r1, [r0]
	ldr r2, _080FD9EC  @ =0x00000ED2
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #124
	strb r1, [r0]
	ldr r1, _080FD9F0  @ =0x00000FB2
	add r0, r6, r1
	add r0, r4, r0
	mov r2, #1
	mov r8, r2
	mov r1, r8
	strb r1, [r0]
	ldr r2, _080FD9F4  @ =0x00001122
	add r0, r6, r2
	add r7, r4, r0
	mov r0, #11
	strb r0, [r7]
	ldr r1, _080FD9F8  @ =0x00001052
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
	sub r2, r2, #48
	add r0, r6, r2
	add r0, r4, r0
	strb r5, [r0]
	ldr r0, _080FD9FC  @ =0x00001012
	add r2, r6, r0
	add r2, r4, r2
	ldrb r1, [r2]
	mov r0, #240
	and r0, r0, r1
	mov r1, #2
	orr r0, r0, r1
	strb r0, [r2]
	bl sub_080AB73C
	ldr r2, _080FDA00  @ =0x00001776
	add r1, r6, r2
	strb r5, [r1]
	ldr r2, _080FDA04  @ =0x00000F62
	add r1, r6, r2
	add r4, r4, r1
	strb r0, [r4]
	ldr r4, _080FDA08  @ =0x00000AB2
	add r0, r6, r4
	ldrh r0, [r0]
	cmp r0, #24
	beq _080FDA10
	ldr r0, _080FDA0C  @ =0x00001663
	add r1, r6, r0
	mov r0, #6
	strb r0, [r1]
	b _080FDA1C
_080FD9D4:
	.4byte gUnknown_030031D2
_080FD9D8:
	.4byte gRam
_080FD9DC:
	.4byte 0x00000F02
_080FD9E0:
	.4byte 0x000016C5
_080FD9E4:
	.4byte 0x00000EF2
_080FD9E8:
	.4byte 0x00000EE2
_080FD9EC:
	.4byte 0x00000ED2
_080FD9F0:
	.4byte 0x00000FB2
_080FD9F4:
	.4byte 0x00001122
_080FD9F8:
	.4byte 0x00001052
_080FD9FC:
	.4byte 0x00001012
_080FDA00:
	.4byte 0x00001776
_080FDA04:
	.4byte 0x00000F62
_080FDA08:
	.4byte 0x00000AB2
_080FDA0C:
	.4byte 0x00001663
_080FDA10:
	mov r0, #9
	strb r0, [r7]
	ldr r1, _080FDA64  @ =0x00001663
	add r0, r6, r1
	mov r2, r8
	strb r2, [r0]
_080FDA1C:
	bl sub_0812F9A8
	ldr r2, _080FDA68  @ =gRam
	ldr r4, _080FDA64  @ =0x00001663
	add r1, r2, r4
	mov r0, #0
	strb r0, [r1]
	ldr r0, _080FDA6C  @ =0x00000ACE
	add r3, r2, r0
	ldr r1, _080FDA70  @ =0x000016C4
	add r0, r2, r1
	ldr r4, _080FDA74  @ =0x00000952
	add r1, r2, r4
	ldrh r0, [r0]
	ldrh r1, [r1]
	sub r0, r0, r1
	mvn r0, r0
	add r0, r0, #114
	ldr r4, _080FDA78  @ =0x00000AC8
	add r1, r2, r4
	strh r0, [r1]
	ldr r1, _080FDA7C  @ =0x00000956
	add r0, r2, r1
	ldrb r1, [r0]
	mov r0, #88
	sub r0, r0, r1
	add r4, r4, #2
	add r2, r2, r4
	strh r0, [r2]
	mov r0, #1
	strh r0, [r3]
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080FDA64:
	.4byte 0x00001663
_080FDA68:
	.4byte gRam
_080FDA6C:
	.4byte 0x00000ACE
_080FDA70:
	.4byte 0x000016C4
_080FDA74:
	.4byte 0x00000952
_080FDA78:
	.4byte 0x00000AC8
_080FDA7C:
	.4byte 0x00000956
	THUMB_FUNC_END sub_080FD918

	THUMB_FUNC_START sub_080FDA80
sub_080FDA80: @ 0x080FDA80
	bx lr
	THUMB_FUNC_END sub_080FDA80

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FDA84
sub_080FDA84: @ 0x080FDA84
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r3, _080FDAC8  @ =gRam
	ldr r0, _080FDACC  @ =0x00001062
	add r1, r3, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r4, _080FDAD0  @ =0x00001B10
	add r1, r3, r4
	ldrh r0, [r1]
	add r0, r0, #192
	strh r0, [r1]
	ldr r1, _080FDAD4  @ =0x000009AD
	add r0, r3, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FDAC2
	ldr r1, _080FDAD8  @ =gUnknown_0817A9C8
	ldr r4, _080FDADC  @ =0x00000F52
	add r0, r3, r4
	add r0, r2, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r2, #0
	bl _call_via_r1
_080FDAC2:
	pop {r4}
	pop {r0}
	bx r0
_080FDAC8:
	.4byte gRam
_080FDACC:
	.4byte 0x00001062
_080FDAD0:
	.4byte 0x00001B10
_080FDAD4:
	.4byte 0x000009AD
_080FDAD8:
	.4byte gUnknown_0817A9C8
_080FDADC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FDA84

	THUMB_FUNC_START sub_080FDAE0
sub_080FDAE0: @ 0x080FDAE0
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080FDAFC  @ =gRam
	ldr r2, _080FDB00  @ =0x000009B5
	add r3, r1, r2
	mov r2, #0
	strb r2, [r3]
	ldr r2, _080FDB04  @ =0x00000F52
	add r1, r1, r2
	add r0, r0, r1
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	bx lr
_080FDAFC:
	.4byte gRam
_080FDB00:
	.4byte 0x000009B5
_080FDB04:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FDAE0

	THUMB_FUNC_START sub_080FDB08
sub_080FDB08: @ 0x080FDB08
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r1, _080FDB24  @ =gRam
	ldr r2, _080FDB28  @ =0x000009B5
	add r3, r1, r2
	mov r2, #1
	strb r2, [r3]
	ldr r2, _080FDB2C  @ =0x00000F52
	add r1, r1, r2
	add r0, r0, r1
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	bx lr
_080FDB24:
	.4byte gRam
_080FDB28:
	.4byte 0x000009B5
_080FDB2C:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FDB08

	THUMB_FUNC_START sub_080FDB30
sub_080FDB30: @ 0x080FDB30
	push {lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r2, _080FDB4C  @ =gRam
	ldr r1, _080FDB50  @ =0x00000F52
	add r2, r2, r1
	add r2, r0, r2
	ldrb r1, [r2]
	add r1, r1, #1
	strb r1, [r2]
	bl sub_080FD81C
	pop {r0}
	bx r0
_080FDB4C:
	.4byte gRam
_080FDB50:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FDB30

	THUMB_FUNC_START sub_080FDB54
sub_080FDB54: @ 0x080FDB54
	push {r4,lr}
	sub sp, sp, #4
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r1, _080FDB80  @ =0x0000013D
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080FDB84  @ =gRam
	ldr r1, _080FDB88  @ =0x00000F52
	add r0, r0, r1
	add r4, r4, r0
	ldrb r0, [r4]
	add r0, r0, #1
	strb r0, [r4]
	add sp, sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FDB80:
	.4byte 0x0000013D
_080FDB84:
	.4byte gRam
_080FDB88:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FDB54

	THUMB_FUNC_START sub_080FDB8C
sub_080FDB8C: @ 0x080FDB8C
	push {r4,r5,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080FDBBC  @ =gRam
	ldr r1, _080FDBC0  @ =0x00001AE2
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FDBC8
	mov r1, #158
	lsl r1, r1, #1
	add r0, r4, #0
	mov r2, sp
	bl sub_080C9564
	ldr r0, _080FDBC4  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080FDBD2
	.byte 0x00
	.byte 0x00
_080FDBBC:
	.4byte gRam
_080FDBC0:
	.4byte 0x00001AE2
_080FDBC4:
	.4byte 0x00000F52
_080FDBC8:
	ldr r1, _080FDBDC  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #5
	strb r1, [r0]
_080FDBD2:
	add sp, sp, #4
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FDBDC:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FDB8C

	THUMB_FUNC_START sub_080FDBE0
sub_080FDBE0: @ 0x080FDBE0
	push {r4-r6,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r5, _080FDC18  @ =gRam
	ldr r0, _080FDC1C  @ =0x000009B5
	add r1, r5, r0
	mov r0, #0
	strb r0, [r1]
	ldr r3, _080FDC20  @ =0x0000050C
	add r2, r5, r3
	ldrh r0, [r2]
	mov r3, #128
	lsl r3, r3, #4
	add r1, r3, #0
	eor r0, r0, r1
	mov r6, #0
	strh r0, [r2]
	bl sub_08075804
	ldr r0, _080FDC24  @ =0x00000FA2
	add r5, r5, r0
	add r4, r4, r5
	strb r6, [r4]
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FDC18:
	.4byte gRam
_080FDC1C:
	.4byte 0x000009B5
_080FDC20:
	.4byte 0x0000050C
_080FDC24:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080FDBE0

	THUMB_FUNC_START sub_080FDC28
sub_080FDC28: @ 0x080FDC28
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080FDC88  @ =gRam
	ldr r0, _080FDC8C  @ =0x00000F92
	add r1, r5, r0
	add r1, r4, r1
	ldr r2, _080FDC90  @ =gUnknown_0817AA0C
	ldr r3, _080FDC94  @ =0x00000FB2
	add r0, r5, r3
	add r3, r4, r0
	ldrb r0, [r3]
	add r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080FDC98  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	mov r0, #7
	and r0, r0, r1
	cmp r0, #0
	bne _080FDCBE
	ldr r0, _080FDC9C  @ =gUnknown_0817AA08
	ldr r2, _080FDCA0  @ =0x00000F62
	add r1, r5, r2
	add r1, r4, r1
	ldrb r1, [r1]
	add r1, r1, r0
	ldrb r2, [r3]
	ldrb r1, [r1]
	cmp r2, r1
	bne _080FDCAC
	bl GetRandomInt
	ldr r3, _080FDCA4  @ =0x00000FC2
	add r2, r5, r3
	add r2, r4, r2
	mov r1, #31
	and r1, r1, r0
	add r1, r1, #48
	strb r1, [r2]
	ldr r0, _080FDCA8  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	b _080FDCBE
_080FDC88:
	.4byte gRam
_080FDC8C:
	.4byte 0x00000F92
_080FDC90:
	.4byte gUnknown_0817AA0C
_080FDC94:
	.4byte 0x00000FB2
_080FDC98:
	.4byte 0x00000996
_080FDC9C:
	.4byte gUnknown_0817AA08
_080FDCA0:
	.4byte 0x00000F62
_080FDCA4:
	.4byte 0x00000FC2
_080FDCA8:
	.4byte 0x00000F52
_080FDCAC:
	sub r0, r2, r1
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	bne _080FDCBA
	sub r0, r2, #1
	b _080FDCBC
_080FDCBA:
	add r0, r2, #1
_080FDCBC:
	strb r0, [r3]
_080FDCBE:
	pop {r4,r5}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080FDC28

	THUMB_FUNC_START sub_080FDCC4
sub_080FDCC4: @ 0x080FDCC4
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080FDD38  @ =gRam
	ldr r1, _080FDD3C  @ =0x00000FB2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r2, [r0]
	ldr r6, _080FDD40  @ =0x00000F22
	add r1, r5, r6
	add r1, r4, r1
	ldr r0, _080FDD44  @ =gUnknown_0817AA1C
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080FDD48  @ =0x00000F12
	add r1, r5, r0
	add r1, r4, r1
	ldr r0, _080FDD4C  @ =gUnknown_0817AA14
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	add r0, r4, #0
	bl Sprite3_Move
	add r0, r4, #0
	bl sub_080C7A20
	add r0, r4, #0
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080FDD50  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FDD1E
	ldr r6, _080FDD54  @ =0x00001042
	add r0, r5, r6
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FDD5C
_080FDD1E:
	ldr r1, _080FDD58  @ =0x00000F62
	add r0, r5, r1
	add r0, r4, r0
	ldrb r6, [r0]
	cmp r2, r6
	beq _080FDD5C
	strb r2, [r0]
	sub r1, r1, #16
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080FDDA8
_080FDD38:
	.4byte gRam
_080FDD3C:
	.4byte 0x00000FB2
_080FDD40:
	.4byte 0x00000F22
_080FDD44:
	.4byte gUnknown_0817AA1C
_080FDD48:
	.4byte 0x00000F12
_080FDD4C:
	.4byte gUnknown_0817AA14
_080FDD50:
	.4byte 0x00000FC2
_080FDD54:
	.4byte 0x00001042
_080FDD58:
	.4byte 0x00000F62
_080FDD5C:
	ldr r5, _080FDDB0  @ =gRam
	ldr r6, _080FDDB4  @ =0x00000F72
	add r0, r5, r6
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080FDD82
	mov r0, #14
	strb r0, [r2]
	ldr r0, _080FDDB8  @ =0x00001052
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FDD82:
	ldr r1, _080FDDBC  @ =0x00000F92
	add r2, r5, r1
	add r2, r4, r2
	ldr r3, _080FDDC0  @ =gUnknown_0817AA24
	ldr r6, _080FDDB8  @ =0x00001052
	add r0, r5, r6
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #2
	mov r0, #4
	and r1, r1, r0
	sub r6, r6, #240
	add r0, r5, r6
	add r0, r4, r0
	ldrb r0, [r0]
	orr r1, r1, r0
	add r1, r1, r3
	ldrb r0, [r1]
	strb r0, [r2]
_080FDDA8:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FDDB0:
	.4byte gRam
_080FDDB4:
	.4byte 0x00000F72
_080FDDB8:
	.4byte 0x00001052
_080FDDBC:
	.4byte 0x00000F92
_080FDDC0:
	.4byte gUnknown_0817AA24
	THUMB_FUNC_END sub_080FDCC4

	THUMB_FUNC_START sub_080FDDC4
sub_080FDDC4: @ 0x080FDDC4
	bx lr
	THUMB_FUNC_END sub_080FDDC4

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FDDC8
sub_080FDDC8: @ 0x080FDDC8
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080FDE1C
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FDE0A
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FDE0A
	add r0, r4, #0
	bl sub_080C5044
	ldr r1, _080FDE10  @ =gUnknown_0817AA00
	ldr r0, _080FDE14  @ =gRam
	ldr r2, _080FDE18  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080FDE0A:
	pop {r4}
	pop {r0}
	bx r0
_080FDE10:
	.4byte gUnknown_0817AA00
_080FDE14:
	.4byte gRam
_080FDE18:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FDDC8

	THUMB_FUNC_START sub_080FDE1C
sub_080FDE1C: @ 0x080FDE1C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080FDE54  @ =gRam
	ldr r1, _080FDE58  @ =0x00000F92
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	lsl r1, r1, #4
	ldr r0, _080FDE5C  @ =gUnknown_0817AA2C
	add r1, r1, r0
	add r0, r5, #0
	mov r2, #2
	bl sub_080C9480
	ldr r0, _080FDE60  @ =0x000010D2
	add r4, r4, r0
	add r4, r5, r4
	ldrb r0, [r4]
	cmp r0, #0
	bne _080FDE4C
	add r0, r5, #0
	bl sub_080C6230
_080FDE4C:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FDE54:
	.4byte gRam
_080FDE58:
	.4byte 0x00000F92
_080FDE5C:
	.4byte gUnknown_0817AA2C
_080FDE60:
	.4byte 0x000010D2
	THUMB_FUNC_END sub_080FDE1C

	THUMB_FUNC_START sub_080FDE64
sub_080FDE64: @ 0x080FDE64
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r6, #0
	ldr r4, _080FDF48  @ =gRam
	ldr r0, _080FDF4C  @ =0x00000D94
	add r1, r4, r0
	add r1, r5, r1
	ldrb r2, [r1]
	mov r0, #48
	orr r0, r0, r2
	strb r0, [r1]
	add r0, r5, #0
	bl sub_080FE124
	ldr r1, _080FDF50  @ =0x00000FA2
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #9
	beq _080FDE9C
	ldr r2, _080FDF54  @ =0x00001770
	add r0, r4, r2
	strb r6, [r0]
	ldr r7, _080FDF58  @ =0x0000180D
	add r0, r4, r7
	strb r6, [r0]
_080FDE9C:
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FDFA0
	ldr r1, _080FDF5C  @ =0x00000F62
	add r0, r4, r1
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FDF80
	ldr r2, _080FDF60  @ =0x00000EE2
	add r0, r4, r2
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r7, _080FDF64  @ =0x000016C4
	add r0, r4, r7
	strb r1, [r0]
	ldr r1, _080FDF68  @ =0x00000F02
	add r0, r4, r1
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r2, _080FDF6C  @ =0x000016C5
	add r0, r4, r2
	strb r1, [r0]
	ldr r7, _080FDF70  @ =0x00000ED2
	add r0, r4, r7
	add r0, r5, r0
	ldrb r1, [r0]
	ldr r2, _080FDF74  @ =0x00001142
	add r0, r4, r2
	add r0, r5, r0
	ldrb r0, [r0]
	sub r1, r1, r0
	add r7, r7, #32
	add r0, r4, r7
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r0, r0, #3
	add r1, r1, r0
	mov r2, #182
	lsl r2, r2, #5
	add r0, r4, r2
	mov r2, #0
	strh r1, [r0]
	ldr r7, _080FDF54  @ =0x00001770
	add r6, r4, r7
	mov r0, #1
	strb r0, [r6]
	add r7, r7, #157
	add r3, r4, r7
	strb r0, [r3]
	ldr r7, _080FDF78  @ =0x000016F8
	add r0, r4, r7
	strb r2, [r0]
	sub r7, r7, #42
	add r0, r4, r7
	strb r2, [r0]
	sub r7, r7, #1
	add r0, r4, r7
	strb r2, [r0]
	add r7, r7, #9
	add r0, r4, r7
	strb r2, [r0]
	add r7, r7, #1
	add r0, r4, r7
	strb r2, [r0]
	ldr r7, _080FDF7C  @ =0x00000958
	add r0, r4, r7
	ldrh r0, [r0]
	sub r1, r1, r0
	sub r1, r1, #16
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #255
	bls _080FDF88
	strb r2, [r6]
	strb r2, [r3]
	bl sub_080B0138
	bl sub_08092D18
	b _080FDFA0
	.byte 0x00
	.byte 0x00
_080FDF48:
	.4byte gRam
_080FDF4C:
	.4byte 0x00000D94
_080FDF50:
	.4byte 0x00000FA2
_080FDF54:
	.4byte 0x00001770
_080FDF58:
	.4byte 0x0000180D
_080FDF5C:
	.4byte 0x00000F62
_080FDF60:
	.4byte 0x00000EE2
_080FDF64:
	.4byte 0x000016C4
_080FDF68:
	.4byte 0x00000F02
_080FDF6C:
	.4byte 0x000016C5
_080FDF70:
	.4byte 0x00000ED2
_080FDF74:
	.4byte 0x00001142
_080FDF78:
	.4byte 0x000016F8
_080FDF7C:
	.4byte 0x00000958
_080FDF80:
	mov r0, sp
	add r1, r5, #0
	bl sub_080C4948
_080FDF88:
	ldr r1, _080FDFA8  @ =gUnknown_0817AAEC
	ldr r0, _080FDFAC  @ =gRam
	ldr r2, _080FDFB0  @ =0x00000F52
	add r0, r0, r2
	add r0, r5, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r5, #0
	bl _call_via_r1
_080FDFA0:
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080FDFA8:
	.4byte gUnknown_0817AAEC
_080FDFAC:
	.4byte gRam
_080FDFB0:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FDE64

	THUMB_FUNC_START sub_080FDFB4
sub_080FDFB4: @ 0x080FDFB4
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	ldr r7, _080FE020  @ =gRam
	ldr r1, _080FE024  @ =0x00001142
	add r0, r7, r1
	add r6, r5, r0
	ldrb r4, [r6]
	add r0, r5, #0
	bl sub_080C2C4C
	ldr r1, _080FE028  @ =0x00001152
	add r0, r7, r1
	add r3, r5, r0
	ldrb r1, [r3]
	add r0, r1, #0
	add r0, r0, #64
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r2, #128
	and r0, r0, r2
	cmp r0, #0
	bne _080FDFE8
	sub r0, r1, #3
	strb r0, [r3]
_080FDFE8:
	ldrb r1, [r6]
	eor r4, r4, r1
	mov r0, #128
	and r4, r4, r0
	cmp r4, #0
	beq _080FE018
	add r0, r2, #0
	and r0, r0, r1
	cmp r0, #0
	beq _080FE018
	ldr r0, _080FE02C  @ =0x00000F52
	add r1, r7, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	mov r2, #0
	strb r0, [r1]
	strb r2, [r6]
	strb r2, [r3]
	ldr r1, _080FE030  @ =0x00000FC2
	add r0, r7, r1
	add r0, r5, r0
	mov r1, #63
	strb r1, [r0]
_080FE018:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FE020:
	.4byte gRam
_080FE024:
	.4byte 0x00001142
_080FE028:
	.4byte 0x00001152
_080FE02C:
	.4byte 0x00000F52
_080FE030:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080FDFB4

	THUMB_FUNC_START sub_080FE034
sub_080FE034: @ 0x080FE034
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r4, r2, #0
	ldr r5, _080FE09C  @ =gRam
	ldr r1, _080FE0A0  @ =0x00000FC2
	add r0, r5, r1
	add r3, r2, r0
	ldrb r0, [r3]
	cmp r0, #0
	bne _080FE056
	ldr r0, _080FE0A4  @ =0x00000F52
	add r1, r5, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FE056:
	mov r2, #0
	ldrb r1, [r3]
	mov r0, #32
	and r0, r0, r1
	cmp r0, #0
	bne _080FE064
	mov r2, #1
_080FE064:
	ldr r1, _080FE0A8  @ =0x00000F92
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	add r0, r4, #0
	bl sub_080C4F98
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FE094
	ldr r1, _080FE0AC  @ =0x00000F62
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080FE0B0  @ =0x00001032
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
	add r0, r4, #0
	mov r1, #93
	bl sub_080CF0AC
_080FE094:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FE09C:
	.4byte gRam
_080FE0A0:
	.4byte 0x00000FC2
_080FE0A4:
	.4byte 0x00000F52
_080FE0A8:
	.4byte 0x00000F92
_080FE0AC:
	.4byte 0x00000F62
_080FE0B0:
	.4byte 0x00001032
	THUMB_FUNC_END sub_080FE034

	THUMB_FUNC_START sub_080FE0B4
sub_080FE0B4: @ 0x080FE0B4
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	add r5, r0, #0
	ldr r7, _080FE110  @ =gRam
	ldr r1, _080FE114  @ =0x00001142
	add r0, r7, r1
	add r6, r5, r0
	ldrb r4, [r6]
	add r0, r5, #0
	bl sub_080C2C4C
	ldr r2, _080FE118  @ =0x00001152
	add r0, r7, r2
	add r2, r5, r0
	ldrb r1, [r2]
	add r0, r1, #0
	sub r0, r0, #64
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r3, #128
	and r0, r0, r3
	cmp r0, #0
	beq _080FE0E8
	add r0, r1, #2
	strb r0, [r2]
_080FE0E8:
	ldrb r1, [r6]
	eor r4, r4, r1
	mov r0, #128
	and r4, r4, r0
	cmp r4, #0
	beq _080FE108
	add r0, r3, #0
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r1, #0
	bne _080FE108
	ldr r2, _080FE11C  @ =0x00000FA2
	add r0, r7, r2
	add r0, r5, r0
	strb r1, [r0]
_080FE108:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FE110:
	.4byte gRam
_080FE114:
	.4byte 0x00001142
_080FE118:
	.4byte 0x00001152
_080FE11C:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080FE0B4

	THUMB_FUNC_START sub_080FE120
sub_080FE120: @ 0x080FE120
	bx lr
	THUMB_FUNC_END sub_080FE120

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FE124
sub_080FE124: @ 0x080FE124
	push {r4,lr}
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	ldr r0, _080FE150  @ =gRam
	ldr r1, _080FE154  @ =0x00000F92
	add r0, r0, r1
	add r0, r4, r0
	ldrb r1, [r0]
	lsl r1, r1, #5
	ldr r0, _080FE158  @ =gUnknown_0817AAF8
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #4
	bl sub_080C9480
	add r0, r4, #0
	bl sub_080CA5AC
	pop {r4}
	pop {r0}
	bx r0
_080FE150:
	.4byte gRam
_080FE154:
	.4byte 0x00000F92
_080FE158:
	.4byte gUnknown_0817AAF8
	THUMB_FUNC_END sub_080FE124

	THUMB_FUNC_START sub_080FE15C
sub_080FE15C: @ 0x080FE15C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	add r0, r4, #0
	bl sub_080ED830
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FE1D8
	ldr r2, _080FE1E0  @ =gRam
	ldr r1, _080FE1E4  @ =0x00000FC2
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #80
	strb r1, [r0]
	ldr r3, _080FE1E8  @ =0x00001172
	add r1, r2, r3
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FE1EC  @ =0x00000F92
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	mov r3, #172
	lsl r3, r3, #4
	add r1, r2, r3
	ldrh r0, [r1]
	add r0, r0, #1
	strh r0, [r1]
	ldr r1, _080FE1F0  @ =0x00000F82
	add r0, r2, r1
	add r0, r4, r0
	mov r1, #112
	strb r1, [r0]
	mov r1, #0
	sub r3, r3, #230
	add r0, r2, r3
	ldrh r0, [r0]
	cmp r0, #173
	bne _080FE1B6
	mov r1, #1
_080FE1B6:
	cmp r1, #0
	beq _080FE1D8
	ldr r0, _080FE1F4  @ =0x00001022
	add r1, r2, r0
	add r1, r5, r1
	ldrb r0, [r1]
	lsl r0, r0, #2
	strb r0, [r1]
	ldr r1, _080FE1F8  @ =0x00000EA5
	add r2, r2, r1
	add r2, r5, r2
	ldrb r1, [r2]
	mov r0, #240
	and r0, r0, r1
	mov r1, #7
	orr r0, r0, r1
	strb r0, [r2]
_080FE1D8:
	pop {r4,r5}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FE1E0:
	.4byte gRam
_080FE1E4:
	.4byte 0x00000FC2
_080FE1E8:
	.4byte 0x00001172
_080FE1EC:
	.4byte 0x00000F92
_080FE1F0:
	.4byte 0x00000F82
_080FE1F4:
	.4byte 0x00001022
_080FE1F8:
	.4byte 0x00000EA5
	THUMB_FUNC_END sub_080FE15C

	THUMB_FUNC_START sub_080FE1FC
sub_080FE1FC: @ 0x080FE1FC
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080FED20
	ldr r5, _080FE2FC  @ =gRam
	ldr r1, _080FE300  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #11
	bne _080FE220
	ldr r2, _080FE304  @ =0x00000F52
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
_080FE220:
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r6, r0, #24
	cmp r6, #0
	bne _080FE2F4
	ldr r1, _080FE308  @ =0x00001032
	add r0, r5, r1
	add r2, r4, r0
	ldrb r0, [r2]
	mov r3, #191
	and r3, r3, r0
	strb r3, [r2]
	add r1, r1, #128
	add r0, r5, r1
	add r7, r4, r0
	ldrb r0, [r7]
	cmp r0, #0
	beq _080FE250
	mov r1, #64
	add r0, r3, #0
	orr r0, r0, r1
	strb r0, [r2]
_080FE250:
	ldr r2, _080FE30C  @ =0x00001072
	add r0, r5, r2
	add r2, r4, r0
	ldrb r1, [r2]
	cmp r1, #0
	beq _080FE286
	mov r0, #127
	and r0, r0, r1
	cmp r0, #6
	bne _080FE286
	strb r6, [r2]
	mov r0, #32
	strb r0, [r7]
	ldr r1, _080FE304  @ =0x00000F52
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r2, _080FE310  @ =0x00000FC2
	add r0, r5, r2
	add r0, r4, r0
	strb r6, [r0]
	ldr r1, _080FE314  @ =0x000010A2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #64
	strb r1, [r0]
_080FE286:
	add r0, r4, #0
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FE2F4
	mov r1, #0
	ldr r3, _080FE2FC  @ =gRam
	ldr r2, _080FE318  @ =0x000009DA
	add r0, r3, r2
	ldrh r0, [r0]
	cmp r0, #173
	bne _080FE2A2
	mov r1, #1
_080FE2A2:
	cmp r1, #0
	beq _080FE2DC
	cmp r4, #0
	bne _080FE2DC
	ldr r1, _080FE304  @ =0x00000F52
	add r0, r3, r1
	ldrb r0, [r0]
	sub r0, r0, #2
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #1
	bhi _080FE2DC
	mov r1, #0
	mov r2, #0
	ldr r0, _080FE31C  @ =0x00000FF2
	add r3, r3, r0
_080FE2C2:
	add r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #136
	bne _080FE2CC
	add r2, r2, #1
_080FE2CC:
	add r1, r1, #1
	cmp r1, #15
	ble _080FE2C2
	cmp r2, #1
	bne _080FE2DC
	add r0, r4, #0
	bl sub_080FEF7C
_080FE2DC:
	ldr r1, _080FE320  @ =gUnknown_0817AB38
	ldr r0, _080FE2FC  @ =gRam
	ldr r2, _080FE304  @ =0x00000F52
	add r0, r0, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
_080FE2F4:
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FE2FC:
	.4byte gRam
_080FE300:
	.4byte 0x00000FA2
_080FE304:
	.4byte 0x00000F52
_080FE308:
	.4byte 0x00001032
_080FE30C:
	.4byte 0x00001072
_080FE310:
	.4byte 0x00000FC2
_080FE314:
	.4byte 0x000010A2
_080FE318:
	.4byte 0x000009DA
_080FE31C:
	.4byte 0x00000FF2
_080FE320:
	.4byte gUnknown_0817AB38
	THUMB_FUNC_END sub_080FE1FC

	THUMB_FUNC_START sub_080FE324
sub_080FE324: @ 0x080FE324
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r6, r0, #24
	ldr r7, _080FE368  @ =gRam
	ldr r0, _080FE36C  @ =0x00001152
	add r4, r7, r0
	add r4, r6, r4
	mov r5, #0
	mov r0, #8
	strb r0, [r4]
	add r0, r6, #0
	bl sub_080C2C4C
	strb r5, [r4]
	ldr r1, _080FE370  @ =0x00001142
	add r0, r7, r1
	add r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #23
	bls _080FE3A0
	mov r2, #0
	ldr r1, _080FE374  @ =0x000009DA
	add r0, r7, r1
	ldrh r0, [r0]
	cmp r0, #173
	bne _080FE35A
	mov r2, #1
_080FE35A:
	cmp r2, #0
	beq _080FE378
	add r0, r6, #0
	bl sub_080FEF7C
	b _080FE3A0
	.byte 0x00
	.byte 0x00
_080FE368:
	.4byte gRam
_080FE36C:
	.4byte 0x00001152
_080FE370:
	.4byte 0x00001142
_080FE374:
	.4byte 0x000009DA
_080FE378:
	ldr r1, _080FE3AC  @ =0x000010A2
	add r0, r7, r1
	add r0, r6, r0
	mov r1, #128
	strb r1, [r0]
	ldr r0, _080FE3B0  @ =0x00000F52
	add r1, r7, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FE3B4  @ =0x00001172
	add r0, r7, r1
	add r0, r6, r0
	strb r2, [r0]
	ldr r1, _080FE3B8  @ =0x00000FC2
	add r0, r7, r1
	add r0, r6, r0
	mov r1, #64
	strb r1, [r0]
_080FE3A0:
	add r0, r6, #0
	bl sub_080FEF2C
	pop {r4-r7}
	pop {r0}
	bx r0
_080FE3AC:
	.4byte 0x000010A2
_080FE3B0:
	.4byte 0x00000F52
_080FE3B4:
	.4byte 0x00001172
_080FE3B8:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080FE324

	THUMB_FUNC_START sub_080FE3BC
sub_080FE3BC: @ 0x080FE3BC
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r5, _080FE490  @ =gRam
	ldr r1, _080FE494  @ =0x000010A2
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080FE3D2
	b _080FE534
_080FE3D2:
	sub r0, r0, #1
	strb r0, [r1]
	add r0, r4, #0
	bl sub_080FEF2C
	ldr r2, _080FE498  @ =0x00000F62
	add r0, r5, r2
	add r3, r4, r0
	ldrb r0, [r3]
	mov r2, #1
	and r2, r2, r0
	ldr r6, _080FE49C  @ =0x00001152
	add r1, r5, r6
	add r1, r4, r1
	ldr r0, _080FE4A0  @ =gUnknown_0817AB50
	add r0, r2, r0
	ldrb r0, [r0]
	ldrb r6, [r1]
	add r0, r0, r6
	strb r0, [r1]
	ldr r1, _080FE4A4  @ =gUnknown_0817AB62
	add r1, r2, r1
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldrb r1, [r1]
	cmp r0, r1
	bne _080FE40E
	ldrb r0, [r3]
	add r0, r0, #1
	strb r0, [r3]
_080FE40E:
	ldr r1, _080FE4A8  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FE4DE
	ldr r2, _080FE4AC  @ =0x00000F82
	add r0, r5, r2
	add r1, r4, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r2, #0
	ldr r3, _080FE4B0  @ =0x000009DA
	add r0, r5, r3
	ldrh r0, [r0]
	cmp r0, #173
	bne _080FE434
	mov r2, #1
_080FE434:
	cmp r2, #0
	beq _080FE448
	ldr r6, _080FE4B4  @ =0x00000ED2
	add r0, r5, r6
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #71
	bhi _080FE448
	mov r0, #7
	strb r0, [r1]
_080FE448:
	ldr r5, _080FE490  @ =gRam
	ldr r1, _080FE4AC  @ =0x00000F82
	add r0, r5, r1
	add r1, r4, r0
	ldrb r0, [r1]
	cmp r0, #7
	beq _080FE4C8
	bl GetRandomInt
	mov r2, #7
	and r2, r2, r0
	ldr r3, _080FE4B8  @ =0x00000F22
	add r1, r5, r3
	add r1, r4, r1
	ldr r0, _080FE4BC  @ =gUnknown_0817AB5A
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r6, _080FE4C0  @ =0x00000F12
	add r1, r5, r6
	add r1, r4, r1
	ldr r0, _080FE4C4  @ =gUnknown_0817AB52
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	bl GetRandomInt
	ldr r1, _080FE4A8  @ =0x00000FC2
	add r2, r5, r1
	add r2, r4, r2
	mov r1, #31
	and r1, r1, r0
	add r1, r1, #64
	strb r1, [r2]
	b _080FE4DE
	.byte 0x00
	.byte 0x00
_080FE490:
	.4byte gRam
_080FE494:
	.4byte 0x000010A2
_080FE498:
	.4byte 0x00000F62
_080FE49C:
	.4byte 0x00001152
_080FE4A0:
	.4byte gUnknown_0817AB50
_080FE4A4:
	.4byte gUnknown_0817AB62
_080FE4A8:
	.4byte 0x00000FC2
_080FE4AC:
	.4byte 0x00000F82
_080FE4B0:
	.4byte 0x000009DA
_080FE4B4:
	.4byte 0x00000ED2
_080FE4B8:
	.4byte 0x00000F22
_080FE4BC:
	.4byte gUnknown_0817AB5A
_080FE4C0:
	.4byte 0x00000F12
_080FE4C4:
	.4byte gUnknown_0817AB52
_080FE4C8:
	mov r0, #0
	strb r0, [r1]
	add r0, r4, #0
	mov r1, #32
	bl sub_080C35FC
	ldr r2, _080FE524  @ =0x00000FC2
	add r0, r5, r2
	add r0, r4, r0
	mov r1, #128
	strb r1, [r0]
_080FE4DE:
	ldr r5, _080FE528  @ =gRam
	ldr r3, _080FE52C  @ =0x00001042
	add r0, r5, r3
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FE4F2
	add r0, r4, #0
	bl Sprite3_Move
_080FE4F2:
	add r0, r4, #0
	bl sub_080C2C4C
	add r0, r4, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FE50E
	ldr r6, _080FE524  @ =0x00000FC2
	add r0, r5, r6
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
_080FE50E:
	add r0, r4, #0
	bl sub_080C5044
	ldr r0, _080FE530  @ =0x00001052
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #2
	strb r0, [r1]
	b _080FE560
	.byte 0x00
	.byte 0x00
_080FE524:
	.4byte 0x00000FC2
_080FE528:
	.4byte gRam
_080FE52C:
	.4byte 0x00001042
_080FE530:
	.4byte 0x00001052
_080FE534:
	ldr r1, _080FE568  @ =0x00000FC2
	add r0, r5, r1
	add r2, r4, r0
	mov r0, #63
	strb r0, [r2]
	ldr r3, _080FE56C  @ =0x00000F52
	add r1, r5, r3
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r1, #0
	ldr r6, _080FE570  @ =0x000009DA
	add r0, r5, r6
	ldrh r0, [r0]
	cmp r0, #173
	bne _080FE558
	mov r1, #1
_080FE558:
	cmp r1, #0
	beq _080FE560
	mov r0, #111
	strb r0, [r2]
_080FE560:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FE568:
	.4byte 0x00000FC2
_080FE56C:
	.4byte 0x00000F52
_080FE570:
	.4byte 0x000009DA
	THUMB_FUNC_END sub_080FE3BC

	THUMB_FUNC_START sub_080FE574
sub_080FE574: @ 0x080FE574
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C5044
	ldr r5, _080FE5AC  @ =gRam
	ldr r1, _080FE5B0  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r3, [r0]
	cmp r3, #0
	beq _080FE608
	mov r1, #0
	ldr r2, _080FE5B4  @ =0x000009DA
	add r0, r5, r2
	ldrh r0, [r0]
	cmp r0, #173
	bne _080FE59C
	mov r1, #1
_080FE59C:
	cmp r1, #0
	beq _080FE5B8
	cmp r3, #80
	bne _080FE5C2
	add r0, r4, #0
	bl sub_080FEAB8
	b _080FE5C2
_080FE5AC:
	.4byte gRam
_080FE5B0:
	.4byte 0x00000FC2
_080FE5B4:
	.4byte 0x000009DA
_080FE5B8:
	cmp r3, #32
	bne _080FE5C2
	add r0, r4, #0
	bl sub_080FEAB8
_080FE5C2:
	ldr r6, _080FE5F8  @ =gRam
	ldr r1, _080FE5FC  @ =0x00001052
	add r0, r6, r1
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	lsl r1, r1, #24
	lsr r1, r1, #26
	mov r0, #3
	and r1, r1, r0
	add r5, r1, #0
	cmp r5, #0
	bne _080FE5E6
	add r0, r4, #0
	mov r1, #12
	bl sub_080CF0AC
_080FE5E6:
	ldr r2, _080FE600  @ =0x00000F92
	add r0, r6, r2
	add r0, r4, r0
	ldr r1, _080FE604  @ =gUnknown_0817AB66
	add r1, r5, r1
	ldrb r1, [r1]
	strb r1, [r0]
	b _080FE628
	.byte 0x00
	.byte 0x00
_080FE5F8:
	.4byte gRam
_080FE5FC:
	.4byte 0x00001052
_080FE600:
	.4byte 0x00000F92
_080FE604:
	.4byte gUnknown_0817AB66
_080FE608:
	ldr r0, _080FE630  @ =0x00000F52
	add r1, r5, r0
	add r1, r4, r1
	ldrb r0, [r1]
	sub r0, r0, #1
	strb r0, [r1]
	bl GetRandomInt
	ldr r1, _080FE634  @ =0x000010A2
	add r2, r5, r1
	add r2, r4, r2
	mov r1, #31
	and r1, r1, r0
	mov r0, #64
	orr r1, r1, r0
	strb r1, [r2]
_080FE628:
	pop {r4-r6}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FE630:
	.4byte 0x00000F52
_080FE634:
	.4byte 0x000010A2
	THUMB_FUNC_END sub_080FE574

	THUMB_FUNC_START sub_080FE638
sub_080FE638: @ 0x080FE638
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	ldr r1, _080FE714  @ =gRam
	ldr r2, _080FE718  @ =0x000010B2
	add r0, r1, r2
	add r0, r4, r0
	mov r2, #16
	strb r2, [r0]
	ldr r3, _080FE71C  @ =0x00000FC2
	add r1, r1, r3
	add r1, r4, r1
	ldrb r0, [r1]
	mov r2, #96
	cmp r0, #31
	ble _080FE666
	mov r2, #80
	cmp r0, #63
	ble _080FE666
	mov r2, #48
	cmp r0, #127
	bgt _080FE666
	mov r2, #64
_080FE666:
	ldr r5, _080FE714  @ =gRam
	ldr r7, _080FE720  @ =0x00000F02
	add r0, r5, r7
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r0, r0, #112
	ldr r3, _080FE724  @ =0x00000968
	add r1, r5, r3
	strh r0, [r1]
	sub r7, r7, #16
	add r0, r5, r7
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r0, r0, #144
	add r3, r3, #4
	add r1, r5, r3
	strh r0, [r1]
	add r1, r2, #0
	add r0, r4, #0
	bl sub_080C2DCC
	add r7, r7, #48
	add r0, r5, r7
	add r2, r4, r0
	mov r0, #150
	lsl r0, r0, #4
	add r1, r5, r0
	ldrb r0, [r1]
	neg r0, r0
	strb r0, [r2]
	ldr r3, _080FE728  @ =0x00000F12
	add r0, r5, r3
	add r6, r4, r0
	ldr r7, _080FE72C  @ =0x00000961
	add r7, r7, r5
	mov r12, r7
	ldrb r3, [r7]
	strb r3, [r6]
	ldr r7, _080FE730  @ =0x0000097C
	add r0, r5, r7
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	add r0, r0, #40
	cmp r0, #79
	bgt _080FE6D6
	add r7, r7, #1
	add r0, r5, r7
	ldrb r0, [r0]
	lsl r0, r0, #24
	asr r0, r0, #24
	add r0, r0, #40
	cmp r0, #79
	ble _080FE6F6
_080FE6D6:
	mov r0, #0
	ldrsb r0, [r1, r0]
	lsr r1, r0, #31
	add r0, r0, r1
	asr r0, r0, #1
	add r0, r3, r0
	strb r0, [r6]
	mov r1, r12
	mov r0, #0
	ldrsb r0, [r1, r0]
	lsr r1, r0, #31
	add r0, r0, r1
	asr r0, r0, #1
	ldrb r3, [r2]
	add r0, r0, r3
	strb r0, [r2]
_080FE6F6:
	add r0, r4, #0
	bl Sprite3_Move
	ldr r3, _080FE714  @ =gRam
	ldr r7, _080FE71C  @ =0x00000FC2
	add r0, r3, r7
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #80
	beq _080FE738
	cmp r0, #80
	bgt _080FE734
	cmp r0, #16
	beq _080FE740
	b _080FE778
_080FE714:
	.4byte gRam
_080FE718:
	.4byte 0x000010B2
_080FE71C:
	.4byte 0x00000FC2
_080FE720:
	.4byte 0x00000F02
_080FE724:
	.4byte 0x00000968
_080FE728:
	.4byte 0x00000F12
_080FE72C:
	.4byte 0x00000961
_080FE730:
	.4byte 0x0000097C
_080FE734:
	cmp r0, #176
	bne _080FE778
_080FE738:
	add r0, r4, #0
	bl sub_080FE95C
	b _080FE778
_080FE740:
	ldr r1, _080FE7B0  @ =0x000010A2
	add r0, r3, r1
	add r0, r4, r0
	mov r2, #0
	mov r1, #128
	strb r1, [r0]
	ldr r7, _080FE7B4  @ =0x00000F52
	add r0, r3, r7
	add r0, r4, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080FE7B8  @ =0x00001172
	add r0, r3, r1
	add r0, r4, r0
	strb r2, [r0]
	mov r0, #64
	strb r0, [r5]
	sub r7, r7, #48
	add r0, r3, r7
	add r0, r4, r0
	strb r2, [r0]
	ldr r1, _080FE7BC  @ =0x00000F12
	add r0, r3, r1
	add r0, r4, r0
	strb r2, [r0]
	add r0, r4, #0
	bl sub_080FE864
_080FE778:
	ldr r6, _080FE7C0  @ =gRam
	ldr r2, _080FE7C4  @ =0x00001052
	add r0, r6, r2
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	lsl r1, r1, #24
	lsr r1, r1, #26
	mov r0, #3
	and r1, r1, r0
	add r5, r1, #0
	cmp r5, #0
	bne _080FE79C
	add r0, r4, #0
	mov r1, #12
	bl sub_080CF0AC
_080FE79C:
	ldr r3, _080FE7C8  @ =0x00000F92
	add r0, r6, r3
	add r0, r4, r0
	ldr r1, _080FE7CC  @ =gUnknown_0817AB66
	add r1, r5, r1
	ldrb r1, [r1]
	strb r1, [r0]
	pop {r4-r7}
	pop {r0}
	bx r0
_080FE7B0:
	.4byte 0x000010A2
_080FE7B4:
	.4byte 0x00000F52
_080FE7B8:
	.4byte 0x00001172
_080FE7BC:
	.4byte 0x00000F12
_080FE7C0:
	.4byte gRam
_080FE7C4:
	.4byte 0x00001052
_080FE7C8:
	.4byte 0x00000F92
_080FE7CC:
	.4byte gUnknown_0817AB66
	THUMB_FUNC_END sub_080FE638

	THUMB_FUNC_START sub_080FE7D0
sub_080FE7D0: @ 0x080FE7D0
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r6, r2, #0
	ldr r5, _080FE844  @ =gRam
	ldr r1, _080FE848  @ =0x000010B2
	add r0, r5, r1
	add r0, r2, r0
	mov r1, #16
	strb r1, [r0]
	ldr r1, _080FE84C  @ =0x00000FC2
	add r0, r5, r1
	add r4, r2, r0
	ldrb r3, [r4]
	cmp r3, #0
	bne _080FE810
	add r1, r1, #224
	add r0, r5, r1
	add r0, r2, r0
	mov r1, #128
	strb r1, [r0]
	ldr r1, _080FE850  @ =0x00000F52
	add r0, r5, r1
	add r0, r2, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080FE854  @ =0x00001172
	add r0, r5, r1
	add r0, r2, r0
	strb r3, [r0]
	mov r0, #64
	strb r0, [r4]
_080FE810:
	ldr r1, _080FE858  @ =0x00001052
	add r0, r5, r1
	add r0, r2, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	lsl r1, r1, #24
	lsr r4, r1, #26
	mov r0, #3
	and r4, r4, r0
	cmp r4, #0
	bne _080FE830
	add r0, r2, #0
	mov r1, #12
	bl sub_080CF0AC
_080FE830:
	ldr r1, _080FE85C  @ =0x00000F92
	add r0, r5, r1
	add r0, r6, r0
	ldr r1, _080FE860  @ =gUnknown_0817AB66
	add r1, r4, r1
	ldrb r1, [r1]
	strb r1, [r0]
	pop {r4-r6}
	pop {r0}
	bx r0
_080FE844:
	.4byte gRam
_080FE848:
	.4byte 0x000010B2
_080FE84C:
	.4byte 0x00000FC2
_080FE850:
	.4byte 0x00000F52
_080FE854:
	.4byte 0x00001172
_080FE858:
	.4byte 0x00001052
_080FE85C:
	.4byte 0x00000F92
_080FE860:
	.4byte gUnknown_0817AB66
	THUMB_FUNC_END sub_080FE7D0

	THUMB_FUNC_START sub_080FE864
sub_080FE864: @ 0x080FE864
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #24
	add r4, r0, #0
	lsl r4, r4, #24
	lsr r4, r4, #24
	bl GetRandomInt
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r1, #3
	bl __umodsi3
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp]
	mov r0, #0
	mov r10, r0
	mov r1, #0
	str r1, [sp, #4]
	ldr r0, _080FE940  @ =gRam
	ldr r5, _080FE944  @ =0x00000EE2
	add r2, r0, r5
	ldr r1, _080FE948  @ =0x00000ED2
	add r3, r0, r1
	ldr r5, _080FE94C  @ =0x00001142
	add r1, r0, r5
	add r2, r4, r2
	str r2, [sp, #8]
	add r2, r4, r3
	str r2, [sp, #12]
	add r5, r4, r1
	str r5, [sp, #16]
	mov r12, r1
	add r7, r3, #0
	ldr r2, _080FE950  @ =0x00000F02
	add r1, r0, r2
	ldr r5, _080FE954  @ =0x00000EF2
	add r0, r0, r5
	add r1, r1, r4
	mov r9, r1
	add r4, r4, r0
	mov r8, r4
	add r6, r0, #0
_080FE8C2:
	ldr r0, _080FE958  @ =gUnknown_03003222
	add r0, r0, r10
	ldrb r0, [r0]
	cmp r0, #136
	bne _080FE920
	ldr r0, [sp, #4]
	add r1, r0, #0
	add r1, r1, #1
	str r1, [sp, #4]
	ldr r2, [sp]
	cmp r0, r2
	bne _080FE920
	ldrb r1, [r7, #16]
	ldrb r2, [r7]
	mov r5, r12
	ldrb r3, [r5]
	ldrb r4, [r6, #16]
	ldrb r0, [r6]
	str r0, [sp, #20]
	ldr r5, [sp, #8]
	ldrb r0, [r5]
	strb r0, [r7, #16]
	ldr r5, [sp, #12]
	ldrb r0, [r5]
	strb r0, [r7]
	ldr r5, [sp, #16]
	ldrb r0, [r5]
	mov r5, r12
	strb r0, [r5]
	mov r5, r9
	ldrb r0, [r5]
	strb r0, [r6, #16]
	mov r5, r8
	ldrb r0, [r5]
	strb r0, [r6]
	ldr r0, [sp, #8]
	strb r1, [r0]
	ldr r1, [sp, #12]
	strb r2, [r1]
	ldr r2, [sp, #16]
	strb r3, [r2]
	mov r5, r9
	strb r4, [r5]
	mov r0, sp
	ldrb r1, [r0, #20]
	mov r0, r8
	strb r1, [r0]
_080FE920:
	mov r2, #1
	add r12, r12, r2
	add r7, r7, #1
	add r6, r6, #1
	add r10, r10, r2
	mov r5, r10
	cmp r5, #15
	ble _080FE8C2
	add sp, sp, #24
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080FE940:
	.4byte gRam
_080FE944:
	.4byte 0x00000EE2
_080FE948:
	.4byte 0x00000ED2
_080FE94C:
	.4byte 0x00001142
_080FE950:
	.4byte 0x00000F02
_080FE954:
	.4byte 0x00000EF2
_080FE958:
	.4byte gUnknown_03003222
	THUMB_FUNC_END sub_080FE864

	THUMB_FUNC_START sub_080FE95C
sub_080FE95C: @ 0x080FE95C
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r0, #136
	add r1, r5, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080FE9F8
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r3, _080FE9D8  @ =gRam
	ldr r1, _080FE9DC  @ =0x00000F52
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #5
	strb r1, [r0]
	ldr r0, _080FE9E0  @ =0x00000D84
	add r1, r3, r0
	add r1, r4, r1
	ldrb r2, [r1]
	mov r0, #253
	and r0, r0, r2
	strb r0, [r1]
	ldr r1, _080FE9E4  @ =0x00000EA5
	add r2, r3, r1
	add r2, r4, r2
	ldrb r1, [r2]
	mov r0, #240
	and r0, r0, r1
	mov r1, #7
	orr r0, r0, r1
	strb r0, [r2]
	ldr r1, _080FE9E8  @ =0x00001022
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080FE9EC  @ =0x00000FC2
	add r0, r3, r1
	add r1, r4, r0
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080FE9F0  @ =0x000010B2
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #16
	strb r1, [r0]
	ldr r0, _080FE9F4  @ =0x00001132
	add r3, r3, r0
	add r3, r4, r3
	ldrb r1, [r3]
	mov r0, #64
	orr r0, r0, r1
	strb r0, [r3]
	add r0, r4, #0
	b _080FE9FC
	.byte 0x00
	.byte 0x00
_080FE9D8:
	.4byte gRam
_080FE9DC:
	.4byte 0x00000F52
_080FE9E0:
	.4byte 0x00000D84
_080FE9E4:
	.4byte 0x00000EA5
_080FE9E8:
	.4byte 0x00001022
_080FE9EC:
	.4byte 0x00000FC2
_080FE9F0:
	.4byte 0x000010B2
_080FE9F4:
	.4byte 0x00001132
_080FE9F8:
	mov r0, #1
	neg r0, r0
_080FE9FC:
	pop {r4,r5}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080FE95C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FEA04
sub_080FEA04: @ 0x080FEA04
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r7, #0
	mov r6, #3
_080FEA0E:
	add r0, r5, #0
	bl sub_080D0E24
	add r3, r0, #0
	cmp r3, #0
	blt _080FEA78
	ldr r4, _080FEA98  @ =gRam
	ldr r1, _080FEA9C  @ =0x00001082
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #0
	strb r1, [r0]
	ldr r1, _080FEAA0  @ =0x00000F62
	add r0, r4, r1
	add r0, r3, r0
	mov r1, #32
	strb r1, [r0]
	ldr r0, _080FEAA4  @ =0x00000EA5
	add r2, r4, r0
	add r2, r3, r2
	ldrb r1, [r2]
	mov r0, #240
	and r0, r0, r1
	mov r1, #5
	orr r0, r0, r1
	strb r0, [r2]
	ldr r0, _080FEAA8  @ =0x00000E75
	add r1, r4, r0
	add r1, r3, r1
	ldrb r2, [r1]
	mov r0, #253
	and r0, r0, r2
	strb r0, [r1]
	ldr r1, _080FEAAC  @ =0x00000F22
	add r0, r4, r1
	add r1, r3, r0
	mov r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bge _080FEA60
	add r0, r0, #3
_080FEA60:
	asr r0, r0, #2
	strb r0, [r1]
	ldr r1, _080FEAB0  @ =0x00000F12
	add r0, r4, r1
	add r1, r3, r0
	mov r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bge _080FEA74
	add r0, r0, #3
_080FEA74:
	asr r0, r0, #2
	strb r0, [r1]
_080FEA78:
	sub r6, r6, #1
	cmp r6, #0
	bge _080FEA0E
	add r0, r5, #0
	bl sub_080CBBEC
	ldr r0, _080FEA98  @ =gRam
	ldr r1, _080FEAB4  @ =0x00000FA2
	add r0, r0, r1
	add r0, r5, r0
	mov r1, #0
	strb r1, [r0]
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FEA98:
	.4byte gRam
_080FEA9C:
	.4byte 0x00001082
_080FEAA0:
	.4byte 0x00000F62
_080FEAA4:
	.4byte 0x00000EA5
_080FEAA8:
	.4byte 0x00000E75
_080FEAAC:
	.4byte 0x00000F22
_080FEAB0:
	.4byte 0x00000F12
_080FEAB4:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080FEA04

	THUMB_FUNC_START sub_080FEAB8
sub_080FEAB8: @ 0x080FEAB8
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r0, r0, #24
	mov r8, r0
	mov r1, #95
	bl sub_080CF140
	mov r5, #2
_080FEACC:
	mov r0, #137
	mov r1, r8
	bl sub_080CA538
	add r4, r0, #0
	lsl r7, r5, #24
	cmp r4, #0
	blt _080FEB6E
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r5, _080FEB84  @ =gRam
	ldr r0, _080FEB88  @ =0x00000ED2
	add r3, r5, r0
	add r3, r4, r3
	ldr r1, _080FEB8C  @ =0x00000964
	add r0, r5, r1
	add r1, r1, #4
	add r2, r5, r1
	ldrb r1, [r0]
	ldrb r0, [r2]
	sub r1, r1, r0
	add r1, r1, #3
	mov r2, #0
	mov r12, r2
	strb r1, [r3]
	ldr r1, _080FEB90  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	mov r1, #16
	strb r1, [r0]
	ldr r2, _080FEB94  @ =0x00001172
	add r0, r5, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r0, _080FEB98  @ =0x00000EE2
	add r1, r5, r0
	add r1, r4, r1
	mov r2, #150
	lsl r2, r2, #4
	add r3, r5, r2
	ldr r0, _080FEB9C  @ =gUnknown_0817AB6A
	asr r6, r7, #24
	add r0, r6, r0
	ldrb r2, [r0]
	ldrb r3, [r3]
	add r0, r2, r3
	strb r0, [r1]
	ldr r1, _080FEBA0  @ =0x00000F22
	add r0, r5, r1
	add r0, r4, r0
	strb r2, [r0]
	ldr r2, _080FEBA4  @ =0x00000F12
	add r1, r5, r2
	add r1, r4, r1
	ldr r0, _080FEBA8  @ =gUnknown_0817AB6D
	add r0, r6, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080FEBAC  @ =0x00001142
	add r0, r5, r1
	add r0, r4, r0
	mov r2, r12
	strb r2, [r0]
	mov r1, #0
	ldr r2, _080FEBB0  @ =0x000009DA
	add r0, r5, r2
	ldrh r0, [r0]
	cmp r0, #173
	bne _080FEB5C
	mov r1, #1
_080FEB5C:
	cmp r1, #0
	beq _080FEB6E
	cmp r6, #1
	bne _080FEB6E
	ldr r1, _080FEBB4  @ =0x00000FA2
	add r0, r5, r1
	add r0, r4, r0
	mov r2, r12
	strb r2, [r0]
_080FEB6E:
	mov r1, #255
	lsl r1, r1, #24
	add r0, r7, r1
	lsr r5, r0, #24
	cmp r0, #0
	bge _080FEACC
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
_080FEB84:
	.4byte gRam
_080FEB88:
	.4byte 0x00000ED2
_080FEB8C:
	.4byte 0x00000964
_080FEB90:
	.4byte 0x00000FC2
_080FEB94:
	.4byte 0x00001172
_080FEB98:
	.4byte 0x00000EE2
_080FEB9C:
	.4byte gUnknown_0817AB6A
_080FEBA0:
	.4byte 0x00000F22
_080FEBA4:
	.4byte 0x00000F12
_080FEBA8:
	.4byte gUnknown_0817AB6D
_080FEBAC:
	.4byte 0x00001142
_080FEBB0:
	.4byte 0x000009DA
_080FEBB4:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080FEAB8

	THUMB_FUNC_START sub_080FEBB8
sub_080FEBB8: @ 0x080FEBB8
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	sub sp, sp, #8
	lsl r0, r0, #24
	lsr r1, r0, #24
	ldr r2, _080FECE0  @ =gRam
	ldr r3, _080FECE4  @ =0x00001082
	add r0, r2, r3
	add r0, r1, r0
	str r0, [sp]
	ldrb r0, [r0]
	sub r0, r0, #1
	ldr r2, [sp]
	strb r0, [r2]
	lsl r0, r0, #24
	lsr r0, r0, #24
	str r0, [sp, #4]
	cmp r0, #0
	bne _080FECD0
	mov r0, #64
	strb r0, [r2]
	mov r0, #138
	bl sub_080CA538
	add r7, r0, #0
	cmp r7, #0
	blt _080FECD0
	bl GetRandomInt
	mov r2, #31
	and r2, r2, r0
	cmp r2, #29
	bls _080FEC08
	add r0, r2, #0
	sub r0, r0, #30
	lsl r0, r0, #24
	lsr r2, r0, #24
_080FEC08:
	ldr r3, _080FECE0  @ =gRam
	ldr r0, _080FECE8  @ =0x00000EE2
	add r3, r3, r0
	mov r10, r3
	add r10, r10, r7
	ldr r0, _080FECEC  @ =gUnknown_0817AB70
	add r0, r2, r0
	ldrb r0, [r0]
	mov r1, r10
	strb r0, [r1]
	ldr r3, _080FECE0  @ =gRam
	ldr r1, _080FECF0  @ =0x00000F62
	add r3, r3, r1
	mov r8, r3
	add r8, r8, r7
	mov r3, r8
	strb r0, [r3]
	ldr r0, _080FECE0  @ =gRam
	sub r1, r1, #144
	add r0, r0, r1
	mov r9, r0
	add r9, r9, r7
	ldr r0, _080FECF4  @ =gUnknown_0817AB8E
	add r0, r2, r0
	ldrb r0, [r0]
	mov r3, r9
	strb r0, [r3]
	ldr r1, _080FECE0  @ =gRam
	ldr r3, _080FECF8  @ =0x00000F72
	add r6, r1, r3
	add r6, r7, r6
	sub r0, r0, #1
	strb r0, [r6]
	ldr r0, _080FECFC  @ =0x00000FB2
	add r1, r1, r0
	add r1, r7, r1
	ldr r0, _080FED00  @ =gUnknown_0817ABAC
	add r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080FECE0  @ =gRam
	ldr r2, _080FED04  @ =0x00001062
	add r0, r1, r2
	add r0, r7, r0
	mov r3, #1
	strb r3, [r0]
	ldr r0, _080FED08  @ =0x00000F02
	add r1, r1, r0
	add r1, r7, r1
	ldr r2, _080FECE0  @ =gRam
	ldr r3, _080FED0C  @ =0x000015F4
	add r0, r2, r3
	ldrb r0, [r0]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080FED10  @ =0x00000EF2
	add r1, r2, r0
	add r1, r7, r1
	add r3, r3, #1
	add r0, r2, r3
	ldrb r0, [r0]
	add r0, r0, #1
	strb r0, [r1]
	ldr r0, _080FED14  @ =0x00000F22
	add r5, r2, r0
	add r5, r7, r5
	mov r1, #1
	strb r1, [r5]
	lsl r4, r7, #24
	lsr r4, r4, #24
	add r0, r4, #0
	bl sub_080C1F70
	add r0, r4, #0
	bl sub_080C6F48
	mov r2, sp
	ldrb r2, [r2, #4]
	strb r2, [r5]
	mov r3, r8
	ldrb r0, [r3]
	mov r1, r10
	strb r0, [r1]
	ldrb r0, [r6]
	mov r2, r9
	strb r0, [r2]
	ldr r3, _080FECE0  @ =gRam
	ldr r1, _080FED18  @ =0x00001042
	add r0, r3, r1
	add r0, r7, r0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080FECD0
	ldr r2, _080FED1C  @ =0x00000FA2
	add r0, r3, r2
	add r0, r7, r0
	strb r1, [r0]
	mov r0, #1
	ldr r3, [sp]
	strb r0, [r3]
_080FECD0:
	add sp, sp, #8
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080FECE0:
	.4byte gRam
_080FECE4:
	.4byte 0x00001082
_080FECE8:
	.4byte 0x00000EE2
_080FECEC:
	.4byte gUnknown_0817AB70
_080FECF0:
	.4byte 0x00000F62
_080FECF4:
	.4byte gUnknown_0817AB8E
_080FECF8:
	.4byte 0x00000F72
_080FECFC:
	.4byte 0x00000FB2
_080FED00:
	.4byte gUnknown_0817ABAC
_080FED04:
	.4byte 0x00001062
_080FED08:
	.4byte 0x00000F02
_080FED0C:
	.4byte 0x000015F4
_080FED10:
	.4byte 0x00000EF2
_080FED14:
	.4byte 0x00000F22
_080FED18:
	.4byte 0x00001042
_080FED1C:
	.4byte 0x00000FA2
	THUMB_FUNC_END sub_080FEBB8

	THUMB_FUNC_START sub_080FED20
sub_080FED20: @ 0x080FED20
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r7, r4, #0
	mov r0, #8
	bl sub_080CF3E8
	ldr r5, _080FEDA4  @ =gRam
	ldr r1, _080FEDA8  @ =0x00000F92
	add r0, r5, r1
	add r6, r4, r0
	ldrb r1, [r6]
	lsl r1, r1, #4
	ldr r0, _080FEDAC  @ =gUnknown_0817ABCC
	add r1, r1, r0
	add r0, r4, #0
	mov r2, #2
	bl sub_080C9480
	ldr r2, _080FEDB0  @ =0x000010D2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FEE4A
	mov r1, #0
	ldr r3, _080FEDB4  @ =0x000009DA
	add r0, r5, r3
	ldrh r0, [r0]
	cmp r0, #173
	bne _080FED68
	mov r1, #1
_080FED68:
	cmp r1, #0
	beq _080FEDC8
	mov r0, #4
	bl sub_080CF3E8
	ldr r0, _080FEDB8  @ =0x00000964
	add r1, r5, r0
	ldr r2, _080FEDBC  @ =0x00001142
	add r0, r5, r2
	add r0, r4, r0
	ldrb r0, [r0]
	ldrh r2, [r1]
	add r2, r2, r0
	strh r2, [r1]
	ldr r0, _080FEDC0  @ =gUnknown_03003E74
	ldrh r0, [r0]
	mov r3, #150
	lsl r3, r3, #4
	add r1, r5, r3
	ldrh r1, [r1]
	add r2, r2, #16
	lsl r2, r2, #16
	lsr r2, r2, #16
	ldr r3, _080FEDC4  @ =0x000024CC
	mov r4, #2
	str r4, [sp]
	bl sub_080C6368
	b _080FEE4A
	.byte 0x00
	.byte 0x00
_080FEDA4:
	.4byte gRam
_080FEDA8:
	.4byte 0x00000F92
_080FEDAC:
	.4byte gUnknown_0817ABCC
_080FEDB0:
	.4byte 0x000010D2
_080FEDB4:
	.4byte 0x000009DA
_080FEDB8:
	.4byte 0x00000964
_080FEDBC:
	.4byte 0x00001142
_080FEDC0:
	.4byte gUnknown_03003E74
_080FEDC4:
	.4byte 0x000024CC
_080FEDC8:
	ldrb r0, [r6]
	lsl r1, r0, #3
	add r0, r0, r1
	ldr r2, _080FEE58  @ =0x0000096C
	add r1, r5, r2
	strb r0, [r1]
	ldr r3, _080FEE5C  @ =0x00000964
	add r4, r5, r3
	ldr r0, _080FEE60  @ =0x00001142
	add r1, r5, r0
	add r1, r7, r1
	ldrh r0, [r4]
	ldrb r1, [r1]
	add r0, r0, r1
	strh r0, [r4]
	mov r0, #36
	bl sub_080CF3E8
	mov r2, #8
	mov r6, #0
	mov r1, #150
	lsl r1, r1, #4
	add r1, r1, r5
	mov r9, r1
	ldr r3, _080FEE64  @ =gUnknown_0817ABFC
	mov r8, r3
	add r7, r4, #0
_080FEDFE:
	ldr r0, _080FEE68  @ =gUnknown_03003E74
	ldrh r0, [r0]
	add r0, r0, r6
	lsl r0, r0, #16
	lsr r0, r0, #16
	ldr r3, _080FEE58  @ =0x0000096C
	add r1, r5, r3
	ldrb r1, [r1]
	lsl r1, r1, #24
	asr r1, r1, #24
	lsl r4, r2, #24
	asr r4, r4, #24
	add r1, r1, r4
	lsl r1, r1, #1
	add r1, r1, r8
	ldrh r1, [r1]
	mov r2, r9
	ldrh r2, [r2]
	add r1, r1, r2
	lsl r1, r1, #16
	lsr r1, r1, #16
	ldrh r2, [r7]
	add r2, r2, #16
	lsl r2, r2, #16
	lsr r2, r2, #16
	mov r3, #2
	str r3, [sp]
	ldr r3, _080FEE6C  @ =0x000024CC
	bl sub_080C6368
	sub r4, r4, #1
	lsl r4, r4, #24
	add r0, r6, #1
	lsl r0, r0, #24
	lsr r6, r0, #24
	lsr r2, r4, #24
	cmp r4, #0
	bge _080FEDFE
_080FEE4A:
	add sp, sp, #4
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080FEE58:
	.4byte 0x0000096C
_080FEE5C:
	.4byte 0x00000964
_080FEE60:
	.4byte 0x00001142
_080FEE64:
	.4byte gUnknown_0817ABFC
_080FEE68:
	.4byte gUnknown_03003E74
_080FEE6C:
	.4byte 0x000024CC
	THUMB_FUNC_END sub_080FED20

	THUMB_FUNC_START sub_080FEE70
sub_080FEE70: @ 0x080FEE70
	push {r4,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080FE1FC
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FEE8E
	add r0, r4, #0
	bl sub_080FEBB8
_080FEE8E:
	pop {r4}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080FEE70

	THUMB_FUNC_START sub_080FEE94
sub_080FEE94: @ 0x080FEE94
	push {r4,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	mov r1, #0
	ldr r4, _080FEEE0  @ =gRam
	ldr r3, _080FEEE4  @ =0x000009DA
	add r0, r4, r3
	ldrh r0, [r0]
	cmp r0, #173
	bne _080FEEAA
	mov r1, #1
_080FEEAA:
	cmp r1, #0
	beq _080FEEF4
	ldr r1, _080FEEE8  @ =0x00000D84
	add r0, r4, r1
	add r0, r2, r0
	ldrb r1, [r0]
	mov r0, #2
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r3, r0, #24
	cmp r3, #0
	bne _080FEEF4
	ldr r1, _080FEEEC  @ =0x00000FC2
	add r0, r4, r1
	add r0, r2, r0
	mov r1, #9
	strb r1, [r0]
	ldr r1, _080FEEF0  @ =0x000010C2
	add r0, r4, r1
	add r0, r2, r0
	strb r3, [r0]
	add r0, r2, #0
	bl sub_080FEA04
	mov r0, #1
	b _080FEEF6
	.byte 0x00
	.byte 0x00
_080FEEE0:
	.4byte gRam
_080FEEE4:
	.4byte 0x000009DA
_080FEEE8:
	.4byte 0x00000D84
_080FEEEC:
	.4byte 0x00000FC2
_080FEEF0:
	.4byte 0x000010C2
_080FEEF4:
	mov r0, #0
_080FEEF6:
	pop {r4}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080FEE94

	THUMB_FUNC_START sub_080FEEFC
sub_080FEEFC: @ 0x080FEEFC
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080FEF20  @ =gRam
	ldr r3, _080FEF24  @ =0x00000FC2
	add r0, r1, r3
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FEF1C
	ldr r0, _080FEF28  @ =0x00000F52
	add r1, r1, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FEF1C:
	pop {r0}
	bx r0
_080FEF20:
	.4byte gRam
_080FEF24:
	.4byte 0x00000FC2
_080FEF28:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FEEFC

	THUMB_FUNC_START sub_080FEF2C
sub_080FEF2C: @ 0x080FEF2C
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r5, r2, #0
	ldr r6, _080FEF6C  @ =gRam
	ldr r0, _080FEF70  @ =0x00001052
	add r1, r6, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #26
	mov r1, #3
	and r0, r0, r1
	add r4, r0, #0
	cmp r4, #0
	bne _080FEF58
	add r0, r2, #0
	mov r1, #12
	bl sub_080CF0AC
_080FEF58:
	ldr r1, _080FEF74  @ =0x00000F92
	add r0, r6, r1
	add r0, r5, r0
	ldr r1, _080FEF78  @ =gUnknown_0817AB66
	add r1, r4, r1
	ldrb r1, [r1]
	strb r1, [r0]
	pop {r4-r6}
	pop {r0}
	bx r0
_080FEF6C:
	.4byte gRam
_080FEF70:
	.4byte 0x00001052
_080FEF74:
	.4byte 0x00000F92
_080FEF78:
	.4byte gUnknown_0817AB66
	THUMB_FUNC_END sub_080FEF2C

	THUMB_FUNC_START sub_080FEF7C
sub_080FEF7C: @ 0x080FEF7C
	push {r4,lr}
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080FEFA8  @ =gRam
	ldr r2, _080FEFAC  @ =0x00000F52
	add r1, r3, r2
	add r1, r0, r1
	mov r4, #0
	mov r2, #4
	strb r2, [r1]
	ldr r2, _080FEFB0  @ =0x00000FC2
	add r1, r3, r2
	add r0, r0, r1
	mov r1, #255
	strb r1, [r0]
	ldr r0, _080FEFB4  @ =0x00000D16
	add r3, r3, r0
	strh r4, [r3]
	pop {r4}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FEFA8:
	.4byte gRam
_080FEFAC:
	.4byte 0x00000F52
_080FEFB0:
	.4byte 0x00000FC2
_080FEFB4:
	.4byte 0x00000D16
	THUMB_FUNC_END sub_080FEF7C

	THUMB_FUNC_START sub_080FEFB8
sub_080FEFB8: @ 0x080FEFB8
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080C6240
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FEFD2
	b _080FF166
_080FEFD2:
	add r0, r4, #0
	bl sub_080C4F98
	ldr r5, _080FF10C  @ =gRam
	ldr r1, _080FF110  @ =0x00000996
	add r0, r5, r1
	ldrb r1, [r0]
	mov r0, #1
	and r0, r0, r1
	cmp r0, #0
	bne _080FEFF6
	ldr r2, _080FF114  @ =0x00001122
	add r0, r5, r2
	add r0, r4, r0
	ldrb r1, [r0]
	mov r2, #128
	eor r1, r1, r2
	strb r1, [r0]
_080FEFF6:
	mov r1, #0
	ldr r3, _080FF118  @ =0x000009DA
	add r0, r5, r3
	ldrh r0, [r0]
	cmp r0, #173
	bne _080FF004
	mov r1, #1
_080FF004:
	cmp r1, #0
	beq _080FF03E
	ldr r1, _080FF11C  @ =0x00000FC2
	add r0, r5, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FF03E
	mov r1, #7
	and r1, r1, r4
	add r1, r1, #16
	add r0, r4, #0
	bl sub_080C2CB4
	ldr r2, _080FF120  @ =0x00000F22
	add r0, r5, r2
	add r0, r4, r0
	ldr r3, _080FF124  @ =0x00000961
	add r1, r5, r3
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080FF128  @ =0x00000F12
	add r0, r5, r1
	add r0, r4, r0
	mov r2, #150
	lsl r2, r2, #4
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
_080FF03E:
	add r0, r4, #0
	bl Sprite3_Move
	ldr r6, _080FF10C  @ =gRam
	ldr r3, _080FF11C  @ =0x00000FC2
	add r0, r6, r3
	add r0, r4, r0
	ldrb r5, [r0]
	cmp r5, #0
	bne _080FF066
	add r0, r4, #0
	bl sub_080C7A20
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FF066
	ldr r1, _080FF12C  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	strb r5, [r0]
_080FF066:
	ldr r2, _080FF10C  @ =gRam
	ldr r3, _080FF110  @ =0x00000996
	add r0, r2, r3
	ldrb r1, [r0]
	add r0, r4, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080FF166
	mov r1, #0
	ldr r5, _080FF118  @ =0x000009DA
	add r0, r2, r5
	ldrh r0, [r0]
	cmp r0, #173
	bne _080FF088
	mov r1, #1
_080FF088:
	cmp r1, #0
	bne _080FF166
	mov r1, #14
	ldr r0, _080FF130  @ =0x000011D2
	add r6, r2, r0
	mov r5, #2
	ldr r3, _080FF134  @ =0x000015F8
	add r7, r2, r3
_080FF098:
	lsl r0, r1, #24
	asr r3, r0, #24
	add r1, r3, r6
	ldrb r0, [r1]
	cmp r0, #0
	bne _080FF15C
	strb r5, [r1]
	strb r5, [r7]
	ldr r5, _080FF138  @ =0x0000122C
	add r1, r2, r5
	add r1, r3, r1
	ldr r5, _080FF13C  @ =0x00000EE2
	add r0, r2, r5
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080FF140  @ =0x00001268
	add r1, r2, r0
	add r1, r3, r1
	add r5, r5, #32
	add r0, r2, r5
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080FF144  @ =0x0000120E
	add r1, r2, r0
	add r1, r3, r1
	sub r5, r5, #48
	add r0, r2, r5
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080FF148  @ =0x0000124A
	add r1, r2, r0
	add r1, r3, r1
	add r5, r5, #32
	add r0, r2, r5
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080FF14C  @ =0x000012FE
	add r0, r2, r1
	add r0, r3, r0
	mov r1, #16
	strb r1, [r0]
	ldr r5, _080FF150  @ =0x0000131C
	add r0, r2, r5
	add r0, r3, r0
	strb r4, [r0]
	ldr r0, _080FF154  @ =0x00001358
	add r1, r2, r0
	add r1, r3, r1
	ldr r3, _080FF158  @ =0x000010F2
	add r0, r2, r3
	add r0, r4, r0
	ldrb r0, [r0]
	strb r0, [r1]
	b _080FF166
_080FF10C:
	.4byte gRam
_080FF110:
	.4byte 0x00000996
_080FF114:
	.4byte 0x00001122
_080FF118:
	.4byte 0x000009DA
_080FF11C:
	.4byte 0x00000FC2
_080FF120:
	.4byte 0x00000F22
_080FF124:
	.4byte 0x00000961
_080FF128:
	.4byte 0x00000F12
_080FF12C:
	.4byte 0x00000FA2
_080FF130:
	.4byte 0x000011D2
_080FF134:
	.4byte 0x000015F8
_080FF138:
	.4byte 0x0000122C
_080FF13C:
	.4byte 0x00000EE2
_080FF140:
	.4byte 0x00001268
_080FF144:
	.4byte 0x0000120E
_080FF148:
	.4byte 0x0000124A
_080FF14C:
	.4byte 0x000012FE
_080FF150:
	.4byte 0x0000131C
_080FF154:
	.4byte 0x00001358
_080FF158:
	.4byte 0x000010F2
_080FF15C:
	sub r0, r3, #1
	lsl r0, r0, #24
	lsr r1, r0, #24
	cmp r0, #0
	bge _080FF098
_080FF166:
	pop {r4-r7}
	pop {r0}
	bx r0
	THUMB_FUNC_END sub_080FEFB8

	THUMB_FUNC_START sub_080FF16C
sub_080FF16C: @ 0x080FF16C
	bx lr
	THUMB_FUNC_END sub_080FF16C

	.byte 0x00
	.byte 0x00
	THUMB_FUNC_START sub_080FF170
sub_080FF170: @ 0x080FF170
	push {r4-r6,lr}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r5, r4, #0
	ldr r6, _080FF238  @ =gRam
	ldr r1, _080FF23C  @ =0x00000F72
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FF188
	b _080FF298
_080FF188:
	ldr r2, _080FF240  @ =0x000009B5
	add r1, r6, r2
	mov r0, #2
	strb r0, [r1]
	ldr r0, _080FF244  @ =0x000009D4
	add r1, r6, r0
	mov r0, #48
	strb r0, [r1]
	ldr r2, _080FF248  @ =0x0000051E
	add r1, r6, r2
	mov r0, #185
	lsl r0, r0, #6
	strh r0, [r1]
	ldr r1, _080FF24C  @ =0x0000051A
	add r0, r6, r1
	mov r5, #63
	strh r5, [r0]
	ldr r2, _080FF250  @ =0x00000998
	add r0, r6, r2
	mov r1, #8
	strb r1, [r0]
	add r2, r2, #1
	add r0, r6, r2
	strb r1, [r0]
	add r0, r4, #0
	bl sub_080FF5A8
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FF1CC
	b _080FF2F2
_080FF1CC:
	ldr r0, _080FF254  @ =0x00001092
	add r1, r6, r0
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FF258  @ =0x00001082
	add r0, r6, r1
	add r3, r4, r0
	ldrb r0, [r3]
	sub r1, r1, #224
	add r2, r6, r1
	add r0, r0, r2
	ldrb r1, [r0]
	cmp r1, #6
	beq _080FF270
	ldr r0, _080FF25C  @ =0x00001052
	add r2, r6, r0
	add r2, r4, r2
	ldr r1, _080FF260  @ =0x00000996
	add r3, r6, r1
	ldrb r0, [r3]
	lsr r0, r0, #3
	mov r1, #3
	and r0, r0, r1
	strb r0, [r2]
	ldrb r1, [r3]
	add r0, r5, #0
	and r0, r0, r1
	cmp r0, #0
	bne _080FF21A
	add r0, r4, #0
	bl sub_080C36D8
	ldr r2, _080FF264  @ =0x00000FB2
	add r1, r6, r2
	add r1, r4, r1
	lsl r0, r0, #2
	strb r0, [r1]
_080FF21A:
	add r0, r4, #0
	bl sub_080C4F98
	ldr r1, _080FF268  @ =gUnknown_0817AC38
	ldr r2, _080FF26C  @ =0x00000F52
	add r0, r6, r2
	add r0, r4, r0
	ldrb r0, [r0]
	lsl r0, r0, #2
	add r0, r0, r1
	ldr r1, [r0]
	add r0, r4, #0
	bl _call_via_r1
	b _080FF2F2
_080FF238:
	.4byte gRam
_080FF23C:
	.4byte 0x00000F72
_080FF240:
	.4byte 0x000009B5
_080FF244:
	.4byte 0x000009D4
_080FF248:
	.4byte 0x0000051E
_080FF24C:
	.4byte 0x0000051A
_080FF250:
	.4byte 0x00000998
_080FF254:
	.4byte 0x00001092
_080FF258:
	.4byte 0x00001082
_080FF25C:
	.4byte 0x00001052
_080FF260:
	.4byte 0x00000996
_080FF264:
	.4byte 0x00000FB2
_080FF268:
	.4byte gUnknown_0817AC38
_080FF26C:
	.4byte 0x00000F52
_080FF270:
	add r0, r4, r2
	strb r1, [r0]
	ldr r0, _080FF290  @ =0x00000FC2
	add r1, r6, r0
	add r2, r4, r1
	ldrb r0, [r3]
	add r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r2, _080FF294  @ =0x00001012
	add r1, r6, r2
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #4
	strb r0, [r1]
	b _080FF2F2
_080FF290:
	.4byte 0x00000FC2
_080FF294:
	.4byte 0x00001012
_080FF298:
	add r0, r5, #0
	bl sub_080C6240
	add r0, r5, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FF2F2
	add r0, r5, #0
	bl sub_080C5044
	ldr r0, _080FF2F8  @ =0x00001052
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	ldr r1, _080FF2FC  @ =0x00001122
	add r3, r6, r1
	add r3, r5, r3
	ldrb r1, [r3]
	mov r2, #63
	and r2, r2, r1
	ldr r4, _080FF300  @ =gUnknown_0817AC34
	lsl r0, r0, #24
	lsr r0, r0, #26
	mov r1, #3
	and r0, r0, r1
	add r0, r0, r4
	ldrb r0, [r0]
	orr r2, r2, r0
	strb r2, [r3]
	ldr r2, _080FF304  @ =0x00000FC2
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FF2F2
	add r0, r5, #0
	bl Sprite3_Move
	add r0, r5, #0
	bl sub_080CA2A4
_080FF2F2:
	pop {r4-r6}
	pop {r0}
	bx r0
_080FF2F8:
	.4byte 0x00001052
_080FF2FC:
	.4byte 0x00001122
_080FF300:
	.4byte gUnknown_0817AC34
_080FF304:
	.4byte 0x00000FC2
	THUMB_FUNC_END sub_080FF170

	THUMB_FUNC_START sub_080FF308
sub_080FF308: @ 0x080FF308
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r5, r0, #24
	mov r10, r5
	ldr r6, _080FF338  @ =gRam
	ldr r0, _080FF33C  @ =gUnknown_030031F2
	add r2, r5, r0
	ldrb r1, [r2]
	add r7, r1, #0
	cmp r7, #0
	beq _080FF344
	cmp r7, #32
	beq _080FF32C
	b _080FF42E
_080FF32C:
	ldr r2, _080FF340  @ =0x00000FD2
	add r0, r6, r2
	add r0, r5, r0
	strb r1, [r0]
	b _080FF42E
	.byte 0x00
	.byte 0x00
_080FF338:
	.4byte gRam
_080FF33C:
	.4byte gUnknown_030031F2
_080FF340:
	.4byte 0x00000FD2
_080FF344:
	ldr r0, _080FF3E4  @ =0x00000F52
	add r1, r6, r0
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r1, #48
	mov r9, r1
	mov r0, r9
	strb r0, [r2]
	ldr r2, _080FF3E8  @ =0x00000F62
	add r1, r6, r2
	add r1, r5, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	mov r0, #195
	add r1, r5, #0
	bl sub_080CA538
	add r4, r0, #0
	cmp r4, #0
	blt _080FF42E
	lsl r0, r4, #24
	lsr r0, r0, #24
	bl sub_080CAE50
	ldr r1, _080FF3EC  @ =0x00001082
	add r0, r6, r1
	add r0, r5, r0
	strb r4, [r0]
	ldr r2, _080FF3F0  @ =0x00001012
	add r0, r6, r2
	add r0, r4, r0
	mov r1, #1
	strb r1, [r0]
	sub r2, r2, #160
	add r0, r6, r2
	add r0, r4, r0
	strb r1, [r0]
	ldr r1, _080FF3F4  @ =0x00001032
	add r0, r6, r1
	add r0, r4, r0
	mov r1, #16
	strb r1, [r0]
	add r2, r2, #176
	add r1, r6, r2
	add r1, r4, r1
	add r2, r2, #128
	add r0, r6, r2
	add r0, r5, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080FF3F8  @ =0x00001122
	add r0, r6, r1
	add r0, r4, r0
	mov r2, #7
	mov r8, r2
	mov r1, r8
	strb r1, [r0]
	ldr r2, _080FF3FC  @ =gUnknown_030031F2
	add r0, r4, r2
	mov r1, r9
	strb r1, [r0]
	ldr r2, _080FF400  @ =0x00000F82
	add r0, r6, r2
	add r1, r5, r0
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r0, #3
	beq _080FF404
	bl GetRandomInt
	mov r3, r8
	and r3, r3, r0
	b _080FF410
	.byte 0x00
	.byte 0x00
_080FF3E4:
	.4byte 0x00000F52
_080FF3E8:
	.4byte 0x00000F62
_080FF3EC:
	.4byte 0x00001082
_080FF3F0:
	.4byte 0x00001012
_080FF3F4:
	.4byte 0x00001032
_080FF3F8:
	.4byte 0x00001122
_080FF3FC:
	.4byte gUnknown_030031F2
_080FF400:
	.4byte 0x00000F82
_080FF404:
	strb r7, [r1]
	mov r0, r10
	bl sub_080C2FA8
	lsl r0, r0, #24
	lsr r3, r0, #24
_080FF410:
	ldr r2, _080FF43C  @ =gRam
	ldr r0, _080FF440  @ =0x00000F22
	add r1, r2, r0
	add r1, r4, r1
	ldr r0, _080FF444  @ =gUnknown_0817AC44
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _080FF448  @ =0x00000F12
	add r2, r2, r1
	add r2, r4, r2
	ldr r0, _080FF44C  @ =gUnknown_0817AC4C
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r2]
_080FF42E:
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080FF43C:
	.4byte gRam
_080FF440:
	.4byte 0x00000F22
_080FF444:
	.4byte gUnknown_0817AC44
_080FF448:
	.4byte 0x00000F12
_080FF44C:
	.4byte gUnknown_0817AC4C
	THUMB_FUNC_END sub_080FF308

	THUMB_FUNC_START sub_080FF450
sub_080FF450: @ 0x080FF450
	push {r4-r7,lr}
	lsl r0, r0, #24
	lsr r5, r0, #24
	ldr r4, _080FF51C  @ =gRam
	ldr r1, _080FF520  @ =0x00001082
	add r0, r4, r1
	add r0, r5, r0
	ldrb r3, [r0]
	ldr r2, _080FF524  @ =0x00000EE2
	add r0, r4, r2
	add r0, r3, r0
	ldrb r0, [r0]
	ldr r7, _080FF528  @ =0x00000968
	add r2, r4, r7
	mov r6, #0
	strb r0, [r2]
	ldr r1, _080FF52C  @ =0x00000F02
	add r0, r4, r1
	add r0, r3, r0
	ldrb r1, [r0]
	add r7, r7, #1
	add r0, r4, r7
	strb r1, [r0]
	ldr r1, _080FF530  @ =0x00000ED2
	add r0, r4, r1
	add r0, r3, r0
	ldrb r0, [r0]
	add r7, r7, #3
	add r7, r7, r4
	mov r12, r7
	strb r0, [r7]
	add r1, r1, #32
	add r0, r4, r1
	add r0, r3, r0
	ldrb r1, [r0]
	ldr r7, _080FF534  @ =0x0000096D
	add r0, r4, r7
	strb r1, [r0]
	ldr r1, _080FF538  @ =0x00001622
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r7, _080FF53C  @ =0x00001623
	add r0, r4, r7
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	ldrh r0, [r2]
	sub r1, r1, r0
	add r1, r1, #2
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #3
	bhi _080FF4DA
	ldr r1, _080FF540  @ =0x00001624
	add r0, r4, r1
	ldrb r1, [r0]
	ldr r2, _080FF544  @ =0x00001625
	add r0, r4, r2
	ldrb r0, [r0]
	lsl r0, r0, #8
	add r1, r1, r0
	mov r7, r12
	ldrh r0, [r7]
	sub r1, r1, r0
	add r1, r1, #2
	lsl r1, r1, #16
	lsr r1, r1, #16
	cmp r1, #3
	bls _080FF558
_080FF4DA:
	ldr r1, _080FF548  @ =0x00000996
	add r0, r4, r1
	ldrb r1, [r0]
	add r0, r5, #0
	eor r0, r0, r1
	mov r1, #3
	and r0, r0, r1
	cmp r0, #0
	bne _080FF512
	add r0, r5, #0
	mov r1, #16
	bl sub_080C2DCC
	ldr r2, _080FF54C  @ =0x00000F12
	add r0, r4, r2
	add r0, r5, r0
	mov r7, #150
	lsl r7, r7, #4
	add r1, r4, r7
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080FF550  @ =0x00000F22
	add r0, r4, r1
	add r0, r5, r0
	ldr r2, _080FF554  @ =0x00000961
	add r1, r4, r2
	ldrb r1, [r1]
	strb r1, [r0]
_080FF512:
	add r0, r5, #0
	bl Sprite3_Move
	b _080FF592
	.byte 0x00
	.byte 0x00
_080FF51C:
	.4byte gRam
_080FF520:
	.4byte 0x00001082
_080FF524:
	.4byte 0x00000EE2
_080FF528:
	.4byte 0x00000968
_080FF52C:
	.4byte 0x00000F02
_080FF530:
	.4byte 0x00000ED2
_080FF534:
	.4byte 0x0000096D
_080FF538:
	.4byte 0x00001622
_080FF53C:
	.4byte 0x00001623
_080FF540:
	.4byte 0x00001624
_080FF544:
	.4byte 0x00001625
_080FF548:
	.4byte 0x00000996
_080FF54C:
	.4byte 0x00000F12
_080FF550:
	.4byte 0x00000F22
_080FF554:
	.4byte 0x00000961
_080FF558:
	ldr r7, _080FF598  @ =0x00000FA2
	add r0, r4, r7
	add r0, r3, r0
	strb r6, [r0]
	ldr r1, _080FF59C  @ =0x00000F62
	add r0, r4, r1
	add r0, r5, r0
	strb r6, [r0]
	ldr r2, _080FF5A0  @ =0x00000F52
	add r0, r4, r2
	add r0, r5, r0
	strb r6, [r0]
	ldr r7, _080FF5A4  @ =0x000010A2
	add r1, r4, r7
	add r1, r5, r1
	add r2, r2, #208
	add r0, r4, r2
	add r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r1]
	bl GetRandomInt
	sub r7, r7, #224
	add r2, r4, r7
	add r2, r5, r2
	mov r1, #31
	and r1, r1, r0
	add r1, r1, #32
	strb r1, [r2]
_080FF592:
	pop {r4-r7}
	pop {r0}
	bx r0
_080FF598:
	.4byte 0x00000FA2
_080FF59C:
	.4byte 0x00000F62
_080FF5A0:
	.4byte 0x00000F52
_080FF5A4:
	.4byte 0x000010A2
	THUMB_FUNC_END sub_080FF450

	THUMB_FUNC_START sub_080FF5A8
sub_080FF5A8: @ 0x080FF5A8
	push {r4-r7,lr}
	mov r7, r10
	mov r6, r9
	mov r5, r8
	push {r5-r7}
	lsl r0, r0, #24
	lsr r7, r0, #24
	mov r9, r7
	ldr r6, _080FF65C  @ =gRam
	ldr r1, _080FF660  @ =0x00000F62
	add r0, r6, r1
	add r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FF620
	ldr r2, _080FF664  @ =0x00001012
	add r5, r6, r2
	add r5, r7, r5
	ldrb r0, [r5]
	mov r8, r0
	ldr r1, _080FF668  @ =0x00001122
	add r4, r6, r1
	add r4, r7, r4
	ldrb r2, [r4]
	mov r10, r2
	mov r0, #1
	strb r0, [r5]
	ldr r2, _080FF66C  @ =gUnknown_0817AC34
	sub r1, r1, #144
	add r0, r6, r1
	add r0, r7, r0
	ldrb r1, [r0]
	lsr r1, r1, #2
	mov r0, #3
	and r1, r1, r0
	add r1, r1, r2
	ldr r3, _080FF670  @ =gUnknown_0817AD54
	ldr r2, _080FF674  @ =0x00000FD2
	add r0, r6, r2
	add r0, r7, r0
	ldrb r2, [r0]
	mov r0, #4
	and r0, r0, r2
	lsl r0, r0, #24
	lsr r0, r0, #26
	add r0, r0, r3
	ldrb r1, [r1]
	ldrb r0, [r0]
	orr r1, r1, r0
	strb r1, [r4]
	add r0, r7, #0
	bl sub_080C6240
	mov r0, r10
	strb r0, [r4]
	mov r1, r8
	strb r1, [r5]
	mov r0, #1
	bl sub_080C64A0
_080FF620:
	ldr r1, _080FF678  @ =gUnknown_03003E74
	ldrh r0, [r1]
	add r0, r0, #2
	strh r0, [r1]
	ldr r2, _080FF67C  @ =0x00001052
	add r0, r6, r2
	add r0, r0, r9
	ldrb r1, [r0]
	sub r2, r2, #160
	add r0, r6, r2
	add r0, r0, r9
	ldrb r0, [r0]
	add r1, r1, r0
	lsl r1, r1, #5
	ldr r0, _080FF680  @ =gUnknown_0817AC54
	add r1, r1, r0
	mov r0, r9
	mov r2, #4
	bl sub_080C9480
	mov r0, #4
	bl sub_080C64A0
	pop {r3-r5}
	mov r8, r3
	mov r9, r4
	mov r10, r5
	pop {r4-r7}
	pop {r0}
	bx r0
_080FF65C:
	.4byte gRam
_080FF660:
	.4byte 0x00000F62
_080FF664:
	.4byte 0x00001012
_080FF668:
	.4byte 0x00001122
_080FF66C:
	.4byte gUnknown_0817AC34
_080FF670:
	.4byte gUnknown_0817AD54
_080FF674:
	.4byte 0x00000FD2
_080FF678:
	.4byte gUnknown_03003E74
_080FF67C:
	.4byte 0x00001052
_080FF680:
	.4byte gUnknown_0817AC54
	THUMB_FUNC_END sub_080FF5A8

	THUMB_FUNC_START sub_080FF684
sub_080FF684: @ 0x080FF684
	lsl r0, r0, #24
	lsr r0, r0, #24
	ldr r3, _080FF6A0  @ =gRam
	ldr r2, _080FF6A4  @ =0x00001142
	add r1, r3, r2
	add r1, r0, r1
	mov r2, #16
	strb r2, [r1]
	ldr r1, _080FF6A8  @ =0x000010A2
	add r3, r3, r1
	add r0, r0, r3
	mov r1, #8
	strb r1, [r0]
	bx lr
_080FF6A0:
	.4byte gRam
_080FF6A4:
	.4byte 0x00001142
_080FF6A8:
	.4byte 0x000010A2
	THUMB_FUNC_END sub_080FF684

	THUMB_FUNC_START sub_080FF6AC
sub_080FF6AC: @ 0x080FF6AC
	push {lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	ldr r1, _080FF6D0  @ =gRam
	ldr r3, _080FF6D4  @ =0x00000FC2
	add r0, r1, r3
	add r0, r2, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FF6CC
	ldr r0, _080FF6D8  @ =0x00000F52
	add r1, r1, r0
	add r1, r2, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FF6CC:
	pop {r0}
	bx r0
_080FF6D0:
	.4byte gRam
_080FF6D4:
	.4byte 0x00000FC2
_080FF6D8:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FF6AC

	THUMB_FUNC_START sub_080FF6DC
sub_080FF6DC: @ 0x080FF6DC
	push {r4,r5,lr}
	lsl r0, r0, #24
	lsr r2, r0, #24
	add r3, r2, #0
	ldr r0, _080FF704  @ =gUnknown_02002159
	ldrb r1, [r0]
	mov r0, #8
	and r0, r0, r1
	lsl r0, r0, #24
	lsr r4, r0, #24
	cmp r4, #0
	beq _080FF710
	ldr r0, _080FF708  @ =gRam
	ldr r1, _080FF70C  @ =0x00000FA2
	add r0, r0, r1
	add r0, r2, r0
	mov r1, #0
	strb r1, [r0]
	b _080FF75E
	.byte 0x00
	.byte 0x00
_080FF704:
	.4byte gUnknown_02002159
_080FF708:
	.4byte gRam
_080FF70C:
	.4byte 0x00000FA2
_080FF710:
	ldr r2, _080FF734  @ =gRam
	ldr r1, _080FF738  @ =0x00001172
	add r0, r2, r1
	add r0, r3, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	ldr r0, _080FF73C  @ =0x00001663
	add r5, r2, r0
	ldrb r0, [r5]
	cmp r0, #6
	bne _080FF744
	ldr r1, _080FF740  @ =0x00000FA2
	add r0, r2, r1
	add r0, r3, r0
	strb r4, [r0]
	b _080FF75E
	.byte 0x00
	.byte 0x00
_080FF734:
	.4byte gRam
_080FF738:
	.4byte 0x00001172
_080FF73C:
	.4byte 0x00001663
_080FF740:
	.4byte 0x00000FA2
_080FF744:
	mov r0, #6
	strb r0, [r5]
	ldr r1, _080FF764  @ =0x0000166A
	add r0, r2, r1
	strb r4, [r0]
	ldr r1, _080FF768  @ =0x00001787
	add r0, r2, r1
	strb r4, [r0]
	bl sub_0812F9A8
	bl sub_08114600
	strb r4, [r5]
_080FF75E:
	pop {r4,r5}
	pop {r0}
	bx r0
_080FF764:
	.4byte 0x0000166A
_080FF768:
	.4byte 0x00001787
	THUMB_FUNC_END sub_080FF6DC

	THUMB_FUNC_START sub_080FF76C
sub_080FF76C: @ 0x080FF76C
	push {r4-r7,lr}
	mov r7, r9
	mov r6, r8
	push {r6,r7}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r4, r0, #24
	mov r9, r4
	add r0, r4, #0
	bl sub_080F40C0
	add r0, r4, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	lsr r7, r0, #24
	cmp r7, #0
	bne _080FF80E
	add r0, r4, #0
	bl sub_080C90F4
	add r0, r4, #0
	bl sub_080C2FA8
	ldr r6, _080FF7D8  @ =gRam
	ldr r2, _080FF7DC  @ =0x00001082
	add r1, r6, r2
	add r1, r1, r4
	mov r8, r1
	mov r1, #3
	eor r0, r0, r1
	mov r1, r8
	strb r0, [r1]
	ldr r2, _080FF7E0  @ =0x00000F52
	add r0, r6, r2
	add r5, r4, r0
	ldrb r0, [r5]
	cmp r0, #0
	beq _080FF7EC
	ldr r1, _080FF7E4  @ =0x00000FA2
	add r0, r6, r1
	add r0, r4, r0
	strb r7, [r0]
	ldr r2, _080FF7E8  @ =0x00001663
	add r1, r6, r2
	mov r0, #6
	strb r0, [r1]
	bl sub_0812F9A8
	add r0, r4, #0
	bl sub_081146A4
	b _080FF80E
	.byte 0x00
	.byte 0x00
_080FF7D8:
	.4byte gRam
_080FF7DC:
	.4byte 0x00001082
_080FF7E0:
	.4byte 0x00000F52
_080FF7E4:
	.4byte 0x00000FA2
_080FF7E8:
	.4byte 0x00001663
_080FF7EC:
	ldr r1, _080FF81C  @ =0x00000125
	mov r0, r9
	mov r2, sp
	bl sub_080C94F4
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FF80E
	ldrb r0, [r5]
	add r0, r0, #1
	strb r0, [r5]
	ldr r1, _080FF820  @ =0x00000FB2
	add r0, r6, r1
	add r0, r0, r9
	mov r2, r8
	ldrb r1, [r2]
	strb r1, [r0]
_080FF80E:
	add sp, sp, #4
	pop {r3,r4}
	mov r8, r3
	mov r9, r4
	pop {r4-r7}
	pop {r0}
	bx r0
_080FF81C:
	.4byte 0x00000125
_080FF820:
	.4byte 0x00000FB2
	THUMB_FUNC_END sub_080FF76C

	THUMB_FUNC_START sub_080FF824
sub_080FF824: @ 0x080FF824
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r0, r6, #0
	bl sub_080ED830
	lsl r0, r0, #24
	lsr r7, r0, #24
	cmp r7, #0
	beq _080FF83E
	b _080FF994
_080FF83E:
	mov r2, #0
	ldr r5, _080FF8F4  @ =gRam
	ldr r1, _080FF8F8  @ =0x000009DA
	add r0, r5, r1
	ldrh r0, [r0]
	cmp r0, #236
	bne _080FF84E
	mov r2, #1
_080FF84E:
	cmp r2, #0
	beq _080FF92C
	ldr r0, _080FF8FC  @ =gUnknown_02010990
	strb r7, [r0]
	strb r7, [r0, #1]
	strb r7, [r0, #2]
	ldr r2, _080FF900  @ =0x00001663
	add r4, r5, r2
	mov r0, #6
	mov r8, r0
	mov r0, #6
	strb r0, [r4]
	bl sub_0812F9A8
	strb r7, [r4]
	ldr r1, _080FF904  @ =0x00000CDE
	add r0, r5, r1
	mov r3, #0
	strh r7, [r0]
	mov r2, #206
	lsl r2, r2, #4
	add r1, r5, r2
	mov r0, #160
	strh r0, [r1]
	ldr r1, _080FF908  @ =0x00000FE2
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #79
	strb r1, [r0]
	ldr r2, _080FF90C  @ =0x00000F82
	add r0, r5, r2
	add r0, r6, r0
	mov r1, #8
	strb r1, [r0]
	ldr r1, _080FF910  @ =0x00000FB2
	add r0, r5, r1
	add r0, r6, r0
	mov r2, #2
	strb r2, [r0]
	add r1, r1, #208
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #4
	strb r1, [r0]
	ldr r1, _080FF914  @ =0x00000F92
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #21
	strb r1, [r0]
	ldr r1, _080FF918  @ =0x00001122
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #7
	strb r1, [r0]
	ldr r1, _080FF91C  @ =0x00001172
	add r0, r5, r1
	add r0, r6, r0
	strb r2, [r0]
	ldr r2, _080FF920  @ =0x00000ED2
	add r1, r5, r2
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #8
	strb r0, [r1]
	ldr r0, _080FF924  @ =0x00000EE2
	add r1, r5, r0
	add r1, r6, r1
	ldrb r0, [r1]
	add r0, r0, #8
	strb r0, [r1]
	sub r2, r2, #45
	add r1, r5, r2
	add r1, r6, r1
	ldrb r2, [r1]
	mov r0, #240
	and r0, r0, r2
	mov r2, r8
	orr r0, r0, r2
	strb r0, [r1]
	ldr r1, _080FF928  @ =0x00000DA5
	add r0, r5, r1
	strb r3, [r0]
	b _080FF994
_080FF8F4:
	.4byte gRam
_080FF8F8:
	.4byte 0x000009DA
_080FF8FC:
	.4byte gUnknown_02010990
_080FF900:
	.4byte 0x00001663
_080FF904:
	.4byte 0x00000CDE
_080FF908:
	.4byte 0x00000FE2
_080FF90C:
	.4byte 0x00000F82
_080FF910:
	.4byte 0x00000FB2
_080FF914:
	.4byte 0x00000F92
_080FF918:
	.4byte 0x00001122
_080FF91C:
	.4byte 0x00001172
_080FF920:
	.4byte 0x00000ED2
_080FF924:
	.4byte 0x00000EE2
_080FF928:
	.4byte 0x00000DA5
_080FF92C:
	ldr r1, _080FF950  @ =0x00001663
	add r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #6
	beq _080FF946
	ldr r1, _080FF954  @ =0x00000AA8
	add r0, r5, r1
	ldrh r1, [r0]
	mov r0, #128
	lsl r0, r0, #6
	and r0, r0, r1
	cmp r0, #0
	bne _080FF95C
_080FF946:
	ldr r1, _080FF958  @ =0x00000FA2
	add r0, r5, r1
	add r0, r6, r0
	b _080FF992
	.byte 0x00
	.byte 0x00
_080FF950:
	.4byte 0x00001663
_080FF954:
	.4byte 0x00000AA8
_080FF958:
	.4byte 0x00000FA2
_080FF95C:
	ldr r1, _080FF9A0  @ =0x00000FE2
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #96
	strb r1, [r0]
	ldr r1, _080FF9A4  @ =0x00000F82
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #1
	strb r1, [r0]
	ldr r1, _080FF9A8  @ =0x00000FB2
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #2
	strb r1, [r0]
	ldr r1, _080FF9AC  @ =0x00001082
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #4
	strb r1, [r0]
	ldr r1, _080FF9B0  @ =0x00000F92
	add r0, r5, r1
	add r0, r6, r0
	mov r1, #7
	strb r1, [r0]
	ldr r1, _080FF9B4  @ =0x00000DA5
	add r0, r5, r1
_080FF992:
	strb r2, [r0]
_080FF994:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FF9A0:
	.4byte 0x00000FE2
_080FF9A4:
	.4byte 0x00000F82
_080FF9A8:
	.4byte 0x00000FB2
_080FF9AC:
	.4byte 0x00001082
_080FF9B0:
	.4byte 0x00000F92
_080FF9B4:
	.4byte 0x00000DA5
	THUMB_FUNC_END sub_080FF824

	THUMB_FUNC_START sub_080FF9B8
sub_080FF9B8: @ 0x080FF9B8
	push {r4-r7,lr}
	sub sp, sp, #4
	lsl r0, r0, #24
	lsr r6, r0, #24
	add r7, r6, #0
	mov r0, sp
	add r1, r6, #0
	bl sub_080C4948
	lsl r0, r0, #24
	cmp r0, #0
	beq _080FFA1E
	ldr r4, _080FFA2C  @ =gRam
	ldr r1, _080FFA30  @ =0x00000F62
	add r0, r4, r1
	add r0, r6, r0
	mov r5, #0
	mov r1, #3
	strb r1, [r0]
	add r0, r6, #0
	mov r1, #113
	bl sub_080CF0AC
	add r0, r6, #0
	mov r1, #92
	bl sub_080CF140
	add r0, r6, #0
	mov r1, #48
	bl sub_080C35FC
	ldr r2, _080FFA34  @ =0x00000F22
	add r1, r4, r2
	add r1, r6, r1
	ldr r2, _080FFA38  @ =0x00000961
	add r0, r4, r2
	ldrb r0, [r0]
	neg r0, r0
	strb r0, [r1]
	ldr r0, _080FFA3C  @ =0x00000F12
	add r1, r4, r0
	add r1, r6, r1
	sub r2, r2, #1
	add r0, r4, r2
	ldrb r0, [r0]
	neg r0, r0
	strb r0, [r1]
	ldr r0, _080FFA40  @ =0x00000F52
	add r4, r4, r0
	add r4, r6, r4
	strb r5, [r4]
_080FFA1E:
	add r0, r7, #0
	bl sub_080C4F98
	add sp, sp, #4
	pop {r4-r7}
	pop {r0}
	bx r0
_080FFA2C:
	.4byte gRam
_080FFA30:
	.4byte 0x00000F62
_080FFA34:
	.4byte 0x00000F22
_080FFA38:
	.4byte 0x00000961
_080FFA3C:
	.4byte 0x00000F12
_080FFA40:
	.4byte 0x00000F52
	THUMB_FUNC_END sub_080FF9B8

	THUMB_FUNC_START sub_080FFA44
sub_080FFA44: @ 0x080FFA44
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r6, r0, #24
	mov r8, r6
	ldr r7, _080FFAEC  @ =gRam
	ldr r0, _080FFAF0  @ =0x00000D94
	add r1, r7, r0
	add r1, r6, r1
	ldrb r2, [r1]
	mov r0, #48
	orr r0, r0, r2
	strb r0, [r1]
	add r0, r6, #0
	bl sub_080C6240
	ldr r0, _080FFAF4  @ =gUnknown_03003E74
	ldrh r4, [r0]
	lsl r4, r4, #3
	mov r1, #170
	lsl r1, r1, #3
	add r0, r7, r1
	add r4, r4, r0
	ldr r1, _080FFAF8  @ =0x00001082
	add r0, r7, r1
	add r0, r6, r0
	ldrb r3, [r0]
	ldr r0, _080FFAFC  @ =gUnknown_0817AD58
	add r0, r3, r0
	ldrb r2, [r0]
	ldrh r5, [r4, #4]
	lsl r1, r5, #22
	lsr r1, r1, #22
	mov r0, #128
	lsl r0, r0, #1
	and r0, r0, r1
	orr r2, r2, r0
	ldr r0, _080FFB00  @ =0xFFFFFC00
	and r0, r0, r5
	orr r0, r0, r2
	strh r0, [r4, #4]
	ldr r0, _080FFB04  @ =gUnknown_0817AD68
	add r3, r3, r0
	ldrb r1, [r3]
	lsl r1, r1, #24
	lsr r2, r1, #31
	lsl r2, r2, #5
	ldrb r3, [r4, #3]
	mov r0, #33
	neg r0, r0
	and r0, r0, r3
	orr r0, r0, r2
	lsr r1, r1, #30
	mov r2, #1
	and r1, r1, r2
	lsl r1, r1, #4
	sub r2, r2, #18
	and r0, r0, r2
	orr r0, r0, r1
	strb r0, [r4, #3]
	add r0, r6, #0
	bl Sprite3_CheckIfActive
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FFB0C
	ldr r1, _080FFB08  @ =0x00001072
	add r0, r7, r1
	add r1, r6, r0
	ldrb r0, [r1]
	cmp r0, #14
	bne _080FFADA
	mov r0, #8
	strb r0, [r1]
_080FFADA:
	mov r0, r8
	bl sub_080C1FD0
	lsl r0, r0, #24
	cmp r0, #0
	bne _080FFB0C
	mov r0, #0
	b _080FFB0E
	.byte 0x00
	.byte 0x00
_080FFAEC:
	.4byte gRam
_080FFAF0:
	.4byte 0x00000D94
_080FFAF4:
	.4byte gUnknown_03003E74
_080FFAF8:
	.4byte 0x00001082
_080FFAFC:
	.4byte gUnknown_0817AD58
_080FFB00:
	.4byte 0xFFFFFC00
_080FFB04:
	.4byte gUnknown_0817AD68
_080FFB08:
	.4byte 0x00001072
_080FFB0C:
	mov r0, #1
_080FFB0E:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r1}
	bx r1
	THUMB_FUNC_END sub_080FFA44

	THUMB_FUNC_START sub_080FFB18
sub_080FFB18: @ 0x080FFB18
	push {r4-r7,lr}
	mov r7, r8
	push {r7}
	lsl r0, r0, #24
	lsr r4, r0, #24
	add r0, r4, #0
	bl sub_080FFA44
	cmp r0, #0
	beq _080FFB2E
	b _080FFD98
_080FFB2E:
	ldr r3, _080FFB84  @ =gRam
	ldr r1, _080FFB88  @ =0x00001002
	add r0, r3, r1
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080FFB58
	mov r0, #2
	strb r0, [r2]
	ldr r5, _080FFB8C  @ =0x00001082
	add r2, r3, r5
	add r2, r4, r2
	ldrb r0, [r2]
	add r0, r0, #1
	mov r1, #15
	and r0, r0, r1
	strb r0, [r2]
_080FFB58:
	ldr r7, _080FFB90  @ =0x00000FC2
	add r0, r3, r7
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FFB66
	b _080FFD98
_080FFB66:
	mov r6, #1
	neg r6, r6
	mov r1, #0
	ldr r2, _080FFB94  @ =0x000009DA
	add r0, r3, r2
	ldrh r0, [r0]
	cmp r0, #236
	bne _080FFB78
	mov r1, #1
_080FFB78:
	cmp r1, #0
	beq _080FFB98
	add r0, r4, #0
	bl sub_080FF9B8
	b _080FFB9E
_080FFB84:
	.4byte gRam
_080FFB88:
	.4byte 0x00001002
_080FFB8C:
	.4byte 0x00001082
_080FFB90:
	.4byte 0x00000FC2
_080FFB94:
	.4byte 0x000009DA
_080FFB98:
	add r0, r4, #0
	bl sub_080C5044
_080FFB9E:
	ldr r3, _080FFBDC  @ =gRam
	ldr r5, _080FFBE0  @ =0x00001052
	add r0, r3, r5
	add r0, r4, r0
	ldrb r1, [r0]
	add r1, r1, #1
	strb r1, [r0]
	mov r2, #0
	ldr r7, _080FFBE4  @ =0x000009DA
	add r0, r3, r7
	ldrh r0, [r0]
	cmp r0, #236
	bne _080FFBBA
	mov r2, #1
_080FFBBA:
	cmp r2, #0
	beq _080FFBF6
	ldr r0, _080FFBE8  @ =gUnknown_02010990
	ldrb r0, [r0, #1]
	cmp r0, #0
	bne _080FFBF0
	mov r0, #127
	and r1, r1, r0
	cmp r1, #0
	bne _080FFC00
	ldr r1, _080FFBEC  @ =0x00000FD2
	add r0, r3, r1
	add r0, r4, r0
	mov r1, #88
	strb r1, [r0]
	b _080FFC00
	.byte 0x00
	.byte 0x00
_080FFBDC:
	.4byte gRam
_080FFBE0:
	.4byte 0x00001052
_080FFBE4:
	.4byte 0x000009DA
_080FFBE8:
	.4byte gUnknown_02010990
_080FFBEC:
	.4byte 0x00000FD2
_080FFBF0:
	add r0, r4, #0
	mov r1, #127
	b _080FFBFA
_080FFBF6:
	add r0, r4, #0
	mov r1, #31
_080FFBFA:
	bl sub_08101648
	add r6, r0, #0
_080FFC00:
	cmp r6, #0
	blt _080FFC44
	ldr r5, _080FFC74  @ =gRam
	ldr r2, _080FFC78  @ =0x00001162
	add r0, r5, r2
	add r2, r4, r0
	ldrb r0, [r2]
	sub r0, r0, #1
	strb r0, [r2]
	mov r1, #128
	and r0, r0, r1
	cmp r0, #0
	beq _080FFC44
	mov r0, #4
	strb r0, [r2]
	add r0, r4, #0
	mov r1, #32
	bl sub_080C2CB4
	ldr r3, _080FFC7C  @ =0x00000F12
	add r0, r5, r3
	add r0, r6, r0
	mov r7, #150
	lsl r7, r7, #4
	add r1, r5, r7
	ldrb r1, [r1]
	strb r1, [r0]
	ldr r1, _080FFC80  @ =0x00000F22
	add r0, r5, r1
	add r0, r6, r0
	ldr r2, _080FFC84  @ =0x00000961
	add r1, r5, r2
	ldrb r1, [r1]
	strb r1, [r0]
_080FFC44:
	mov r2, #0
	ldr r0, _080FFC74  @ =gRam
	ldr r3, _080FFC88  @ =0x000009DA
	add r1, r0, r3
	ldrh r1, [r1]
	add r6, r0, #0
	cmp r1, #236
	bne _080FFC56
	mov r2, #1
_080FFC56:
	cmp r2, #0
	beq _080FFC94
	ldr r5, _080FFC8C  @ =0x00000FD2
	add r0, r6, r5
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080FFC94
	ldr r7, _080FFC90  @ =0x00001052
	add r0, r6, r7
	add r0, r4, r0
	mov r1, #0
	strb r1, [r0]
	b _080FFD98
	.byte 0x00
	.byte 0x00
_080FFC74:
	.4byte gRam
_080FFC78:
	.4byte 0x00001162
_080FFC7C:
	.4byte 0x00000F12
_080FFC80:
	.4byte 0x00000F22
_080FFC84:
	.4byte 0x00000961
_080FFC88:
	.4byte 0x000009DA
_080FFC8C:
	.4byte 0x00000FD2
_080FFC90:
	.4byte 0x00001052
_080FFC94:
	ldr r1, _080FFDA4  @ =0x000010A2
	add r0, r6, r1
	add r0, r4, r0
	ldrb r0, [r0]
	mov r3, #1
	and r3, r3, r0
	ldr r2, _080FFDA8  @ =0x00000F22
	add r0, r6, r2
	add r0, r0, r4
	mov r12, r0
	ldr r0, _080FFDAC  @ =gUnknown_0817AD7C
	add r2, r3, r0
	mov r5, r12
	ldrb r5, [r5]
	mov r8, r5
	mov r5, r8
	ldrb r7, [r2]
	cmp r5, r7
	beq _080FFCEA
	mov r1, #0
	ldr r7, _080FFDB0  @ =0x000009DA
	add r0, r6, r7
	ldrh r0, [r0]
	cmp r0, #236
	bne _080FFCC8
	mov r1, #1
_080FFCC8:
	cmp r1, #0
	beq _080FFCDE
	mov r0, #0
	ldrsb r0, [r2, r0]
	lsr r1, r0, #31
	add r0, r0, r1
	asr r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r5, r0
	beq _080FFCEA
_080FFCDE:
	ldr r0, _080FFDB4  @ =gUnknown_0817AD78
	add r0, r3, r0
	ldrb r0, [r0]
	add r0, r0, r8
	mov r1, r12
	strb r0, [r1]
_080FFCEA:
	ldr r2, _080FFDB8  @ =0x00000EE2
	add r0, r6, r2
	add r0, r4, r0
	ldrb r2, [r0]
	mov r1, #254
	ldr r0, _080FFDBC  @ =gUnknown_0817AD7E
	add r0, r3, r0
	and r1, r1, r2
	ldrb r0, [r0]
	cmp r1, r0
	bne _080FFD0C
	ldr r3, _080FFDA4  @ =0x000010A2
	add r1, r6, r3
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FFD0C:
	ldr r5, _080FFDC0  @ =0x00001092
	add r0, r6, r5
	add r0, r4, r0
	ldrb r0, [r0]
	mov r3, #1
	and r3, r3, r0
	ldr r7, _080FFDC4  @ =0x00000F12
	add r0, r6, r7
	add r0, r0, r4
	mov r12, r0
	ldr r0, _080FFDC8  @ =gUnknown_0817AD80
	add r2, r3, r0
	mov r0, r12
	ldrb r0, [r0]
	mov r8, r0
	mov r5, r8
	ldrb r1, [r2]
	cmp r5, r1
	beq _080FFD62
	mov r1, #0
	ldr r7, _080FFDB0  @ =0x000009DA
	add r0, r6, r7
	ldrh r0, [r0]
	cmp r0, #236
	bne _080FFD40
	mov r1, #1
_080FFD40:
	cmp r1, #0
	beq _080FFD56
	mov r0, #0
	ldrsb r0, [r2, r0]
	lsr r1, r0, #31
	add r0, r0, r1
	asr r0, r0, #1
	lsl r0, r0, #24
	lsr r0, r0, #24
	cmp r5, r0
	beq _080FFD62
_080FFD56:
	ldr r0, _080FFDB4  @ =gUnknown_0817AD78
	add r0, r3, r0
	ldrb r0, [r0]
	add r0, r0, r8
	mov r1, r12
	strb r0, [r1]
_080FFD62:
	add r5, r6, #0
	ldr r2, _080FFDCC  @ =0x00000ED2
	add r0, r5, r2
	add r0, r4, r0
	ldrb r2, [r0]
	mov r1, #254
	ldr r0, _080FFDD0  @ =gUnknown_0817AD82
	add r0, r3, r0
	and r1, r1, r2
	ldrb r0, [r0]
	cmp r1, r0
	bne _080FFD86
	ldr r3, _080FFDC0  @ =0x00001092
	add r1, r5, r3
	add r1, r4, r1
	ldrb r0, [r1]
	add r0, r0, #1
	strb r0, [r1]
_080FFD86:
	ldr r5, _080FFDD4  @ =0x00001072
	add r0, r6, r5
	add r0, r4, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080FFD98
	add r0, r4, #0
	bl Sprite3_Move
_080FFD98:
	pop {r3}
	mov r8, r3
	pop {r4-r7}
	pop {r0}
	bx r0
	.byte 0x00
	.byte 0x00
_080FFDA4:
	.4byte 0x000010A2
_080FFDA8:
	.4byte 0x00000F22
_080FFDAC:
	.4byte gUnknown_0817AD7C
_080FFDB0:
	.4byte 0x000009DA
_080FFDB4:
	.4byte gUnknown_0817AD78
_080FFDB8:
	.4byte 0x00000EE2
_080FFDBC:
	.4byte gUnknown_0817AD7E
_080FFDC0:
	.4byte 0x00001092
_080FFDC4:
	.4byte 0x00000F12
_080FFDC8:
	.4byte gUnknown_0817AD80
_080FFDCC:
	.4byte 0x00000ED2
_080FFDD0:
	.4byte gUnknown_0817AD82
_080FFDD4:
	.4byte 0x00001072
	THUMB_FUNC_END sub_080FFB18
